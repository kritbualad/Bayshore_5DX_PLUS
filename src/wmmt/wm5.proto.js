/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
import * as $protobuf from "protobufjs/minimal";

// Common aliases
const $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;

// Exported root namespace
const $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});

export const wm5 = $root.wm5 = (() => {

    /**
     * Namespace wm5.
     * @exports wm5
     * @namespace
     */
    const wm5 = {};

    wm5.protobuf = (function() {

        /**
         * Namespace protobuf.
         * @memberof wm5
         * @namespace
         */
        const protobuf = {};

        protobuf.RegisterSystemInfoRequest = (function() {

            /**
             * Properties of a RegisterSystemInfoRequest.
             * @memberof wm5.protobuf
             * @interface IRegisterSystemInfoRequest
             * @property {string} pcbSerial RegisterSystemInfoRequest pcbSerial
             * @property {wm5.protobuf.TerminalType} terminalType RegisterSystemInfoRequest terminalType
             * @property {number} romVersion RegisterSystemInfoRequest romVersion
             * @property {string} country RegisterSystemInfoRequest country
             * @property {wm5.protobuf.LineType} lineType RegisterSystemInfoRequest lineType
             * @property {string} shopName RegisterSystemInfoRequest shopName
             * @property {string} shopNickname RegisterSystemInfoRequest shopNickname
             * @property {number|null} [allnetPlaceId] RegisterSystemInfoRequest allnetPlaceId
             * @property {number|null} [allnetRegion0] RegisterSystemInfoRequest allnetRegion0
             * @property {string|null} [muchaPlaceId] RegisterSystemInfoRequest muchaPlaceId
             * @property {number|null} [muchaPrefectureId] RegisterSystemInfoRequest muchaPrefectureId
             * @property {string} regionName0 RegisterSystemInfoRequest regionName0
             * @property {string} regionName1 RegisterSystemInfoRequest regionName1
             * @property {string} regionName2 RegisterSystemInfoRequest regionName2
             * @property {string} regionName3 RegisterSystemInfoRequest regionName3
             * @property {number} timezoneOffset RegisterSystemInfoRequest timezoneOffset
             * @property {wm5.protobuf.ISystemSetting} systemSetting RegisterSystemInfoRequest systemSetting
             * @property {Array.<wm5.protobuf.RegisterSystemInfoRequest.IErrorLogEntry>|null} [errorLogs] RegisterSystemInfoRequest errorLogs
             */

            /**
             * Constructs a new RegisterSystemInfoRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a RegisterSystemInfoRequest.
             * @implements IRegisterSystemInfoRequest
             * @constructor
             * @param {wm5.protobuf.IRegisterSystemInfoRequest=} [properties] Properties to set
             */
            function RegisterSystemInfoRequest(properties) {
                this.errorLogs = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * RegisterSystemInfoRequest pcbSerial.
             * @member {string} pcbSerial
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.pcbSerial = "";

            /**
             * RegisterSystemInfoRequest terminalType.
             * @member {wm5.protobuf.TerminalType} terminalType
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.terminalType = 0;

            /**
             * RegisterSystemInfoRequest romVersion.
             * @member {number} romVersion
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.romVersion = 0;

            /**
             * RegisterSystemInfoRequest country.
             * @member {string} country
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.country = "";

            /**
             * RegisterSystemInfoRequest lineType.
             * @member {wm5.protobuf.LineType} lineType
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.lineType = 0;

            /**
             * RegisterSystemInfoRequest shopName.
             * @member {string} shopName
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.shopName = "";

            /**
             * RegisterSystemInfoRequest shopNickname.
             * @member {string} shopNickname
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.shopNickname = "";

            /**
             * RegisterSystemInfoRequest allnetPlaceId.
             * @member {number} allnetPlaceId
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.allnetPlaceId = 0;

            /**
             * RegisterSystemInfoRequest allnetRegion0.
             * @member {number} allnetRegion0
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.allnetRegion0 = 0;

            /**
             * RegisterSystemInfoRequest muchaPlaceId.
             * @member {string} muchaPlaceId
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.muchaPlaceId = "";

            /**
             * RegisterSystemInfoRequest muchaPrefectureId.
             * @member {number} muchaPrefectureId
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.muchaPrefectureId = 0;

            /**
             * RegisterSystemInfoRequest regionName0.
             * @member {string} regionName0
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.regionName0 = "";

            /**
             * RegisterSystemInfoRequest regionName1.
             * @member {string} regionName1
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.regionName1 = "";

            /**
             * RegisterSystemInfoRequest regionName2.
             * @member {string} regionName2
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.regionName2 = "";

            /**
             * RegisterSystemInfoRequest regionName3.
             * @member {string} regionName3
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.regionName3 = "";

            /**
             * RegisterSystemInfoRequest timezoneOffset.
             * @member {number} timezoneOffset
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.timezoneOffset = 0;

            /**
             * RegisterSystemInfoRequest systemSetting.
             * @member {wm5.protobuf.ISystemSetting} systemSetting
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.systemSetting = null;

            /**
             * RegisterSystemInfoRequest errorLogs.
             * @member {Array.<wm5.protobuf.RegisterSystemInfoRequest.IErrorLogEntry>} errorLogs
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             */
            RegisterSystemInfoRequest.prototype.errorLogs = $util.emptyArray;

            /**
             * Creates a new RegisterSystemInfoRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @static
             * @param {wm5.protobuf.IRegisterSystemInfoRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.RegisterSystemInfoRequest} RegisterSystemInfoRequest instance
             */
            RegisterSystemInfoRequest.create = function create(properties) {
                return new RegisterSystemInfoRequest(properties);
            };

            /**
             * Encodes the specified RegisterSystemInfoRequest message. Does not implicitly {@link wm5.protobuf.RegisterSystemInfoRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @static
             * @param {wm5.protobuf.IRegisterSystemInfoRequest} message RegisterSystemInfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RegisterSystemInfoRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.pcbSerial);
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.terminalType);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.romVersion);
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.country);
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.lineType);
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.shopName);
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.shopNickname);
                if (message.allnetPlaceId != null && Object.hasOwnProperty.call(message, "allnetPlaceId"))
                    writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.allnetPlaceId);
                if (message.allnetRegion0 != null && Object.hasOwnProperty.call(message, "allnetRegion0"))
                    writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.allnetRegion0);
                if (message.muchaPlaceId != null && Object.hasOwnProperty.call(message, "muchaPlaceId"))
                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.muchaPlaceId);
                if (message.muchaPrefectureId != null && Object.hasOwnProperty.call(message, "muchaPrefectureId"))
                    writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.muchaPrefectureId);
                writer.uint32(/* id 12, wireType 2 =*/98).string(message.regionName0);
                writer.uint32(/* id 13, wireType 2 =*/106).string(message.regionName1);
                writer.uint32(/* id 14, wireType 2 =*/114).string(message.regionName2);
                writer.uint32(/* id 15, wireType 2 =*/122).string(message.regionName3);
                writer.uint32(/* id 16, wireType 0 =*/128).sint32(message.timezoneOffset);
                $root.wm5.protobuf.SystemSetting.encode(message.systemSetting, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                if (message.errorLogs != null && message.errorLogs.length)
                    for (let i = 0; i < message.errorLogs.length; ++i)
                        $root.wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry.encode(message.errorLogs[i], writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified RegisterSystemInfoRequest message, length delimited. Does not implicitly {@link wm5.protobuf.RegisterSystemInfoRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @static
             * @param {wm5.protobuf.IRegisterSystemInfoRequest} message RegisterSystemInfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RegisterSystemInfoRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RegisterSystemInfoRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.RegisterSystemInfoRequest} RegisterSystemInfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RegisterSystemInfoRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.RegisterSystemInfoRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.pcbSerial = reader.string();
                            break;
                        }
                    case 2: {
                            message.terminalType = reader.int32();
                            break;
                        }
                    case 3: {
                            message.romVersion = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.country = reader.string();
                            break;
                        }
                    case 5: {
                            message.lineType = reader.int32();
                            break;
                        }
                    case 6: {
                            message.shopName = reader.string();
                            break;
                        }
                    case 7: {
                            message.shopNickname = reader.string();
                            break;
                        }
                    case 8: {
                            message.allnetPlaceId = reader.uint32();
                            break;
                        }
                    case 9: {
                            message.allnetRegion0 = reader.uint32();
                            break;
                        }
                    case 10: {
                            message.muchaPlaceId = reader.string();
                            break;
                        }
                    case 11: {
                            message.muchaPrefectureId = reader.uint32();
                            break;
                        }
                    case 12: {
                            message.regionName0 = reader.string();
                            break;
                        }
                    case 13: {
                            message.regionName1 = reader.string();
                            break;
                        }
                    case 14: {
                            message.regionName2 = reader.string();
                            break;
                        }
                    case 15: {
                            message.regionName3 = reader.string();
                            break;
                        }
                    case 16: {
                            message.timezoneOffset = reader.sint32();
                            break;
                        }
                    case 17: {
                            message.systemSetting = $root.wm5.protobuf.SystemSetting.decode(reader, reader.uint32());
                            break;
                        }
                    case 18: {
                            if (!(message.errorLogs && message.errorLogs.length))
                                message.errorLogs = [];
                            message.errorLogs.push($root.wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("pcbSerial"))
                    throw $util.ProtocolError("missing required 'pcbSerial'", { instance: message });
                if (!message.hasOwnProperty("terminalType"))
                    throw $util.ProtocolError("missing required 'terminalType'", { instance: message });
                if (!message.hasOwnProperty("romVersion"))
                    throw $util.ProtocolError("missing required 'romVersion'", { instance: message });
                if (!message.hasOwnProperty("country"))
                    throw $util.ProtocolError("missing required 'country'", { instance: message });
                if (!message.hasOwnProperty("lineType"))
                    throw $util.ProtocolError("missing required 'lineType'", { instance: message });
                if (!message.hasOwnProperty("shopName"))
                    throw $util.ProtocolError("missing required 'shopName'", { instance: message });
                if (!message.hasOwnProperty("shopNickname"))
                    throw $util.ProtocolError("missing required 'shopNickname'", { instance: message });
                if (!message.hasOwnProperty("regionName0"))
                    throw $util.ProtocolError("missing required 'regionName0'", { instance: message });
                if (!message.hasOwnProperty("regionName1"))
                    throw $util.ProtocolError("missing required 'regionName1'", { instance: message });
                if (!message.hasOwnProperty("regionName2"))
                    throw $util.ProtocolError("missing required 'regionName2'", { instance: message });
                if (!message.hasOwnProperty("regionName3"))
                    throw $util.ProtocolError("missing required 'regionName3'", { instance: message });
                if (!message.hasOwnProperty("timezoneOffset"))
                    throw $util.ProtocolError("missing required 'timezoneOffset'", { instance: message });
                if (!message.hasOwnProperty("systemSetting"))
                    throw $util.ProtocolError("missing required 'systemSetting'", { instance: message });
                return message;
            };

            /**
             * Decodes a RegisterSystemInfoRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.RegisterSystemInfoRequest} RegisterSystemInfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RegisterSystemInfoRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RegisterSystemInfoRequest message.
             * @function verify
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RegisterSystemInfoRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isString(message.pcbSerial))
                    return "pcbSerial: string expected";
                switch (message.terminalType) {
                default:
                    return "terminalType: enum value expected";
                case 0:
                case 1:
                    break;
                }
                if (!$util.isInteger(message.romVersion))
                    return "romVersion: integer expected";
                if (!$util.isString(message.country))
                    return "country: string expected";
                switch (message.lineType) {
                default:
                    return "lineType: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                    break;
                }
                if (!$util.isString(message.shopName))
                    return "shopName: string expected";
                if (!$util.isString(message.shopNickname))
                    return "shopNickname: string expected";
                if (message.allnetPlaceId != null && message.hasOwnProperty("allnetPlaceId"))
                    if (!$util.isInteger(message.allnetPlaceId))
                        return "allnetPlaceId: integer expected";
                if (message.allnetRegion0 != null && message.hasOwnProperty("allnetRegion0"))
                    if (!$util.isInteger(message.allnetRegion0))
                        return "allnetRegion0: integer expected";
                if (message.muchaPlaceId != null && message.hasOwnProperty("muchaPlaceId"))
                    if (!$util.isString(message.muchaPlaceId))
                        return "muchaPlaceId: string expected";
                if (message.muchaPrefectureId != null && message.hasOwnProperty("muchaPrefectureId"))
                    if (!$util.isInteger(message.muchaPrefectureId))
                        return "muchaPrefectureId: integer expected";
                if (!$util.isString(message.regionName0))
                    return "regionName0: string expected";
                if (!$util.isString(message.regionName1))
                    return "regionName1: string expected";
                if (!$util.isString(message.regionName2))
                    return "regionName2: string expected";
                if (!$util.isString(message.regionName3))
                    return "regionName3: string expected";
                if (!$util.isInteger(message.timezoneOffset))
                    return "timezoneOffset: integer expected";
                {
                    let error = $root.wm5.protobuf.SystemSetting.verify(message.systemSetting);
                    if (error)
                        return "systemSetting." + error;
                }
                if (message.errorLogs != null && message.hasOwnProperty("errorLogs")) {
                    if (!Array.isArray(message.errorLogs))
                        return "errorLogs: array expected";
                    for (let i = 0; i < message.errorLogs.length; ++i) {
                        let error = $root.wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry.verify(message.errorLogs[i]);
                        if (error)
                            return "errorLogs." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a RegisterSystemInfoRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.RegisterSystemInfoRequest} RegisterSystemInfoRequest
             */
            RegisterSystemInfoRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.RegisterSystemInfoRequest)
                    return object;
                let message = new $root.wm5.protobuf.RegisterSystemInfoRequest();
                if (object.pcbSerial != null)
                    message.pcbSerial = String(object.pcbSerial);
                switch (object.terminalType) {
                default:
                    if (typeof object.terminalType === "number") {
                        message.terminalType = object.terminalType;
                        break;
                    }
                    break;
                case "T_DRIVE":
                case 0:
                    message.terminalType = 0;
                    break;
                case "T_TERMINAL":
                case 1:
                    message.terminalType = 1;
                    break;
                }
                if (object.romVersion != null)
                    message.romVersion = object.romVersion >>> 0;
                if (object.country != null)
                    message.country = String(object.country);
                switch (object.lineType) {
                default:
                    if (typeof object.lineType === "number") {
                        message.lineType = object.lineType;
                        break;
                    }
                    break;
                case "L_UNKNOWN":
                case 0:
                    message.lineType = 0;
                    break;
                case "L_MOBILE":
                case 1:
                    message.lineType = 1;
                    break;
                case "L_ISDN":
                case 2:
                    message.lineType = 2;
                    break;
                case "L_BFLETS":
                case 3:
                    message.lineType = 3;
                    break;
                case "L_ADSL":
                case 4:
                    message.lineType = 4;
                    break;
                case "L_WIRED":
                case 5:
                    message.lineType = 5;
                    break;
                }
                if (object.shopName != null)
                    message.shopName = String(object.shopName);
                if (object.shopNickname != null)
                    message.shopNickname = String(object.shopNickname);
                if (object.allnetPlaceId != null)
                    message.allnetPlaceId = object.allnetPlaceId >>> 0;
                if (object.allnetRegion0 != null)
                    message.allnetRegion0 = object.allnetRegion0 >>> 0;
                if (object.muchaPlaceId != null)
                    message.muchaPlaceId = String(object.muchaPlaceId);
                if (object.muchaPrefectureId != null)
                    message.muchaPrefectureId = object.muchaPrefectureId >>> 0;
                if (object.regionName0 != null)
                    message.regionName0 = String(object.regionName0);
                if (object.regionName1 != null)
                    message.regionName1 = String(object.regionName1);
                if (object.regionName2 != null)
                    message.regionName2 = String(object.regionName2);
                if (object.regionName3 != null)
                    message.regionName3 = String(object.regionName3);
                if (object.timezoneOffset != null)
                    message.timezoneOffset = object.timezoneOffset | 0;
                if (object.systemSetting != null) {
                    if (typeof object.systemSetting !== "object")
                        throw TypeError(".wm5.protobuf.RegisterSystemInfoRequest.systemSetting: object expected");
                    message.systemSetting = $root.wm5.protobuf.SystemSetting.fromObject(object.systemSetting);
                }
                if (object.errorLogs) {
                    if (!Array.isArray(object.errorLogs))
                        throw TypeError(".wm5.protobuf.RegisterSystemInfoRequest.errorLogs: array expected");
                    message.errorLogs = [];
                    for (let i = 0; i < object.errorLogs.length; ++i) {
                        if (typeof object.errorLogs[i] !== "object")
                            throw TypeError(".wm5.protobuf.RegisterSystemInfoRequest.errorLogs: object expected");
                        message.errorLogs[i] = $root.wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry.fromObject(object.errorLogs[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a RegisterSystemInfoRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @static
             * @param {wm5.protobuf.RegisterSystemInfoRequest} message RegisterSystemInfoRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RegisterSystemInfoRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.errorLogs = [];
                if (options.defaults) {
                    object.pcbSerial = "";
                    object.terminalType = options.enums === String ? "T_DRIVE" : 0;
                    object.romVersion = 0;
                    object.country = "";
                    object.lineType = options.enums === String ? "L_UNKNOWN" : 0;
                    object.shopName = "";
                    object.shopNickname = "";
                    object.allnetPlaceId = 0;
                    object.allnetRegion0 = 0;
                    object.muchaPlaceId = "";
                    object.muchaPrefectureId = 0;
                    object.regionName0 = "";
                    object.regionName1 = "";
                    object.regionName2 = "";
                    object.regionName3 = "";
                    object.timezoneOffset = 0;
                    object.systemSetting = null;
                }
                if (message.pcbSerial != null && message.hasOwnProperty("pcbSerial"))
                    object.pcbSerial = message.pcbSerial;
                if (message.terminalType != null && message.hasOwnProperty("terminalType"))
                    object.terminalType = options.enums === String ? $root.wm5.protobuf.TerminalType[message.terminalType] === undefined ? message.terminalType : $root.wm5.protobuf.TerminalType[message.terminalType] : message.terminalType;
                if (message.romVersion != null && message.hasOwnProperty("romVersion"))
                    object.romVersion = message.romVersion;
                if (message.country != null && message.hasOwnProperty("country"))
                    object.country = message.country;
                if (message.lineType != null && message.hasOwnProperty("lineType"))
                    object.lineType = options.enums === String ? $root.wm5.protobuf.LineType[message.lineType] === undefined ? message.lineType : $root.wm5.protobuf.LineType[message.lineType] : message.lineType;
                if (message.shopName != null && message.hasOwnProperty("shopName"))
                    object.shopName = message.shopName;
                if (message.shopNickname != null && message.hasOwnProperty("shopNickname"))
                    object.shopNickname = message.shopNickname;
                if (message.allnetPlaceId != null && message.hasOwnProperty("allnetPlaceId"))
                    object.allnetPlaceId = message.allnetPlaceId;
                if (message.allnetRegion0 != null && message.hasOwnProperty("allnetRegion0"))
                    object.allnetRegion0 = message.allnetRegion0;
                if (message.muchaPlaceId != null && message.hasOwnProperty("muchaPlaceId"))
                    object.muchaPlaceId = message.muchaPlaceId;
                if (message.muchaPrefectureId != null && message.hasOwnProperty("muchaPrefectureId"))
                    object.muchaPrefectureId = message.muchaPrefectureId;
                if (message.regionName0 != null && message.hasOwnProperty("regionName0"))
                    object.regionName0 = message.regionName0;
                if (message.regionName1 != null && message.hasOwnProperty("regionName1"))
                    object.regionName1 = message.regionName1;
                if (message.regionName2 != null && message.hasOwnProperty("regionName2"))
                    object.regionName2 = message.regionName2;
                if (message.regionName3 != null && message.hasOwnProperty("regionName3"))
                    object.regionName3 = message.regionName3;
                if (message.timezoneOffset != null && message.hasOwnProperty("timezoneOffset"))
                    object.timezoneOffset = message.timezoneOffset;
                if (message.systemSetting != null && message.hasOwnProperty("systemSetting"))
                    object.systemSetting = $root.wm5.protobuf.SystemSetting.toObject(message.systemSetting, options);
                if (message.errorLogs && message.errorLogs.length) {
                    object.errorLogs = [];
                    for (let j = 0; j < message.errorLogs.length; ++j)
                        object.errorLogs[j] = $root.wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry.toObject(message.errorLogs[j], options);
                }
                return object;
            };

            /**
             * Converts this RegisterSystemInfoRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RegisterSystemInfoRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for RegisterSystemInfoRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.RegisterSystemInfoRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RegisterSystemInfoRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.RegisterSystemInfoRequest";
            };

            RegisterSystemInfoRequest.ErrorLogEntry = (function() {

                /**
                 * Properties of an ErrorLogEntry.
                 * @memberof wm5.protobuf.RegisterSystemInfoRequest
                 * @interface IErrorLogEntry
                 * @property {number} datetime ErrorLogEntry datetime
                 * @property {string} message ErrorLogEntry message
                 */

                /**
                 * Constructs a new ErrorLogEntry.
                 * @memberof wm5.protobuf.RegisterSystemInfoRequest
                 * @classdesc Represents an ErrorLogEntry.
                 * @implements IErrorLogEntry
                 * @constructor
                 * @param {wm5.protobuf.RegisterSystemInfoRequest.IErrorLogEntry=} [properties] Properties to set
                 */
                function ErrorLogEntry(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * ErrorLogEntry datetime.
                 * @member {number} datetime
                 * @memberof wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry
                 * @instance
                 */
                ErrorLogEntry.prototype.datetime = 0;

                /**
                 * ErrorLogEntry message.
                 * @member {string} message
                 * @memberof wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry
                 * @instance
                 */
                ErrorLogEntry.prototype.message = "";

                /**
                 * Creates a new ErrorLogEntry instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry
                 * @static
                 * @param {wm5.protobuf.RegisterSystemInfoRequest.IErrorLogEntry=} [properties] Properties to set
                 * @returns {wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry} ErrorLogEntry instance
                 */
                ErrorLogEntry.create = function create(properties) {
                    return new ErrorLogEntry(properties);
                };

                /**
                 * Encodes the specified ErrorLogEntry message. Does not implicitly {@link wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry
                 * @static
                 * @param {wm5.protobuf.RegisterSystemInfoRequest.IErrorLogEntry} message ErrorLogEntry message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ErrorLogEntry.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.datetime);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    return writer;
                };

                /**
                 * Encodes the specified ErrorLogEntry message, length delimited. Does not implicitly {@link wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry
                 * @static
                 * @param {wm5.protobuf.RegisterSystemInfoRequest.IErrorLogEntry} message ErrorLogEntry message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ErrorLogEntry.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an ErrorLogEntry message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry} ErrorLogEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ErrorLogEntry.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.datetime = reader.uint32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("datetime"))
                        throw $util.ProtocolError("missing required 'datetime'", { instance: message });
                    if (!message.hasOwnProperty("message"))
                        throw $util.ProtocolError("missing required 'message'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an ErrorLogEntry message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry} ErrorLogEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ErrorLogEntry.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an ErrorLogEntry message.
                 * @function verify
                 * @memberof wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ErrorLogEntry.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.datetime))
                        return "datetime: integer expected";
                    if (!$util.isString(message.message))
                        return "message: string expected";
                    return null;
                };

                /**
                 * Creates an ErrorLogEntry message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry} ErrorLogEntry
                 */
                ErrorLogEntry.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry)
                        return object;
                    let message = new $root.wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry();
                    if (object.datetime != null)
                        message.datetime = object.datetime >>> 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    return message;
                };

                /**
                 * Creates a plain object from an ErrorLogEntry message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry
                 * @static
                 * @param {wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry} message ErrorLogEntry
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ErrorLogEntry.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.datetime = 0;
                        object.message = "";
                    }
                    if (message.datetime != null && message.hasOwnProperty("datetime"))
                        object.datetime = message.datetime;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    return object;
                };

                /**
                 * Converts this ErrorLogEntry to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ErrorLogEntry.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for ErrorLogEntry
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ErrorLogEntry.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.RegisterSystemInfoRequest.ErrorLogEntry";
                };

                return ErrorLogEntry;
            })();

            return RegisterSystemInfoRequest;
        })();

        protobuf.RegisterSystemInfoResponse = (function() {

            /**
             * Properties of a RegisterSystemInfoResponse.
             * @memberof wm5.protobuf
             * @interface IRegisterSystemInfoResponse
             * @property {wm5.protobuf.ErrorCode} error RegisterSystemInfoResponse error
             * @property {number} regionId RegisterSystemInfoResponse regionId
             * @property {string} placeId RegisterSystemInfoResponse placeId
             * @property {number} teamSuspensionAnnouncementStartAt RegisterSystemInfoResponse teamSuspensionAnnouncementStartAt
             * @property {number} teamSuspensionStartAt RegisterSystemInfoResponse teamSuspensionStartAt
             * @property {boolean} sendingReportPermitted RegisterSystemInfoResponse sendingReportPermitted
             * @property {wm5.protobuf.IGameFeatureVersion} featureVersion RegisterSystemInfoResponse featureVersion
             * @property {number|null} [latestCompetitionId] RegisterSystemInfoResponse latestCompetitionId
             * @property {wm5.protobuf.IGhostCompetitionSchedule|null} [competitionSchedule] RegisterSystemInfoResponse competitionSchedule
             * @property {wm5.protobuf.ISpecialGhostSchedule|null} [specialGhostSchedule] RegisterSystemInfoResponse specialGhostSchedule
             * @property {wm5.protobuf.IBingoSchedule|null} [bingoSchedule] RegisterSystemInfoResponse bingoSchedule
             * @property {boolean|null} [bingoEventWasHeld] RegisterSystemInfoResponse bingoEventWasHeld
             * @property {wm5.protobuf.ICarCampaignSchedule|null} [carCampaignSchedule] RegisterSystemInfoResponse carCampaignSchedule
             * @property {wm5.protobuf.IGhostExpeditionSchedule|null} [expeditionSchedule] RegisterSystemInfoResponse expeditionSchedule
             * @property {boolean|null} [bnidServerAvailable] RegisterSystemInfoResponse bnidServerAvailable
             * @property {boolean|null} [banacoinAvailable] RegisterSystemInfoResponse banacoinAvailable
             * @property {boolean|null} [banacoinAffiliatedPlace] RegisterSystemInfoResponse banacoinAffiliatedPlace
             * @property {boolean|null} [scratchAvailable] RegisterSystemInfoResponse scratchAvailable
             * @property {boolean|null} [displayOfScratchTerms] RegisterSystemInfoResponse displayOfScratchTerms
             * @property {string|null} [scratchNotes] RegisterSystemInfoResponse scratchNotes
             * @property {string|null} [scratchTerms] RegisterSystemInfoResponse scratchTerms
             * @property {wm5.protobuf.IInviteFriendCampaignSchedule|null} [inviteFriendCampaignSchedule] RegisterSystemInfoResponse inviteFriendCampaignSchedule
             */

            /**
             * Constructs a new RegisterSystemInfoResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a RegisterSystemInfoResponse.
             * @implements IRegisterSystemInfoResponse
             * @constructor
             * @param {wm5.protobuf.IRegisterSystemInfoResponse=} [properties] Properties to set
             */
            function RegisterSystemInfoResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * RegisterSystemInfoResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.error = 0;

            /**
             * RegisterSystemInfoResponse regionId.
             * @member {number} regionId
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.regionId = 0;

            /**
             * RegisterSystemInfoResponse placeId.
             * @member {string} placeId
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.placeId = "";

            /**
             * RegisterSystemInfoResponse teamSuspensionAnnouncementStartAt.
             * @member {number} teamSuspensionAnnouncementStartAt
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.teamSuspensionAnnouncementStartAt = 0;

            /**
             * RegisterSystemInfoResponse teamSuspensionStartAt.
             * @member {number} teamSuspensionStartAt
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.teamSuspensionStartAt = 0;

            /**
             * RegisterSystemInfoResponse sendingReportPermitted.
             * @member {boolean} sendingReportPermitted
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.sendingReportPermitted = false;

            /**
             * RegisterSystemInfoResponse featureVersion.
             * @member {wm5.protobuf.IGameFeatureVersion} featureVersion
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.featureVersion = null;

            /**
             * RegisterSystemInfoResponse latestCompetitionId.
             * @member {number} latestCompetitionId
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.latestCompetitionId = 0;

            /**
             * RegisterSystemInfoResponse competitionSchedule.
             * @member {wm5.protobuf.IGhostCompetitionSchedule|null|undefined} competitionSchedule
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.competitionSchedule = null;

            /**
             * RegisterSystemInfoResponse specialGhostSchedule.
             * @member {wm5.protobuf.ISpecialGhostSchedule|null|undefined} specialGhostSchedule
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.specialGhostSchedule = null;

            /**
             * RegisterSystemInfoResponse bingoSchedule.
             * @member {wm5.protobuf.IBingoSchedule|null|undefined} bingoSchedule
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.bingoSchedule = null;

            /**
             * RegisterSystemInfoResponse bingoEventWasHeld.
             * @member {boolean} bingoEventWasHeld
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.bingoEventWasHeld = false;

            /**
             * RegisterSystemInfoResponse carCampaignSchedule.
             * @member {wm5.protobuf.ICarCampaignSchedule|null|undefined} carCampaignSchedule
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.carCampaignSchedule = null;

            /**
             * RegisterSystemInfoResponse expeditionSchedule.
             * @member {wm5.protobuf.IGhostExpeditionSchedule|null|undefined} expeditionSchedule
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.expeditionSchedule = null;

            /**
             * RegisterSystemInfoResponse bnidServerAvailable.
             * @member {boolean} bnidServerAvailable
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.bnidServerAvailable = false;

            /**
             * RegisterSystemInfoResponse banacoinAvailable.
             * @member {boolean} banacoinAvailable
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.banacoinAvailable = false;

            /**
             * RegisterSystemInfoResponse banacoinAffiliatedPlace.
             * @member {boolean} banacoinAffiliatedPlace
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.banacoinAffiliatedPlace = false;

            /**
             * RegisterSystemInfoResponse scratchAvailable.
             * @member {boolean} scratchAvailable
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.scratchAvailable = false;

            /**
             * RegisterSystemInfoResponse displayOfScratchTerms.
             * @member {boolean} displayOfScratchTerms
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.displayOfScratchTerms = false;

            /**
             * RegisterSystemInfoResponse scratchNotes.
             * @member {string} scratchNotes
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.scratchNotes = "";

            /**
             * RegisterSystemInfoResponse scratchTerms.
             * @member {string} scratchTerms
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.scratchTerms = "";

            /**
             * RegisterSystemInfoResponse inviteFriendCampaignSchedule.
             * @member {wm5.protobuf.IInviteFriendCampaignSchedule|null|undefined} inviteFriendCampaignSchedule
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             */
            RegisterSystemInfoResponse.prototype.inviteFriendCampaignSchedule = null;

            /**
             * Creates a new RegisterSystemInfoResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @static
             * @param {wm5.protobuf.IRegisterSystemInfoResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.RegisterSystemInfoResponse} RegisterSystemInfoResponse instance
             */
            RegisterSystemInfoResponse.create = function create(properties) {
                return new RegisterSystemInfoResponse(properties);
            };

            /**
             * Encodes the specified RegisterSystemInfoResponse message. Does not implicitly {@link wm5.protobuf.RegisterSystemInfoResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @static
             * @param {wm5.protobuf.IRegisterSystemInfoResponse} message RegisterSystemInfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RegisterSystemInfoResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.regionId);
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.placeId);
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.teamSuspensionAnnouncementStartAt);
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.teamSuspensionStartAt);
                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.sendingReportPermitted);
                $root.wm5.protobuf.GameFeatureVersion.encode(message.featureVersion, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                if (message.latestCompetitionId != null && Object.hasOwnProperty.call(message, "latestCompetitionId"))
                    writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.latestCompetitionId);
                if (message.competitionSchedule != null && Object.hasOwnProperty.call(message, "competitionSchedule"))
                    $root.wm5.protobuf.GhostCompetitionSchedule.encode(message.competitionSchedule, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                if (message.specialGhostSchedule != null && Object.hasOwnProperty.call(message, "specialGhostSchedule"))
                    $root.wm5.protobuf.SpecialGhostSchedule.encode(message.specialGhostSchedule, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                if (message.bingoSchedule != null && Object.hasOwnProperty.call(message, "bingoSchedule"))
                    $root.wm5.protobuf.BingoSchedule.encode(message.bingoSchedule, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                if (message.bingoEventWasHeld != null && Object.hasOwnProperty.call(message, "bingoEventWasHeld"))
                    writer.uint32(/* id 15, wireType 0 =*/120).bool(message.bingoEventWasHeld);
                if (message.carCampaignSchedule != null && Object.hasOwnProperty.call(message, "carCampaignSchedule"))
                    $root.wm5.protobuf.CarCampaignSchedule.encode(message.carCampaignSchedule, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                if (message.expeditionSchedule != null && Object.hasOwnProperty.call(message, "expeditionSchedule"))
                    $root.wm5.protobuf.GhostExpeditionSchedule.encode(message.expeditionSchedule, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                if (message.displayOfScratchTerms != null && Object.hasOwnProperty.call(message, "displayOfScratchTerms"))
                    writer.uint32(/* id 18, wireType 0 =*/144).bool(message.displayOfScratchTerms);
                if (message.scratchNotes != null && Object.hasOwnProperty.call(message, "scratchNotes"))
                    writer.uint32(/* id 19, wireType 2 =*/154).string(message.scratchNotes);
                if (message.scratchTerms != null && Object.hasOwnProperty.call(message, "scratchTerms"))
                    writer.uint32(/* id 20, wireType 2 =*/162).string(message.scratchTerms);
                if (message.banacoinAffiliatedPlace != null && Object.hasOwnProperty.call(message, "banacoinAffiliatedPlace"))
                    writer.uint32(/* id 23, wireType 0 =*/184).bool(message.banacoinAffiliatedPlace);
                if (message.bnidServerAvailable != null && Object.hasOwnProperty.call(message, "bnidServerAvailable"))
                    writer.uint32(/* id 24, wireType 0 =*/192).bool(message.bnidServerAvailable);
                if (message.banacoinAvailable != null && Object.hasOwnProperty.call(message, "banacoinAvailable"))
                    writer.uint32(/* id 25, wireType 0 =*/200).bool(message.banacoinAvailable);
                if (message.scratchAvailable != null && Object.hasOwnProperty.call(message, "scratchAvailable"))
                    writer.uint32(/* id 26, wireType 0 =*/208).bool(message.scratchAvailable);
                if (message.inviteFriendCampaignSchedule != null && Object.hasOwnProperty.call(message, "inviteFriendCampaignSchedule"))
                    $root.wm5.protobuf.InviteFriendCampaignSchedule.encode(message.inviteFriendCampaignSchedule, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified RegisterSystemInfoResponse message, length delimited. Does not implicitly {@link wm5.protobuf.RegisterSystemInfoResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @static
             * @param {wm5.protobuf.IRegisterSystemInfoResponse} message RegisterSystemInfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RegisterSystemInfoResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RegisterSystemInfoResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.RegisterSystemInfoResponse} RegisterSystemInfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RegisterSystemInfoResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.RegisterSystemInfoResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.regionId = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.placeId = reader.string();
                            break;
                        }
                    case 6: {
                            message.teamSuspensionAnnouncementStartAt = reader.uint32();
                            break;
                        }
                    case 7: {
                            message.teamSuspensionStartAt = reader.uint32();
                            break;
                        }
                    case 9: {
                            message.sendingReportPermitted = reader.bool();
                            break;
                        }
                    case 10: {
                            message.featureVersion = $root.wm5.protobuf.GameFeatureVersion.decode(reader, reader.uint32());
                            break;
                        }
                    case 11: {
                            message.latestCompetitionId = reader.uint32();
                            break;
                        }
                    case 12: {
                            message.competitionSchedule = $root.wm5.protobuf.GhostCompetitionSchedule.decode(reader, reader.uint32());
                            break;
                        }
                    case 13: {
                            message.specialGhostSchedule = $root.wm5.protobuf.SpecialGhostSchedule.decode(reader, reader.uint32());
                            break;
                        }
                    case 14: {
                            message.bingoSchedule = $root.wm5.protobuf.BingoSchedule.decode(reader, reader.uint32());
                            break;
                        }
                    case 15: {
                            message.bingoEventWasHeld = reader.bool();
                            break;
                        }
                    case 16: {
                            message.carCampaignSchedule = $root.wm5.protobuf.CarCampaignSchedule.decode(reader, reader.uint32());
                            break;
                        }
                    case 17: {
                            message.expeditionSchedule = $root.wm5.protobuf.GhostExpeditionSchedule.decode(reader, reader.uint32());
                            break;
                        }
                    case 24: {
                            message.bnidServerAvailable = reader.bool();
                            break;
                        }
                    case 25: {
                            message.banacoinAvailable = reader.bool();
                            break;
                        }
                    case 23: {
                            message.banacoinAffiliatedPlace = reader.bool();
                            break;
                        }
                    case 26: {
                            message.scratchAvailable = reader.bool();
                            break;
                        }
                    case 18: {
                            message.displayOfScratchTerms = reader.bool();
                            break;
                        }
                    case 19: {
                            message.scratchNotes = reader.string();
                            break;
                        }
                    case 20: {
                            message.scratchTerms = reader.string();
                            break;
                        }
                    case 27: {
                            message.inviteFriendCampaignSchedule = $root.wm5.protobuf.InviteFriendCampaignSchedule.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("regionId"))
                    throw $util.ProtocolError("missing required 'regionId'", { instance: message });
                if (!message.hasOwnProperty("placeId"))
                    throw $util.ProtocolError("missing required 'placeId'", { instance: message });
                if (!message.hasOwnProperty("teamSuspensionAnnouncementStartAt"))
                    throw $util.ProtocolError("missing required 'teamSuspensionAnnouncementStartAt'", { instance: message });
                if (!message.hasOwnProperty("teamSuspensionStartAt"))
                    throw $util.ProtocolError("missing required 'teamSuspensionStartAt'", { instance: message });
                if (!message.hasOwnProperty("sendingReportPermitted"))
                    throw $util.ProtocolError("missing required 'sendingReportPermitted'", { instance: message });
                if (!message.hasOwnProperty("featureVersion"))
                    throw $util.ProtocolError("missing required 'featureVersion'", { instance: message });
                return message;
            };

            /**
             * Decodes a RegisterSystemInfoResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.RegisterSystemInfoResponse} RegisterSystemInfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RegisterSystemInfoResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RegisterSystemInfoResponse message.
             * @function verify
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RegisterSystemInfoResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (!$util.isInteger(message.regionId))
                    return "regionId: integer expected";
                if (!$util.isString(message.placeId))
                    return "placeId: string expected";
                if (!$util.isInteger(message.teamSuspensionAnnouncementStartAt))
                    return "teamSuspensionAnnouncementStartAt: integer expected";
                if (!$util.isInteger(message.teamSuspensionStartAt))
                    return "teamSuspensionStartAt: integer expected";
                if (typeof message.sendingReportPermitted !== "boolean")
                    return "sendingReportPermitted: boolean expected";
                {
                    let error = $root.wm5.protobuf.GameFeatureVersion.verify(message.featureVersion);
                    if (error)
                        return "featureVersion." + error;
                }
                if (message.latestCompetitionId != null && message.hasOwnProperty("latestCompetitionId"))
                    if (!$util.isInteger(message.latestCompetitionId))
                        return "latestCompetitionId: integer expected";
                if (message.competitionSchedule != null && message.hasOwnProperty("competitionSchedule")) {
                    let error = $root.wm5.protobuf.GhostCompetitionSchedule.verify(message.competitionSchedule);
                    if (error)
                        return "competitionSchedule." + error;
                }
                if (message.specialGhostSchedule != null && message.hasOwnProperty("specialGhostSchedule")) {
                    let error = $root.wm5.protobuf.SpecialGhostSchedule.verify(message.specialGhostSchedule);
                    if (error)
                        return "specialGhostSchedule." + error;
                }
                if (message.bingoSchedule != null && message.hasOwnProperty("bingoSchedule")) {
                    let error = $root.wm5.protobuf.BingoSchedule.verify(message.bingoSchedule);
                    if (error)
                        return "bingoSchedule." + error;
                }
                if (message.bingoEventWasHeld != null && message.hasOwnProperty("bingoEventWasHeld"))
                    if (typeof message.bingoEventWasHeld !== "boolean")
                        return "bingoEventWasHeld: boolean expected";
                if (message.carCampaignSchedule != null && message.hasOwnProperty("carCampaignSchedule")) {
                    let error = $root.wm5.protobuf.CarCampaignSchedule.verify(message.carCampaignSchedule);
                    if (error)
                        return "carCampaignSchedule." + error;
                }
                if (message.expeditionSchedule != null && message.hasOwnProperty("expeditionSchedule")) {
                    let error = $root.wm5.protobuf.GhostExpeditionSchedule.verify(message.expeditionSchedule);
                    if (error)
                        return "expeditionSchedule." + error;
                }
                if (message.bnidServerAvailable != null && message.hasOwnProperty("bnidServerAvailable"))
                    if (typeof message.bnidServerAvailable !== "boolean")
                        return "bnidServerAvailable: boolean expected";
                if (message.banacoinAvailable != null && message.hasOwnProperty("banacoinAvailable"))
                    if (typeof message.banacoinAvailable !== "boolean")
                        return "banacoinAvailable: boolean expected";
                if (message.banacoinAffiliatedPlace != null && message.hasOwnProperty("banacoinAffiliatedPlace"))
                    if (typeof message.banacoinAffiliatedPlace !== "boolean")
                        return "banacoinAffiliatedPlace: boolean expected";
                if (message.scratchAvailable != null && message.hasOwnProperty("scratchAvailable"))
                    if (typeof message.scratchAvailable !== "boolean")
                        return "scratchAvailable: boolean expected";
                if (message.displayOfScratchTerms != null && message.hasOwnProperty("displayOfScratchTerms"))
                    if (typeof message.displayOfScratchTerms !== "boolean")
                        return "displayOfScratchTerms: boolean expected";
                if (message.scratchNotes != null && message.hasOwnProperty("scratchNotes"))
                    if (!$util.isString(message.scratchNotes))
                        return "scratchNotes: string expected";
                if (message.scratchTerms != null && message.hasOwnProperty("scratchTerms"))
                    if (!$util.isString(message.scratchTerms))
                        return "scratchTerms: string expected";
                if (message.inviteFriendCampaignSchedule != null && message.hasOwnProperty("inviteFriendCampaignSchedule")) {
                    let error = $root.wm5.protobuf.InviteFriendCampaignSchedule.verify(message.inviteFriendCampaignSchedule);
                    if (error)
                        return "inviteFriendCampaignSchedule." + error;
                }
                return null;
            };

            /**
             * Creates a RegisterSystemInfoResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.RegisterSystemInfoResponse} RegisterSystemInfoResponse
             */
            RegisterSystemInfoResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.RegisterSystemInfoResponse)
                    return object;
                let message = new $root.wm5.protobuf.RegisterSystemInfoResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.regionId != null)
                    message.regionId = object.regionId >>> 0;
                if (object.placeId != null)
                    message.placeId = String(object.placeId);
                if (object.teamSuspensionAnnouncementStartAt != null)
                    message.teamSuspensionAnnouncementStartAt = object.teamSuspensionAnnouncementStartAt >>> 0;
                if (object.teamSuspensionStartAt != null)
                    message.teamSuspensionStartAt = object.teamSuspensionStartAt >>> 0;
                if (object.sendingReportPermitted != null)
                    message.sendingReportPermitted = Boolean(object.sendingReportPermitted);
                if (object.featureVersion != null) {
                    if (typeof object.featureVersion !== "object")
                        throw TypeError(".wm5.protobuf.RegisterSystemInfoResponse.featureVersion: object expected");
                    message.featureVersion = $root.wm5.protobuf.GameFeatureVersion.fromObject(object.featureVersion);
                }
                if (object.latestCompetitionId != null)
                    message.latestCompetitionId = object.latestCompetitionId >>> 0;
                if (object.competitionSchedule != null) {
                    if (typeof object.competitionSchedule !== "object")
                        throw TypeError(".wm5.protobuf.RegisterSystemInfoResponse.competitionSchedule: object expected");
                    message.competitionSchedule = $root.wm5.protobuf.GhostCompetitionSchedule.fromObject(object.competitionSchedule);
                }
                if (object.specialGhostSchedule != null) {
                    if (typeof object.specialGhostSchedule !== "object")
                        throw TypeError(".wm5.protobuf.RegisterSystemInfoResponse.specialGhostSchedule: object expected");
                    message.specialGhostSchedule = $root.wm5.protobuf.SpecialGhostSchedule.fromObject(object.specialGhostSchedule);
                }
                if (object.bingoSchedule != null) {
                    if (typeof object.bingoSchedule !== "object")
                        throw TypeError(".wm5.protobuf.RegisterSystemInfoResponse.bingoSchedule: object expected");
                    message.bingoSchedule = $root.wm5.protobuf.BingoSchedule.fromObject(object.bingoSchedule);
                }
                if (object.bingoEventWasHeld != null)
                    message.bingoEventWasHeld = Boolean(object.bingoEventWasHeld);
                if (object.carCampaignSchedule != null) {
                    if (typeof object.carCampaignSchedule !== "object")
                        throw TypeError(".wm5.protobuf.RegisterSystemInfoResponse.carCampaignSchedule: object expected");
                    message.carCampaignSchedule = $root.wm5.protobuf.CarCampaignSchedule.fromObject(object.carCampaignSchedule);
                }
                if (object.expeditionSchedule != null) {
                    if (typeof object.expeditionSchedule !== "object")
                        throw TypeError(".wm5.protobuf.RegisterSystemInfoResponse.expeditionSchedule: object expected");
                    message.expeditionSchedule = $root.wm5.protobuf.GhostExpeditionSchedule.fromObject(object.expeditionSchedule);
                }
                if (object.bnidServerAvailable != null)
                    message.bnidServerAvailable = Boolean(object.bnidServerAvailable);
                if (object.banacoinAvailable != null)
                    message.banacoinAvailable = Boolean(object.banacoinAvailable);
                if (object.banacoinAffiliatedPlace != null)
                    message.banacoinAffiliatedPlace = Boolean(object.banacoinAffiliatedPlace);
                if (object.scratchAvailable != null)
                    message.scratchAvailable = Boolean(object.scratchAvailable);
                if (object.displayOfScratchTerms != null)
                    message.displayOfScratchTerms = Boolean(object.displayOfScratchTerms);
                if (object.scratchNotes != null)
                    message.scratchNotes = String(object.scratchNotes);
                if (object.scratchTerms != null)
                    message.scratchTerms = String(object.scratchTerms);
                if (object.inviteFriendCampaignSchedule != null) {
                    if (typeof object.inviteFriendCampaignSchedule !== "object")
                        throw TypeError(".wm5.protobuf.RegisterSystemInfoResponse.inviteFriendCampaignSchedule: object expected");
                    message.inviteFriendCampaignSchedule = $root.wm5.protobuf.InviteFriendCampaignSchedule.fromObject(object.inviteFriendCampaignSchedule);
                }
                return message;
            };

            /**
             * Creates a plain object from a RegisterSystemInfoResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @static
             * @param {wm5.protobuf.RegisterSystemInfoResponse} message RegisterSystemInfoResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RegisterSystemInfoResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.regionId = 0;
                    object.placeId = "";
                    object.teamSuspensionAnnouncementStartAt = 0;
                    object.teamSuspensionStartAt = 0;
                    object.sendingReportPermitted = false;
                    object.featureVersion = null;
                    object.latestCompetitionId = 0;
                    object.competitionSchedule = null;
                    object.specialGhostSchedule = null;
                    object.bingoSchedule = null;
                    object.bingoEventWasHeld = false;
                    object.carCampaignSchedule = null;
                    object.expeditionSchedule = null;
                    object.displayOfScratchTerms = false;
                    object.scratchNotes = "";
                    object.scratchTerms = "";
                    object.banacoinAffiliatedPlace = false;
                    object.bnidServerAvailable = false;
                    object.banacoinAvailable = false;
                    object.scratchAvailable = false;
                    object.inviteFriendCampaignSchedule = null;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.regionId != null && message.hasOwnProperty("regionId"))
                    object.regionId = message.regionId;
                if (message.placeId != null && message.hasOwnProperty("placeId"))
                    object.placeId = message.placeId;
                if (message.teamSuspensionAnnouncementStartAt != null && message.hasOwnProperty("teamSuspensionAnnouncementStartAt"))
                    object.teamSuspensionAnnouncementStartAt = message.teamSuspensionAnnouncementStartAt;
                if (message.teamSuspensionStartAt != null && message.hasOwnProperty("teamSuspensionStartAt"))
                    object.teamSuspensionStartAt = message.teamSuspensionStartAt;
                if (message.sendingReportPermitted != null && message.hasOwnProperty("sendingReportPermitted"))
                    object.sendingReportPermitted = message.sendingReportPermitted;
                if (message.featureVersion != null && message.hasOwnProperty("featureVersion"))
                    object.featureVersion = $root.wm5.protobuf.GameFeatureVersion.toObject(message.featureVersion, options);
                if (message.latestCompetitionId != null && message.hasOwnProperty("latestCompetitionId"))
                    object.latestCompetitionId = message.latestCompetitionId;
                if (message.competitionSchedule != null && message.hasOwnProperty("competitionSchedule"))
                    object.competitionSchedule = $root.wm5.protobuf.GhostCompetitionSchedule.toObject(message.competitionSchedule, options);
                if (message.specialGhostSchedule != null && message.hasOwnProperty("specialGhostSchedule"))
                    object.specialGhostSchedule = $root.wm5.protobuf.SpecialGhostSchedule.toObject(message.specialGhostSchedule, options);
                if (message.bingoSchedule != null && message.hasOwnProperty("bingoSchedule"))
                    object.bingoSchedule = $root.wm5.protobuf.BingoSchedule.toObject(message.bingoSchedule, options);
                if (message.bingoEventWasHeld != null && message.hasOwnProperty("bingoEventWasHeld"))
                    object.bingoEventWasHeld = message.bingoEventWasHeld;
                if (message.carCampaignSchedule != null && message.hasOwnProperty("carCampaignSchedule"))
                    object.carCampaignSchedule = $root.wm5.protobuf.CarCampaignSchedule.toObject(message.carCampaignSchedule, options);
                if (message.expeditionSchedule != null && message.hasOwnProperty("expeditionSchedule"))
                    object.expeditionSchedule = $root.wm5.protobuf.GhostExpeditionSchedule.toObject(message.expeditionSchedule, options);
                if (message.displayOfScratchTerms != null && message.hasOwnProperty("displayOfScratchTerms"))
                    object.displayOfScratchTerms = message.displayOfScratchTerms;
                if (message.scratchNotes != null && message.hasOwnProperty("scratchNotes"))
                    object.scratchNotes = message.scratchNotes;
                if (message.scratchTerms != null && message.hasOwnProperty("scratchTerms"))
                    object.scratchTerms = message.scratchTerms;
                if (message.banacoinAffiliatedPlace != null && message.hasOwnProperty("banacoinAffiliatedPlace"))
                    object.banacoinAffiliatedPlace = message.banacoinAffiliatedPlace;
                if (message.bnidServerAvailable != null && message.hasOwnProperty("bnidServerAvailable"))
                    object.bnidServerAvailable = message.bnidServerAvailable;
                if (message.banacoinAvailable != null && message.hasOwnProperty("banacoinAvailable"))
                    object.banacoinAvailable = message.banacoinAvailable;
                if (message.scratchAvailable != null && message.hasOwnProperty("scratchAvailable"))
                    object.scratchAvailable = message.scratchAvailable;
                if (message.inviteFriendCampaignSchedule != null && message.hasOwnProperty("inviteFriendCampaignSchedule"))
                    object.inviteFriendCampaignSchedule = $root.wm5.protobuf.InviteFriendCampaignSchedule.toObject(message.inviteFriendCampaignSchedule, options);
                return object;
            };

            /**
             * Converts this RegisterSystemInfoResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RegisterSystemInfoResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for RegisterSystemInfoResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.RegisterSystemInfoResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RegisterSystemInfoResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.RegisterSystemInfoResponse";
            };

            return RegisterSystemInfoResponse;
        })();

        protobuf.RegisterSystemStatsRequest = (function() {

            /**
             * Properties of a RegisterSystemStatsRequest.
             * @memberof wm5.protobuf
             * @interface IRegisterSystemStatsRequest
             * @property {string} pcbSerial RegisterSystemStatsRequest pcbSerial
             * @property {wm5.protobuf.RegisterSystemStatsRequest.IDriveStats|null} [driveStats] RegisterSystemStatsRequest driveStats
             * @property {wm5.protobuf.RegisterSystemStatsRequest.ITerminalStats|null} [terminalStats] RegisterSystemStatsRequest terminalStats
             */

            /**
             * Constructs a new RegisterSystemStatsRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a RegisterSystemStatsRequest.
             * @implements IRegisterSystemStatsRequest
             * @constructor
             * @param {wm5.protobuf.IRegisterSystemStatsRequest=} [properties] Properties to set
             */
            function RegisterSystemStatsRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * RegisterSystemStatsRequest pcbSerial.
             * @member {string} pcbSerial
             * @memberof wm5.protobuf.RegisterSystemStatsRequest
             * @instance
             */
            RegisterSystemStatsRequest.prototype.pcbSerial = "";

            /**
             * RegisterSystemStatsRequest driveStats.
             * @member {wm5.protobuf.RegisterSystemStatsRequest.IDriveStats|null|undefined} driveStats
             * @memberof wm5.protobuf.RegisterSystemStatsRequest
             * @instance
             */
            RegisterSystemStatsRequest.prototype.driveStats = null;

            /**
             * RegisterSystemStatsRequest terminalStats.
             * @member {wm5.protobuf.RegisterSystemStatsRequest.ITerminalStats|null|undefined} terminalStats
             * @memberof wm5.protobuf.RegisterSystemStatsRequest
             * @instance
             */
            RegisterSystemStatsRequest.prototype.terminalStats = null;

            /**
             * Creates a new RegisterSystemStatsRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.RegisterSystemStatsRequest
             * @static
             * @param {wm5.protobuf.IRegisterSystemStatsRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.RegisterSystemStatsRequest} RegisterSystemStatsRequest instance
             */
            RegisterSystemStatsRequest.create = function create(properties) {
                return new RegisterSystemStatsRequest(properties);
            };

            /**
             * Encodes the specified RegisterSystemStatsRequest message. Does not implicitly {@link wm5.protobuf.RegisterSystemStatsRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.RegisterSystemStatsRequest
             * @static
             * @param {wm5.protobuf.IRegisterSystemStatsRequest} message RegisterSystemStatsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RegisterSystemStatsRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.pcbSerial);
                if (message.driveStats != null && Object.hasOwnProperty.call(message, "driveStats"))
                    $root.wm5.protobuf.RegisterSystemStatsRequest.DriveStats.encode(message.driveStats, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.terminalStats != null && Object.hasOwnProperty.call(message, "terminalStats"))
                    $root.wm5.protobuf.RegisterSystemStatsRequest.TerminalStats.encode(message.terminalStats, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified RegisterSystemStatsRequest message, length delimited. Does not implicitly {@link wm5.protobuf.RegisterSystemStatsRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.RegisterSystemStatsRequest
             * @static
             * @param {wm5.protobuf.IRegisterSystemStatsRequest} message RegisterSystemStatsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RegisterSystemStatsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RegisterSystemStatsRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.RegisterSystemStatsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.RegisterSystemStatsRequest} RegisterSystemStatsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RegisterSystemStatsRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.RegisterSystemStatsRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.pcbSerial = reader.string();
                            break;
                        }
                    case 2: {
                            message.driveStats = $root.wm5.protobuf.RegisterSystemStatsRequest.DriveStats.decode(reader, reader.uint32());
                            break;
                        }
                    case 3: {
                            message.terminalStats = $root.wm5.protobuf.RegisterSystemStatsRequest.TerminalStats.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("pcbSerial"))
                    throw $util.ProtocolError("missing required 'pcbSerial'", { instance: message });
                return message;
            };

            /**
             * Decodes a RegisterSystemStatsRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.RegisterSystemStatsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.RegisterSystemStatsRequest} RegisterSystemStatsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RegisterSystemStatsRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RegisterSystemStatsRequest message.
             * @function verify
             * @memberof wm5.protobuf.RegisterSystemStatsRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RegisterSystemStatsRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isString(message.pcbSerial))
                    return "pcbSerial: string expected";
                if (message.driveStats != null && message.hasOwnProperty("driveStats")) {
                    let error = $root.wm5.protobuf.RegisterSystemStatsRequest.DriveStats.verify(message.driveStats);
                    if (error)
                        return "driveStats." + error;
                }
                if (message.terminalStats != null && message.hasOwnProperty("terminalStats")) {
                    let error = $root.wm5.protobuf.RegisterSystemStatsRequest.TerminalStats.verify(message.terminalStats);
                    if (error)
                        return "terminalStats." + error;
                }
                return null;
            };

            /**
             * Creates a RegisterSystemStatsRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.RegisterSystemStatsRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.RegisterSystemStatsRequest} RegisterSystemStatsRequest
             */
            RegisterSystemStatsRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.RegisterSystemStatsRequest)
                    return object;
                let message = new $root.wm5.protobuf.RegisterSystemStatsRequest();
                if (object.pcbSerial != null)
                    message.pcbSerial = String(object.pcbSerial);
                if (object.driveStats != null) {
                    if (typeof object.driveStats !== "object")
                        throw TypeError(".wm5.protobuf.RegisterSystemStatsRequest.driveStats: object expected");
                    message.driveStats = $root.wm5.protobuf.RegisterSystemStatsRequest.DriveStats.fromObject(object.driveStats);
                }
                if (object.terminalStats != null) {
                    if (typeof object.terminalStats !== "object")
                        throw TypeError(".wm5.protobuf.RegisterSystemStatsRequest.terminalStats: object expected");
                    message.terminalStats = $root.wm5.protobuf.RegisterSystemStatsRequest.TerminalStats.fromObject(object.terminalStats);
                }
                return message;
            };

            /**
             * Creates a plain object from a RegisterSystemStatsRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.RegisterSystemStatsRequest
             * @static
             * @param {wm5.protobuf.RegisterSystemStatsRequest} message RegisterSystemStatsRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RegisterSystemStatsRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.pcbSerial = "";
                    object.driveStats = null;
                    object.terminalStats = null;
                }
                if (message.pcbSerial != null && message.hasOwnProperty("pcbSerial"))
                    object.pcbSerial = message.pcbSerial;
                if (message.driveStats != null && message.hasOwnProperty("driveStats"))
                    object.driveStats = $root.wm5.protobuf.RegisterSystemStatsRequest.DriveStats.toObject(message.driveStats, options);
                if (message.terminalStats != null && message.hasOwnProperty("terminalStats"))
                    object.terminalStats = $root.wm5.protobuf.RegisterSystemStatsRequest.TerminalStats.toObject(message.terminalStats, options);
                return object;
            };

            /**
             * Converts this RegisterSystemStatsRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.RegisterSystemStatsRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RegisterSystemStatsRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for RegisterSystemStatsRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.RegisterSystemStatsRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RegisterSystemStatsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.RegisterSystemStatsRequest";
            };

            RegisterSystemStatsRequest.DriveStats = (function() {

                /**
                 * Properties of a DriveStats.
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest
                 * @interface IDriveStats
                 * @property {Array.<number>|null} [operation] DriveStats operation
                 * @property {Array.<number>|null} [story] DriveStats story
                 * @property {Array.<number>|null} [versus] DriveStats versus
                 * @property {Array.<number>|null} [ghost] DriveStats ghost
                 * @property {Array.<number>|null} [timeAttack] DriveStats timeAttack
                 * @property {Array.<number>|null} [event] DriveStats event
                 * @property {Array.<number>|null} [ghostSelection] DriveStats ghostSelection
                 */

                /**
                 * Constructs a new DriveStats.
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest
                 * @classdesc Represents a DriveStats.
                 * @implements IDriveStats
                 * @constructor
                 * @param {wm5.protobuf.RegisterSystemStatsRequest.IDriveStats=} [properties] Properties to set
                 */
                function DriveStats(properties) {
                    this.operation = [];
                    this.story = [];
                    this.versus = [];
                    this.ghost = [];
                    this.timeAttack = [];
                    this.event = [];
                    this.ghostSelection = [];
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * DriveStats operation.
                 * @member {Array.<number>} operation
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.DriveStats
                 * @instance
                 */
                DriveStats.prototype.operation = $util.emptyArray;

                /**
                 * DriveStats story.
                 * @member {Array.<number>} story
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.DriveStats
                 * @instance
                 */
                DriveStats.prototype.story = $util.emptyArray;

                /**
                 * DriveStats versus.
                 * @member {Array.<number>} versus
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.DriveStats
                 * @instance
                 */
                DriveStats.prototype.versus = $util.emptyArray;

                /**
                 * DriveStats ghost.
                 * @member {Array.<number>} ghost
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.DriveStats
                 * @instance
                 */
                DriveStats.prototype.ghost = $util.emptyArray;

                /**
                 * DriveStats timeAttack.
                 * @member {Array.<number>} timeAttack
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.DriveStats
                 * @instance
                 */
                DriveStats.prototype.timeAttack = $util.emptyArray;

                /**
                 * DriveStats event.
                 * @member {Array.<number>} event
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.DriveStats
                 * @instance
                 */
                DriveStats.prototype.event = $util.emptyArray;

                /**
                 * DriveStats ghostSelection.
                 * @member {Array.<number>} ghostSelection
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.DriveStats
                 * @instance
                 */
                DriveStats.prototype.ghostSelection = $util.emptyArray;

                /**
                 * Creates a new DriveStats instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.DriveStats
                 * @static
                 * @param {wm5.protobuf.RegisterSystemStatsRequest.IDriveStats=} [properties] Properties to set
                 * @returns {wm5.protobuf.RegisterSystemStatsRequest.DriveStats} DriveStats instance
                 */
                DriveStats.create = function create(properties) {
                    return new DriveStats(properties);
                };

                /**
                 * Encodes the specified DriveStats message. Does not implicitly {@link wm5.protobuf.RegisterSystemStatsRequest.DriveStats.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.DriveStats
                 * @static
                 * @param {wm5.protobuf.RegisterSystemStatsRequest.IDriveStats} message DriveStats message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DriveStats.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operation != null && message.operation.length) {
                        writer.uint32(/* id 1, wireType 2 =*/10).fork();
                        for (let i = 0; i < message.operation.length; ++i)
                            writer.uint32(message.operation[i]);
                        writer.ldelim();
                    }
                    if (message.story != null && message.story.length) {
                        writer.uint32(/* id 2, wireType 2 =*/18).fork();
                        for (let i = 0; i < message.story.length; ++i)
                            writer.uint32(message.story[i]);
                        writer.ldelim();
                    }
                    if (message.versus != null && message.versus.length) {
                        writer.uint32(/* id 3, wireType 2 =*/26).fork();
                        for (let i = 0; i < message.versus.length; ++i)
                            writer.uint32(message.versus[i]);
                        writer.ldelim();
                    }
                    if (message.ghost != null && message.ghost.length) {
                        writer.uint32(/* id 4, wireType 2 =*/34).fork();
                        for (let i = 0; i < message.ghost.length; ++i)
                            writer.uint32(message.ghost[i]);
                        writer.ldelim();
                    }
                    if (message.timeAttack != null && message.timeAttack.length) {
                        writer.uint32(/* id 5, wireType 2 =*/42).fork();
                        for (let i = 0; i < message.timeAttack.length; ++i)
                            writer.uint32(message.timeAttack[i]);
                        writer.ldelim();
                    }
                    if (message.event != null && message.event.length) {
                        writer.uint32(/* id 6, wireType 2 =*/50).fork();
                        for (let i = 0; i < message.event.length; ++i)
                            writer.uint32(message.event[i]);
                        writer.ldelim();
                    }
                    if (message.ghostSelection != null && message.ghostSelection.length) {
                        writer.uint32(/* id 7, wireType 2 =*/58).fork();
                        for (let i = 0; i < message.ghostSelection.length; ++i)
                            writer.uint32(message.ghostSelection[i]);
                        writer.ldelim();
                    }
                    return writer;
                };

                /**
                 * Encodes the specified DriveStats message, length delimited. Does not implicitly {@link wm5.protobuf.RegisterSystemStatsRequest.DriveStats.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.DriveStats
                 * @static
                 * @param {wm5.protobuf.RegisterSystemStatsRequest.IDriveStats} message DriveStats message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DriveStats.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a DriveStats message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.DriveStats
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.RegisterSystemStatsRequest.DriveStats} DriveStats
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DriveStats.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.RegisterSystemStatsRequest.DriveStats();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.operation && message.operation.length))
                                    message.operation = [];
                                if ((tag & 7) === 2) {
                                    let end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.operation.push(reader.uint32());
                                } else
                                    message.operation.push(reader.uint32());
                                break;
                            }
                        case 2: {
                                if (!(message.story && message.story.length))
                                    message.story = [];
                                if ((tag & 7) === 2) {
                                    let end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.story.push(reader.uint32());
                                } else
                                    message.story.push(reader.uint32());
                                break;
                            }
                        case 3: {
                                if (!(message.versus && message.versus.length))
                                    message.versus = [];
                                if ((tag & 7) === 2) {
                                    let end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.versus.push(reader.uint32());
                                } else
                                    message.versus.push(reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.ghost && message.ghost.length))
                                    message.ghost = [];
                                if ((tag & 7) === 2) {
                                    let end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.ghost.push(reader.uint32());
                                } else
                                    message.ghost.push(reader.uint32());
                                break;
                            }
                        case 5: {
                                if (!(message.timeAttack && message.timeAttack.length))
                                    message.timeAttack = [];
                                if ((tag & 7) === 2) {
                                    let end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.timeAttack.push(reader.uint32());
                                } else
                                    message.timeAttack.push(reader.uint32());
                                break;
                            }
                        case 6: {
                                if (!(message.event && message.event.length))
                                    message.event = [];
                                if ((tag & 7) === 2) {
                                    let end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.event.push(reader.uint32());
                                } else
                                    message.event.push(reader.uint32());
                                break;
                            }
                        case 7: {
                                if (!(message.ghostSelection && message.ghostSelection.length))
                                    message.ghostSelection = [];
                                if ((tag & 7) === 2) {
                                    let end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.ghostSelection.push(reader.uint32());
                                } else
                                    message.ghostSelection.push(reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a DriveStats message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.DriveStats
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.RegisterSystemStatsRequest.DriveStats} DriveStats
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DriveStats.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a DriveStats message.
                 * @function verify
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.DriveStats
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DriveStats.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operation != null && message.hasOwnProperty("operation")) {
                        if (!Array.isArray(message.operation))
                            return "operation: array expected";
                        for (let i = 0; i < message.operation.length; ++i)
                            if (!$util.isInteger(message.operation[i]))
                                return "operation: integer[] expected";
                    }
                    if (message.story != null && message.hasOwnProperty("story")) {
                        if (!Array.isArray(message.story))
                            return "story: array expected";
                        for (let i = 0; i < message.story.length; ++i)
                            if (!$util.isInteger(message.story[i]))
                                return "story: integer[] expected";
                    }
                    if (message.versus != null && message.hasOwnProperty("versus")) {
                        if (!Array.isArray(message.versus))
                            return "versus: array expected";
                        for (let i = 0; i < message.versus.length; ++i)
                            if (!$util.isInteger(message.versus[i]))
                                return "versus: integer[] expected";
                    }
                    if (message.ghost != null && message.hasOwnProperty("ghost")) {
                        if (!Array.isArray(message.ghost))
                            return "ghost: array expected";
                        for (let i = 0; i < message.ghost.length; ++i)
                            if (!$util.isInteger(message.ghost[i]))
                                return "ghost: integer[] expected";
                    }
                    if (message.timeAttack != null && message.hasOwnProperty("timeAttack")) {
                        if (!Array.isArray(message.timeAttack))
                            return "timeAttack: array expected";
                        for (let i = 0; i < message.timeAttack.length; ++i)
                            if (!$util.isInteger(message.timeAttack[i]))
                                return "timeAttack: integer[] expected";
                    }
                    if (message.event != null && message.hasOwnProperty("event")) {
                        if (!Array.isArray(message.event))
                            return "event: array expected";
                        for (let i = 0; i < message.event.length; ++i)
                            if (!$util.isInteger(message.event[i]))
                                return "event: integer[] expected";
                    }
                    if (message.ghostSelection != null && message.hasOwnProperty("ghostSelection")) {
                        if (!Array.isArray(message.ghostSelection))
                            return "ghostSelection: array expected";
                        for (let i = 0; i < message.ghostSelection.length; ++i)
                            if (!$util.isInteger(message.ghostSelection[i]))
                                return "ghostSelection: integer[] expected";
                    }
                    return null;
                };

                /**
                 * Creates a DriveStats message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.DriveStats
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.RegisterSystemStatsRequest.DriveStats} DriveStats
                 */
                DriveStats.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.RegisterSystemStatsRequest.DriveStats)
                        return object;
                    let message = new $root.wm5.protobuf.RegisterSystemStatsRequest.DriveStats();
                    if (object.operation) {
                        if (!Array.isArray(object.operation))
                            throw TypeError(".wm5.protobuf.RegisterSystemStatsRequest.DriveStats.operation: array expected");
                        message.operation = [];
                        for (let i = 0; i < object.operation.length; ++i)
                            message.operation[i] = object.operation[i] >>> 0;
                    }
                    if (object.story) {
                        if (!Array.isArray(object.story))
                            throw TypeError(".wm5.protobuf.RegisterSystemStatsRequest.DriveStats.story: array expected");
                        message.story = [];
                        for (let i = 0; i < object.story.length; ++i)
                            message.story[i] = object.story[i] >>> 0;
                    }
                    if (object.versus) {
                        if (!Array.isArray(object.versus))
                            throw TypeError(".wm5.protobuf.RegisterSystemStatsRequest.DriveStats.versus: array expected");
                        message.versus = [];
                        for (let i = 0; i < object.versus.length; ++i)
                            message.versus[i] = object.versus[i] >>> 0;
                    }
                    if (object.ghost) {
                        if (!Array.isArray(object.ghost))
                            throw TypeError(".wm5.protobuf.RegisterSystemStatsRequest.DriveStats.ghost: array expected");
                        message.ghost = [];
                        for (let i = 0; i < object.ghost.length; ++i)
                            message.ghost[i] = object.ghost[i] >>> 0;
                    }
                    if (object.timeAttack) {
                        if (!Array.isArray(object.timeAttack))
                            throw TypeError(".wm5.protobuf.RegisterSystemStatsRequest.DriveStats.timeAttack: array expected");
                        message.timeAttack = [];
                        for (let i = 0; i < object.timeAttack.length; ++i)
                            message.timeAttack[i] = object.timeAttack[i] >>> 0;
                    }
                    if (object.event) {
                        if (!Array.isArray(object.event))
                            throw TypeError(".wm5.protobuf.RegisterSystemStatsRequest.DriveStats.event: array expected");
                        message.event = [];
                        for (let i = 0; i < object.event.length; ++i)
                            message.event[i] = object.event[i] >>> 0;
                    }
                    if (object.ghostSelection) {
                        if (!Array.isArray(object.ghostSelection))
                            throw TypeError(".wm5.protobuf.RegisterSystemStatsRequest.DriveStats.ghostSelection: array expected");
                        message.ghostSelection = [];
                        for (let i = 0; i < object.ghostSelection.length; ++i)
                            message.ghostSelection[i] = object.ghostSelection[i] >>> 0;
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a DriveStats message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.DriveStats
                 * @static
                 * @param {wm5.protobuf.RegisterSystemStatsRequest.DriveStats} message DriveStats
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DriveStats.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.arrays || options.defaults) {
                        object.operation = [];
                        object.story = [];
                        object.versus = [];
                        object.ghost = [];
                        object.timeAttack = [];
                        object.event = [];
                        object.ghostSelection = [];
                    }
                    if (message.operation && message.operation.length) {
                        object.operation = [];
                        for (let j = 0; j < message.operation.length; ++j)
                            object.operation[j] = message.operation[j];
                    }
                    if (message.story && message.story.length) {
                        object.story = [];
                        for (let j = 0; j < message.story.length; ++j)
                            object.story[j] = message.story[j];
                    }
                    if (message.versus && message.versus.length) {
                        object.versus = [];
                        for (let j = 0; j < message.versus.length; ++j)
                            object.versus[j] = message.versus[j];
                    }
                    if (message.ghost && message.ghost.length) {
                        object.ghost = [];
                        for (let j = 0; j < message.ghost.length; ++j)
                            object.ghost[j] = message.ghost[j];
                    }
                    if (message.timeAttack && message.timeAttack.length) {
                        object.timeAttack = [];
                        for (let j = 0; j < message.timeAttack.length; ++j)
                            object.timeAttack[j] = message.timeAttack[j];
                    }
                    if (message.event && message.event.length) {
                        object.event = [];
                        for (let j = 0; j < message.event.length; ++j)
                            object.event[j] = message.event[j];
                    }
                    if (message.ghostSelection && message.ghostSelection.length) {
                        object.ghostSelection = [];
                        for (let j = 0; j < message.ghostSelection.length; ++j)
                            object.ghostSelection[j] = message.ghostSelection[j];
                    }
                    return object;
                };

                /**
                 * Converts this DriveStats to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.DriveStats
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DriveStats.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for DriveStats
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.DriveStats
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DriveStats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.RegisterSystemStatsRequest.DriveStats";
                };

                return DriveStats;
            })();

            RegisterSystemStatsRequest.TerminalStats = (function() {

                /**
                 * Properties of a TerminalStats.
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest
                 * @interface ITerminalStats
                 * @property {Array.<number>|null} [operation] TerminalStats operation
                 */

                /**
                 * Constructs a new TerminalStats.
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest
                 * @classdesc Represents a TerminalStats.
                 * @implements ITerminalStats
                 * @constructor
                 * @param {wm5.protobuf.RegisterSystemStatsRequest.ITerminalStats=} [properties] Properties to set
                 */
                function TerminalStats(properties) {
                    this.operation = [];
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * TerminalStats operation.
                 * @member {Array.<number>} operation
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.TerminalStats
                 * @instance
                 */
                TerminalStats.prototype.operation = $util.emptyArray;

                /**
                 * Creates a new TerminalStats instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.TerminalStats
                 * @static
                 * @param {wm5.protobuf.RegisterSystemStatsRequest.ITerminalStats=} [properties] Properties to set
                 * @returns {wm5.protobuf.RegisterSystemStatsRequest.TerminalStats} TerminalStats instance
                 */
                TerminalStats.create = function create(properties) {
                    return new TerminalStats(properties);
                };

                /**
                 * Encodes the specified TerminalStats message. Does not implicitly {@link wm5.protobuf.RegisterSystemStatsRequest.TerminalStats.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.TerminalStats
                 * @static
                 * @param {wm5.protobuf.RegisterSystemStatsRequest.ITerminalStats} message TerminalStats message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TerminalStats.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operation != null && message.operation.length) {
                        writer.uint32(/* id 1, wireType 2 =*/10).fork();
                        for (let i = 0; i < message.operation.length; ++i)
                            writer.uint32(message.operation[i]);
                        writer.ldelim();
                    }
                    return writer;
                };

                /**
                 * Encodes the specified TerminalStats message, length delimited. Does not implicitly {@link wm5.protobuf.RegisterSystemStatsRequest.TerminalStats.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.TerminalStats
                 * @static
                 * @param {wm5.protobuf.RegisterSystemStatsRequest.ITerminalStats} message TerminalStats message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TerminalStats.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a TerminalStats message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.TerminalStats
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.RegisterSystemStatsRequest.TerminalStats} TerminalStats
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TerminalStats.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.RegisterSystemStatsRequest.TerminalStats();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.operation && message.operation.length))
                                    message.operation = [];
                                if ((tag & 7) === 2) {
                                    let end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.operation.push(reader.uint32());
                                } else
                                    message.operation.push(reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a TerminalStats message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.TerminalStats
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.RegisterSystemStatsRequest.TerminalStats} TerminalStats
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TerminalStats.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a TerminalStats message.
                 * @function verify
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.TerminalStats
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                TerminalStats.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operation != null && message.hasOwnProperty("operation")) {
                        if (!Array.isArray(message.operation))
                            return "operation: array expected";
                        for (let i = 0; i < message.operation.length; ++i)
                            if (!$util.isInteger(message.operation[i]))
                                return "operation: integer[] expected";
                    }
                    return null;
                };

                /**
                 * Creates a TerminalStats message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.TerminalStats
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.RegisterSystemStatsRequest.TerminalStats} TerminalStats
                 */
                TerminalStats.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.RegisterSystemStatsRequest.TerminalStats)
                        return object;
                    let message = new $root.wm5.protobuf.RegisterSystemStatsRequest.TerminalStats();
                    if (object.operation) {
                        if (!Array.isArray(object.operation))
                            throw TypeError(".wm5.protobuf.RegisterSystemStatsRequest.TerminalStats.operation: array expected");
                        message.operation = [];
                        for (let i = 0; i < object.operation.length; ++i)
                            message.operation[i] = object.operation[i] >>> 0;
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a TerminalStats message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.TerminalStats
                 * @static
                 * @param {wm5.protobuf.RegisterSystemStatsRequest.TerminalStats} message TerminalStats
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                TerminalStats.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.arrays || options.defaults)
                        object.operation = [];
                    if (message.operation && message.operation.length) {
                        object.operation = [];
                        for (let j = 0; j < message.operation.length; ++j)
                            object.operation[j] = message.operation[j];
                    }
                    return object;
                };

                /**
                 * Converts this TerminalStats to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.TerminalStats
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                TerminalStats.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for TerminalStats
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.RegisterSystemStatsRequest.TerminalStats
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                TerminalStats.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.RegisterSystemStatsRequest.TerminalStats";
                };

                return TerminalStats;
            })();

            return RegisterSystemStatsRequest;
        })();

        protobuf.RegisterSystemStatsResponse = (function() {

            /**
             * Properties of a RegisterSystemStatsResponse.
             * @memberof wm5.protobuf
             * @interface IRegisterSystemStatsResponse
             * @property {wm5.protobuf.ErrorCode} error RegisterSystemStatsResponse error
             */

            /**
             * Constructs a new RegisterSystemStatsResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a RegisterSystemStatsResponse.
             * @implements IRegisterSystemStatsResponse
             * @constructor
             * @param {wm5.protobuf.IRegisterSystemStatsResponse=} [properties] Properties to set
             */
            function RegisterSystemStatsResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * RegisterSystemStatsResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.RegisterSystemStatsResponse
             * @instance
             */
            RegisterSystemStatsResponse.prototype.error = 0;

            /**
             * Creates a new RegisterSystemStatsResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.RegisterSystemStatsResponse
             * @static
             * @param {wm5.protobuf.IRegisterSystemStatsResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.RegisterSystemStatsResponse} RegisterSystemStatsResponse instance
             */
            RegisterSystemStatsResponse.create = function create(properties) {
                return new RegisterSystemStatsResponse(properties);
            };

            /**
             * Encodes the specified RegisterSystemStatsResponse message. Does not implicitly {@link wm5.protobuf.RegisterSystemStatsResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.RegisterSystemStatsResponse
             * @static
             * @param {wm5.protobuf.IRegisterSystemStatsResponse} message RegisterSystemStatsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RegisterSystemStatsResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified RegisterSystemStatsResponse message, length delimited. Does not implicitly {@link wm5.protobuf.RegisterSystemStatsResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.RegisterSystemStatsResponse
             * @static
             * @param {wm5.protobuf.IRegisterSystemStatsResponse} message RegisterSystemStatsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RegisterSystemStatsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RegisterSystemStatsResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.RegisterSystemStatsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.RegisterSystemStatsResponse} RegisterSystemStatsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RegisterSystemStatsResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.RegisterSystemStatsResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a RegisterSystemStatsResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.RegisterSystemStatsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.RegisterSystemStatsResponse} RegisterSystemStatsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RegisterSystemStatsResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RegisterSystemStatsResponse message.
             * @function verify
             * @memberof wm5.protobuf.RegisterSystemStatsResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RegisterSystemStatsResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a RegisterSystemStatsResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.RegisterSystemStatsResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.RegisterSystemStatsResponse} RegisterSystemStatsResponse
             */
            RegisterSystemStatsResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.RegisterSystemStatsResponse)
                    return object;
                let message = new $root.wm5.protobuf.RegisterSystemStatsResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a RegisterSystemStatsResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.RegisterSystemStatsResponse
             * @static
             * @param {wm5.protobuf.RegisterSystemStatsResponse} message RegisterSystemStatsResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RegisterSystemStatsResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this RegisterSystemStatsResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.RegisterSystemStatsResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RegisterSystemStatsResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for RegisterSystemStatsResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.RegisterSystemStatsResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RegisterSystemStatsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.RegisterSystemStatsResponse";
            };

            return RegisterSystemStatsResponse;
        })();

        protobuf.RegisterGhostTrailRequest = (function() {

            /**
             * Properties of a RegisterGhostTrailRequest.
             * @memberof wm5.protobuf
             * @interface IRegisterGhostTrailRequest
             * @property {number|Long} ghostSessionId RegisterGhostTrailRequest ghostSessionId
             * @property {wm5.protobuf.IGhostCar} ghost RegisterGhostTrailRequest ghost
             * @property {Uint8Array} trail RegisterGhostTrailRequest trail
             */

            /**
             * Constructs a new RegisterGhostTrailRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a RegisterGhostTrailRequest.
             * @implements IRegisterGhostTrailRequest
             * @constructor
             * @param {wm5.protobuf.IRegisterGhostTrailRequest=} [properties] Properties to set
             */
            function RegisterGhostTrailRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * RegisterGhostTrailRequest ghostSessionId.
             * @member {number|Long} ghostSessionId
             * @memberof wm5.protobuf.RegisterGhostTrailRequest
             * @instance
             */
            RegisterGhostTrailRequest.prototype.ghostSessionId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

            /**
             * RegisterGhostTrailRequest ghost.
             * @member {wm5.protobuf.IGhostCar} ghost
             * @memberof wm5.protobuf.RegisterGhostTrailRequest
             * @instance
             */
            RegisterGhostTrailRequest.prototype.ghost = null;

            /**
             * RegisterGhostTrailRequest trail.
             * @member {Uint8Array} trail
             * @memberof wm5.protobuf.RegisterGhostTrailRequest
             * @instance
             */
            RegisterGhostTrailRequest.prototype.trail = $util.newBuffer([]);

            /**
             * Creates a new RegisterGhostTrailRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.RegisterGhostTrailRequest
             * @static
             * @param {wm5.protobuf.IRegisterGhostTrailRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.RegisterGhostTrailRequest} RegisterGhostTrailRequest instance
             */
            RegisterGhostTrailRequest.create = function create(properties) {
                return new RegisterGhostTrailRequest(properties);
            };

            /**
             * Encodes the specified RegisterGhostTrailRequest message. Does not implicitly {@link wm5.protobuf.RegisterGhostTrailRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.RegisterGhostTrailRequest
             * @static
             * @param {wm5.protobuf.IRegisterGhostTrailRequest} message RegisterGhostTrailRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RegisterGhostTrailRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.ghostSessionId);
                $root.wm5.protobuf.GhostCar.encode(message.ghost, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.trail);
                return writer;
            };

            /**
             * Encodes the specified RegisterGhostTrailRequest message, length delimited. Does not implicitly {@link wm5.protobuf.RegisterGhostTrailRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.RegisterGhostTrailRequest
             * @static
             * @param {wm5.protobuf.IRegisterGhostTrailRequest} message RegisterGhostTrailRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RegisterGhostTrailRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RegisterGhostTrailRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.RegisterGhostTrailRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.RegisterGhostTrailRequest} RegisterGhostTrailRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RegisterGhostTrailRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.RegisterGhostTrailRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.ghostSessionId = reader.uint64();
                            break;
                        }
                    case 2: {
                            message.ghost = $root.wm5.protobuf.GhostCar.decode(reader, reader.uint32());
                            break;
                        }
                    case 3: {
                            message.trail = reader.bytes();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("ghostSessionId"))
                    throw $util.ProtocolError("missing required 'ghostSessionId'", { instance: message });
                if (!message.hasOwnProperty("ghost"))
                    throw $util.ProtocolError("missing required 'ghost'", { instance: message });
                if (!message.hasOwnProperty("trail"))
                    throw $util.ProtocolError("missing required 'trail'", { instance: message });
                return message;
            };

            /**
             * Decodes a RegisterGhostTrailRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.RegisterGhostTrailRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.RegisterGhostTrailRequest} RegisterGhostTrailRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RegisterGhostTrailRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RegisterGhostTrailRequest message.
             * @function verify
             * @memberof wm5.protobuf.RegisterGhostTrailRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RegisterGhostTrailRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.ghostSessionId) && !(message.ghostSessionId && $util.isInteger(message.ghostSessionId.low) && $util.isInteger(message.ghostSessionId.high)))
                    return "ghostSessionId: integer|Long expected";
                {
                    let error = $root.wm5.protobuf.GhostCar.verify(message.ghost);
                    if (error)
                        return "ghost." + error;
                }
                if (!(message.trail && typeof message.trail.length === "number" || $util.isString(message.trail)))
                    return "trail: buffer expected";
                return null;
            };

            /**
             * Creates a RegisterGhostTrailRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.RegisterGhostTrailRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.RegisterGhostTrailRequest} RegisterGhostTrailRequest
             */
            RegisterGhostTrailRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.RegisterGhostTrailRequest)
                    return object;
                let message = new $root.wm5.protobuf.RegisterGhostTrailRequest();
                if (object.ghostSessionId != null)
                    if ($util.Long)
                        (message.ghostSessionId = $util.Long.fromValue(object.ghostSessionId)).unsigned = true;
                    else if (typeof object.ghostSessionId === "string")
                        message.ghostSessionId = parseInt(object.ghostSessionId, 10);
                    else if (typeof object.ghostSessionId === "number")
                        message.ghostSessionId = object.ghostSessionId;
                    else if (typeof object.ghostSessionId === "object")
                        message.ghostSessionId = new $util.LongBits(object.ghostSessionId.low >>> 0, object.ghostSessionId.high >>> 0).toNumber(true);
                if (object.ghost != null) {
                    if (typeof object.ghost !== "object")
                        throw TypeError(".wm5.protobuf.RegisterGhostTrailRequest.ghost: object expected");
                    message.ghost = $root.wm5.protobuf.GhostCar.fromObject(object.ghost);
                }
                if (object.trail != null)
                    if (typeof object.trail === "string")
                        $util.base64.decode(object.trail, message.trail = $util.newBuffer($util.base64.length(object.trail)), 0);
                    else if (object.trail.length >= 0)
                        message.trail = object.trail;
                return message;
            };

            /**
             * Creates a plain object from a RegisterGhostTrailRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.RegisterGhostTrailRequest
             * @static
             * @param {wm5.protobuf.RegisterGhostTrailRequest} message RegisterGhostTrailRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RegisterGhostTrailRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, true);
                        object.ghostSessionId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.ghostSessionId = options.longs === String ? "0" : 0;
                    object.ghost = null;
                    if (options.bytes === String)
                        object.trail = "";
                    else {
                        object.trail = [];
                        if (options.bytes !== Array)
                            object.trail = $util.newBuffer(object.trail);
                    }
                }
                if (message.ghostSessionId != null && message.hasOwnProperty("ghostSessionId"))
                    if (typeof message.ghostSessionId === "number")
                        object.ghostSessionId = options.longs === String ? String(message.ghostSessionId) : message.ghostSessionId;
                    else
                        object.ghostSessionId = options.longs === String ? $util.Long.prototype.toString.call(message.ghostSessionId) : options.longs === Number ? new $util.LongBits(message.ghostSessionId.low >>> 0, message.ghostSessionId.high >>> 0).toNumber(true) : message.ghostSessionId;
                if (message.ghost != null && message.hasOwnProperty("ghost"))
                    object.ghost = $root.wm5.protobuf.GhostCar.toObject(message.ghost, options);
                if (message.trail != null && message.hasOwnProperty("trail"))
                    object.trail = options.bytes === String ? $util.base64.encode(message.trail, 0, message.trail.length) : options.bytes === Array ? Array.prototype.slice.call(message.trail) : message.trail;
                return object;
            };

            /**
             * Converts this RegisterGhostTrailRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.RegisterGhostTrailRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RegisterGhostTrailRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for RegisterGhostTrailRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.RegisterGhostTrailRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RegisterGhostTrailRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.RegisterGhostTrailRequest";
            };

            return RegisterGhostTrailRequest;
        })();

        protobuf.RegisterGhostTrailResponse = (function() {

            /**
             * Properties of a RegisterGhostTrailResponse.
             * @memberof wm5.protobuf
             * @interface IRegisterGhostTrailResponse
             * @property {wm5.protobuf.ErrorCode} error RegisterGhostTrailResponse error
             */

            /**
             * Constructs a new RegisterGhostTrailResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a RegisterGhostTrailResponse.
             * @implements IRegisterGhostTrailResponse
             * @constructor
             * @param {wm5.protobuf.IRegisterGhostTrailResponse=} [properties] Properties to set
             */
            function RegisterGhostTrailResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * RegisterGhostTrailResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.RegisterGhostTrailResponse
             * @instance
             */
            RegisterGhostTrailResponse.prototype.error = 0;

            /**
             * Creates a new RegisterGhostTrailResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.RegisterGhostTrailResponse
             * @static
             * @param {wm5.protobuf.IRegisterGhostTrailResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.RegisterGhostTrailResponse} RegisterGhostTrailResponse instance
             */
            RegisterGhostTrailResponse.create = function create(properties) {
                return new RegisterGhostTrailResponse(properties);
            };

            /**
             * Encodes the specified RegisterGhostTrailResponse message. Does not implicitly {@link wm5.protobuf.RegisterGhostTrailResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.RegisterGhostTrailResponse
             * @static
             * @param {wm5.protobuf.IRegisterGhostTrailResponse} message RegisterGhostTrailResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RegisterGhostTrailResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified RegisterGhostTrailResponse message, length delimited. Does not implicitly {@link wm5.protobuf.RegisterGhostTrailResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.RegisterGhostTrailResponse
             * @static
             * @param {wm5.protobuf.IRegisterGhostTrailResponse} message RegisterGhostTrailResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RegisterGhostTrailResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RegisterGhostTrailResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.RegisterGhostTrailResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.RegisterGhostTrailResponse} RegisterGhostTrailResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RegisterGhostTrailResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.RegisterGhostTrailResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a RegisterGhostTrailResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.RegisterGhostTrailResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.RegisterGhostTrailResponse} RegisterGhostTrailResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RegisterGhostTrailResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RegisterGhostTrailResponse message.
             * @function verify
             * @memberof wm5.protobuf.RegisterGhostTrailResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RegisterGhostTrailResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a RegisterGhostTrailResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.RegisterGhostTrailResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.RegisterGhostTrailResponse} RegisterGhostTrailResponse
             */
            RegisterGhostTrailResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.RegisterGhostTrailResponse)
                    return object;
                let message = new $root.wm5.protobuf.RegisterGhostTrailResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a RegisterGhostTrailResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.RegisterGhostTrailResponse
             * @static
             * @param {wm5.protobuf.RegisterGhostTrailResponse} message RegisterGhostTrailResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RegisterGhostTrailResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this RegisterGhostTrailResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.RegisterGhostTrailResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RegisterGhostTrailResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for RegisterGhostTrailResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.RegisterGhostTrailResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RegisterGhostTrailResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.RegisterGhostTrailResponse";
            };

            return RegisterGhostTrailResponse;
        })();

        protobuf.LoadUserRequest = (function() {

            /**
             * Properties of a LoadUserRequest.
             * @memberof wm5.protobuf
             * @interface ILoadUserRequest
             * @property {string|null} [cardChipId] LoadUserRequest cardChipId
             * @property {string|null} [accessCode] LoadUserRequest accessCode
             * @property {number|null} [cardTypeCode] LoadUserRequest cardTypeCode
             * @property {number|null} [cardRegionCode] LoadUserRequest cardRegionCode
             * @property {wm5.protobuf.DeviceType|null} [device] LoadUserRequest device
             * @property {number|null} [userId] LoadUserRequest userId
             * @property {number} romVersion LoadUserRequest romVersion
             * @property {number} maxCars LoadUserRequest maxCars
             * @property {boolean|null} [createUser] LoadUserRequest createUser
             * @property {boolean|null} [requireBnidUser] LoadUserRequest requireBnidUser
             */

            /**
             * Constructs a new LoadUserRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadUserRequest.
             * @implements ILoadUserRequest
             * @constructor
             * @param {wm5.protobuf.ILoadUserRequest=} [properties] Properties to set
             */
            function LoadUserRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadUserRequest cardChipId.
             * @member {string} cardChipId
             * @memberof wm5.protobuf.LoadUserRequest
             * @instance
             */
            LoadUserRequest.prototype.cardChipId = "";

            /**
             * LoadUserRequest accessCode.
             * @member {string} accessCode
             * @memberof wm5.protobuf.LoadUserRequest
             * @instance
             */
            LoadUserRequest.prototype.accessCode = "";

            /**
             * LoadUserRequest cardTypeCode.
             * @member {number} cardTypeCode
             * @memberof wm5.protobuf.LoadUserRequest
             * @instance
             */
            LoadUserRequest.prototype.cardTypeCode = 0;

            /**
             * LoadUserRequest cardRegionCode.
             * @member {number} cardRegionCode
             * @memberof wm5.protobuf.LoadUserRequest
             * @instance
             */
            LoadUserRequest.prototype.cardRegionCode = 0;

            /**
             * LoadUserRequest device.
             * @member {wm5.protobuf.DeviceType} device
             * @memberof wm5.protobuf.LoadUserRequest
             * @instance
             */
            LoadUserRequest.prototype.device = 0;

            /**
             * LoadUserRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.LoadUserRequest
             * @instance
             */
            LoadUserRequest.prototype.userId = 0;

            /**
             * LoadUserRequest romVersion.
             * @member {number} romVersion
             * @memberof wm5.protobuf.LoadUserRequest
             * @instance
             */
            LoadUserRequest.prototype.romVersion = 0;

            /**
             * LoadUserRequest maxCars.
             * @member {number} maxCars
             * @memberof wm5.protobuf.LoadUserRequest
             * @instance
             */
            LoadUserRequest.prototype.maxCars = 0;

            /**
             * LoadUserRequest createUser.
             * @member {boolean} createUser
             * @memberof wm5.protobuf.LoadUserRequest
             * @instance
             */
            LoadUserRequest.prototype.createUser = false;

            /**
             * LoadUserRequest requireBnidUser.
             * @member {boolean} requireBnidUser
             * @memberof wm5.protobuf.LoadUserRequest
             * @instance
             */
            LoadUserRequest.prototype.requireBnidUser = false;

            /**
             * Creates a new LoadUserRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadUserRequest
             * @static
             * @param {wm5.protobuf.ILoadUserRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadUserRequest} LoadUserRequest instance
             */
            LoadUserRequest.create = function create(properties) {
                return new LoadUserRequest(properties);
            };

            /**
             * Encodes the specified LoadUserRequest message. Does not implicitly {@link wm5.protobuf.LoadUserRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadUserRequest
             * @static
             * @param {wm5.protobuf.ILoadUserRequest} message LoadUserRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadUserRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.cardChipId != null && Object.hasOwnProperty.call(message, "cardChipId"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.cardChipId);
                if (message.accessCode != null && Object.hasOwnProperty.call(message, "accessCode"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.accessCode);
                if (message.cardTypeCode != null && Object.hasOwnProperty.call(message, "cardTypeCode"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.cardTypeCode);
                if (message.cardRegionCode != null && Object.hasOwnProperty.call(message, "cardRegionCode"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.cardRegionCode);
                if (message.device != null && Object.hasOwnProperty.call(message, "device"))
                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.device);
                if (message.userId != null && Object.hasOwnProperty.call(message, "userId"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.userId);
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.romVersion);
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.maxCars);
                if (message.createUser != null && Object.hasOwnProperty.call(message, "createUser"))
                    writer.uint32(/* id 9, wireType 0 =*/72).bool(message.createUser);
                if (message.requireBnidUser != null && Object.hasOwnProperty.call(message, "requireBnidUser"))
                    writer.uint32(/* id 10, wireType 0 =*/80).bool(message.requireBnidUser);
                return writer;
            };

            /**
             * Encodes the specified LoadUserRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadUserRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadUserRequest
             * @static
             * @param {wm5.protobuf.ILoadUserRequest} message LoadUserRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadUserRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadUserRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadUserRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadUserRequest} LoadUserRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadUserRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadUserRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.cardChipId = reader.string();
                            break;
                        }
                    case 2: {
                            message.accessCode = reader.string();
                            break;
                        }
                    case 3: {
                            message.cardTypeCode = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.cardRegionCode = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.device = reader.int32();
                            break;
                        }
                    case 6: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 7: {
                            message.romVersion = reader.uint32();
                            break;
                        }
                    case 8: {
                            message.maxCars = reader.uint32();
                            break;
                        }
                    case 9: {
                            message.createUser = reader.bool();
                            break;
                        }
                    case 10: {
                            message.requireBnidUser = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("romVersion"))
                    throw $util.ProtocolError("missing required 'romVersion'", { instance: message });
                if (!message.hasOwnProperty("maxCars"))
                    throw $util.ProtocolError("missing required 'maxCars'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadUserRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadUserRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadUserRequest} LoadUserRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadUserRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadUserRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadUserRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadUserRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.cardChipId != null && message.hasOwnProperty("cardChipId"))
                    if (!$util.isString(message.cardChipId))
                        return "cardChipId: string expected";
                if (message.accessCode != null && message.hasOwnProperty("accessCode"))
                    if (!$util.isString(message.accessCode))
                        return "accessCode: string expected";
                if (message.cardTypeCode != null && message.hasOwnProperty("cardTypeCode"))
                    if (!$util.isInteger(message.cardTypeCode))
                        return "cardTypeCode: integer expected";
                if (message.cardRegionCode != null && message.hasOwnProperty("cardRegionCode"))
                    if (!$util.isInteger(message.cardRegionCode))
                        return "cardRegionCode: integer expected";
                if (message.device != null && message.hasOwnProperty("device"))
                    switch (message.device) {
                    default:
                        return "device: enum value expected";
                    case 0:
                    case 1:
                        break;
                    }
                if (message.userId != null && message.hasOwnProperty("userId"))
                    if (!$util.isInteger(message.userId))
                        return "userId: integer expected";
                if (!$util.isInteger(message.romVersion))
                    return "romVersion: integer expected";
                if (!$util.isInteger(message.maxCars))
                    return "maxCars: integer expected";
                if (message.createUser != null && message.hasOwnProperty("createUser"))
                    if (typeof message.createUser !== "boolean")
                        return "createUser: boolean expected";
                if (message.requireBnidUser != null && message.hasOwnProperty("requireBnidUser"))
                    if (typeof message.requireBnidUser !== "boolean")
                        return "requireBnidUser: boolean expected";
                return null;
            };

            /**
             * Creates a LoadUserRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadUserRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadUserRequest} LoadUserRequest
             */
            LoadUserRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadUserRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadUserRequest();
                if (object.cardChipId != null)
                    message.cardChipId = String(object.cardChipId);
                if (object.accessCode != null)
                    message.accessCode = String(object.accessCode);
                if (object.cardTypeCode != null)
                    message.cardTypeCode = object.cardTypeCode >>> 0;
                if (object.cardRegionCode != null)
                    message.cardRegionCode = object.cardRegionCode >>> 0;
                switch (object.device) {
                default:
                    if (typeof object.device === "number") {
                        message.device = object.device;
                        break;
                    }
                    break;
                case "DEVICE_CARD":
                case 0:
                    message.device = 0;
                    break;
                case "DEVICE_PHONE":
                case 1:
                    message.device = 1;
                    break;
                }
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.romVersion != null)
                    message.romVersion = object.romVersion >>> 0;
                if (object.maxCars != null)
                    message.maxCars = object.maxCars >>> 0;
                if (object.createUser != null)
                    message.createUser = Boolean(object.createUser);
                if (object.requireBnidUser != null)
                    message.requireBnidUser = Boolean(object.requireBnidUser);
                return message;
            };

            /**
             * Creates a plain object from a LoadUserRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadUserRequest
             * @static
             * @param {wm5.protobuf.LoadUserRequest} message LoadUserRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadUserRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.cardChipId = "";
                    object.accessCode = "";
                    object.cardTypeCode = 0;
                    object.cardRegionCode = 0;
                    object.device = options.enums === String ? "DEVICE_CARD" : 0;
                    object.userId = 0;
                    object.romVersion = 0;
                    object.maxCars = 0;
                    object.createUser = false;
                    object.requireBnidUser = false;
                }
                if (message.cardChipId != null && message.hasOwnProperty("cardChipId"))
                    object.cardChipId = message.cardChipId;
                if (message.accessCode != null && message.hasOwnProperty("accessCode"))
                    object.accessCode = message.accessCode;
                if (message.cardTypeCode != null && message.hasOwnProperty("cardTypeCode"))
                    object.cardTypeCode = message.cardTypeCode;
                if (message.cardRegionCode != null && message.hasOwnProperty("cardRegionCode"))
                    object.cardRegionCode = message.cardRegionCode;
                if (message.device != null && message.hasOwnProperty("device"))
                    object.device = options.enums === String ? $root.wm5.protobuf.DeviceType[message.device] === undefined ? message.device : $root.wm5.protobuf.DeviceType[message.device] : message.device;
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.romVersion != null && message.hasOwnProperty("romVersion"))
                    object.romVersion = message.romVersion;
                if (message.maxCars != null && message.hasOwnProperty("maxCars"))
                    object.maxCars = message.maxCars;
                if (message.createUser != null && message.hasOwnProperty("createUser"))
                    object.createUser = message.createUser;
                if (message.requireBnidUser != null && message.hasOwnProperty("requireBnidUser"))
                    object.requireBnidUser = message.requireBnidUser;
                return object;
            };

            /**
             * Converts this LoadUserRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadUserRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadUserRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadUserRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadUserRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadUserRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadUserRequest";
            };

            return LoadUserRequest;
        })();

        protobuf.LoadUserResponse = (function() {

            /**
             * Properties of a LoadUserResponse.
             * @memberof wm5.protobuf
             * @interface ILoadUserResponse
             * @property {wm5.protobuf.ErrorCode} error LoadUserResponse error
             * @property {number|null} [unlockAt] LoadUserResponse unlockAt
             * @property {string|null} [accessCode] LoadUserResponse accessCode
             * @property {number|null} [banapassportAmId] LoadUserResponse banapassportAmId
             * @property {string|null} [personId] LoadUserResponse personId
             * @property {number|null} [bnidLevel] LoadUserResponse bnidLevel
             * @property {number|null} [userId] LoadUserResponse userId
             * @property {number} maxiGold LoadUserResponse maxiGold
             * @property {number} totalMaxiGold LoadUserResponse totalMaxiGold
             * @property {number} numOfOwnedCars LoadUserResponse numOfOwnedCars
             * @property {Array.<wm5.protobuf.ICar>|null} [cars] LoadUserResponse cars
             * @property {Array.<wm5.protobuf.LoadUserResponse.ICarState>|null} [carStates] LoadUserResponse carStates
             * @property {wm5.protobuf.CarCreationCoupon} carCoupon LoadUserResponse carCoupon
             * @property {number} hp600Count LoadUserResponse hp600Count
             * @property {number} tutorials LoadUserResponse tutorials
             * @property {wm5.protobuf.CarCampaignUserState|null} [carCampaignUserState] LoadUserResponse carCampaignUserState
             * @property {wm5.protobuf.GhostCompetitionParticipantState|null} [competitionUserState] LoadUserResponse competitionUserState
             * @property {number|null} [teamId] LoadUserResponse teamId
             * @property {string|null} [teamName] LoadUserResponse teamName
             * @property {number|null} [teamStickerFont] LoadUserResponse teamStickerFont
             * @property {wm5.protobuf.WebsiteMembership} membership LoadUserResponse membership
             * @property {wm5.protobuf.TransferState} transferState LoadUserResponse transferState
             * @property {string|null} [sessionId] LoadUserResponse sessionId
             * @property {boolean|null} [banacoinAvailable] LoadUserResponse banacoinAvailable
             * @property {number|null} [totalVsStarCount] LoadUserResponse totalVsStarCount
             * @property {number|null} [totalVsMedalPoint] LoadUserResponse totalVsMedalPoint
             * @property {wm5.protobuf.ICopiedCar|null} [copiedCar] LoadUserResponse copiedCar
             * @property {boolean|null} [wasCreatedToday] LoadUserResponse wasCreatedToday
             * @property {boolean|null} [participatedInInviteFriendCampaign] LoadUserResponse participatedInInviteFriendCampaign
             */

            /**
             * Constructs a new LoadUserResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadUserResponse.
             * @implements ILoadUserResponse
             * @constructor
             * @param {wm5.protobuf.ILoadUserResponse=} [properties] Properties to set
             */
            function LoadUserResponse(properties) {
                this.cars = [];
                this.carStates = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadUserResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.error = 0;

            /**
             * LoadUserResponse unlockAt.
             * @member {number} unlockAt
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.unlockAt = 0;

            /**
             * LoadUserResponse accessCode.
             * @member {string} accessCode
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.accessCode = "";

            /**
             * LoadUserResponse banapassportAmId.
             * @member {number} banapassportAmId
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.banapassportAmId = 0;

            /**
             * LoadUserResponse personId.
             * @member {string} personId
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.personId = "";

            /**
             * LoadUserResponse bnidLevel.
             * @member {number} bnidLevel
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.bnidLevel = 0;

            /**
             * LoadUserResponse userId.
             * @member {number} userId
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.userId = 0;

            /**
             * LoadUserResponse maxiGold.
             * @member {number} maxiGold
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.maxiGold = 0;

            /**
             * LoadUserResponse totalMaxiGold.
             * @member {number} totalMaxiGold
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.totalMaxiGold = 0;

            /**
             * LoadUserResponse numOfOwnedCars.
             * @member {number} numOfOwnedCars
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.numOfOwnedCars = 0;

            /**
             * LoadUserResponse cars.
             * @member {Array.<wm5.protobuf.ICar>} cars
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.cars = $util.emptyArray;

            /**
             * LoadUserResponse carStates.
             * @member {Array.<wm5.protobuf.LoadUserResponse.ICarState>} carStates
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.carStates = $util.emptyArray;

            /**
             * LoadUserResponse carCoupon.
             * @member {wm5.protobuf.CarCreationCoupon} carCoupon
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.carCoupon = 0;

            /**
             * LoadUserResponse hp600Count.
             * @member {number} hp600Count
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.hp600Count = 0;

            /**
             * LoadUserResponse tutorials.
             * @member {number} tutorials
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.tutorials = 0;

            /**
             * LoadUserResponse carCampaignUserState.
             * @member {wm5.protobuf.CarCampaignUserState} carCampaignUserState
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.carCampaignUserState = 1;

            /**
             * LoadUserResponse competitionUserState.
             * @member {wm5.protobuf.GhostCompetitionParticipantState} competitionUserState
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.competitionUserState = 1;

            /**
             * LoadUserResponse teamId.
             * @member {number} teamId
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.teamId = 0;

            /**
             * LoadUserResponse teamName.
             * @member {string} teamName
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.teamName = "";

            /**
             * LoadUserResponse teamStickerFont.
             * @member {number} teamStickerFont
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.teamStickerFont = 0;

            /**
             * LoadUserResponse membership.
             * @member {wm5.protobuf.WebsiteMembership} membership
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.membership = 0;

            /**
             * LoadUserResponse transferState.
             * @member {wm5.protobuf.TransferState} transferState
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.transferState = 0;

            /**
             * LoadUserResponse sessionId.
             * @member {string} sessionId
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.sessionId = "";

            /**
             * LoadUserResponse banacoinAvailable.
             * @member {boolean} banacoinAvailable
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.banacoinAvailable = false;

            /**
             * LoadUserResponse totalVsStarCount.
             * @member {number} totalVsStarCount
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.totalVsStarCount = 0;

            /**
             * LoadUserResponse totalVsMedalPoint.
             * @member {number} totalVsMedalPoint
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.totalVsMedalPoint = 0;

            /**
             * LoadUserResponse copiedCar.
             * @member {wm5.protobuf.ICopiedCar|null|undefined} copiedCar
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.copiedCar = null;

            /**
             * LoadUserResponse wasCreatedToday.
             * @member {boolean} wasCreatedToday
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.wasCreatedToday = false;

            /**
             * LoadUserResponse participatedInInviteFriendCampaign.
             * @member {boolean} participatedInInviteFriendCampaign
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             */
            LoadUserResponse.prototype.participatedInInviteFriendCampaign = false;

            /**
             * Creates a new LoadUserResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadUserResponse
             * @static
             * @param {wm5.protobuf.ILoadUserResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadUserResponse} LoadUserResponse instance
             */
            LoadUserResponse.create = function create(properties) {
                return new LoadUserResponse(properties);
            };

            /**
             * Encodes the specified LoadUserResponse message. Does not implicitly {@link wm5.protobuf.LoadUserResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadUserResponse
             * @static
             * @param {wm5.protobuf.ILoadUserResponse} message LoadUserResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadUserResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.unlockAt != null && Object.hasOwnProperty.call(message, "unlockAt"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.unlockAt);
                if (message.accessCode != null && Object.hasOwnProperty.call(message, "accessCode"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.accessCode);
                if (message.banapassportAmId != null && Object.hasOwnProperty.call(message, "banapassportAmId"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.banapassportAmId);
                if (message.personId != null && Object.hasOwnProperty.call(message, "personId"))
                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.personId);
                if (message.userId != null && Object.hasOwnProperty.call(message, "userId"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.userId);
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.maxiGold);
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.totalMaxiGold);
                if (message.bnidLevel != null && Object.hasOwnProperty.call(message, "bnidLevel"))
                    writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.bnidLevel);
                writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.numOfOwnedCars);
                if (message.cars != null && message.cars.length)
                    for (let i = 0; i < message.cars.length; ++i)
                        $root.wm5.protobuf.Car.encode(message.cars[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                if (message.carStates != null && message.carStates.length)
                    for (let i = 0; i < message.carStates.length; ++i)
                        $root.wm5.protobuf.LoadUserResponse.CarState.encode(message.carStates[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.carCoupon);
                writer.uint32(/* id 14, wireType 0 =*/112).uint32(message.hp600Count);
                writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.tutorials);
                if (message.carCampaignUserState != null && Object.hasOwnProperty.call(message, "carCampaignUserState"))
                    writer.uint32(/* id 16, wireType 0 =*/128).int32(message.carCampaignUserState);
                if (message.competitionUserState != null && Object.hasOwnProperty.call(message, "competitionUserState"))
                    writer.uint32(/* id 17, wireType 0 =*/136).int32(message.competitionUserState);
                if (message.teamId != null && Object.hasOwnProperty.call(message, "teamId"))
                    writer.uint32(/* id 18, wireType 0 =*/144).uint32(message.teamId);
                if (message.teamName != null && Object.hasOwnProperty.call(message, "teamName"))
                    writer.uint32(/* id 19, wireType 2 =*/154).string(message.teamName);
                if (message.teamStickerFont != null && Object.hasOwnProperty.call(message, "teamStickerFont"))
                    writer.uint32(/* id 20, wireType 0 =*/160).uint32(message.teamStickerFont);
                writer.uint32(/* id 21, wireType 0 =*/168).int32(message.membership);
                writer.uint32(/* id 22, wireType 0 =*/176).int32(message.transferState);
                if (message.sessionId != null && Object.hasOwnProperty.call(message, "sessionId"))
                    writer.uint32(/* id 23, wireType 2 =*/186).string(message.sessionId);
                if (message.banacoinAvailable != null && Object.hasOwnProperty.call(message, "banacoinAvailable"))
                    writer.uint32(/* id 24, wireType 0 =*/192).bool(message.banacoinAvailable);
                if (message.totalVsStarCount != null && Object.hasOwnProperty.call(message, "totalVsStarCount"))
                    writer.uint32(/* id 25, wireType 0 =*/200).uint32(message.totalVsStarCount);
                if (message.totalVsMedalPoint != null && Object.hasOwnProperty.call(message, "totalVsMedalPoint"))
                    writer.uint32(/* id 26, wireType 0 =*/208).uint32(message.totalVsMedalPoint);
                if (message.copiedCar != null && Object.hasOwnProperty.call(message, "copiedCar"))
                    $root.wm5.protobuf.CopiedCar.encode(message.copiedCar, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                if (message.wasCreatedToday != null && Object.hasOwnProperty.call(message, "wasCreatedToday"))
                    writer.uint32(/* id 28, wireType 0 =*/224).bool(message.wasCreatedToday);
                if (message.participatedInInviteFriendCampaign != null && Object.hasOwnProperty.call(message, "participatedInInviteFriendCampaign"))
                    writer.uint32(/* id 29, wireType 0 =*/232).bool(message.participatedInInviteFriendCampaign);
                return writer;
            };

            /**
             * Encodes the specified LoadUserResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadUserResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadUserResponse
             * @static
             * @param {wm5.protobuf.ILoadUserResponse} message LoadUserResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadUserResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadUserResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadUserResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadUserResponse} LoadUserResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadUserResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadUserResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.unlockAt = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.accessCode = reader.string();
                            break;
                        }
                    case 4: {
                            message.banapassportAmId = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.personId = reader.string();
                            break;
                        }
                    case 9: {
                            message.bnidLevel = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 7: {
                            message.maxiGold = reader.uint32();
                            break;
                        }
                    case 8: {
                            message.totalMaxiGold = reader.uint32();
                            break;
                        }
                    case 10: {
                            message.numOfOwnedCars = reader.uint32();
                            break;
                        }
                    case 11: {
                            if (!(message.cars && message.cars.length))
                                message.cars = [];
                            message.cars.push($root.wm5.protobuf.Car.decode(reader, reader.uint32()));
                            break;
                        }
                    case 12: {
                            if (!(message.carStates && message.carStates.length))
                                message.carStates = [];
                            message.carStates.push($root.wm5.protobuf.LoadUserResponse.CarState.decode(reader, reader.uint32()));
                            break;
                        }
                    case 13: {
                            message.carCoupon = reader.int32();
                            break;
                        }
                    case 14: {
                            message.hp600Count = reader.uint32();
                            break;
                        }
                    case 15: {
                            message.tutorials = reader.uint32();
                            break;
                        }
                    case 16: {
                            message.carCampaignUserState = reader.int32();
                            break;
                        }
                    case 17: {
                            message.competitionUserState = reader.int32();
                            break;
                        }
                    case 18: {
                            message.teamId = reader.uint32();
                            break;
                        }
                    case 19: {
                            message.teamName = reader.string();
                            break;
                        }
                    case 20: {
                            message.teamStickerFont = reader.uint32();
                            break;
                        }
                    case 21: {
                            message.membership = reader.int32();
                            break;
                        }
                    case 22: {
                            message.transferState = reader.int32();
                            break;
                        }
                    case 23: {
                            message.sessionId = reader.string();
                            break;
                        }
                    case 24: {
                            message.banacoinAvailable = reader.bool();
                            break;
                        }
                    case 25: {
                            message.totalVsStarCount = reader.uint32();
                            break;
                        }
                    case 26: {
                            message.totalVsMedalPoint = reader.uint32();
                            break;
                        }
                    case 27: {
                            message.copiedCar = $root.wm5.protobuf.CopiedCar.decode(reader, reader.uint32());
                            break;
                        }
                    case 28: {
                            message.wasCreatedToday = reader.bool();
                            break;
                        }
                    case 29: {
                            message.participatedInInviteFriendCampaign = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("maxiGold"))
                    throw $util.ProtocolError("missing required 'maxiGold'", { instance: message });
                if (!message.hasOwnProperty("totalMaxiGold"))
                    throw $util.ProtocolError("missing required 'totalMaxiGold'", { instance: message });
                if (!message.hasOwnProperty("numOfOwnedCars"))
                    throw $util.ProtocolError("missing required 'numOfOwnedCars'", { instance: message });
                if (!message.hasOwnProperty("carCoupon"))
                    throw $util.ProtocolError("missing required 'carCoupon'", { instance: message });
                if (!message.hasOwnProperty("hp600Count"))
                    throw $util.ProtocolError("missing required 'hp600Count'", { instance: message });
                if (!message.hasOwnProperty("tutorials"))
                    throw $util.ProtocolError("missing required 'tutorials'", { instance: message });
                if (!message.hasOwnProperty("membership"))
                    throw $util.ProtocolError("missing required 'membership'", { instance: message });
                if (!message.hasOwnProperty("transferState"))
                    throw $util.ProtocolError("missing required 'transferState'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadUserResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadUserResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadUserResponse} LoadUserResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadUserResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadUserResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadUserResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadUserResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.unlockAt != null && message.hasOwnProperty("unlockAt"))
                    if (!$util.isInteger(message.unlockAt))
                        return "unlockAt: integer expected";
                if (message.accessCode != null && message.hasOwnProperty("accessCode"))
                    if (!$util.isString(message.accessCode))
                        return "accessCode: string expected";
                if (message.banapassportAmId != null && message.hasOwnProperty("banapassportAmId"))
                    if (!$util.isInteger(message.banapassportAmId))
                        return "banapassportAmId: integer expected";
                if (message.personId != null && message.hasOwnProperty("personId"))
                    if (!$util.isString(message.personId))
                        return "personId: string expected";
                if (message.bnidLevel != null && message.hasOwnProperty("bnidLevel"))
                    if (!$util.isInteger(message.bnidLevel))
                        return "bnidLevel: integer expected";
                if (message.userId != null && message.hasOwnProperty("userId"))
                    if (!$util.isInteger(message.userId))
                        return "userId: integer expected";
                if (!$util.isInteger(message.maxiGold))
                    return "maxiGold: integer expected";
                if (!$util.isInteger(message.totalMaxiGold))
                    return "totalMaxiGold: integer expected";
                if (!$util.isInteger(message.numOfOwnedCars))
                    return "numOfOwnedCars: integer expected";
                if (message.cars != null && message.hasOwnProperty("cars")) {
                    if (!Array.isArray(message.cars))
                        return "cars: array expected";
                    for (let i = 0; i < message.cars.length; ++i) {
                        let error = $root.wm5.protobuf.Car.verify(message.cars[i]);
                        if (error)
                            return "cars." + error;
                    }
                }
                if (message.carStates != null && message.hasOwnProperty("carStates")) {
                    if (!Array.isArray(message.carStates))
                        return "carStates: array expected";
                    for (let i = 0; i < message.carStates.length; ++i) {
                        let error = $root.wm5.protobuf.LoadUserResponse.CarState.verify(message.carStates[i]);
                        if (error)
                            return "carStates." + error;
                    }
                }
                switch (message.carCoupon) {
                default:
                    return "carCoupon: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                    break;
                }
                if (!$util.isInteger(message.hp600Count))
                    return "hp600Count: integer expected";
                if (!$util.isInteger(message.tutorials))
                    return "tutorials: integer expected";
                if (message.carCampaignUserState != null && message.hasOwnProperty("carCampaignUserState"))
                    switch (message.carCampaignUserState) {
                    default:
                        return "carCampaignUserState: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                        break;
                    }
                if (message.competitionUserState != null && message.hasOwnProperty("competitionUserState"))
                    switch (message.competitionUserState) {
                    default:
                        return "competitionUserState: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    }
                if (message.teamId != null && message.hasOwnProperty("teamId"))
                    if (!$util.isInteger(message.teamId))
                        return "teamId: integer expected";
                if (message.teamName != null && message.hasOwnProperty("teamName"))
                    if (!$util.isString(message.teamName))
                        return "teamName: string expected";
                if (message.teamStickerFont != null && message.hasOwnProperty("teamStickerFont"))
                    if (!$util.isInteger(message.teamStickerFont))
                        return "teamStickerFont: integer expected";
                switch (message.membership) {
                default:
                    return "membership: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
                switch (message.transferState) {
                default:
                    return "transferState: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
                if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                    if (!$util.isString(message.sessionId))
                        return "sessionId: string expected";
                if (message.banacoinAvailable != null && message.hasOwnProperty("banacoinAvailable"))
                    if (typeof message.banacoinAvailable !== "boolean")
                        return "banacoinAvailable: boolean expected";
                if (message.totalVsStarCount != null && message.hasOwnProperty("totalVsStarCount"))
                    if (!$util.isInteger(message.totalVsStarCount))
                        return "totalVsStarCount: integer expected";
                if (message.totalVsMedalPoint != null && message.hasOwnProperty("totalVsMedalPoint"))
                    if (!$util.isInteger(message.totalVsMedalPoint))
                        return "totalVsMedalPoint: integer expected";
                if (message.copiedCar != null && message.hasOwnProperty("copiedCar")) {
                    let error = $root.wm5.protobuf.CopiedCar.verify(message.copiedCar);
                    if (error)
                        return "copiedCar." + error;
                }
                if (message.wasCreatedToday != null && message.hasOwnProperty("wasCreatedToday"))
                    if (typeof message.wasCreatedToday !== "boolean")
                        return "wasCreatedToday: boolean expected";
                if (message.participatedInInviteFriendCampaign != null && message.hasOwnProperty("participatedInInviteFriendCampaign"))
                    if (typeof message.participatedInInviteFriendCampaign !== "boolean")
                        return "participatedInInviteFriendCampaign: boolean expected";
                return null;
            };

            /**
             * Creates a LoadUserResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadUserResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadUserResponse} LoadUserResponse
             */
            LoadUserResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadUserResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadUserResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.unlockAt != null)
                    message.unlockAt = object.unlockAt >>> 0;
                if (object.accessCode != null)
                    message.accessCode = String(object.accessCode);
                if (object.banapassportAmId != null)
                    message.banapassportAmId = object.banapassportAmId >>> 0;
                if (object.personId != null)
                    message.personId = String(object.personId);
                if (object.bnidLevel != null)
                    message.bnidLevel = object.bnidLevel >>> 0;
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.maxiGold != null)
                    message.maxiGold = object.maxiGold >>> 0;
                if (object.totalMaxiGold != null)
                    message.totalMaxiGold = object.totalMaxiGold >>> 0;
                if (object.numOfOwnedCars != null)
                    message.numOfOwnedCars = object.numOfOwnedCars >>> 0;
                if (object.cars) {
                    if (!Array.isArray(object.cars))
                        throw TypeError(".wm5.protobuf.LoadUserResponse.cars: array expected");
                    message.cars = [];
                    for (let i = 0; i < object.cars.length; ++i) {
                        if (typeof object.cars[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadUserResponse.cars: object expected");
                        message.cars[i] = $root.wm5.protobuf.Car.fromObject(object.cars[i]);
                    }
                }
                if (object.carStates) {
                    if (!Array.isArray(object.carStates))
                        throw TypeError(".wm5.protobuf.LoadUserResponse.carStates: array expected");
                    message.carStates = [];
                    for (let i = 0; i < object.carStates.length; ++i) {
                        if (typeof object.carStates[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadUserResponse.carStates: object expected");
                        message.carStates[i] = $root.wm5.protobuf.LoadUserResponse.CarState.fromObject(object.carStates[i]);
                    }
                }
                switch (object.carCoupon) {
                default:
                    if (typeof object.carCoupon === "number") {
                        message.carCoupon = object.carCoupon;
                        break;
                    }
                    break;
                case "CAR_COUPON_NONE":
                case 0:
                    message.carCoupon = 0;
                    break;
                case "CAR_COUPON_HP600":
                case 1:
                    message.carCoupon = 1;
                    break;
                case "CAR_COUPON_BMW_M3_BLACK":
                case 2:
                    message.carCoupon = 2;
                    break;
                case "CAR_COUPON_2000GT_BLACK":
                case 3:
                    message.carCoupon = 3;
                    break;
                case "CAR_COUPON_CAMARO_SS_RS_BLACK":
                case 4:
                    message.carCoupon = 4;
                    break;
                case "CAR_COUPON_CORVETTE_ZR1_TAXI":
                case 5:
                    message.carCoupon = 5;
                    break;
                case "CAR_COUPON_CAMARO_SS_RS_TAXI":
                case 6:
                    message.carCoupon = 6;
                    break;
                case "CAR_COUPON_SLK_350_PACE_CAR":
                case 7:
                    message.carCoupon = 7;
                    break;
                case "CAR_COUPON_BMW_Z4_PACE_CAR":
                case 8:
                    message.carCoupon = 8;
                    break;
                case "CAR_COUPON_HIACE_VAN_HIGH_LIFTED":
                case 9:
                    message.carCoupon = 9;
                    break;
                case "CAR_COUPON_BMW_M1":
                case 10:
                    message.carCoupon = 10;
                    break;
                case "CAR_COUPON_BMW_M3_CSL":
                case 11:
                    message.carCoupon = 11;
                    break;
                case "CAR_COUPON_BENZ_SLS_AMG":
                case 12:
                    message.carCoupon = 12;
                    break;
                case "CAR_COUPON_BENZ_190E":
                case 13:
                    message.carCoupon = 13;
                    break;
                case "CAR_COUPON_SUBARU_LEVORG":
                case 14:
                    message.carCoupon = 14;
                    break;
                case "CAR_COUPON_AUDI_R8":
                case 15:
                    message.carCoupon = 15;
                    break;
                case "CAR_COUPON_AUDI_RS4":
                case 16:
                    message.carCoupon = 16;
                    break;
                case "CAR_COUPON_CHRYSLER_VIPER_SRT_10":
                case 17:
                    message.carCoupon = 17;
                    break;
                case "CAR_COUPON_CHRYSLER_CHARGER_SRT_8":
                case 18:
                    message.carCoupon = 18;
                    break;
                case "CAR_COUPON_BMW_MINI_COOPER_S_ALL4":
                case 19:
                    message.carCoupon = 19;
                    break;
                case "CAR_COUPON_MAZDA_ROADSTER_ND":
                case 20:
                    message.carCoupon = 20;
                    break;
                case "CAR_COUPON_NISSAN_R35_NISMO":
                case 21:
                    message.carCoupon = 21;
                    break;
                case "CAR_COUPON_NISSAN_FAIRLADY_Z_NISMO":
                case 22:
                    message.carCoupon = 22;
                    break;
                case "CAR_COUPON_FULL_TUNED":
                case 23:
                    message.carCoupon = 23;
                    break;
                case "CAR_COUPON_LAMBORGHINI_MIURA_P400S":
                case 24:
                    message.carCoupon = 24;
                    break;
                case "CAR_COUPON_LAMBORGHINI_DIABLO_VT":
                case 25:
                    message.carCoupon = 25;
                    break;
                case "CAR_COUPON_NISSAN_SILVIA_K_S":
                case 26:
                    message.carCoupon = 26;
                    break;
                }
                if (object.hp600Count != null)
                    message.hp600Count = object.hp600Count >>> 0;
                if (object.tutorials != null)
                    message.tutorials = object.tutorials >>> 0;
                switch (object.carCampaignUserState) {
                default:
                    if (typeof object.carCampaignUserState === "number") {
                        message.carCampaignUserState = object.carCampaignUserState;
                        break;
                    }
                    break;
                case "CAR_CAMPAIGN_NOT_ACCEPTED":
                case 1:
                    message.carCampaignUserState = 1;
                    break;
                case "CAR_CAMPAIGN_ACCEPTED":
                case 2:
                    message.carCampaignUserState = 2;
                    break;
                case "CAR_CAMPAIGN_FINISHED":
                case 3:
                    message.carCampaignUserState = 3;
                    break;
                }
                switch (object.competitionUserState) {
                default:
                    if (typeof object.competitionUserState === "number") {
                        message.competitionUserState = object.competitionUserState;
                        break;
                    }
                    break;
                case "COMPETITION_NOT_PARTICIPATED":
                case 1:
                    message.competitionUserState = 1;
                    break;
                case "COMPETITION_QUALIFIED":
                case 2:
                    message.competitionUserState = 2;
                    break;
                case "COMPETITION_PARTICIPATED":
                case 3:
                    message.competitionUserState = 3;
                    break;
                case "COMPETITION_WON":
                case 4:
                    message.competitionUserState = 4;
                    break;
                }
                if (object.teamId != null)
                    message.teamId = object.teamId >>> 0;
                if (object.teamName != null)
                    message.teamName = String(object.teamName);
                if (object.teamStickerFont != null)
                    message.teamStickerFont = object.teamStickerFont >>> 0;
                switch (object.membership) {
                default:
                    if (typeof object.membership === "number") {
                        message.membership = object.membership;
                        break;
                    }
                    break;
                case "MEMBER_NON_MEMBER":
                case 0:
                    message.membership = 0;
                    break;
                case "MEMBER_PREMIUM":
                case 1:
                    message.membership = 1;
                    break;
                case "MEMBER_FREE":
                case 2:
                    message.membership = 2;
                    break;
                case "MEMBER_PREMIUM_INACTIVE":
                case 3:
                    message.membership = 3;
                    break;
                case "MEMBER_FREE_INACTIVE":
                case 4:
                    message.membership = 4;
                    break;
                }
                switch (object.transferState) {
                default:
                    if (typeof object.transferState === "number") {
                        message.transferState = object.transferState;
                        break;
                    }
                    break;
                case "NOT_REGISTERED":
                case 0:
                    message.transferState = 0;
                    break;
                case "NEW_REGISTRATION":
                case 1:
                    message.transferState = 1;
                    break;
                case "TRANSFER_REQUIRED":
                case 2:
                    message.transferState = 2;
                    break;
                case "TRANSFERRING":
                case 3:
                    message.transferState = 3;
                    break;
                case "TRANSFERRED":
                case 4:
                    message.transferState = 4;
                    break;
                }
                if (object.sessionId != null)
                    message.sessionId = String(object.sessionId);
                if (object.banacoinAvailable != null)
                    message.banacoinAvailable = Boolean(object.banacoinAvailable);
                if (object.totalVsStarCount != null)
                    message.totalVsStarCount = object.totalVsStarCount >>> 0;
                if (object.totalVsMedalPoint != null)
                    message.totalVsMedalPoint = object.totalVsMedalPoint >>> 0;
                if (object.copiedCar != null) {
                    if (typeof object.copiedCar !== "object")
                        throw TypeError(".wm5.protobuf.LoadUserResponse.copiedCar: object expected");
                    message.copiedCar = $root.wm5.protobuf.CopiedCar.fromObject(object.copiedCar);
                }
                if (object.wasCreatedToday != null)
                    message.wasCreatedToday = Boolean(object.wasCreatedToday);
                if (object.participatedInInviteFriendCampaign != null)
                    message.participatedInInviteFriendCampaign = Boolean(object.participatedInInviteFriendCampaign);
                return message;
            };

            /**
             * Creates a plain object from a LoadUserResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadUserResponse
             * @static
             * @param {wm5.protobuf.LoadUserResponse} message LoadUserResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadUserResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.cars = [];
                    object.carStates = [];
                }
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.unlockAt = 0;
                    object.accessCode = "";
                    object.banapassportAmId = 0;
                    object.personId = "";
                    object.userId = 0;
                    object.maxiGold = 0;
                    object.totalMaxiGold = 0;
                    object.bnidLevel = 0;
                    object.numOfOwnedCars = 0;
                    object.carCoupon = options.enums === String ? "CAR_COUPON_NONE" : 0;
                    object.hp600Count = 0;
                    object.tutorials = 0;
                    object.carCampaignUserState = options.enums === String ? "CAR_CAMPAIGN_NOT_ACCEPTED" : 1;
                    object.competitionUserState = options.enums === String ? "COMPETITION_NOT_PARTICIPATED" : 1;
                    object.teamId = 0;
                    object.teamName = "";
                    object.teamStickerFont = 0;
                    object.membership = options.enums === String ? "MEMBER_NON_MEMBER" : 0;
                    object.transferState = options.enums === String ? "NOT_REGISTERED" : 0;
                    object.sessionId = "";
                    object.banacoinAvailable = false;
                    object.totalVsStarCount = 0;
                    object.totalVsMedalPoint = 0;
                    object.copiedCar = null;
                    object.wasCreatedToday = false;
                    object.participatedInInviteFriendCampaign = false;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.unlockAt != null && message.hasOwnProperty("unlockAt"))
                    object.unlockAt = message.unlockAt;
                if (message.accessCode != null && message.hasOwnProperty("accessCode"))
                    object.accessCode = message.accessCode;
                if (message.banapassportAmId != null && message.hasOwnProperty("banapassportAmId"))
                    object.banapassportAmId = message.banapassportAmId;
                if (message.personId != null && message.hasOwnProperty("personId"))
                    object.personId = message.personId;
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.maxiGold != null && message.hasOwnProperty("maxiGold"))
                    object.maxiGold = message.maxiGold;
                if (message.totalMaxiGold != null && message.hasOwnProperty("totalMaxiGold"))
                    object.totalMaxiGold = message.totalMaxiGold;
                if (message.bnidLevel != null && message.hasOwnProperty("bnidLevel"))
                    object.bnidLevel = message.bnidLevel;
                if (message.numOfOwnedCars != null && message.hasOwnProperty("numOfOwnedCars"))
                    object.numOfOwnedCars = message.numOfOwnedCars;
                if (message.cars && message.cars.length) {
                    object.cars = [];
                    for (let j = 0; j < message.cars.length; ++j)
                        object.cars[j] = $root.wm5.protobuf.Car.toObject(message.cars[j], options);
                }
                if (message.carStates && message.carStates.length) {
                    object.carStates = [];
                    for (let j = 0; j < message.carStates.length; ++j)
                        object.carStates[j] = $root.wm5.protobuf.LoadUserResponse.CarState.toObject(message.carStates[j], options);
                }
                if (message.carCoupon != null && message.hasOwnProperty("carCoupon"))
                    object.carCoupon = options.enums === String ? $root.wm5.protobuf.CarCreationCoupon[message.carCoupon] === undefined ? message.carCoupon : $root.wm5.protobuf.CarCreationCoupon[message.carCoupon] : message.carCoupon;
                if (message.hp600Count != null && message.hasOwnProperty("hp600Count"))
                    object.hp600Count = message.hp600Count;
                if (message.tutorials != null && message.hasOwnProperty("tutorials"))
                    object.tutorials = message.tutorials;
                if (message.carCampaignUserState != null && message.hasOwnProperty("carCampaignUserState"))
                    object.carCampaignUserState = options.enums === String ? $root.wm5.protobuf.CarCampaignUserState[message.carCampaignUserState] === undefined ? message.carCampaignUserState : $root.wm5.protobuf.CarCampaignUserState[message.carCampaignUserState] : message.carCampaignUserState;
                if (message.competitionUserState != null && message.hasOwnProperty("competitionUserState"))
                    object.competitionUserState = options.enums === String ? $root.wm5.protobuf.GhostCompetitionParticipantState[message.competitionUserState] === undefined ? message.competitionUserState : $root.wm5.protobuf.GhostCompetitionParticipantState[message.competitionUserState] : message.competitionUserState;
                if (message.teamId != null && message.hasOwnProperty("teamId"))
                    object.teamId = message.teamId;
                if (message.teamName != null && message.hasOwnProperty("teamName"))
                    object.teamName = message.teamName;
                if (message.teamStickerFont != null && message.hasOwnProperty("teamStickerFont"))
                    object.teamStickerFont = message.teamStickerFont;
                if (message.membership != null && message.hasOwnProperty("membership"))
                    object.membership = options.enums === String ? $root.wm5.protobuf.WebsiteMembership[message.membership] === undefined ? message.membership : $root.wm5.protobuf.WebsiteMembership[message.membership] : message.membership;
                if (message.transferState != null && message.hasOwnProperty("transferState"))
                    object.transferState = options.enums === String ? $root.wm5.protobuf.TransferState[message.transferState] === undefined ? message.transferState : $root.wm5.protobuf.TransferState[message.transferState] : message.transferState;
                if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                    object.sessionId = message.sessionId;
                if (message.banacoinAvailable != null && message.hasOwnProperty("banacoinAvailable"))
                    object.banacoinAvailable = message.banacoinAvailable;
                if (message.totalVsStarCount != null && message.hasOwnProperty("totalVsStarCount"))
                    object.totalVsStarCount = message.totalVsStarCount;
                if (message.totalVsMedalPoint != null && message.hasOwnProperty("totalVsMedalPoint"))
                    object.totalVsMedalPoint = message.totalVsMedalPoint;
                if (message.copiedCar != null && message.hasOwnProperty("copiedCar"))
                    object.copiedCar = $root.wm5.protobuf.CopiedCar.toObject(message.copiedCar, options);
                if (message.wasCreatedToday != null && message.hasOwnProperty("wasCreatedToday"))
                    object.wasCreatedToday = message.wasCreatedToday;
                if (message.participatedInInviteFriendCampaign != null && message.hasOwnProperty("participatedInInviteFriendCampaign"))
                    object.participatedInInviteFriendCampaign = message.participatedInInviteFriendCampaign;
                return object;
            };

            /**
             * Converts this LoadUserResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadUserResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadUserResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadUserResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadUserResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadUserResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadUserResponse";
            };

            LoadUserResponse.CarState = (function() {

                /**
                 * Properties of a CarState.
                 * @memberof wm5.protobuf.LoadUserResponse
                 * @interface ICarState
                 * @property {boolean} hasOpponentGhost CarState hasOpponentGhost
                 * @property {wm5.protobuf.GhostCompetitionParticipantState|null} [competitionState] CarState competitionState
                 * @property {boolean} needToRename CarState needToRename
                 * @property {boolean} toBeDeleted CarState toBeDeleted
                 * @property {boolean} eventJoined CarState eventJoined
                 * @property {number|null} [maxiGoldBoostItemRemainingNum] CarState maxiGoldBoostItemRemainingNum
                 * @property {number|null} [maxiGoldBoostItemRate] CarState maxiGoldBoostItemRate
                 * @property {wm5.protobuf.MaxiGoldBoostType|null} [maxiGoldBoostType] CarState maxiGoldBoostType
                 */

                /**
                 * Constructs a new CarState.
                 * @memberof wm5.protobuf.LoadUserResponse
                 * @classdesc Represents a CarState.
                 * @implements ICarState
                 * @constructor
                 * @param {wm5.protobuf.LoadUserResponse.ICarState=} [properties] Properties to set
                 */
                function CarState(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * CarState hasOpponentGhost.
                 * @member {boolean} hasOpponentGhost
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @instance
                 */
                CarState.prototype.hasOpponentGhost = false;

                /**
                 * CarState competitionState.
                 * @member {wm5.protobuf.GhostCompetitionParticipantState} competitionState
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @instance
                 */
                CarState.prototype.competitionState = 1;

                /**
                 * CarState needToRename.
                 * @member {boolean} needToRename
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @instance
                 */
                CarState.prototype.needToRename = false;

                /**
                 * CarState toBeDeleted.
                 * @member {boolean} toBeDeleted
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @instance
                 */
                CarState.prototype.toBeDeleted = false;

                /**
                 * CarState eventJoined.
                 * @member {boolean} eventJoined
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @instance
                 */
                CarState.prototype.eventJoined = false;

                /**
                 * CarState maxiGoldBoostItemRemainingNum.
                 * @member {number} maxiGoldBoostItemRemainingNum
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @instance
                 */
                CarState.prototype.maxiGoldBoostItemRemainingNum = 0;

                /**
                 * CarState maxiGoldBoostItemRate.
                 * @member {number} maxiGoldBoostItemRate
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @instance
                 */
                CarState.prototype.maxiGoldBoostItemRate = 0;

                /**
                 * CarState maxiGoldBoostType.
                 * @member {wm5.protobuf.MaxiGoldBoostType} maxiGoldBoostType
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @instance
                 */
                CarState.prototype.maxiGoldBoostType = 1;

                /**
                 * Creates a new CarState instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @static
                 * @param {wm5.protobuf.LoadUserResponse.ICarState=} [properties] Properties to set
                 * @returns {wm5.protobuf.LoadUserResponse.CarState} CarState instance
                 */
                CarState.create = function create(properties) {
                    return new CarState(properties);
                };

                /**
                 * Encodes the specified CarState message. Does not implicitly {@link wm5.protobuf.LoadUserResponse.CarState.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @static
                 * @param {wm5.protobuf.LoadUserResponse.ICarState} message CarState message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CarState.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.hasOpponentGhost);
                    if (message.competitionState != null && Object.hasOwnProperty.call(message, "competitionState"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.competitionState);
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.needToRename);
                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.toBeDeleted);
                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.eventJoined);
                    if (message.maxiGoldBoostItemRemainingNum != null && Object.hasOwnProperty.call(message, "maxiGoldBoostItemRemainingNum"))
                        writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.maxiGoldBoostItemRemainingNum);
                    if (message.maxiGoldBoostItemRate != null && Object.hasOwnProperty.call(message, "maxiGoldBoostItemRate"))
                        writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.maxiGoldBoostItemRate);
                    if (message.maxiGoldBoostType != null && Object.hasOwnProperty.call(message, "maxiGoldBoostType"))
                        writer.uint32(/* id 8, wireType 0 =*/64).int32(message.maxiGoldBoostType);
                    return writer;
                };

                /**
                 * Encodes the specified CarState message, length delimited. Does not implicitly {@link wm5.protobuf.LoadUserResponse.CarState.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @static
                 * @param {wm5.protobuf.LoadUserResponse.ICarState} message CarState message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CarState.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a CarState message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.LoadUserResponse.CarState} CarState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CarState.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadUserResponse.CarState();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.hasOpponentGhost = reader.bool();
                                break;
                            }
                        case 2: {
                                message.competitionState = reader.int32();
                                break;
                            }
                        case 3: {
                                message.needToRename = reader.bool();
                                break;
                            }
                        case 4: {
                                message.toBeDeleted = reader.bool();
                                break;
                            }
                        case 5: {
                                message.eventJoined = reader.bool();
                                break;
                            }
                        case 6: {
                                message.maxiGoldBoostItemRemainingNum = reader.uint32();
                                break;
                            }
                        case 7: {
                                message.maxiGoldBoostItemRate = reader.uint32();
                                break;
                            }
                        case 8: {
                                message.maxiGoldBoostType = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("hasOpponentGhost"))
                        throw $util.ProtocolError("missing required 'hasOpponentGhost'", { instance: message });
                    if (!message.hasOwnProperty("needToRename"))
                        throw $util.ProtocolError("missing required 'needToRename'", { instance: message });
                    if (!message.hasOwnProperty("toBeDeleted"))
                        throw $util.ProtocolError("missing required 'toBeDeleted'", { instance: message });
                    if (!message.hasOwnProperty("eventJoined"))
                        throw $util.ProtocolError("missing required 'eventJoined'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a CarState message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.LoadUserResponse.CarState} CarState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CarState.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a CarState message.
                 * @function verify
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CarState.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (typeof message.hasOpponentGhost !== "boolean")
                        return "hasOpponentGhost: boolean expected";
                    if (message.competitionState != null && message.hasOwnProperty("competitionState"))
                        switch (message.competitionState) {
                        default:
                            return "competitionState: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                            break;
                        }
                    if (typeof message.needToRename !== "boolean")
                        return "needToRename: boolean expected";
                    if (typeof message.toBeDeleted !== "boolean")
                        return "toBeDeleted: boolean expected";
                    if (typeof message.eventJoined !== "boolean")
                        return "eventJoined: boolean expected";
                    if (message.maxiGoldBoostItemRemainingNum != null && message.hasOwnProperty("maxiGoldBoostItemRemainingNum"))
                        if (!$util.isInteger(message.maxiGoldBoostItemRemainingNum))
                            return "maxiGoldBoostItemRemainingNum: integer expected";
                    if (message.maxiGoldBoostItemRate != null && message.hasOwnProperty("maxiGoldBoostItemRate"))
                        if (!$util.isInteger(message.maxiGoldBoostItemRate))
                            return "maxiGoldBoostItemRate: integer expected";
                    if (message.maxiGoldBoostType != null && message.hasOwnProperty("maxiGoldBoostType"))
                        switch (message.maxiGoldBoostType) {
                        default:
                            return "maxiGoldBoostType: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    return null;
                };

                /**
                 * Creates a CarState message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.LoadUserResponse.CarState} CarState
                 */
                CarState.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.LoadUserResponse.CarState)
                        return object;
                    let message = new $root.wm5.protobuf.LoadUserResponse.CarState();
                    if (object.hasOpponentGhost != null)
                        message.hasOpponentGhost = Boolean(object.hasOpponentGhost);
                    switch (object.competitionState) {
                    default:
                        if (typeof object.competitionState === "number") {
                            message.competitionState = object.competitionState;
                            break;
                        }
                        break;
                    case "COMPETITION_NOT_PARTICIPATED":
                    case 1:
                        message.competitionState = 1;
                        break;
                    case "COMPETITION_QUALIFIED":
                    case 2:
                        message.competitionState = 2;
                        break;
                    case "COMPETITION_PARTICIPATED":
                    case 3:
                        message.competitionState = 3;
                        break;
                    case "COMPETITION_WON":
                    case 4:
                        message.competitionState = 4;
                        break;
                    }
                    if (object.needToRename != null)
                        message.needToRename = Boolean(object.needToRename);
                    if (object.toBeDeleted != null)
                        message.toBeDeleted = Boolean(object.toBeDeleted);
                    if (object.eventJoined != null)
                        message.eventJoined = Boolean(object.eventJoined);
                    if (object.maxiGoldBoostItemRemainingNum != null)
                        message.maxiGoldBoostItemRemainingNum = object.maxiGoldBoostItemRemainingNum >>> 0;
                    if (object.maxiGoldBoostItemRate != null)
                        message.maxiGoldBoostItemRate = object.maxiGoldBoostItemRate >>> 0;
                    switch (object.maxiGoldBoostType) {
                    default:
                        if (typeof object.maxiGoldBoostType === "number") {
                            message.maxiGoldBoostType = object.maxiGoldBoostType;
                            break;
                        }
                        break;
                    case "BOOST_PREMIUM":
                    case 1:
                        message.maxiGoldBoostType = 1;
                        break;
                    case "BOOST_MEMBER":
                    case 2:
                        message.maxiGoldBoostType = 2;
                        break;
                    case "BOOST_ALL":
                    case 3:
                        message.maxiGoldBoostType = 3;
                        break;
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a CarState message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @static
                 * @param {wm5.protobuf.LoadUserResponse.CarState} message CarState
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CarState.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.hasOpponentGhost = false;
                        object.competitionState = options.enums === String ? "COMPETITION_NOT_PARTICIPATED" : 1;
                        object.needToRename = false;
                        object.toBeDeleted = false;
                        object.eventJoined = false;
                        object.maxiGoldBoostItemRemainingNum = 0;
                        object.maxiGoldBoostItemRate = 0;
                        object.maxiGoldBoostType = options.enums === String ? "BOOST_PREMIUM" : 1;
                    }
                    if (message.hasOpponentGhost != null && message.hasOwnProperty("hasOpponentGhost"))
                        object.hasOpponentGhost = message.hasOpponentGhost;
                    if (message.competitionState != null && message.hasOwnProperty("competitionState"))
                        object.competitionState = options.enums === String ? $root.wm5.protobuf.GhostCompetitionParticipantState[message.competitionState] === undefined ? message.competitionState : $root.wm5.protobuf.GhostCompetitionParticipantState[message.competitionState] : message.competitionState;
                    if (message.needToRename != null && message.hasOwnProperty("needToRename"))
                        object.needToRename = message.needToRename;
                    if (message.toBeDeleted != null && message.hasOwnProperty("toBeDeleted"))
                        object.toBeDeleted = message.toBeDeleted;
                    if (message.eventJoined != null && message.hasOwnProperty("eventJoined"))
                        object.eventJoined = message.eventJoined;
                    if (message.maxiGoldBoostItemRemainingNum != null && message.hasOwnProperty("maxiGoldBoostItemRemainingNum"))
                        object.maxiGoldBoostItemRemainingNum = message.maxiGoldBoostItemRemainingNum;
                    if (message.maxiGoldBoostItemRate != null && message.hasOwnProperty("maxiGoldBoostItemRate"))
                        object.maxiGoldBoostItemRate = message.maxiGoldBoostItemRate;
                    if (message.maxiGoldBoostType != null && message.hasOwnProperty("maxiGoldBoostType"))
                        object.maxiGoldBoostType = options.enums === String ? $root.wm5.protobuf.MaxiGoldBoostType[message.maxiGoldBoostType] === undefined ? message.maxiGoldBoostType : $root.wm5.protobuf.MaxiGoldBoostType[message.maxiGoldBoostType] : message.maxiGoldBoostType;
                    return object;
                };

                /**
                 * Converts this CarState to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CarState.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for CarState
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.LoadUserResponse.CarState
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CarState.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.LoadUserResponse.CarState";
                };

                return CarState;
            })();

            return LoadUserResponse;
        })();

        protobuf.UpdateUserLockRequest = (function() {

            /**
             * Properties of an UpdateUserLockRequest.
             * @memberof wm5.protobuf
             * @interface IUpdateUserLockRequest
             * @property {number|null} [userId] UpdateUserLockRequest userId
             * @property {string|null} [cardChipId] UpdateUserLockRequest cardChipId
             * @property {string|null} [accessCode] UpdateUserLockRequest accessCode
             * @property {number|null} [cardTypeCode] UpdateUserLockRequest cardTypeCode
             * @property {number|null} [cardRegionCode] UpdateUserLockRequest cardRegionCode
             * @property {wm5.protobuf.DeviceType|null} [device] UpdateUserLockRequest device
             * @property {number} unlockAt UpdateUserLockRequest unlockAt
             */

            /**
             * Constructs a new UpdateUserLockRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents an UpdateUserLockRequest.
             * @implements IUpdateUserLockRequest
             * @constructor
             * @param {wm5.protobuf.IUpdateUserLockRequest=} [properties] Properties to set
             */
            function UpdateUserLockRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * UpdateUserLockRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.UpdateUserLockRequest
             * @instance
             */
            UpdateUserLockRequest.prototype.userId = 0;

            /**
             * UpdateUserLockRequest cardChipId.
             * @member {string} cardChipId
             * @memberof wm5.protobuf.UpdateUserLockRequest
             * @instance
             */
            UpdateUserLockRequest.prototype.cardChipId = "";

            /**
             * UpdateUserLockRequest accessCode.
             * @member {string} accessCode
             * @memberof wm5.protobuf.UpdateUserLockRequest
             * @instance
             */
            UpdateUserLockRequest.prototype.accessCode = "";

            /**
             * UpdateUserLockRequest cardTypeCode.
             * @member {number} cardTypeCode
             * @memberof wm5.protobuf.UpdateUserLockRequest
             * @instance
             */
            UpdateUserLockRequest.prototype.cardTypeCode = 0;

            /**
             * UpdateUserLockRequest cardRegionCode.
             * @member {number} cardRegionCode
             * @memberof wm5.protobuf.UpdateUserLockRequest
             * @instance
             */
            UpdateUserLockRequest.prototype.cardRegionCode = 0;

            /**
             * UpdateUserLockRequest device.
             * @member {wm5.protobuf.DeviceType} device
             * @memberof wm5.protobuf.UpdateUserLockRequest
             * @instance
             */
            UpdateUserLockRequest.prototype.device = 0;

            /**
             * UpdateUserLockRequest unlockAt.
             * @member {number} unlockAt
             * @memberof wm5.protobuf.UpdateUserLockRequest
             * @instance
             */
            UpdateUserLockRequest.prototype.unlockAt = 0;

            /**
             * Creates a new UpdateUserLockRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.UpdateUserLockRequest
             * @static
             * @param {wm5.protobuf.IUpdateUserLockRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.UpdateUserLockRequest} UpdateUserLockRequest instance
             */
            UpdateUserLockRequest.create = function create(properties) {
                return new UpdateUserLockRequest(properties);
            };

            /**
             * Encodes the specified UpdateUserLockRequest message. Does not implicitly {@link wm5.protobuf.UpdateUserLockRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.UpdateUserLockRequest
             * @static
             * @param {wm5.protobuf.IUpdateUserLockRequest} message UpdateUserLockRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateUserLockRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.userId != null && Object.hasOwnProperty.call(message, "userId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                if (message.cardChipId != null && Object.hasOwnProperty.call(message, "cardChipId"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.cardChipId);
                if (message.accessCode != null && Object.hasOwnProperty.call(message, "accessCode"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.accessCode);
                if (message.cardTypeCode != null && Object.hasOwnProperty.call(message, "cardTypeCode"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.cardTypeCode);
                if (message.cardRegionCode != null && Object.hasOwnProperty.call(message, "cardRegionCode"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.cardRegionCode);
                if (message.device != null && Object.hasOwnProperty.call(message, "device"))
                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.device);
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.unlockAt);
                return writer;
            };

            /**
             * Encodes the specified UpdateUserLockRequest message, length delimited. Does not implicitly {@link wm5.protobuf.UpdateUserLockRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.UpdateUserLockRequest
             * @static
             * @param {wm5.protobuf.IUpdateUserLockRequest} message UpdateUserLockRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateUserLockRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an UpdateUserLockRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.UpdateUserLockRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.UpdateUserLockRequest} UpdateUserLockRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateUserLockRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.UpdateUserLockRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.cardChipId = reader.string();
                            break;
                        }
                    case 3: {
                            message.accessCode = reader.string();
                            break;
                        }
                    case 4: {
                            message.cardTypeCode = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.cardRegionCode = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.device = reader.int32();
                            break;
                        }
                    case 7: {
                            message.unlockAt = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("unlockAt"))
                    throw $util.ProtocolError("missing required 'unlockAt'", { instance: message });
                return message;
            };

            /**
             * Decodes an UpdateUserLockRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.UpdateUserLockRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.UpdateUserLockRequest} UpdateUserLockRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateUserLockRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an UpdateUserLockRequest message.
             * @function verify
             * @memberof wm5.protobuf.UpdateUserLockRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UpdateUserLockRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.userId != null && message.hasOwnProperty("userId"))
                    if (!$util.isInteger(message.userId))
                        return "userId: integer expected";
                if (message.cardChipId != null && message.hasOwnProperty("cardChipId"))
                    if (!$util.isString(message.cardChipId))
                        return "cardChipId: string expected";
                if (message.accessCode != null && message.hasOwnProperty("accessCode"))
                    if (!$util.isString(message.accessCode))
                        return "accessCode: string expected";
                if (message.cardTypeCode != null && message.hasOwnProperty("cardTypeCode"))
                    if (!$util.isInteger(message.cardTypeCode))
                        return "cardTypeCode: integer expected";
                if (message.cardRegionCode != null && message.hasOwnProperty("cardRegionCode"))
                    if (!$util.isInteger(message.cardRegionCode))
                        return "cardRegionCode: integer expected";
                if (message.device != null && message.hasOwnProperty("device"))
                    switch (message.device) {
                    default:
                        return "device: enum value expected";
                    case 0:
                    case 1:
                        break;
                    }
                if (!$util.isInteger(message.unlockAt))
                    return "unlockAt: integer expected";
                return null;
            };

            /**
             * Creates an UpdateUserLockRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.UpdateUserLockRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.UpdateUserLockRequest} UpdateUserLockRequest
             */
            UpdateUserLockRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.UpdateUserLockRequest)
                    return object;
                let message = new $root.wm5.protobuf.UpdateUserLockRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.cardChipId != null)
                    message.cardChipId = String(object.cardChipId);
                if (object.accessCode != null)
                    message.accessCode = String(object.accessCode);
                if (object.cardTypeCode != null)
                    message.cardTypeCode = object.cardTypeCode >>> 0;
                if (object.cardRegionCode != null)
                    message.cardRegionCode = object.cardRegionCode >>> 0;
                switch (object.device) {
                default:
                    if (typeof object.device === "number") {
                        message.device = object.device;
                        break;
                    }
                    break;
                case "DEVICE_CARD":
                case 0:
                    message.device = 0;
                    break;
                case "DEVICE_PHONE":
                case 1:
                    message.device = 1;
                    break;
                }
                if (object.unlockAt != null)
                    message.unlockAt = object.unlockAt >>> 0;
                return message;
            };

            /**
             * Creates a plain object from an UpdateUserLockRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.UpdateUserLockRequest
             * @static
             * @param {wm5.protobuf.UpdateUserLockRequest} message UpdateUserLockRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UpdateUserLockRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.userId = 0;
                    object.cardChipId = "";
                    object.accessCode = "";
                    object.cardTypeCode = 0;
                    object.cardRegionCode = 0;
                    object.device = options.enums === String ? "DEVICE_CARD" : 0;
                    object.unlockAt = 0;
                }
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.cardChipId != null && message.hasOwnProperty("cardChipId"))
                    object.cardChipId = message.cardChipId;
                if (message.accessCode != null && message.hasOwnProperty("accessCode"))
                    object.accessCode = message.accessCode;
                if (message.cardTypeCode != null && message.hasOwnProperty("cardTypeCode"))
                    object.cardTypeCode = message.cardTypeCode;
                if (message.cardRegionCode != null && message.hasOwnProperty("cardRegionCode"))
                    object.cardRegionCode = message.cardRegionCode;
                if (message.device != null && message.hasOwnProperty("device"))
                    object.device = options.enums === String ? $root.wm5.protobuf.DeviceType[message.device] === undefined ? message.device : $root.wm5.protobuf.DeviceType[message.device] : message.device;
                if (message.unlockAt != null && message.hasOwnProperty("unlockAt"))
                    object.unlockAt = message.unlockAt;
                return object;
            };

            /**
             * Converts this UpdateUserLockRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.UpdateUserLockRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UpdateUserLockRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for UpdateUserLockRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.UpdateUserLockRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UpdateUserLockRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.UpdateUserLockRequest";
            };

            return UpdateUserLockRequest;
        })();

        protobuf.UpdateUserLockResponse = (function() {

            /**
             * Properties of an UpdateUserLockResponse.
             * @memberof wm5.protobuf
             * @interface IUpdateUserLockResponse
             * @property {wm5.protobuf.ErrorCode} error UpdateUserLockResponse error
             */

            /**
             * Constructs a new UpdateUserLockResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents an UpdateUserLockResponse.
             * @implements IUpdateUserLockResponse
             * @constructor
             * @param {wm5.protobuf.IUpdateUserLockResponse=} [properties] Properties to set
             */
            function UpdateUserLockResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * UpdateUserLockResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.UpdateUserLockResponse
             * @instance
             */
            UpdateUserLockResponse.prototype.error = 0;

            /**
             * Creates a new UpdateUserLockResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.UpdateUserLockResponse
             * @static
             * @param {wm5.protobuf.IUpdateUserLockResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.UpdateUserLockResponse} UpdateUserLockResponse instance
             */
            UpdateUserLockResponse.create = function create(properties) {
                return new UpdateUserLockResponse(properties);
            };

            /**
             * Encodes the specified UpdateUserLockResponse message. Does not implicitly {@link wm5.protobuf.UpdateUserLockResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.UpdateUserLockResponse
             * @static
             * @param {wm5.protobuf.IUpdateUserLockResponse} message UpdateUserLockResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateUserLockResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified UpdateUserLockResponse message, length delimited. Does not implicitly {@link wm5.protobuf.UpdateUserLockResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.UpdateUserLockResponse
             * @static
             * @param {wm5.protobuf.IUpdateUserLockResponse} message UpdateUserLockResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateUserLockResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an UpdateUserLockResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.UpdateUserLockResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.UpdateUserLockResponse} UpdateUserLockResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateUserLockResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.UpdateUserLockResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes an UpdateUserLockResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.UpdateUserLockResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.UpdateUserLockResponse} UpdateUserLockResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateUserLockResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an UpdateUserLockResponse message.
             * @function verify
             * @memberof wm5.protobuf.UpdateUserLockResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UpdateUserLockResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates an UpdateUserLockResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.UpdateUserLockResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.UpdateUserLockResponse} UpdateUserLockResponse
             */
            UpdateUserLockResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.UpdateUserLockResponse)
                    return object;
                let message = new $root.wm5.protobuf.UpdateUserLockResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from an UpdateUserLockResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.UpdateUserLockResponse
             * @static
             * @param {wm5.protobuf.UpdateUserLockResponse} message UpdateUserLockResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UpdateUserLockResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this UpdateUserLockResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.UpdateUserLockResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UpdateUserLockResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for UpdateUserLockResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.UpdateUserLockResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UpdateUserLockResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.UpdateUserLockResponse";
            };

            return UpdateUserLockResponse;
        })();

        protobuf.LoadDriveInformationRequest = (function() {

            /**
             * Properties of a LoadDriveInformationRequest.
             * @memberof wm5.protobuf
             * @interface ILoadDriveInformationRequest
             * @property {number|null} [userId] LoadDriveInformationRequest userId
             */

            /**
             * Constructs a new LoadDriveInformationRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadDriveInformationRequest.
             * @implements ILoadDriveInformationRequest
             * @constructor
             * @param {wm5.protobuf.ILoadDriveInformationRequest=} [properties] Properties to set
             */
            function LoadDriveInformationRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadDriveInformationRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.LoadDriveInformationRequest
             * @instance
             */
            LoadDriveInformationRequest.prototype.userId = 0;

            /**
             * Creates a new LoadDriveInformationRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadDriveInformationRequest
             * @static
             * @param {wm5.protobuf.ILoadDriveInformationRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadDriveInformationRequest} LoadDriveInformationRequest instance
             */
            LoadDriveInformationRequest.create = function create(properties) {
                return new LoadDriveInformationRequest(properties);
            };

            /**
             * Encodes the specified LoadDriveInformationRequest message. Does not implicitly {@link wm5.protobuf.LoadDriveInformationRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadDriveInformationRequest
             * @static
             * @param {wm5.protobuf.ILoadDriveInformationRequest} message LoadDriveInformationRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadDriveInformationRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.userId != null && Object.hasOwnProperty.call(message, "userId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                return writer;
            };

            /**
             * Encodes the specified LoadDriveInformationRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadDriveInformationRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadDriveInformationRequest
             * @static
             * @param {wm5.protobuf.ILoadDriveInformationRequest} message LoadDriveInformationRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadDriveInformationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadDriveInformationRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadDriveInformationRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadDriveInformationRequest} LoadDriveInformationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadDriveInformationRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadDriveInformationRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a LoadDriveInformationRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadDriveInformationRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadDriveInformationRequest} LoadDriveInformationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadDriveInformationRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadDriveInformationRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadDriveInformationRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadDriveInformationRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.userId != null && message.hasOwnProperty("userId"))
                    if (!$util.isInteger(message.userId))
                        return "userId: integer expected";
                return null;
            };

            /**
             * Creates a LoadDriveInformationRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadDriveInformationRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadDriveInformationRequest} LoadDriveInformationRequest
             */
            LoadDriveInformationRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadDriveInformationRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadDriveInformationRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadDriveInformationRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadDriveInformationRequest
             * @static
             * @param {wm5.protobuf.LoadDriveInformationRequest} message LoadDriveInformationRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadDriveInformationRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.userId = 0;
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                return object;
            };

            /**
             * Converts this LoadDriveInformationRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadDriveInformationRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadDriveInformationRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadDriveInformationRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadDriveInformationRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadDriveInformationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadDriveInformationRequest";
            };

            return LoadDriveInformationRequest;
        })();

        protobuf.LoadDriveInformationResponse = (function() {

            /**
             * Properties of a LoadDriveInformationResponse.
             * @memberof wm5.protobuf
             * @interface ILoadDriveInformationResponse
             * @property {wm5.protobuf.ErrorCode} error LoadDriveInformationResponse error
             * @property {Array.<wm5.protobuf.NoticeEntry>|null} [noticeWindow] LoadDriveInformationResponse noticeWindow
             * @property {Array.<string>|null} [noticeWindowMessage] LoadDriveInformationResponse noticeWindowMessage
             * @property {wm5.protobuf.ITransferNotice|null} [transferNotice] LoadDriveInformationResponse transferNotice
             * @property {Array.<number>|null} [restrictedModels] LoadDriveInformationResponse restrictedModels
             * @property {boolean|null} [announceFeature] LoadDriveInformationResponse announceFeature
             * @property {boolean|null} [announceMobile] LoadDriveInformationResponse announceMobile
             * @property {number|null} [numOfVsContinueTickets] LoadDriveInformationResponse numOfVsContinueTickets
             */

            /**
             * Constructs a new LoadDriveInformationResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadDriveInformationResponse.
             * @implements ILoadDriveInformationResponse
             * @constructor
             * @param {wm5.protobuf.ILoadDriveInformationResponse=} [properties] Properties to set
             */
            function LoadDriveInformationResponse(properties) {
                this.noticeWindow = [];
                this.noticeWindowMessage = [];
                this.restrictedModels = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadDriveInformationResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @instance
             */
            LoadDriveInformationResponse.prototype.error = 0;

            /**
             * LoadDriveInformationResponse noticeWindow.
             * @member {Array.<wm5.protobuf.NoticeEntry>} noticeWindow
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @instance
             */
            LoadDriveInformationResponse.prototype.noticeWindow = $util.emptyArray;

            /**
             * LoadDriveInformationResponse noticeWindowMessage.
             * @member {Array.<string>} noticeWindowMessage
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @instance
             */
            LoadDriveInformationResponse.prototype.noticeWindowMessage = $util.emptyArray;

            /**
             * LoadDriveInformationResponse transferNotice.
             * @member {wm5.protobuf.ITransferNotice|null|undefined} transferNotice
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @instance
             */
            LoadDriveInformationResponse.prototype.transferNotice = null;

            /**
             * LoadDriveInformationResponse restrictedModels.
             * @member {Array.<number>} restrictedModels
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @instance
             */
            LoadDriveInformationResponse.prototype.restrictedModels = $util.emptyArray;

            /**
             * LoadDriveInformationResponse announceFeature.
             * @member {boolean} announceFeature
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @instance
             */
            LoadDriveInformationResponse.prototype.announceFeature = false;

            /**
             * LoadDriveInformationResponse announceMobile.
             * @member {boolean} announceMobile
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @instance
             */
            LoadDriveInformationResponse.prototype.announceMobile = false;

            /**
             * LoadDriveInformationResponse numOfVsContinueTickets.
             * @member {number} numOfVsContinueTickets
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @instance
             */
            LoadDriveInformationResponse.prototype.numOfVsContinueTickets = 0;

            /**
             * Creates a new LoadDriveInformationResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @static
             * @param {wm5.protobuf.ILoadDriveInformationResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadDriveInformationResponse} LoadDriveInformationResponse instance
             */
            LoadDriveInformationResponse.create = function create(properties) {
                return new LoadDriveInformationResponse(properties);
            };

            /**
             * Encodes the specified LoadDriveInformationResponse message. Does not implicitly {@link wm5.protobuf.LoadDriveInformationResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @static
             * @param {wm5.protobuf.ILoadDriveInformationResponse} message LoadDriveInformationResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadDriveInformationResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.noticeWindow != null && message.noticeWindow.length)
                    for (let i = 0; i < message.noticeWindow.length; ++i)
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.noticeWindow[i]);
                if (message.noticeWindowMessage != null && message.noticeWindowMessage.length)
                    for (let i = 0; i < message.noticeWindowMessage.length; ++i)
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.noticeWindowMessage[i]);
                if (message.transferNotice != null && Object.hasOwnProperty.call(message, "transferNotice"))
                    $root.wm5.protobuf.TransferNotice.encode(message.transferNotice, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                if (message.restrictedModels != null && message.restrictedModels.length)
                    for (let i = 0; i < message.restrictedModels.length; ++i)
                        writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.restrictedModels[i]);
                if (message.announceFeature != null && Object.hasOwnProperty.call(message, "announceFeature"))
                    writer.uint32(/* id 7, wireType 0 =*/56).bool(message.announceFeature);
                if (message.announceMobile != null && Object.hasOwnProperty.call(message, "announceMobile"))
                    writer.uint32(/* id 8, wireType 0 =*/64).bool(message.announceMobile);
                if (message.numOfVsContinueTickets != null && Object.hasOwnProperty.call(message, "numOfVsContinueTickets"))
                    writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.numOfVsContinueTickets);
                return writer;
            };

            /**
             * Encodes the specified LoadDriveInformationResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadDriveInformationResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @static
             * @param {wm5.protobuf.ILoadDriveInformationResponse} message LoadDriveInformationResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadDriveInformationResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadDriveInformationResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadDriveInformationResponse} LoadDriveInformationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadDriveInformationResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadDriveInformationResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            if (!(message.noticeWindow && message.noticeWindow.length))
                                message.noticeWindow = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.noticeWindow.push(reader.int32());
                            } else
                                message.noticeWindow.push(reader.int32());
                            break;
                        }
                    case 3: {
                            if (!(message.noticeWindowMessage && message.noticeWindowMessage.length))
                                message.noticeWindowMessage = [];
                            message.noticeWindowMessage.push(reader.string());
                            break;
                        }
                    case 4: {
                            message.transferNotice = $root.wm5.protobuf.TransferNotice.decode(reader, reader.uint32());
                            break;
                        }
                    case 6: {
                            if (!(message.restrictedModels && message.restrictedModels.length))
                                message.restrictedModels = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.restrictedModels.push(reader.uint32());
                            } else
                                message.restrictedModels.push(reader.uint32());
                            break;
                        }
                    case 7: {
                            message.announceFeature = reader.bool();
                            break;
                        }
                    case 8: {
                            message.announceMobile = reader.bool();
                            break;
                        }
                    case 9: {
                            message.numOfVsContinueTickets = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadDriveInformationResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadDriveInformationResponse} LoadDriveInformationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadDriveInformationResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadDriveInformationResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadDriveInformationResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.noticeWindow != null && message.hasOwnProperty("noticeWindow")) {
                    if (!Array.isArray(message.noticeWindow))
                        return "noticeWindow: array expected";
                    for (let i = 0; i < message.noticeWindow.length; ++i)
                        switch (message.noticeWindow[i]) {
                        default:
                            return "noticeWindow: enum value[] expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                            break;
                        }
                }
                if (message.noticeWindowMessage != null && message.hasOwnProperty("noticeWindowMessage")) {
                    if (!Array.isArray(message.noticeWindowMessage))
                        return "noticeWindowMessage: array expected";
                    for (let i = 0; i < message.noticeWindowMessage.length; ++i)
                        if (!$util.isString(message.noticeWindowMessage[i]))
                            return "noticeWindowMessage: string[] expected";
                }
                if (message.transferNotice != null && message.hasOwnProperty("transferNotice")) {
                    let error = $root.wm5.protobuf.TransferNotice.verify(message.transferNotice);
                    if (error)
                        return "transferNotice." + error;
                }
                if (message.restrictedModels != null && message.hasOwnProperty("restrictedModels")) {
                    if (!Array.isArray(message.restrictedModels))
                        return "restrictedModels: array expected";
                    for (let i = 0; i < message.restrictedModels.length; ++i)
                        if (!$util.isInteger(message.restrictedModels[i]))
                            return "restrictedModels: integer[] expected";
                }
                if (message.announceFeature != null && message.hasOwnProperty("announceFeature"))
                    if (typeof message.announceFeature !== "boolean")
                        return "announceFeature: boolean expected";
                if (message.announceMobile != null && message.hasOwnProperty("announceMobile"))
                    if (typeof message.announceMobile !== "boolean")
                        return "announceMobile: boolean expected";
                if (message.numOfVsContinueTickets != null && message.hasOwnProperty("numOfVsContinueTickets"))
                    if (!$util.isInteger(message.numOfVsContinueTickets))
                        return "numOfVsContinueTickets: integer expected";
                return null;
            };

            /**
             * Creates a LoadDriveInformationResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadDriveInformationResponse} LoadDriveInformationResponse
             */
            LoadDriveInformationResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadDriveInformationResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadDriveInformationResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.noticeWindow) {
                    if (!Array.isArray(object.noticeWindow))
                        throw TypeError(".wm5.protobuf.LoadDriveInformationResponse.noticeWindow: array expected");
                    message.noticeWindow = [];
                    for (let i = 0; i < object.noticeWindow.length; ++i)
                        switch (object.noticeWindow[i]) {
                        default:
                            if (typeof object.noticeWindow[i] === "number") {
                                message.noticeWindow[i] = object.noticeWindow[i];
                                break;
                            }
                        case "NOTICE_TEAM_JOINED":
                        case 1:
                            message.noticeWindow[i] = 1;
                            break;
                        case "NOTICE_TEAM_DISSOLVED":
                        case 2:
                            message.noticeWindow[i] = 2;
                            break;
                        case "NOTICE_TEAM_LEADER_CHANGED":
                        case 3:
                            message.noticeWindow[i] = 3;
                            break;
                        case "NOTICE_TEAM_FORCEDLY_DISSOLVED":
                        case 4:
                            message.noticeWindow[i] = 4;
                            break;
                        case "NOTICE_TEAM_NOT_TRANSFERRED":
                        case 5:
                            message.noticeWindow[i] = 5;
                            break;
                        case "NOTICE_TEAM_TRANSFERRED":
                        case 6:
                            message.noticeWindow[i] = 6;
                            break;
                        case "NOTICE_TEAM_REJOIN_FINISHED":
                        case 7:
                            message.noticeWindow[i] = 7;
                            break;
                        case "NOTICE_TEAM_NAME_CHANGED":
                        case 8:
                            message.noticeWindow[i] = 8;
                            break;
                        case "NOTICE_TEAM_SUSPENDED":
                        case 9:
                            message.noticeWindow[i] = 9;
                            break;
                        case "NOTICE_WEBSITE_CANCELLED":
                        case 10:
                            message.noticeWindow[i] = 10;
                            break;
                        case "NOTICE_WEBSITE_EXPIRATION_EXPECTED":
                        case 11:
                            message.noticeWindow[i] = 11;
                            break;
                        case "NOTICE_WEBSITE_EXPIRED":
                        case 12:
                            message.noticeWindow[i] = 12;
                            break;
                        }
                }
                if (object.noticeWindowMessage) {
                    if (!Array.isArray(object.noticeWindowMessage))
                        throw TypeError(".wm5.protobuf.LoadDriveInformationResponse.noticeWindowMessage: array expected");
                    message.noticeWindowMessage = [];
                    for (let i = 0; i < object.noticeWindowMessage.length; ++i)
                        message.noticeWindowMessage[i] = String(object.noticeWindowMessage[i]);
                }
                if (object.transferNotice != null) {
                    if (typeof object.transferNotice !== "object")
                        throw TypeError(".wm5.protobuf.LoadDriveInformationResponse.transferNotice: object expected");
                    message.transferNotice = $root.wm5.protobuf.TransferNotice.fromObject(object.transferNotice);
                }
                if (object.restrictedModels) {
                    if (!Array.isArray(object.restrictedModels))
                        throw TypeError(".wm5.protobuf.LoadDriveInformationResponse.restrictedModels: array expected");
                    message.restrictedModels = [];
                    for (let i = 0; i < object.restrictedModels.length; ++i)
                        message.restrictedModels[i] = object.restrictedModels[i] >>> 0;
                }
                if (object.announceFeature != null)
                    message.announceFeature = Boolean(object.announceFeature);
                if (object.announceMobile != null)
                    message.announceMobile = Boolean(object.announceMobile);
                if (object.numOfVsContinueTickets != null)
                    message.numOfVsContinueTickets = object.numOfVsContinueTickets >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadDriveInformationResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @static
             * @param {wm5.protobuf.LoadDriveInformationResponse} message LoadDriveInformationResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadDriveInformationResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.noticeWindow = [];
                    object.noticeWindowMessage = [];
                    object.restrictedModels = [];
                }
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.transferNotice = null;
                    object.announceFeature = false;
                    object.announceMobile = false;
                    object.numOfVsContinueTickets = 0;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.noticeWindow && message.noticeWindow.length) {
                    object.noticeWindow = [];
                    for (let j = 0; j < message.noticeWindow.length; ++j)
                        object.noticeWindow[j] = options.enums === String ? $root.wm5.protobuf.NoticeEntry[message.noticeWindow[j]] === undefined ? message.noticeWindow[j] : $root.wm5.protobuf.NoticeEntry[message.noticeWindow[j]] : message.noticeWindow[j];
                }
                if (message.noticeWindowMessage && message.noticeWindowMessage.length) {
                    object.noticeWindowMessage = [];
                    for (let j = 0; j < message.noticeWindowMessage.length; ++j)
                        object.noticeWindowMessage[j] = message.noticeWindowMessage[j];
                }
                if (message.transferNotice != null && message.hasOwnProperty("transferNotice"))
                    object.transferNotice = $root.wm5.protobuf.TransferNotice.toObject(message.transferNotice, options);
                if (message.restrictedModels && message.restrictedModels.length) {
                    object.restrictedModels = [];
                    for (let j = 0; j < message.restrictedModels.length; ++j)
                        object.restrictedModels[j] = message.restrictedModels[j];
                }
                if (message.announceFeature != null && message.hasOwnProperty("announceFeature"))
                    object.announceFeature = message.announceFeature;
                if (message.announceMobile != null && message.hasOwnProperty("announceMobile"))
                    object.announceMobile = message.announceMobile;
                if (message.numOfVsContinueTickets != null && message.hasOwnProperty("numOfVsContinueTickets"))
                    object.numOfVsContinueTickets = message.numOfVsContinueTickets;
                return object;
            };

            /**
             * Converts this LoadDriveInformationResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadDriveInformationResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadDriveInformationResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadDriveInformationResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadDriveInformationResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadDriveInformationResponse";
            };

            return LoadDriveInformationResponse;
        })();

        protobuf.LoadCarRequest = (function() {

            /**
             * Properties of a LoadCarRequest.
             * @memberof wm5.protobuf
             * @interface ILoadCarRequest
             * @property {number} carId LoadCarRequest carId
             * @property {boolean|null} [eventMode] LoadCarRequest eventMode
             * @property {string|null} [eventModeSerial] LoadCarRequest eventModeSerial
             */

            /**
             * Constructs a new LoadCarRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadCarRequest.
             * @implements ILoadCarRequest
             * @constructor
             * @param {wm5.protobuf.ILoadCarRequest=} [properties] Properties to set
             */
            function LoadCarRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadCarRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.LoadCarRequest
             * @instance
             */
            LoadCarRequest.prototype.carId = 0;

            /**
             * LoadCarRequest eventMode.
             * @member {boolean} eventMode
             * @memberof wm5.protobuf.LoadCarRequest
             * @instance
             */
            LoadCarRequest.prototype.eventMode = false;

            /**
             * LoadCarRequest eventModeSerial.
             * @member {string} eventModeSerial
             * @memberof wm5.protobuf.LoadCarRequest
             * @instance
             */
            LoadCarRequest.prototype.eventModeSerial = "";

            /**
             * Creates a new LoadCarRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadCarRequest
             * @static
             * @param {wm5.protobuf.ILoadCarRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadCarRequest} LoadCarRequest instance
             */
            LoadCarRequest.create = function create(properties) {
                return new LoadCarRequest(properties);
            };

            /**
             * Encodes the specified LoadCarRequest message. Does not implicitly {@link wm5.protobuf.LoadCarRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadCarRequest
             * @static
             * @param {wm5.protobuf.ILoadCarRequest} message LoadCarRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadCarRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                if (message.eventMode != null && Object.hasOwnProperty.call(message, "eventMode"))
                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.eventMode);
                if (message.eventModeSerial != null && Object.hasOwnProperty.call(message, "eventModeSerial"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.eventModeSerial);
                return writer;
            };

            /**
             * Encodes the specified LoadCarRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadCarRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadCarRequest
             * @static
             * @param {wm5.protobuf.ILoadCarRequest} message LoadCarRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadCarRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadCarRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadCarRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadCarRequest} LoadCarRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadCarRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadCarRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.eventMode = reader.bool();
                            break;
                        }
                    case 3: {
                            message.eventModeSerial = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadCarRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadCarRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadCarRequest} LoadCarRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadCarRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadCarRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadCarRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadCarRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                if (message.eventMode != null && message.hasOwnProperty("eventMode"))
                    if (typeof message.eventMode !== "boolean")
                        return "eventMode: boolean expected";
                if (message.eventModeSerial != null && message.hasOwnProperty("eventModeSerial"))
                    if (!$util.isString(message.eventModeSerial))
                        return "eventModeSerial: string expected";
                return null;
            };

            /**
             * Creates a LoadCarRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadCarRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadCarRequest} LoadCarRequest
             */
            LoadCarRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadCarRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadCarRequest();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.eventMode != null)
                    message.eventMode = Boolean(object.eventMode);
                if (object.eventModeSerial != null)
                    message.eventModeSerial = String(object.eventModeSerial);
                return message;
            };

            /**
             * Creates a plain object from a LoadCarRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadCarRequest
             * @static
             * @param {wm5.protobuf.LoadCarRequest} message LoadCarRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadCarRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.carId = 0;
                    object.eventMode = false;
                    object.eventModeSerial = "";
                }
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.eventMode != null && message.hasOwnProperty("eventMode"))
                    object.eventMode = message.eventMode;
                if (message.eventModeSerial != null && message.hasOwnProperty("eventModeSerial"))
                    object.eventModeSerial = message.eventModeSerial;
                return object;
            };

            /**
             * Converts this LoadCarRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadCarRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadCarRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadCarRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadCarRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadCarRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadCarRequest";
            };

            return LoadCarRequest;
        })();

        protobuf.LoadCarResponse = (function() {

            /**
             * Properties of a LoadCarResponse.
             * @memberof wm5.protobuf
             * @interface ILoadCarResponse
             * @property {wm5.protobuf.ErrorCode} error LoadCarResponse error
             * @property {wm5.protobuf.ICar} car LoadCarResponse car
             * @property {number} tuningPoint LoadCarResponse tuningPoint
             * @property {number} shopPoint LoadCarResponse shopPoint
             * @property {number} shopGrade LoadCarResponse shopGrade
             * @property {number} odometer LoadCarResponse odometer
             * @property {number} playCount LoadCarResponse playCount
             * @property {boolean} earnedCustomColor LoadCarResponse earnedCustomColor
             * @property {number} totalMaxiGold LoadCarResponse totalMaxiGold
             * @property {wm5.protobuf.ICarSetting} setting LoadCarResponse setting
             * @property {Array.<number>|null} [bgmPlaylist] LoadCarResponse bgmPlaylist
             * @property {number} vsPlayCount LoadCarResponse vsPlayCount
             * @property {number} vsBurstCount LoadCarResponse vsBurstCount
             * @property {number} vsStarCount LoadCarResponse vsStarCount
             * @property {number} vsStarCountMax LoadCarResponse vsStarCountMax
             * @property {number} vsCoolOrWild LoadCarResponse vsCoolOrWild
             * @property {number} vsSmoothOrRough LoadCarResponse vsSmoothOrRough
             * @property {number} vsTripleStarMedals LoadCarResponse vsTripleStarMedals
             * @property {number} vsDoubleStarMedals LoadCarResponse vsDoubleStarMedals
             * @property {number} vsSingleStarMedals LoadCarResponse vsSingleStarMedals
             * @property {number} vsPlainMedals LoadCarResponse vsPlainMedals
             * @property {number} rgPlayCount LoadCarResponse rgPlayCount
             * @property {number} rgWinCount LoadCarResponse rgWinCount
             * @property {number} maxiCoin LoadCarResponse maxiCoin
             * @property {number} rgBlock LoadCarResponse rgBlock
             * @property {Array.<number>|null} [rgProgress] LoadCarResponse rgProgress
             * @property {number} rgClearCount LoadCarResponse rgClearCount
             * @property {number} rgConsecutiveLosses LoadCarResponse rgConsecutiveLosses
             * @property {number} rgPastClearRegions LoadCarResponse rgPastClearRegions
             * @property {number} rgCharacterEffect LoadCarResponse rgCharacterEffect
             * @property {number} rgMotionEffect LoadCarResponse rgMotionEffect
             * @property {number} rgStamp LoadCarResponse rgStamp
             * @property {number} stPlayCount LoadCarResponse stPlayCount
             * @property {number} stClearBits LoadCarResponse stClearBits
             * @property {number} stClearDivCount LoadCarResponse stClearDivCount
             * @property {number} stClearCount LoadCarResponse stClearCount
             * @property {number|Long} stLoseBits LoadCarResponse stLoseBits
             * @property {boolean} stLose LoadCarResponse stLose
             * @property {number} stConsecutiveWins LoadCarResponse stConsecutiveWins
             * @property {number} stConsecutiveWinsMax LoadCarResponse stConsecutiveWinsMax
             * @property {wm5.protobuf.IChallengerCar|null} [challenger] LoadCarResponse challenger
             * @property {wm5.protobuf.ICar|null} [challengerCar] LoadCarResponse challengerCar
             * @property {number|null} [challengerReturnCount] LoadCarResponse challengerReturnCount
             * @property {number|null} [numOfChallengers] LoadCarResponse numOfChallengers
             * @property {wm5.protobuf.IGhostCar|null} [opponentGhost] LoadCarResponse opponentGhost
             * @property {number|Long|null} [opponentTrailId] LoadCarResponse opponentTrailId
             * @property {number|null} [opponentCompetitionId] LoadCarResponse opponentCompetitionId
             * @property {wm5.protobuf.IGhostCompetitionParameter|null} [competitionParameter] LoadCarResponse competitionParameter
             * @property {Array.<string>|null} [specialTitles] LoadCarResponse specialTitles
             * @property {Array.<string>|null} [earnedTitles] LoadCarResponse earnedTitles
             * @property {Array.<wm5.protobuf.ICarItem>|null} [ownedItems] LoadCarResponse ownedItems
             * @property {boolean} auraMotifAutoChange LoadCarResponse auraMotifAutoChange
             * @property {wm5.protobuf.ISpecialAuraMotif|null} [specialAuraMotif] LoadCarResponse specialAuraMotif
             * @property {number} screenshotCount LoadCarResponse screenshotCount
             * @property {boolean|null} [announceEventModePrize] LoadCarResponse announceEventModePrize
             * @property {wm5.protobuf.GhostExpeditionParticipantState|null} [ghostExpeditionState] LoadCarResponse ghostExpeditionState
             */

            /**
             * Constructs a new LoadCarResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadCarResponse.
             * @implements ILoadCarResponse
             * @constructor
             * @param {wm5.protobuf.ILoadCarResponse=} [properties] Properties to set
             */
            function LoadCarResponse(properties) {
                this.bgmPlaylist = [];
                this.rgProgress = [];
                this.specialTitles = [];
                this.earnedTitles = [];
                this.ownedItems = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadCarResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.error = 0;

            /**
             * LoadCarResponse car.
             * @member {wm5.protobuf.ICar} car
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.car = null;

            /**
             * LoadCarResponse tuningPoint.
             * @member {number} tuningPoint
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.tuningPoint = 0;

            /**
             * LoadCarResponse shopPoint.
             * @member {number} shopPoint
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.shopPoint = 0;

            /**
             * LoadCarResponse shopGrade.
             * @member {number} shopGrade
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.shopGrade = 0;

            /**
             * LoadCarResponse odometer.
             * @member {number} odometer
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.odometer = 0;

            /**
             * LoadCarResponse playCount.
             * @member {number} playCount
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.playCount = 0;

            /**
             * LoadCarResponse earnedCustomColor.
             * @member {boolean} earnedCustomColor
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.earnedCustomColor = false;

            /**
             * LoadCarResponse totalMaxiGold.
             * @member {number} totalMaxiGold
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.totalMaxiGold = 0;

            /**
             * LoadCarResponse setting.
             * @member {wm5.protobuf.ICarSetting} setting
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.setting = null;

            /**
             * LoadCarResponse bgmPlaylist.
             * @member {Array.<number>} bgmPlaylist
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.bgmPlaylist = $util.emptyArray;

            /**
             * LoadCarResponse vsPlayCount.
             * @member {number} vsPlayCount
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.vsPlayCount = 0;

            /**
             * LoadCarResponse vsBurstCount.
             * @member {number} vsBurstCount
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.vsBurstCount = 0;

            /**
             * LoadCarResponse vsStarCount.
             * @member {number} vsStarCount
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.vsStarCount = 0;

            /**
             * LoadCarResponse vsStarCountMax.
             * @member {number} vsStarCountMax
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.vsStarCountMax = 0;

            /**
             * LoadCarResponse vsCoolOrWild.
             * @member {number} vsCoolOrWild
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.vsCoolOrWild = 0;

            /**
             * LoadCarResponse vsSmoothOrRough.
             * @member {number} vsSmoothOrRough
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.vsSmoothOrRough = 0;

            /**
             * LoadCarResponse vsTripleStarMedals.
             * @member {number} vsTripleStarMedals
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.vsTripleStarMedals = 0;

            /**
             * LoadCarResponse vsDoubleStarMedals.
             * @member {number} vsDoubleStarMedals
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.vsDoubleStarMedals = 0;

            /**
             * LoadCarResponse vsSingleStarMedals.
             * @member {number} vsSingleStarMedals
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.vsSingleStarMedals = 0;

            /**
             * LoadCarResponse vsPlainMedals.
             * @member {number} vsPlainMedals
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.vsPlainMedals = 0;

            /**
             * LoadCarResponse rgPlayCount.
             * @member {number} rgPlayCount
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.rgPlayCount = 0;

            /**
             * LoadCarResponse rgWinCount.
             * @member {number} rgWinCount
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.rgWinCount = 0;

            /**
             * LoadCarResponse maxiCoin.
             * @member {number} maxiCoin
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.maxiCoin = 0;

            /**
             * LoadCarResponse rgBlock.
             * @member {number} rgBlock
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.rgBlock = 0;

            /**
             * LoadCarResponse rgProgress.
             * @member {Array.<number>} rgProgress
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.rgProgress = $util.emptyArray;

            /**
             * LoadCarResponse rgClearCount.
             * @member {number} rgClearCount
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.rgClearCount = 0;

            /**
             * LoadCarResponse rgConsecutiveLosses.
             * @member {number} rgConsecutiveLosses
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.rgConsecutiveLosses = 0;

            /**
             * LoadCarResponse rgPastClearRegions.
             * @member {number} rgPastClearRegions
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.rgPastClearRegions = 0;

            /**
             * LoadCarResponse rgCharacterEffect.
             * @member {number} rgCharacterEffect
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.rgCharacterEffect = 0;

            /**
             * LoadCarResponse rgMotionEffect.
             * @member {number} rgMotionEffect
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.rgMotionEffect = 0;

            /**
             * LoadCarResponse rgStamp.
             * @member {number} rgStamp
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.rgStamp = 0;

            /**
             * LoadCarResponse stPlayCount.
             * @member {number} stPlayCount
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.stPlayCount = 0;

            /**
             * LoadCarResponse stClearBits.
             * @member {number} stClearBits
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.stClearBits = 0;

            /**
             * LoadCarResponse stClearDivCount.
             * @member {number} stClearDivCount
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.stClearDivCount = 0;

            /**
             * LoadCarResponse stClearCount.
             * @member {number} stClearCount
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.stClearCount = 0;

            /**
             * LoadCarResponse stLoseBits.
             * @member {number|Long} stLoseBits
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.stLoseBits = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

            /**
             * LoadCarResponse stLose.
             * @member {boolean} stLose
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.stLose = false;

            /**
             * LoadCarResponse stConsecutiveWins.
             * @member {number} stConsecutiveWins
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.stConsecutiveWins = 0;

            /**
             * LoadCarResponse stConsecutiveWinsMax.
             * @member {number} stConsecutiveWinsMax
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.stConsecutiveWinsMax = 0;

            /**
             * LoadCarResponse challenger.
             * @member {wm5.protobuf.IChallengerCar|null|undefined} challenger
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.challenger = null;

            /**
             * LoadCarResponse challengerCar.
             * @member {wm5.protobuf.ICar|null|undefined} challengerCar
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.challengerCar = null;

            /**
             * LoadCarResponse challengerReturnCount.
             * @member {number} challengerReturnCount
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.challengerReturnCount = 0;

            /**
             * LoadCarResponse numOfChallengers.
             * @member {number} numOfChallengers
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.numOfChallengers = 0;

            /**
             * LoadCarResponse opponentGhost.
             * @member {wm5.protobuf.IGhostCar|null|undefined} opponentGhost
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.opponentGhost = null;

            /**
             * LoadCarResponse opponentTrailId.
             * @member {number|Long} opponentTrailId
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.opponentTrailId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

            /**
             * LoadCarResponse opponentCompetitionId.
             * @member {number} opponentCompetitionId
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.opponentCompetitionId = 0;

            /**
             * LoadCarResponse competitionParameter.
             * @member {wm5.protobuf.IGhostCompetitionParameter|null|undefined} competitionParameter
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.competitionParameter = null;

            /**
             * LoadCarResponse specialTitles.
             * @member {Array.<string>} specialTitles
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.specialTitles = $util.emptyArray;

            /**
             * LoadCarResponse earnedTitles.
             * @member {Array.<string>} earnedTitles
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.earnedTitles = $util.emptyArray;

            /**
             * LoadCarResponse ownedItems.
             * @member {Array.<wm5.protobuf.ICarItem>} ownedItems
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.ownedItems = $util.emptyArray;

            /**
             * LoadCarResponse auraMotifAutoChange.
             * @member {boolean} auraMotifAutoChange
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.auraMotifAutoChange = false;

            /**
             * LoadCarResponse specialAuraMotif.
             * @member {wm5.protobuf.ISpecialAuraMotif|null|undefined} specialAuraMotif
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.specialAuraMotif = null;

            /**
             * LoadCarResponse screenshotCount.
             * @member {number} screenshotCount
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.screenshotCount = 0;

            /**
             * LoadCarResponse announceEventModePrize.
             * @member {boolean} announceEventModePrize
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.announceEventModePrize = false;

            /**
             * LoadCarResponse ghostExpeditionState.
             * @member {wm5.protobuf.GhostExpeditionParticipantState} ghostExpeditionState
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             */
            LoadCarResponse.prototype.ghostExpeditionState = 1;

            /**
             * Creates a new LoadCarResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadCarResponse
             * @static
             * @param {wm5.protobuf.ILoadCarResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadCarResponse} LoadCarResponse instance
             */
            LoadCarResponse.create = function create(properties) {
                return new LoadCarResponse(properties);
            };

            /**
             * Encodes the specified LoadCarResponse message. Does not implicitly {@link wm5.protobuf.LoadCarResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadCarResponse
             * @static
             * @param {wm5.protobuf.ILoadCarResponse} message LoadCarResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadCarResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                $root.wm5.protobuf.Car.encode(message.car, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.tuningPoint);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.shopPoint);
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.shopGrade);
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.odometer);
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.playCount);
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.earnedCustomColor);
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.totalMaxiGold);
                $root.wm5.protobuf.CarSetting.encode(message.setting, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                if (message.bgmPlaylist != null && message.bgmPlaylist.length)
                    for (let i = 0; i < message.bgmPlaylist.length; ++i)
                        writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.bgmPlaylist[i]);
                writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.vsPlayCount);
                writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.vsBurstCount);
                writer.uint32(/* id 14, wireType 0 =*/112).uint32(message.vsStarCount);
                writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.vsStarCountMax);
                writer.uint32(/* id 16, wireType 0 =*/128).sint32(message.vsCoolOrWild);
                writer.uint32(/* id 17, wireType 0 =*/136).sint32(message.vsSmoothOrRough);
                writer.uint32(/* id 18, wireType 0 =*/144).uint32(message.vsTripleStarMedals);
                writer.uint32(/* id 19, wireType 0 =*/152).uint32(message.vsDoubleStarMedals);
                writer.uint32(/* id 20, wireType 0 =*/160).uint32(message.vsSingleStarMedals);
                writer.uint32(/* id 21, wireType 0 =*/168).uint32(message.vsPlainMedals);
                writer.uint32(/* id 22, wireType 0 =*/176).uint32(message.rgPlayCount);
                writer.uint32(/* id 23, wireType 0 =*/184).uint32(message.rgWinCount);
                writer.uint32(/* id 24, wireType 0 =*/192).uint32(message.maxiCoin);
                writer.uint32(/* id 25, wireType 0 =*/200).uint32(message.rgBlock);
                if (message.rgProgress != null && message.rgProgress.length) {
                    writer.uint32(/* id 26, wireType 2 =*/210).fork();
                    for (let i = 0; i < message.rgProgress.length; ++i)
                        writer.uint32(message.rgProgress[i]);
                    writer.ldelim();
                }
                writer.uint32(/* id 27, wireType 0 =*/216).uint32(message.rgClearCount);
                writer.uint32(/* id 28, wireType 0 =*/224).uint32(message.rgConsecutiveLosses);
                writer.uint32(/* id 29, wireType 0 =*/232).uint32(message.rgCharacterEffect);
                writer.uint32(/* id 30, wireType 0 =*/240).uint32(message.rgMotionEffect);
                writer.uint32(/* id 34, wireType 0 =*/272).uint32(message.stPlayCount);
                writer.uint32(/* id 35, wireType 0 =*/280).uint32(message.stClearBits);
                writer.uint32(/* id 36, wireType 0 =*/288).uint32(message.stClearDivCount);
                writer.uint32(/* id 37, wireType 0 =*/296).uint32(message.stClearCount);
                writer.uint32(/* id 38, wireType 0 =*/304).uint64(message.stLoseBits);
                writer.uint32(/* id 39, wireType 0 =*/312).bool(message.stLose);
                writer.uint32(/* id 40, wireType 0 =*/320).uint32(message.stConsecutiveWins);
                writer.uint32(/* id 41, wireType 0 =*/328).uint32(message.stConsecutiveWinsMax);
                if (message.challenger != null && Object.hasOwnProperty.call(message, "challenger"))
                    $root.wm5.protobuf.ChallengerCar.encode(message.challenger, writer.uint32(/* id 42, wireType 2 =*/338).fork()).ldelim();
                if (message.challengerReturnCount != null && Object.hasOwnProperty.call(message, "challengerReturnCount"))
                    writer.uint32(/* id 43, wireType 0 =*/344).uint32(message.challengerReturnCount);
                if (message.opponentGhost != null && Object.hasOwnProperty.call(message, "opponentGhost"))
                    $root.wm5.protobuf.GhostCar.encode(message.opponentGhost, writer.uint32(/* id 44, wireType 2 =*/354).fork()).ldelim();
                if (message.opponentTrailId != null && Object.hasOwnProperty.call(message, "opponentTrailId"))
                    writer.uint32(/* id 45, wireType 0 =*/360).uint64(message.opponentTrailId);
                if (message.opponentCompetitionId != null && Object.hasOwnProperty.call(message, "opponentCompetitionId"))
                    writer.uint32(/* id 46, wireType 0 =*/368).uint32(message.opponentCompetitionId);
                if (message.competitionParameter != null && Object.hasOwnProperty.call(message, "competitionParameter"))
                    $root.wm5.protobuf.GhostCompetitionParameter.encode(message.competitionParameter, writer.uint32(/* id 47, wireType 2 =*/378).fork()).ldelim();
                if (message.specialTitles != null && message.specialTitles.length)
                    for (let i = 0; i < message.specialTitles.length; ++i)
                        writer.uint32(/* id 48, wireType 2 =*/386).string(message.specialTitles[i]);
                if (message.earnedTitles != null && message.earnedTitles.length)
                    for (let i = 0; i < message.earnedTitles.length; ++i)
                        writer.uint32(/* id 49, wireType 2 =*/394).string(message.earnedTitles[i]);
                if (message.ownedItems != null && message.ownedItems.length)
                    for (let i = 0; i < message.ownedItems.length; ++i)
                        $root.wm5.protobuf.CarItem.encode(message.ownedItems[i], writer.uint32(/* id 50, wireType 2 =*/402).fork()).ldelim();
                writer.uint32(/* id 51, wireType 0 =*/408).bool(message.auraMotifAutoChange);
                if (message.specialAuraMotif != null && Object.hasOwnProperty.call(message, "specialAuraMotif"))
                    $root.wm5.protobuf.SpecialAuraMotif.encode(message.specialAuraMotif, writer.uint32(/* id 52, wireType 2 =*/418).fork()).ldelim();
                writer.uint32(/* id 53, wireType 0 =*/424).uint32(message.screenshotCount);
                writer.uint32(/* id 54, wireType 0 =*/432).uint32(message.rgStamp);
                if (message.numOfChallengers != null && Object.hasOwnProperty.call(message, "numOfChallengers"))
                    writer.uint32(/* id 55, wireType 0 =*/440).uint32(message.numOfChallengers);
                writer.uint32(/* id 56, wireType 0 =*/448).uint32(message.rgPastClearRegions);
                if (message.challengerCar != null && Object.hasOwnProperty.call(message, "challengerCar"))
                    $root.wm5.protobuf.Car.encode(message.challengerCar, writer.uint32(/* id 57, wireType 2 =*/458).fork()).ldelim();
                if (message.announceEventModePrize != null && Object.hasOwnProperty.call(message, "announceEventModePrize"))
                    writer.uint32(/* id 58, wireType 0 =*/464).bool(message.announceEventModePrize);
                if (message.ghostExpeditionState != null && Object.hasOwnProperty.call(message, "ghostExpeditionState"))
                    writer.uint32(/* id 59, wireType 0 =*/472).int32(message.ghostExpeditionState);
                return writer;
            };

            /**
             * Encodes the specified LoadCarResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadCarResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadCarResponse
             * @static
             * @param {wm5.protobuf.ILoadCarResponse} message LoadCarResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadCarResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadCarResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadCarResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadCarResponse} LoadCarResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadCarResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadCarResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.car = $root.wm5.protobuf.Car.decode(reader, reader.uint32());
                            break;
                        }
                    case 3: {
                            message.tuningPoint = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.shopPoint = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.shopGrade = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.odometer = reader.uint32();
                            break;
                        }
                    case 7: {
                            message.playCount = reader.uint32();
                            break;
                        }
                    case 8: {
                            message.earnedCustomColor = reader.bool();
                            break;
                        }
                    case 9: {
                            message.totalMaxiGold = reader.uint32();
                            break;
                        }
                    case 10: {
                            message.setting = $root.wm5.protobuf.CarSetting.decode(reader, reader.uint32());
                            break;
                        }
                    case 11: {
                            if (!(message.bgmPlaylist && message.bgmPlaylist.length))
                                message.bgmPlaylist = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.bgmPlaylist.push(reader.uint32());
                            } else
                                message.bgmPlaylist.push(reader.uint32());
                            break;
                        }
                    case 12: {
                            message.vsPlayCount = reader.uint32();
                            break;
                        }
                    case 13: {
                            message.vsBurstCount = reader.uint32();
                            break;
                        }
                    case 14: {
                            message.vsStarCount = reader.uint32();
                            break;
                        }
                    case 15: {
                            message.vsStarCountMax = reader.uint32();
                            break;
                        }
                    case 16: {
                            message.vsCoolOrWild = reader.sint32();
                            break;
                        }
                    case 17: {
                            message.vsSmoothOrRough = reader.sint32();
                            break;
                        }
                    case 18: {
                            message.vsTripleStarMedals = reader.uint32();
                            break;
                        }
                    case 19: {
                            message.vsDoubleStarMedals = reader.uint32();
                            break;
                        }
                    case 20: {
                            message.vsSingleStarMedals = reader.uint32();
                            break;
                        }
                    case 21: {
                            message.vsPlainMedals = reader.uint32();
                            break;
                        }
                    case 22: {
                            message.rgPlayCount = reader.uint32();
                            break;
                        }
                    case 23: {
                            message.rgWinCount = reader.uint32();
                            break;
                        }
                    case 24: {
                            message.maxiCoin = reader.uint32();
                            break;
                        }
                    case 25: {
                            message.rgBlock = reader.uint32();
                            break;
                        }
                    case 26: {
                            if (!(message.rgProgress && message.rgProgress.length))
                                message.rgProgress = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.rgProgress.push(reader.uint32());
                            } else
                                message.rgProgress.push(reader.uint32());
                            break;
                        }
                    case 27: {
                            message.rgClearCount = reader.uint32();
                            break;
                        }
                    case 28: {
                            message.rgConsecutiveLosses = reader.uint32();
                            break;
                        }
                    case 56: {
                            message.rgPastClearRegions = reader.uint32();
                            break;
                        }
                    case 29: {
                            message.rgCharacterEffect = reader.uint32();
                            break;
                        }
                    case 30: {
                            message.rgMotionEffect = reader.uint32();
                            break;
                        }
                    case 54: {
                            message.rgStamp = reader.uint32();
                            break;
                        }
                    case 34: {
                            message.stPlayCount = reader.uint32();
                            break;
                        }
                    case 35: {
                            message.stClearBits = reader.uint32();
                            break;
                        }
                    case 36: {
                            message.stClearDivCount = reader.uint32();
                            break;
                        }
                    case 37: {
                            message.stClearCount = reader.uint32();
                            break;
                        }
                    case 38: {
                            message.stLoseBits = reader.uint64();
                            break;
                        }
                    case 39: {
                            message.stLose = reader.bool();
                            break;
                        }
                    case 40: {
                            message.stConsecutiveWins = reader.uint32();
                            break;
                        }
                    case 41: {
                            message.stConsecutiveWinsMax = reader.uint32();
                            break;
                        }
                    case 42: {
                            message.challenger = $root.wm5.protobuf.ChallengerCar.decode(reader, reader.uint32());
                            break;
                        }
                    case 57: {
                            message.challengerCar = $root.wm5.protobuf.Car.decode(reader, reader.uint32());
                            break;
                        }
                    case 43: {
                            message.challengerReturnCount = reader.uint32();
                            break;
                        }
                    case 55: {
                            message.numOfChallengers = reader.uint32();
                            break;
                        }
                    case 44: {
                            message.opponentGhost = $root.wm5.protobuf.GhostCar.decode(reader, reader.uint32());
                            break;
                        }
                    case 45: {
                            message.opponentTrailId = reader.uint64();
                            break;
                        }
                    case 46: {
                            message.opponentCompetitionId = reader.uint32();
                            break;
                        }
                    case 47: {
                            message.competitionParameter = $root.wm5.protobuf.GhostCompetitionParameter.decode(reader, reader.uint32());
                            break;
                        }
                    case 48: {
                            if (!(message.specialTitles && message.specialTitles.length))
                                message.specialTitles = [];
                            message.specialTitles.push(reader.string());
                            break;
                        }
                    case 49: {
                            if (!(message.earnedTitles && message.earnedTitles.length))
                                message.earnedTitles = [];
                            message.earnedTitles.push(reader.string());
                            break;
                        }
                    case 50: {
                            if (!(message.ownedItems && message.ownedItems.length))
                                message.ownedItems = [];
                            message.ownedItems.push($root.wm5.protobuf.CarItem.decode(reader, reader.uint32()));
                            break;
                        }
                    case 51: {
                            message.auraMotifAutoChange = reader.bool();
                            break;
                        }
                    case 52: {
                            message.specialAuraMotif = $root.wm5.protobuf.SpecialAuraMotif.decode(reader, reader.uint32());
                            break;
                        }
                    case 53: {
                            message.screenshotCount = reader.uint32();
                            break;
                        }
                    case 58: {
                            message.announceEventModePrize = reader.bool();
                            break;
                        }
                    case 59: {
                            message.ghostExpeditionState = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("car"))
                    throw $util.ProtocolError("missing required 'car'", { instance: message });
                if (!message.hasOwnProperty("tuningPoint"))
                    throw $util.ProtocolError("missing required 'tuningPoint'", { instance: message });
                if (!message.hasOwnProperty("shopPoint"))
                    throw $util.ProtocolError("missing required 'shopPoint'", { instance: message });
                if (!message.hasOwnProperty("shopGrade"))
                    throw $util.ProtocolError("missing required 'shopGrade'", { instance: message });
                if (!message.hasOwnProperty("odometer"))
                    throw $util.ProtocolError("missing required 'odometer'", { instance: message });
                if (!message.hasOwnProperty("playCount"))
                    throw $util.ProtocolError("missing required 'playCount'", { instance: message });
                if (!message.hasOwnProperty("earnedCustomColor"))
                    throw $util.ProtocolError("missing required 'earnedCustomColor'", { instance: message });
                if (!message.hasOwnProperty("totalMaxiGold"))
                    throw $util.ProtocolError("missing required 'totalMaxiGold'", { instance: message });
                if (!message.hasOwnProperty("setting"))
                    throw $util.ProtocolError("missing required 'setting'", { instance: message });
                if (!message.hasOwnProperty("vsPlayCount"))
                    throw $util.ProtocolError("missing required 'vsPlayCount'", { instance: message });
                if (!message.hasOwnProperty("vsBurstCount"))
                    throw $util.ProtocolError("missing required 'vsBurstCount'", { instance: message });
                if (!message.hasOwnProperty("vsStarCount"))
                    throw $util.ProtocolError("missing required 'vsStarCount'", { instance: message });
                if (!message.hasOwnProperty("vsStarCountMax"))
                    throw $util.ProtocolError("missing required 'vsStarCountMax'", { instance: message });
                if (!message.hasOwnProperty("vsCoolOrWild"))
                    throw $util.ProtocolError("missing required 'vsCoolOrWild'", { instance: message });
                if (!message.hasOwnProperty("vsSmoothOrRough"))
                    throw $util.ProtocolError("missing required 'vsSmoothOrRough'", { instance: message });
                if (!message.hasOwnProperty("vsTripleStarMedals"))
                    throw $util.ProtocolError("missing required 'vsTripleStarMedals'", { instance: message });
                if (!message.hasOwnProperty("vsDoubleStarMedals"))
                    throw $util.ProtocolError("missing required 'vsDoubleStarMedals'", { instance: message });
                if (!message.hasOwnProperty("vsSingleStarMedals"))
                    throw $util.ProtocolError("missing required 'vsSingleStarMedals'", { instance: message });
                if (!message.hasOwnProperty("vsPlainMedals"))
                    throw $util.ProtocolError("missing required 'vsPlainMedals'", { instance: message });
                if (!message.hasOwnProperty("rgPlayCount"))
                    throw $util.ProtocolError("missing required 'rgPlayCount'", { instance: message });
                if (!message.hasOwnProperty("rgWinCount"))
                    throw $util.ProtocolError("missing required 'rgWinCount'", { instance: message });
                if (!message.hasOwnProperty("maxiCoin"))
                    throw $util.ProtocolError("missing required 'maxiCoin'", { instance: message });
                if (!message.hasOwnProperty("rgBlock"))
                    throw $util.ProtocolError("missing required 'rgBlock'", { instance: message });
                if (!message.hasOwnProperty("rgClearCount"))
                    throw $util.ProtocolError("missing required 'rgClearCount'", { instance: message });
                if (!message.hasOwnProperty("rgConsecutiveLosses"))
                    throw $util.ProtocolError("missing required 'rgConsecutiveLosses'", { instance: message });
                if (!message.hasOwnProperty("rgPastClearRegions"))
                    throw $util.ProtocolError("missing required 'rgPastClearRegions'", { instance: message });
                if (!message.hasOwnProperty("rgCharacterEffect"))
                    throw $util.ProtocolError("missing required 'rgCharacterEffect'", { instance: message });
                if (!message.hasOwnProperty("rgMotionEffect"))
                    throw $util.ProtocolError("missing required 'rgMotionEffect'", { instance: message });
                if (!message.hasOwnProperty("rgStamp"))
                    throw $util.ProtocolError("missing required 'rgStamp'", { instance: message });
                if (!message.hasOwnProperty("stPlayCount"))
                    throw $util.ProtocolError("missing required 'stPlayCount'", { instance: message });
                if (!message.hasOwnProperty("stClearBits"))
                    throw $util.ProtocolError("missing required 'stClearBits'", { instance: message });
                if (!message.hasOwnProperty("stClearDivCount"))
                    throw $util.ProtocolError("missing required 'stClearDivCount'", { instance: message });
                if (!message.hasOwnProperty("stClearCount"))
                    throw $util.ProtocolError("missing required 'stClearCount'", { instance: message });
                if (!message.hasOwnProperty("stLoseBits"))
                    throw $util.ProtocolError("missing required 'stLoseBits'", { instance: message });
                if (!message.hasOwnProperty("stLose"))
                    throw $util.ProtocolError("missing required 'stLose'", { instance: message });
                if (!message.hasOwnProperty("stConsecutiveWins"))
                    throw $util.ProtocolError("missing required 'stConsecutiveWins'", { instance: message });
                if (!message.hasOwnProperty("stConsecutiveWinsMax"))
                    throw $util.ProtocolError("missing required 'stConsecutiveWinsMax'", { instance: message });
                if (!message.hasOwnProperty("auraMotifAutoChange"))
                    throw $util.ProtocolError("missing required 'auraMotifAutoChange'", { instance: message });
                if (!message.hasOwnProperty("screenshotCount"))
                    throw $util.ProtocolError("missing required 'screenshotCount'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadCarResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadCarResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadCarResponse} LoadCarResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadCarResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadCarResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadCarResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadCarResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                {
                    let error = $root.wm5.protobuf.Car.verify(message.car);
                    if (error)
                        return "car." + error;
                }
                if (!$util.isInteger(message.tuningPoint))
                    return "tuningPoint: integer expected";
                if (!$util.isInteger(message.shopPoint))
                    return "shopPoint: integer expected";
                if (!$util.isInteger(message.shopGrade))
                    return "shopGrade: integer expected";
                if (!$util.isInteger(message.odometer))
                    return "odometer: integer expected";
                if (!$util.isInteger(message.playCount))
                    return "playCount: integer expected";
                if (typeof message.earnedCustomColor !== "boolean")
                    return "earnedCustomColor: boolean expected";
                if (!$util.isInteger(message.totalMaxiGold))
                    return "totalMaxiGold: integer expected";
                {
                    let error = $root.wm5.protobuf.CarSetting.verify(message.setting);
                    if (error)
                        return "setting." + error;
                }
                if (message.bgmPlaylist != null && message.hasOwnProperty("bgmPlaylist")) {
                    if (!Array.isArray(message.bgmPlaylist))
                        return "bgmPlaylist: array expected";
                    for (let i = 0; i < message.bgmPlaylist.length; ++i)
                        if (!$util.isInteger(message.bgmPlaylist[i]))
                            return "bgmPlaylist: integer[] expected";
                }
                if (!$util.isInteger(message.vsPlayCount))
                    return "vsPlayCount: integer expected";
                if (!$util.isInteger(message.vsBurstCount))
                    return "vsBurstCount: integer expected";
                if (!$util.isInteger(message.vsStarCount))
                    return "vsStarCount: integer expected";
                if (!$util.isInteger(message.vsStarCountMax))
                    return "vsStarCountMax: integer expected";
                if (!$util.isInteger(message.vsCoolOrWild))
                    return "vsCoolOrWild: integer expected";
                if (!$util.isInteger(message.vsSmoothOrRough))
                    return "vsSmoothOrRough: integer expected";
                if (!$util.isInteger(message.vsTripleStarMedals))
                    return "vsTripleStarMedals: integer expected";
                if (!$util.isInteger(message.vsDoubleStarMedals))
                    return "vsDoubleStarMedals: integer expected";
                if (!$util.isInteger(message.vsSingleStarMedals))
                    return "vsSingleStarMedals: integer expected";
                if (!$util.isInteger(message.vsPlainMedals))
                    return "vsPlainMedals: integer expected";
                if (!$util.isInteger(message.rgPlayCount))
                    return "rgPlayCount: integer expected";
                if (!$util.isInteger(message.rgWinCount))
                    return "rgWinCount: integer expected";
                if (!$util.isInteger(message.maxiCoin))
                    return "maxiCoin: integer expected";
                if (!$util.isInteger(message.rgBlock))
                    return "rgBlock: integer expected";
                if (message.rgProgress != null && message.hasOwnProperty("rgProgress")) {
                    if (!Array.isArray(message.rgProgress))
                        return "rgProgress: array expected";
                    for (let i = 0; i < message.rgProgress.length; ++i)
                        if (!$util.isInteger(message.rgProgress[i]))
                            return "rgProgress: integer[] expected";
                }
                if (!$util.isInteger(message.rgClearCount))
                    return "rgClearCount: integer expected";
                if (!$util.isInteger(message.rgConsecutiveLosses))
                    return "rgConsecutiveLosses: integer expected";
                if (!$util.isInteger(message.rgPastClearRegions))
                    return "rgPastClearRegions: integer expected";
                if (!$util.isInteger(message.rgCharacterEffect))
                    return "rgCharacterEffect: integer expected";
                if (!$util.isInteger(message.rgMotionEffect))
                    return "rgMotionEffect: integer expected";
                if (!$util.isInteger(message.rgStamp))
                    return "rgStamp: integer expected";
                if (!$util.isInteger(message.stPlayCount))
                    return "stPlayCount: integer expected";
                if (!$util.isInteger(message.stClearBits))
                    return "stClearBits: integer expected";
                if (!$util.isInteger(message.stClearDivCount))
                    return "stClearDivCount: integer expected";
                if (!$util.isInteger(message.stClearCount))
                    return "stClearCount: integer expected";
                if (!$util.isInteger(message.stLoseBits) && !(message.stLoseBits && $util.isInteger(message.stLoseBits.low) && $util.isInteger(message.stLoseBits.high)))
                    return "stLoseBits: integer|Long expected";
                if (typeof message.stLose !== "boolean")
                    return "stLose: boolean expected";
                if (!$util.isInteger(message.stConsecutiveWins))
                    return "stConsecutiveWins: integer expected";
                if (!$util.isInteger(message.stConsecutiveWinsMax))
                    return "stConsecutiveWinsMax: integer expected";
                if (message.challenger != null && message.hasOwnProperty("challenger")) {
                    let error = $root.wm5.protobuf.ChallengerCar.verify(message.challenger);
                    if (error)
                        return "challenger." + error;
                }
                if (message.challengerCar != null && message.hasOwnProperty("challengerCar")) {
                    let error = $root.wm5.protobuf.Car.verify(message.challengerCar);
                    if (error)
                        return "challengerCar." + error;
                }
                if (message.challengerReturnCount != null && message.hasOwnProperty("challengerReturnCount"))
                    if (!$util.isInteger(message.challengerReturnCount))
                        return "challengerReturnCount: integer expected";
                if (message.numOfChallengers != null && message.hasOwnProperty("numOfChallengers"))
                    if (!$util.isInteger(message.numOfChallengers))
                        return "numOfChallengers: integer expected";
                if (message.opponentGhost != null && message.hasOwnProperty("opponentGhost")) {
                    let error = $root.wm5.protobuf.GhostCar.verify(message.opponentGhost);
                    if (error)
                        return "opponentGhost." + error;
                }
                if (message.opponentTrailId != null && message.hasOwnProperty("opponentTrailId"))
                    if (!$util.isInteger(message.opponentTrailId) && !(message.opponentTrailId && $util.isInteger(message.opponentTrailId.low) && $util.isInteger(message.opponentTrailId.high)))
                        return "opponentTrailId: integer|Long expected";
                if (message.opponentCompetitionId != null && message.hasOwnProperty("opponentCompetitionId"))
                    if (!$util.isInteger(message.opponentCompetitionId))
                        return "opponentCompetitionId: integer expected";
                if (message.competitionParameter != null && message.hasOwnProperty("competitionParameter")) {
                    let error = $root.wm5.protobuf.GhostCompetitionParameter.verify(message.competitionParameter);
                    if (error)
                        return "competitionParameter." + error;
                }
                if (message.specialTitles != null && message.hasOwnProperty("specialTitles")) {
                    if (!Array.isArray(message.specialTitles))
                        return "specialTitles: array expected";
                    for (let i = 0; i < message.specialTitles.length; ++i)
                        if (!$util.isString(message.specialTitles[i]))
                            return "specialTitles: string[] expected";
                }
                if (message.earnedTitles != null && message.hasOwnProperty("earnedTitles")) {
                    if (!Array.isArray(message.earnedTitles))
                        return "earnedTitles: array expected";
                    for (let i = 0; i < message.earnedTitles.length; ++i)
                        if (!$util.isString(message.earnedTitles[i]))
                            return "earnedTitles: string[] expected";
                }
                if (message.ownedItems != null && message.hasOwnProperty("ownedItems")) {
                    if (!Array.isArray(message.ownedItems))
                        return "ownedItems: array expected";
                    for (let i = 0; i < message.ownedItems.length; ++i) {
                        let error = $root.wm5.protobuf.CarItem.verify(message.ownedItems[i]);
                        if (error)
                            return "ownedItems." + error;
                    }
                }
                if (typeof message.auraMotifAutoChange !== "boolean")
                    return "auraMotifAutoChange: boolean expected";
                if (message.specialAuraMotif != null && message.hasOwnProperty("specialAuraMotif")) {
                    let error = $root.wm5.protobuf.SpecialAuraMotif.verify(message.specialAuraMotif);
                    if (error)
                        return "specialAuraMotif." + error;
                }
                if (!$util.isInteger(message.screenshotCount))
                    return "screenshotCount: integer expected";
                if (message.announceEventModePrize != null && message.hasOwnProperty("announceEventModePrize"))
                    if (typeof message.announceEventModePrize !== "boolean")
                        return "announceEventModePrize: boolean expected";
                if (message.ghostExpeditionState != null && message.hasOwnProperty("ghostExpeditionState"))
                    switch (message.ghostExpeditionState) {
                    default:
                        return "ghostExpeditionState: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                        break;
                    }
                return null;
            };

            /**
             * Creates a LoadCarResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadCarResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadCarResponse} LoadCarResponse
             */
            LoadCarResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadCarResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadCarResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.car != null) {
                    if (typeof object.car !== "object")
                        throw TypeError(".wm5.protobuf.LoadCarResponse.car: object expected");
                    message.car = $root.wm5.protobuf.Car.fromObject(object.car);
                }
                if (object.tuningPoint != null)
                    message.tuningPoint = object.tuningPoint >>> 0;
                if (object.shopPoint != null)
                    message.shopPoint = object.shopPoint >>> 0;
                if (object.shopGrade != null)
                    message.shopGrade = object.shopGrade >>> 0;
                if (object.odometer != null)
                    message.odometer = object.odometer >>> 0;
                if (object.playCount != null)
                    message.playCount = object.playCount >>> 0;
                if (object.earnedCustomColor != null)
                    message.earnedCustomColor = Boolean(object.earnedCustomColor);
                if (object.totalMaxiGold != null)
                    message.totalMaxiGold = object.totalMaxiGold >>> 0;
                if (object.setting != null) {
                    if (typeof object.setting !== "object")
                        throw TypeError(".wm5.protobuf.LoadCarResponse.setting: object expected");
                    message.setting = $root.wm5.protobuf.CarSetting.fromObject(object.setting);
                }
                if (object.bgmPlaylist) {
                    if (!Array.isArray(object.bgmPlaylist))
                        throw TypeError(".wm5.protobuf.LoadCarResponse.bgmPlaylist: array expected");
                    message.bgmPlaylist = [];
                    for (let i = 0; i < object.bgmPlaylist.length; ++i)
                        message.bgmPlaylist[i] = object.bgmPlaylist[i] >>> 0;
                }
                if (object.vsPlayCount != null)
                    message.vsPlayCount = object.vsPlayCount >>> 0;
                if (object.vsBurstCount != null)
                    message.vsBurstCount = object.vsBurstCount >>> 0;
                if (object.vsStarCount != null)
                    message.vsStarCount = object.vsStarCount >>> 0;
                if (object.vsStarCountMax != null)
                    message.vsStarCountMax = object.vsStarCountMax >>> 0;
                if (object.vsCoolOrWild != null)
                    message.vsCoolOrWild = object.vsCoolOrWild | 0;
                if (object.vsSmoothOrRough != null)
                    message.vsSmoothOrRough = object.vsSmoothOrRough | 0;
                if (object.vsTripleStarMedals != null)
                    message.vsTripleStarMedals = object.vsTripleStarMedals >>> 0;
                if (object.vsDoubleStarMedals != null)
                    message.vsDoubleStarMedals = object.vsDoubleStarMedals >>> 0;
                if (object.vsSingleStarMedals != null)
                    message.vsSingleStarMedals = object.vsSingleStarMedals >>> 0;
                if (object.vsPlainMedals != null)
                    message.vsPlainMedals = object.vsPlainMedals >>> 0;
                if (object.rgPlayCount != null)
                    message.rgPlayCount = object.rgPlayCount >>> 0;
                if (object.rgWinCount != null)
                    message.rgWinCount = object.rgWinCount >>> 0;
                if (object.maxiCoin != null)
                    message.maxiCoin = object.maxiCoin >>> 0;
                if (object.rgBlock != null)
                    message.rgBlock = object.rgBlock >>> 0;
                if (object.rgProgress) {
                    if (!Array.isArray(object.rgProgress))
                        throw TypeError(".wm5.protobuf.LoadCarResponse.rgProgress: array expected");
                    message.rgProgress = [];
                    for (let i = 0; i < object.rgProgress.length; ++i)
                        message.rgProgress[i] = object.rgProgress[i] >>> 0;
                }
                if (object.rgClearCount != null)
                    message.rgClearCount = object.rgClearCount >>> 0;
                if (object.rgConsecutiveLosses != null)
                    message.rgConsecutiveLosses = object.rgConsecutiveLosses >>> 0;
                if (object.rgPastClearRegions != null)
                    message.rgPastClearRegions = object.rgPastClearRegions >>> 0;
                if (object.rgCharacterEffect != null)
                    message.rgCharacterEffect = object.rgCharacterEffect >>> 0;
                if (object.rgMotionEffect != null)
                    message.rgMotionEffect = object.rgMotionEffect >>> 0;
                if (object.rgStamp != null)
                    message.rgStamp = object.rgStamp >>> 0;
                if (object.stPlayCount != null)
                    message.stPlayCount = object.stPlayCount >>> 0;
                if (object.stClearBits != null)
                    message.stClearBits = object.stClearBits >>> 0;
                if (object.stClearDivCount != null)
                    message.stClearDivCount = object.stClearDivCount >>> 0;
                if (object.stClearCount != null)
                    message.stClearCount = object.stClearCount >>> 0;
                if (object.stLoseBits != null)
                    if ($util.Long)
                        (message.stLoseBits = $util.Long.fromValue(object.stLoseBits)).unsigned = true;
                    else if (typeof object.stLoseBits === "string")
                        message.stLoseBits = parseInt(object.stLoseBits, 10);
                    else if (typeof object.stLoseBits === "number")
                        message.stLoseBits = object.stLoseBits;
                    else if (typeof object.stLoseBits === "object")
                        message.stLoseBits = new $util.LongBits(object.stLoseBits.low >>> 0, object.stLoseBits.high >>> 0).toNumber(true);
                if (object.stLose != null)
                    message.stLose = Boolean(object.stLose);
                if (object.stConsecutiveWins != null)
                    message.stConsecutiveWins = object.stConsecutiveWins >>> 0;
                if (object.stConsecutiveWinsMax != null)
                    message.stConsecutiveWinsMax = object.stConsecutiveWinsMax >>> 0;
                if (object.challenger != null) {
                    if (typeof object.challenger !== "object")
                        throw TypeError(".wm5.protobuf.LoadCarResponse.challenger: object expected");
                    message.challenger = $root.wm5.protobuf.ChallengerCar.fromObject(object.challenger);
                }
                if (object.challengerCar != null) {
                    if (typeof object.challengerCar !== "object")
                        throw TypeError(".wm5.protobuf.LoadCarResponse.challengerCar: object expected");
                    message.challengerCar = $root.wm5.protobuf.Car.fromObject(object.challengerCar);
                }
                if (object.challengerReturnCount != null)
                    message.challengerReturnCount = object.challengerReturnCount >>> 0;
                if (object.numOfChallengers != null)
                    message.numOfChallengers = object.numOfChallengers >>> 0;
                if (object.opponentGhost != null) {
                    if (typeof object.opponentGhost !== "object")
                        throw TypeError(".wm5.protobuf.LoadCarResponse.opponentGhost: object expected");
                    message.opponentGhost = $root.wm5.protobuf.GhostCar.fromObject(object.opponentGhost);
                }
                if (object.opponentTrailId != null)
                    if ($util.Long)
                        (message.opponentTrailId = $util.Long.fromValue(object.opponentTrailId)).unsigned = true;
                    else if (typeof object.opponentTrailId === "string")
                        message.opponentTrailId = parseInt(object.opponentTrailId, 10);
                    else if (typeof object.opponentTrailId === "number")
                        message.opponentTrailId = object.opponentTrailId;
                    else if (typeof object.opponentTrailId === "object")
                        message.opponentTrailId = new $util.LongBits(object.opponentTrailId.low >>> 0, object.opponentTrailId.high >>> 0).toNumber(true);
                if (object.opponentCompetitionId != null)
                    message.opponentCompetitionId = object.opponentCompetitionId >>> 0;
                if (object.competitionParameter != null) {
                    if (typeof object.competitionParameter !== "object")
                        throw TypeError(".wm5.protobuf.LoadCarResponse.competitionParameter: object expected");
                    message.competitionParameter = $root.wm5.protobuf.GhostCompetitionParameter.fromObject(object.competitionParameter);
                }
                if (object.specialTitles) {
                    if (!Array.isArray(object.specialTitles))
                        throw TypeError(".wm5.protobuf.LoadCarResponse.specialTitles: array expected");
                    message.specialTitles = [];
                    for (let i = 0; i < object.specialTitles.length; ++i)
                        message.specialTitles[i] = String(object.specialTitles[i]);
                }
                if (object.earnedTitles) {
                    if (!Array.isArray(object.earnedTitles))
                        throw TypeError(".wm5.protobuf.LoadCarResponse.earnedTitles: array expected");
                    message.earnedTitles = [];
                    for (let i = 0; i < object.earnedTitles.length; ++i)
                        message.earnedTitles[i] = String(object.earnedTitles[i]);
                }
                if (object.ownedItems) {
                    if (!Array.isArray(object.ownedItems))
                        throw TypeError(".wm5.protobuf.LoadCarResponse.ownedItems: array expected");
                    message.ownedItems = [];
                    for (let i = 0; i < object.ownedItems.length; ++i) {
                        if (typeof object.ownedItems[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadCarResponse.ownedItems: object expected");
                        message.ownedItems[i] = $root.wm5.protobuf.CarItem.fromObject(object.ownedItems[i]);
                    }
                }
                if (object.auraMotifAutoChange != null)
                    message.auraMotifAutoChange = Boolean(object.auraMotifAutoChange);
                if (object.specialAuraMotif != null) {
                    if (typeof object.specialAuraMotif !== "object")
                        throw TypeError(".wm5.protobuf.LoadCarResponse.specialAuraMotif: object expected");
                    message.specialAuraMotif = $root.wm5.protobuf.SpecialAuraMotif.fromObject(object.specialAuraMotif);
                }
                if (object.screenshotCount != null)
                    message.screenshotCount = object.screenshotCount >>> 0;
                if (object.announceEventModePrize != null)
                    message.announceEventModePrize = Boolean(object.announceEventModePrize);
                switch (object.ghostExpeditionState) {
                default:
                    if (typeof object.ghostExpeditionState === "number") {
                        message.ghostExpeditionState = object.ghostExpeditionState;
                        break;
                    }
                    break;
                case "EXPEDITION_NOT_PARTICIPATED":
                case 1:
                    message.ghostExpeditionState = 1;
                    break;
                case "EXPEDITION_PARTICIPATED":
                case 2:
                    message.ghostExpeditionState = 2;
                    break;
                case "EXPEDITION_RESULT_CONFIRMED":
                case 3:
                    message.ghostExpeditionState = 3;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a LoadCarResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadCarResponse
             * @static
             * @param {wm5.protobuf.LoadCarResponse} message LoadCarResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadCarResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.bgmPlaylist = [];
                    object.rgProgress = [];
                    object.specialTitles = [];
                    object.earnedTitles = [];
                    object.ownedItems = [];
                }
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.car = null;
                    object.tuningPoint = 0;
                    object.shopPoint = 0;
                    object.shopGrade = 0;
                    object.odometer = 0;
                    object.playCount = 0;
                    object.earnedCustomColor = false;
                    object.totalMaxiGold = 0;
                    object.setting = null;
                    object.vsPlayCount = 0;
                    object.vsBurstCount = 0;
                    object.vsStarCount = 0;
                    object.vsStarCountMax = 0;
                    object.vsCoolOrWild = 0;
                    object.vsSmoothOrRough = 0;
                    object.vsTripleStarMedals = 0;
                    object.vsDoubleStarMedals = 0;
                    object.vsSingleStarMedals = 0;
                    object.vsPlainMedals = 0;
                    object.rgPlayCount = 0;
                    object.rgWinCount = 0;
                    object.maxiCoin = 0;
                    object.rgBlock = 0;
                    object.rgClearCount = 0;
                    object.rgConsecutiveLosses = 0;
                    object.rgCharacterEffect = 0;
                    object.rgMotionEffect = 0;
                    object.stPlayCount = 0;
                    object.stClearBits = 0;
                    object.stClearDivCount = 0;
                    object.stClearCount = 0;
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, true);
                        object.stLoseBits = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.stLoseBits = options.longs === String ? "0" : 0;
                    object.stLose = false;
                    object.stConsecutiveWins = 0;
                    object.stConsecutiveWinsMax = 0;
                    object.challenger = null;
                    object.challengerReturnCount = 0;
                    object.opponentGhost = null;
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, true);
                        object.opponentTrailId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.opponentTrailId = options.longs === String ? "0" : 0;
                    object.opponentCompetitionId = 0;
                    object.competitionParameter = null;
                    object.auraMotifAutoChange = false;
                    object.specialAuraMotif = null;
                    object.screenshotCount = 0;
                    object.rgStamp = 0;
                    object.numOfChallengers = 0;
                    object.rgPastClearRegions = 0;
                    object.challengerCar = null;
                    object.announceEventModePrize = false;
                    object.ghostExpeditionState = options.enums === String ? "EXPEDITION_NOT_PARTICIPATED" : 1;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.car != null && message.hasOwnProperty("car"))
                    object.car = $root.wm5.protobuf.Car.toObject(message.car, options);
                if (message.tuningPoint != null && message.hasOwnProperty("tuningPoint"))
                    object.tuningPoint = message.tuningPoint;
                if (message.shopPoint != null && message.hasOwnProperty("shopPoint"))
                    object.shopPoint = message.shopPoint;
                if (message.shopGrade != null && message.hasOwnProperty("shopGrade"))
                    object.shopGrade = message.shopGrade;
                if (message.odometer != null && message.hasOwnProperty("odometer"))
                    object.odometer = message.odometer;
                if (message.playCount != null && message.hasOwnProperty("playCount"))
                    object.playCount = message.playCount;
                if (message.earnedCustomColor != null && message.hasOwnProperty("earnedCustomColor"))
                    object.earnedCustomColor = message.earnedCustomColor;
                if (message.totalMaxiGold != null && message.hasOwnProperty("totalMaxiGold"))
                    object.totalMaxiGold = message.totalMaxiGold;
                if (message.setting != null && message.hasOwnProperty("setting"))
                    object.setting = $root.wm5.protobuf.CarSetting.toObject(message.setting, options);
                if (message.bgmPlaylist && message.bgmPlaylist.length) {
                    object.bgmPlaylist = [];
                    for (let j = 0; j < message.bgmPlaylist.length; ++j)
                        object.bgmPlaylist[j] = message.bgmPlaylist[j];
                }
                if (message.vsPlayCount != null && message.hasOwnProperty("vsPlayCount"))
                    object.vsPlayCount = message.vsPlayCount;
                if (message.vsBurstCount != null && message.hasOwnProperty("vsBurstCount"))
                    object.vsBurstCount = message.vsBurstCount;
                if (message.vsStarCount != null && message.hasOwnProperty("vsStarCount"))
                    object.vsStarCount = message.vsStarCount;
                if (message.vsStarCountMax != null && message.hasOwnProperty("vsStarCountMax"))
                    object.vsStarCountMax = message.vsStarCountMax;
                if (message.vsCoolOrWild != null && message.hasOwnProperty("vsCoolOrWild"))
                    object.vsCoolOrWild = message.vsCoolOrWild;
                if (message.vsSmoothOrRough != null && message.hasOwnProperty("vsSmoothOrRough"))
                    object.vsSmoothOrRough = message.vsSmoothOrRough;
                if (message.vsTripleStarMedals != null && message.hasOwnProperty("vsTripleStarMedals"))
                    object.vsTripleStarMedals = message.vsTripleStarMedals;
                if (message.vsDoubleStarMedals != null && message.hasOwnProperty("vsDoubleStarMedals"))
                    object.vsDoubleStarMedals = message.vsDoubleStarMedals;
                if (message.vsSingleStarMedals != null && message.hasOwnProperty("vsSingleStarMedals"))
                    object.vsSingleStarMedals = message.vsSingleStarMedals;
                if (message.vsPlainMedals != null && message.hasOwnProperty("vsPlainMedals"))
                    object.vsPlainMedals = message.vsPlainMedals;
                if (message.rgPlayCount != null && message.hasOwnProperty("rgPlayCount"))
                    object.rgPlayCount = message.rgPlayCount;
                if (message.rgWinCount != null && message.hasOwnProperty("rgWinCount"))
                    object.rgWinCount = message.rgWinCount;
                if (message.maxiCoin != null && message.hasOwnProperty("maxiCoin"))
                    object.maxiCoin = message.maxiCoin;
                if (message.rgBlock != null && message.hasOwnProperty("rgBlock"))
                    object.rgBlock = message.rgBlock;
                if (message.rgProgress && message.rgProgress.length) {
                    object.rgProgress = [];
                    for (let j = 0; j < message.rgProgress.length; ++j)
                        object.rgProgress[j] = message.rgProgress[j];
                }
                if (message.rgClearCount != null && message.hasOwnProperty("rgClearCount"))
                    object.rgClearCount = message.rgClearCount;
                if (message.rgConsecutiveLosses != null && message.hasOwnProperty("rgConsecutiveLosses"))
                    object.rgConsecutiveLosses = message.rgConsecutiveLosses;
                if (message.rgCharacterEffect != null && message.hasOwnProperty("rgCharacterEffect"))
                    object.rgCharacterEffect = message.rgCharacterEffect;
                if (message.rgMotionEffect != null && message.hasOwnProperty("rgMotionEffect"))
                    object.rgMotionEffect = message.rgMotionEffect;
                if (message.stPlayCount != null && message.hasOwnProperty("stPlayCount"))
                    object.stPlayCount = message.stPlayCount;
                if (message.stClearBits != null && message.hasOwnProperty("stClearBits"))
                    object.stClearBits = message.stClearBits;
                if (message.stClearDivCount != null && message.hasOwnProperty("stClearDivCount"))
                    object.stClearDivCount = message.stClearDivCount;
                if (message.stClearCount != null && message.hasOwnProperty("stClearCount"))
                    object.stClearCount = message.stClearCount;
                if (message.stLoseBits != null && message.hasOwnProperty("stLoseBits"))
                    if (typeof message.stLoseBits === "number")
                        object.stLoseBits = options.longs === String ? String(message.stLoseBits) : message.stLoseBits;
                    else
                        object.stLoseBits = options.longs === String ? $util.Long.prototype.toString.call(message.stLoseBits) : options.longs === Number ? new $util.LongBits(message.stLoseBits.low >>> 0, message.stLoseBits.high >>> 0).toNumber(true) : message.stLoseBits;
                if (message.stLose != null && message.hasOwnProperty("stLose"))
                    object.stLose = message.stLose;
                if (message.stConsecutiveWins != null && message.hasOwnProperty("stConsecutiveWins"))
                    object.stConsecutiveWins = message.stConsecutiveWins;
                if (message.stConsecutiveWinsMax != null && message.hasOwnProperty("stConsecutiveWinsMax"))
                    object.stConsecutiveWinsMax = message.stConsecutiveWinsMax;
                if (message.challenger != null && message.hasOwnProperty("challenger"))
                    object.challenger = $root.wm5.protobuf.ChallengerCar.toObject(message.challenger, options);
                if (message.challengerReturnCount != null && message.hasOwnProperty("challengerReturnCount"))
                    object.challengerReturnCount = message.challengerReturnCount;
                if (message.opponentGhost != null && message.hasOwnProperty("opponentGhost"))
                    object.opponentGhost = $root.wm5.protobuf.GhostCar.toObject(message.opponentGhost, options);
                if (message.opponentTrailId != null && message.hasOwnProperty("opponentTrailId"))
                    if (typeof message.opponentTrailId === "number")
                        object.opponentTrailId = options.longs === String ? String(message.opponentTrailId) : message.opponentTrailId;
                    else
                        object.opponentTrailId = options.longs === String ? $util.Long.prototype.toString.call(message.opponentTrailId) : options.longs === Number ? new $util.LongBits(message.opponentTrailId.low >>> 0, message.opponentTrailId.high >>> 0).toNumber(true) : message.opponentTrailId;
                if (message.opponentCompetitionId != null && message.hasOwnProperty("opponentCompetitionId"))
                    object.opponentCompetitionId = message.opponentCompetitionId;
                if (message.competitionParameter != null && message.hasOwnProperty("competitionParameter"))
                    object.competitionParameter = $root.wm5.protobuf.GhostCompetitionParameter.toObject(message.competitionParameter, options);
                if (message.specialTitles && message.specialTitles.length) {
                    object.specialTitles = [];
                    for (let j = 0; j < message.specialTitles.length; ++j)
                        object.specialTitles[j] = message.specialTitles[j];
                }
                if (message.earnedTitles && message.earnedTitles.length) {
                    object.earnedTitles = [];
                    for (let j = 0; j < message.earnedTitles.length; ++j)
                        object.earnedTitles[j] = message.earnedTitles[j];
                }
                if (message.ownedItems && message.ownedItems.length) {
                    object.ownedItems = [];
                    for (let j = 0; j < message.ownedItems.length; ++j)
                        object.ownedItems[j] = $root.wm5.protobuf.CarItem.toObject(message.ownedItems[j], options);
                }
                if (message.auraMotifAutoChange != null && message.hasOwnProperty("auraMotifAutoChange"))
                    object.auraMotifAutoChange = message.auraMotifAutoChange;
                if (message.specialAuraMotif != null && message.hasOwnProperty("specialAuraMotif"))
                    object.specialAuraMotif = $root.wm5.protobuf.SpecialAuraMotif.toObject(message.specialAuraMotif, options);
                if (message.screenshotCount != null && message.hasOwnProperty("screenshotCount"))
                    object.screenshotCount = message.screenshotCount;
                if (message.rgStamp != null && message.hasOwnProperty("rgStamp"))
                    object.rgStamp = message.rgStamp;
                if (message.numOfChallengers != null && message.hasOwnProperty("numOfChallengers"))
                    object.numOfChallengers = message.numOfChallengers;
                if (message.rgPastClearRegions != null && message.hasOwnProperty("rgPastClearRegions"))
                    object.rgPastClearRegions = message.rgPastClearRegions;
                if (message.challengerCar != null && message.hasOwnProperty("challengerCar"))
                    object.challengerCar = $root.wm5.protobuf.Car.toObject(message.challengerCar, options);
                if (message.announceEventModePrize != null && message.hasOwnProperty("announceEventModePrize"))
                    object.announceEventModePrize = message.announceEventModePrize;
                if (message.ghostExpeditionState != null && message.hasOwnProperty("ghostExpeditionState"))
                    object.ghostExpeditionState = options.enums === String ? $root.wm5.protobuf.GhostExpeditionParticipantState[message.ghostExpeditionState] === undefined ? message.ghostExpeditionState : $root.wm5.protobuf.GhostExpeditionParticipantState[message.ghostExpeditionState] : message.ghostExpeditionState;
                return object;
            };

            /**
             * Converts this LoadCarResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadCarResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadCarResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadCarResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadCarResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadCarResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadCarResponse";
            };

            return LoadCarResponse;
        })();

        protobuf.CreateCarRequest = (function() {

            /**
             * Properties of a CreateCarRequest.
             * @memberof wm5.protobuf
             * @interface ICreateCarRequest
             * @property {number|null} [userId] CreateCarRequest userId
             * @property {number|null} [banapassportAmId] CreateCarRequest banapassportAmId
             * @property {string|null} [cardChipId] CreateCarRequest cardChipId
             * @property {string|null} [accessCode] CreateCarRequest accessCode
             * @property {number|null} [cardTypeCode] CreateCarRequest cardTypeCode
             * @property {number|null} [cardRegionCode] CreateCarRequest cardRegionCode
             * @property {wm5.protobuf.DeviceType|null} [device] CreateCarRequest device
             * @property {wm5.protobuf.ICar} car CreateCarRequest car
             * @property {boolean} transmission CreateCarRequest transmission
             * @property {wm5.protobuf.CarCreationMethod} method CreateCarRequest method
             * @property {number} timestamp CreateCarRequest timestamp
             * @property {number|null} [userItemId] CreateCarRequest userItemId
             * @property {number|null} [deletedCarId] CreateCarRequest deletedCarId
             */

            /**
             * Constructs a new CreateCarRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a CreateCarRequest.
             * @implements ICreateCarRequest
             * @constructor
             * @param {wm5.protobuf.ICreateCarRequest=} [properties] Properties to set
             */
            function CreateCarRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateCarRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.CreateCarRequest
             * @instance
             */
            CreateCarRequest.prototype.userId = 0;

            /**
             * CreateCarRequest banapassportAmId.
             * @member {number} banapassportAmId
             * @memberof wm5.protobuf.CreateCarRequest
             * @instance
             */
            CreateCarRequest.prototype.banapassportAmId = 0;

            /**
             * CreateCarRequest cardChipId.
             * @member {string} cardChipId
             * @memberof wm5.protobuf.CreateCarRequest
             * @instance
             */
            CreateCarRequest.prototype.cardChipId = "";

            /**
             * CreateCarRequest accessCode.
             * @member {string} accessCode
             * @memberof wm5.protobuf.CreateCarRequest
             * @instance
             */
            CreateCarRequest.prototype.accessCode = "";

            /**
             * CreateCarRequest cardTypeCode.
             * @member {number} cardTypeCode
             * @memberof wm5.protobuf.CreateCarRequest
             * @instance
             */
            CreateCarRequest.prototype.cardTypeCode = 0;

            /**
             * CreateCarRequest cardRegionCode.
             * @member {number} cardRegionCode
             * @memberof wm5.protobuf.CreateCarRequest
             * @instance
             */
            CreateCarRequest.prototype.cardRegionCode = 0;

            /**
             * CreateCarRequest device.
             * @member {wm5.protobuf.DeviceType} device
             * @memberof wm5.protobuf.CreateCarRequest
             * @instance
             */
            CreateCarRequest.prototype.device = 0;

            /**
             * CreateCarRequest car.
             * @member {wm5.protobuf.ICar} car
             * @memberof wm5.protobuf.CreateCarRequest
             * @instance
             */
            CreateCarRequest.prototype.car = null;

            /**
             * CreateCarRequest transmission.
             * @member {boolean} transmission
             * @memberof wm5.protobuf.CreateCarRequest
             * @instance
             */
            CreateCarRequest.prototype.transmission = false;

            /**
             * CreateCarRequest method.
             * @member {wm5.protobuf.CarCreationMethod} method
             * @memberof wm5.protobuf.CreateCarRequest
             * @instance
             */
            CreateCarRequest.prototype.method = 0;

            /**
             * CreateCarRequest timestamp.
             * @member {number} timestamp
             * @memberof wm5.protobuf.CreateCarRequest
             * @instance
             */
            CreateCarRequest.prototype.timestamp = 0;

            /**
             * CreateCarRequest userItemId.
             * @member {number} userItemId
             * @memberof wm5.protobuf.CreateCarRequest
             * @instance
             */
            CreateCarRequest.prototype.userItemId = 0;

            /**
             * CreateCarRequest deletedCarId.
             * @member {number} deletedCarId
             * @memberof wm5.protobuf.CreateCarRequest
             * @instance
             */
            CreateCarRequest.prototype.deletedCarId = 0;

            /**
             * Creates a new CreateCarRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CreateCarRequest
             * @static
             * @param {wm5.protobuf.ICreateCarRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.CreateCarRequest} CreateCarRequest instance
             */
            CreateCarRequest.create = function create(properties) {
                return new CreateCarRequest(properties);
            };

            /**
             * Encodes the specified CreateCarRequest message. Does not implicitly {@link wm5.protobuf.CreateCarRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CreateCarRequest
             * @static
             * @param {wm5.protobuf.ICreateCarRequest} message CreateCarRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateCarRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.userId != null && Object.hasOwnProperty.call(message, "userId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                if (message.banapassportAmId != null && Object.hasOwnProperty.call(message, "banapassportAmId"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.banapassportAmId);
                if (message.cardChipId != null && Object.hasOwnProperty.call(message, "cardChipId"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.cardChipId);
                if (message.accessCode != null && Object.hasOwnProperty.call(message, "accessCode"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.accessCode);
                if (message.cardTypeCode != null && Object.hasOwnProperty.call(message, "cardTypeCode"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.cardTypeCode);
                if (message.cardRegionCode != null && Object.hasOwnProperty.call(message, "cardRegionCode"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.cardRegionCode);
                if (message.device != null && Object.hasOwnProperty.call(message, "device"))
                    writer.uint32(/* id 7, wireType 0 =*/56).int32(message.device);
                $root.wm5.protobuf.Car.encode(message.car, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.transmission);
                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.method);
                writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.timestamp);
                if (message.userItemId != null && Object.hasOwnProperty.call(message, "userItemId"))
                    writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.userItemId);
                if (message.deletedCarId != null && Object.hasOwnProperty.call(message, "deletedCarId"))
                    writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.deletedCarId);
                return writer;
            };

            /**
             * Encodes the specified CreateCarRequest message, length delimited. Does not implicitly {@link wm5.protobuf.CreateCarRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CreateCarRequest
             * @static
             * @param {wm5.protobuf.ICreateCarRequest} message CreateCarRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateCarRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateCarRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CreateCarRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CreateCarRequest} CreateCarRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateCarRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CreateCarRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.banapassportAmId = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.cardChipId = reader.string();
                            break;
                        }
                    case 4: {
                            message.accessCode = reader.string();
                            break;
                        }
                    case 5: {
                            message.cardTypeCode = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.cardRegionCode = reader.uint32();
                            break;
                        }
                    case 7: {
                            message.device = reader.int32();
                            break;
                        }
                    case 8: {
                            message.car = $root.wm5.protobuf.Car.decode(reader, reader.uint32());
                            break;
                        }
                    case 9: {
                            message.transmission = reader.bool();
                            break;
                        }
                    case 10: {
                            message.method = reader.int32();
                            break;
                        }
                    case 11: {
                            message.timestamp = reader.uint32();
                            break;
                        }
                    case 12: {
                            message.userItemId = reader.uint32();
                            break;
                        }
                    case 13: {
                            message.deletedCarId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("car"))
                    throw $util.ProtocolError("missing required 'car'", { instance: message });
                if (!message.hasOwnProperty("transmission"))
                    throw $util.ProtocolError("missing required 'transmission'", { instance: message });
                if (!message.hasOwnProperty("method"))
                    throw $util.ProtocolError("missing required 'method'", { instance: message });
                if (!message.hasOwnProperty("timestamp"))
                    throw $util.ProtocolError("missing required 'timestamp'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateCarRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CreateCarRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CreateCarRequest} CreateCarRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateCarRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateCarRequest message.
             * @function verify
             * @memberof wm5.protobuf.CreateCarRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateCarRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.userId != null && message.hasOwnProperty("userId"))
                    if (!$util.isInteger(message.userId))
                        return "userId: integer expected";
                if (message.banapassportAmId != null && message.hasOwnProperty("banapassportAmId"))
                    if (!$util.isInteger(message.banapassportAmId))
                        return "banapassportAmId: integer expected";
                if (message.cardChipId != null && message.hasOwnProperty("cardChipId"))
                    if (!$util.isString(message.cardChipId))
                        return "cardChipId: string expected";
                if (message.accessCode != null && message.hasOwnProperty("accessCode"))
                    if (!$util.isString(message.accessCode))
                        return "accessCode: string expected";
                if (message.cardTypeCode != null && message.hasOwnProperty("cardTypeCode"))
                    if (!$util.isInteger(message.cardTypeCode))
                        return "cardTypeCode: integer expected";
                if (message.cardRegionCode != null && message.hasOwnProperty("cardRegionCode"))
                    if (!$util.isInteger(message.cardRegionCode))
                        return "cardRegionCode: integer expected";
                if (message.device != null && message.hasOwnProperty("device"))
                    switch (message.device) {
                    default:
                        return "device: enum value expected";
                    case 0:
                    case 1:
                        break;
                    }
                {
                    let error = $root.wm5.protobuf.Car.verify(message.car);
                    if (error)
                        return "car." + error;
                }
                if (typeof message.transmission !== "boolean")
                    return "transmission: boolean expected";
                switch (message.method) {
                default:
                    return "method: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                    break;
                }
                if (!$util.isInteger(message.timestamp))
                    return "timestamp: integer expected";
                if (message.userItemId != null && message.hasOwnProperty("userItemId"))
                    if (!$util.isInteger(message.userItemId))
                        return "userItemId: integer expected";
                if (message.deletedCarId != null && message.hasOwnProperty("deletedCarId"))
                    if (!$util.isInteger(message.deletedCarId))
                        return "deletedCarId: integer expected";
                return null;
            };

            /**
             * Creates a CreateCarRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CreateCarRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CreateCarRequest} CreateCarRequest
             */
            CreateCarRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CreateCarRequest)
                    return object;
                let message = new $root.wm5.protobuf.CreateCarRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.banapassportAmId != null)
                    message.banapassportAmId = object.banapassportAmId >>> 0;
                if (object.cardChipId != null)
                    message.cardChipId = String(object.cardChipId);
                if (object.accessCode != null)
                    message.accessCode = String(object.accessCode);
                if (object.cardTypeCode != null)
                    message.cardTypeCode = object.cardTypeCode >>> 0;
                if (object.cardRegionCode != null)
                    message.cardRegionCode = object.cardRegionCode >>> 0;
                switch (object.device) {
                default:
                    if (typeof object.device === "number") {
                        message.device = object.device;
                        break;
                    }
                    break;
                case "DEVICE_CARD":
                case 0:
                    message.device = 0;
                    break;
                case "DEVICE_PHONE":
                case 1:
                    message.device = 1;
                    break;
                }
                if (object.car != null) {
                    if (typeof object.car !== "object")
                        throw TypeError(".wm5.protobuf.CreateCarRequest.car: object expected");
                    message.car = $root.wm5.protobuf.Car.fromObject(object.car);
                }
                if (object.transmission != null)
                    message.transmission = Boolean(object.transmission);
                switch (object.method) {
                default:
                    if (typeof object.method === "number") {
                        message.method = object.method;
                        break;
                    }
                    break;
                case "CAR_NEW":
                case 0:
                    message.method = 0;
                    break;
                case "CAR_TRANSFER":
                case 1:
                    message.method = 1;
                    break;
                case "CAR_HP600":
                case 2:
                    message.method = 2;
                    break;
                case "CAR_CAMPAIGN":
                case 3:
                    message.method = 3;
                    break;
                case "CAR_COUPON":
                case 4:
                    message.method = 4;
                    break;
                case "CAR_TICKET":
                case 5:
                    message.method = 5;
                    break;
                case "CAR_FULL_TUNED":
                case 6:
                    message.method = 6;
                    break;
                }
                if (object.timestamp != null)
                    message.timestamp = object.timestamp >>> 0;
                if (object.userItemId != null)
                    message.userItemId = object.userItemId >>> 0;
                if (object.deletedCarId != null)
                    message.deletedCarId = object.deletedCarId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a CreateCarRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CreateCarRequest
             * @static
             * @param {wm5.protobuf.CreateCarRequest} message CreateCarRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateCarRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.userId = 0;
                    object.banapassportAmId = 0;
                    object.cardChipId = "";
                    object.accessCode = "";
                    object.cardTypeCode = 0;
                    object.cardRegionCode = 0;
                    object.device = options.enums === String ? "DEVICE_CARD" : 0;
                    object.car = null;
                    object.transmission = false;
                    object.method = options.enums === String ? "CAR_NEW" : 0;
                    object.timestamp = 0;
                    object.userItemId = 0;
                    object.deletedCarId = 0;
                }
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.banapassportAmId != null && message.hasOwnProperty("banapassportAmId"))
                    object.banapassportAmId = message.banapassportAmId;
                if (message.cardChipId != null && message.hasOwnProperty("cardChipId"))
                    object.cardChipId = message.cardChipId;
                if (message.accessCode != null && message.hasOwnProperty("accessCode"))
                    object.accessCode = message.accessCode;
                if (message.cardTypeCode != null && message.hasOwnProperty("cardTypeCode"))
                    object.cardTypeCode = message.cardTypeCode;
                if (message.cardRegionCode != null && message.hasOwnProperty("cardRegionCode"))
                    object.cardRegionCode = message.cardRegionCode;
                if (message.device != null && message.hasOwnProperty("device"))
                    object.device = options.enums === String ? $root.wm5.protobuf.DeviceType[message.device] === undefined ? message.device : $root.wm5.protobuf.DeviceType[message.device] : message.device;
                if (message.car != null && message.hasOwnProperty("car"))
                    object.car = $root.wm5.protobuf.Car.toObject(message.car, options);
                if (message.transmission != null && message.hasOwnProperty("transmission"))
                    object.transmission = message.transmission;
                if (message.method != null && message.hasOwnProperty("method"))
                    object.method = options.enums === String ? $root.wm5.protobuf.CarCreationMethod[message.method] === undefined ? message.method : $root.wm5.protobuf.CarCreationMethod[message.method] : message.method;
                if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                    object.timestamp = message.timestamp;
                if (message.userItemId != null && message.hasOwnProperty("userItemId"))
                    object.userItemId = message.userItemId;
                if (message.deletedCarId != null && message.hasOwnProperty("deletedCarId"))
                    object.deletedCarId = message.deletedCarId;
                return object;
            };

            /**
             * Converts this CreateCarRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CreateCarRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateCarRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateCarRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.CreateCarRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateCarRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CreateCarRequest";
            };

            return CreateCarRequest;
        })();

        protobuf.CreateCarResponse = (function() {

            /**
             * Properties of a CreateCarResponse.
             * @memberof wm5.protobuf
             * @interface ICreateCarResponse
             * @property {wm5.protobuf.ErrorCode} error CreateCarResponse error
             * @property {string|null} [accessCode] CreateCarResponse accessCode
             * @property {number|null} [banapassportAmId] CreateCarResponse banapassportAmId
             * @property {string|null} [personId] CreateCarResponse personId
             * @property {number|null} [bnidLevel] CreateCarResponse bnidLevel
             * @property {number} userId CreateCarResponse userId
             * @property {number} carId CreateCarResponse carId
             * @property {number|null} [stClearBits] CreateCarResponse stClearBits
             * @property {number|null} [stClearDivCount] CreateCarResponse stClearDivCount
             * @property {number|null} [stClearCount] CreateCarResponse stClearCount
             * @property {number|Long|null} [stLoseBits] CreateCarResponse stLoseBits
             * @property {boolean|null} [stLose] CreateCarResponse stLose
             * @property {number|null} [stConsecutiveWins] CreateCarResponse stConsecutiveWins
             * @property {number|null} [stConsecutiveWinsMax] CreateCarResponse stConsecutiveWinsMax
             * @property {wm5.protobuf.ISpecialAuraMotif|null} [specialAuraMotif] CreateCarResponse specialAuraMotif
             * @property {number} rgStamp CreateCarResponse rgStamp
             * @property {number|null} [fullTunedCarCouponUnreceivableAt] CreateCarResponse fullTunedCarCouponUnreceivableAt
             */

            /**
             * Constructs a new CreateCarResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a CreateCarResponse.
             * @implements ICreateCarResponse
             * @constructor
             * @param {wm5.protobuf.ICreateCarResponse=} [properties] Properties to set
             */
            function CreateCarResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateCarResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             */
            CreateCarResponse.prototype.error = 0;

            /**
             * CreateCarResponse accessCode.
             * @member {string} accessCode
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             */
            CreateCarResponse.prototype.accessCode = "";

            /**
             * CreateCarResponse banapassportAmId.
             * @member {number} banapassportAmId
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             */
            CreateCarResponse.prototype.banapassportAmId = 0;

            /**
             * CreateCarResponse personId.
             * @member {string} personId
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             */
            CreateCarResponse.prototype.personId = "";

            /**
             * CreateCarResponse bnidLevel.
             * @member {number} bnidLevel
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             */
            CreateCarResponse.prototype.bnidLevel = 0;

            /**
             * CreateCarResponse userId.
             * @member {number} userId
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             */
            CreateCarResponse.prototype.userId = 0;

            /**
             * CreateCarResponse carId.
             * @member {number} carId
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             */
            CreateCarResponse.prototype.carId = 0;

            /**
             * CreateCarResponse stClearBits.
             * @member {number} stClearBits
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             */
            CreateCarResponse.prototype.stClearBits = 0;

            /**
             * CreateCarResponse stClearDivCount.
             * @member {number} stClearDivCount
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             */
            CreateCarResponse.prototype.stClearDivCount = 0;

            /**
             * CreateCarResponse stClearCount.
             * @member {number} stClearCount
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             */
            CreateCarResponse.prototype.stClearCount = 0;

            /**
             * CreateCarResponse stLoseBits.
             * @member {number|Long} stLoseBits
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             */
            CreateCarResponse.prototype.stLoseBits = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

            /**
             * CreateCarResponse stLose.
             * @member {boolean} stLose
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             */
            CreateCarResponse.prototype.stLose = false;

            /**
             * CreateCarResponse stConsecutiveWins.
             * @member {number} stConsecutiveWins
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             */
            CreateCarResponse.prototype.stConsecutiveWins = 0;

            /**
             * CreateCarResponse stConsecutiveWinsMax.
             * @member {number} stConsecutiveWinsMax
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             */
            CreateCarResponse.prototype.stConsecutiveWinsMax = 0;

            /**
             * CreateCarResponse specialAuraMotif.
             * @member {wm5.protobuf.ISpecialAuraMotif|null|undefined} specialAuraMotif
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             */
            CreateCarResponse.prototype.specialAuraMotif = null;

            /**
             * CreateCarResponse rgStamp.
             * @member {number} rgStamp
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             */
            CreateCarResponse.prototype.rgStamp = 0;

            /**
             * CreateCarResponse fullTunedCarCouponUnreceivableAt.
             * @member {number} fullTunedCarCouponUnreceivableAt
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             */
            CreateCarResponse.prototype.fullTunedCarCouponUnreceivableAt = 0;

            /**
             * Creates a new CreateCarResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CreateCarResponse
             * @static
             * @param {wm5.protobuf.ICreateCarResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.CreateCarResponse} CreateCarResponse instance
             */
            CreateCarResponse.create = function create(properties) {
                return new CreateCarResponse(properties);
            };

            /**
             * Encodes the specified CreateCarResponse message. Does not implicitly {@link wm5.protobuf.CreateCarResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CreateCarResponse
             * @static
             * @param {wm5.protobuf.ICreateCarResponse} message CreateCarResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateCarResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.accessCode != null && Object.hasOwnProperty.call(message, "accessCode"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.accessCode);
                if (message.banapassportAmId != null && Object.hasOwnProperty.call(message, "banapassportAmId"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.banapassportAmId);
                if (message.personId != null && Object.hasOwnProperty.call(message, "personId"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.personId);
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.userId);
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.carId);
                if (message.bnidLevel != null && Object.hasOwnProperty.call(message, "bnidLevel"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.bnidLevel);
                if (message.stClearBits != null && Object.hasOwnProperty.call(message, "stClearBits"))
                    writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.stClearBits);
                if (message.stClearDivCount != null && Object.hasOwnProperty.call(message, "stClearDivCount"))
                    writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.stClearDivCount);
                if (message.stClearCount != null && Object.hasOwnProperty.call(message, "stClearCount"))
                    writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.stClearCount);
                if (message.stLoseBits != null && Object.hasOwnProperty.call(message, "stLoseBits"))
                    writer.uint32(/* id 11, wireType 0 =*/88).uint64(message.stLoseBits);
                if (message.stLose != null && Object.hasOwnProperty.call(message, "stLose"))
                    writer.uint32(/* id 12, wireType 0 =*/96).bool(message.stLose);
                if (message.stConsecutiveWins != null && Object.hasOwnProperty.call(message, "stConsecutiveWins"))
                    writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.stConsecutiveWins);
                if (message.stConsecutiveWinsMax != null && Object.hasOwnProperty.call(message, "stConsecutiveWinsMax"))
                    writer.uint32(/* id 14, wireType 0 =*/112).uint32(message.stConsecutiveWinsMax);
                if (message.specialAuraMotif != null && Object.hasOwnProperty.call(message, "specialAuraMotif"))
                    $root.wm5.protobuf.SpecialAuraMotif.encode(message.specialAuraMotif, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                writer.uint32(/* id 16, wireType 0 =*/128).uint32(message.rgStamp);
                if (message.fullTunedCarCouponUnreceivableAt != null && Object.hasOwnProperty.call(message, "fullTunedCarCouponUnreceivableAt"))
                    writer.uint32(/* id 17, wireType 0 =*/136).uint32(message.fullTunedCarCouponUnreceivableAt);
                return writer;
            };

            /**
             * Encodes the specified CreateCarResponse message, length delimited. Does not implicitly {@link wm5.protobuf.CreateCarResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CreateCarResponse
             * @static
             * @param {wm5.protobuf.ICreateCarResponse} message CreateCarResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateCarResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateCarResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CreateCarResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CreateCarResponse} CreateCarResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateCarResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CreateCarResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.accessCode = reader.string();
                            break;
                        }
                    case 3: {
                            message.banapassportAmId = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.personId = reader.string();
                            break;
                        }
                    case 7: {
                            message.bnidLevel = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 8: {
                            message.stClearBits = reader.uint32();
                            break;
                        }
                    case 9: {
                            message.stClearDivCount = reader.uint32();
                            break;
                        }
                    case 10: {
                            message.stClearCount = reader.uint32();
                            break;
                        }
                    case 11: {
                            message.stLoseBits = reader.uint64();
                            break;
                        }
                    case 12: {
                            message.stLose = reader.bool();
                            break;
                        }
                    case 13: {
                            message.stConsecutiveWins = reader.uint32();
                            break;
                        }
                    case 14: {
                            message.stConsecutiveWinsMax = reader.uint32();
                            break;
                        }
                    case 15: {
                            message.specialAuraMotif = $root.wm5.protobuf.SpecialAuraMotif.decode(reader, reader.uint32());
                            break;
                        }
                    case 16: {
                            message.rgStamp = reader.uint32();
                            break;
                        }
                    case 17: {
                            message.fullTunedCarCouponUnreceivableAt = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                if (!message.hasOwnProperty("rgStamp"))
                    throw $util.ProtocolError("missing required 'rgStamp'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateCarResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CreateCarResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CreateCarResponse} CreateCarResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateCarResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateCarResponse message.
             * @function verify
             * @memberof wm5.protobuf.CreateCarResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateCarResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.accessCode != null && message.hasOwnProperty("accessCode"))
                    if (!$util.isString(message.accessCode))
                        return "accessCode: string expected";
                if (message.banapassportAmId != null && message.hasOwnProperty("banapassportAmId"))
                    if (!$util.isInteger(message.banapassportAmId))
                        return "banapassportAmId: integer expected";
                if (message.personId != null && message.hasOwnProperty("personId"))
                    if (!$util.isString(message.personId))
                        return "personId: string expected";
                if (message.bnidLevel != null && message.hasOwnProperty("bnidLevel"))
                    if (!$util.isInteger(message.bnidLevel))
                        return "bnidLevel: integer expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                if (message.stClearBits != null && message.hasOwnProperty("stClearBits"))
                    if (!$util.isInteger(message.stClearBits))
                        return "stClearBits: integer expected";
                if (message.stClearDivCount != null && message.hasOwnProperty("stClearDivCount"))
                    if (!$util.isInteger(message.stClearDivCount))
                        return "stClearDivCount: integer expected";
                if (message.stClearCount != null && message.hasOwnProperty("stClearCount"))
                    if (!$util.isInteger(message.stClearCount))
                        return "stClearCount: integer expected";
                if (message.stLoseBits != null && message.hasOwnProperty("stLoseBits"))
                    if (!$util.isInteger(message.stLoseBits) && !(message.stLoseBits && $util.isInteger(message.stLoseBits.low) && $util.isInteger(message.stLoseBits.high)))
                        return "stLoseBits: integer|Long expected";
                if (message.stLose != null && message.hasOwnProperty("stLose"))
                    if (typeof message.stLose !== "boolean")
                        return "stLose: boolean expected";
                if (message.stConsecutiveWins != null && message.hasOwnProperty("stConsecutiveWins"))
                    if (!$util.isInteger(message.stConsecutiveWins))
                        return "stConsecutiveWins: integer expected";
                if (message.stConsecutiveWinsMax != null && message.hasOwnProperty("stConsecutiveWinsMax"))
                    if (!$util.isInteger(message.stConsecutiveWinsMax))
                        return "stConsecutiveWinsMax: integer expected";
                if (message.specialAuraMotif != null && message.hasOwnProperty("specialAuraMotif")) {
                    let error = $root.wm5.protobuf.SpecialAuraMotif.verify(message.specialAuraMotif);
                    if (error)
                        return "specialAuraMotif." + error;
                }
                if (!$util.isInteger(message.rgStamp))
                    return "rgStamp: integer expected";
                if (message.fullTunedCarCouponUnreceivableAt != null && message.hasOwnProperty("fullTunedCarCouponUnreceivableAt"))
                    if (!$util.isInteger(message.fullTunedCarCouponUnreceivableAt))
                        return "fullTunedCarCouponUnreceivableAt: integer expected";
                return null;
            };

            /**
             * Creates a CreateCarResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CreateCarResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CreateCarResponse} CreateCarResponse
             */
            CreateCarResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CreateCarResponse)
                    return object;
                let message = new $root.wm5.protobuf.CreateCarResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.accessCode != null)
                    message.accessCode = String(object.accessCode);
                if (object.banapassportAmId != null)
                    message.banapassportAmId = object.banapassportAmId >>> 0;
                if (object.personId != null)
                    message.personId = String(object.personId);
                if (object.bnidLevel != null)
                    message.bnidLevel = object.bnidLevel >>> 0;
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.stClearBits != null)
                    message.stClearBits = object.stClearBits >>> 0;
                if (object.stClearDivCount != null)
                    message.stClearDivCount = object.stClearDivCount >>> 0;
                if (object.stClearCount != null)
                    message.stClearCount = object.stClearCount >>> 0;
                if (object.stLoseBits != null)
                    if ($util.Long)
                        (message.stLoseBits = $util.Long.fromValue(object.stLoseBits)).unsigned = true;
                    else if (typeof object.stLoseBits === "string")
                        message.stLoseBits = parseInt(object.stLoseBits, 10);
                    else if (typeof object.stLoseBits === "number")
                        message.stLoseBits = object.stLoseBits;
                    else if (typeof object.stLoseBits === "object")
                        message.stLoseBits = new $util.LongBits(object.stLoseBits.low >>> 0, object.stLoseBits.high >>> 0).toNumber(true);
                if (object.stLose != null)
                    message.stLose = Boolean(object.stLose);
                if (object.stConsecutiveWins != null)
                    message.stConsecutiveWins = object.stConsecutiveWins >>> 0;
                if (object.stConsecutiveWinsMax != null)
                    message.stConsecutiveWinsMax = object.stConsecutiveWinsMax >>> 0;
                if (object.specialAuraMotif != null) {
                    if (typeof object.specialAuraMotif !== "object")
                        throw TypeError(".wm5.protobuf.CreateCarResponse.specialAuraMotif: object expected");
                    message.specialAuraMotif = $root.wm5.protobuf.SpecialAuraMotif.fromObject(object.specialAuraMotif);
                }
                if (object.rgStamp != null)
                    message.rgStamp = object.rgStamp >>> 0;
                if (object.fullTunedCarCouponUnreceivableAt != null)
                    message.fullTunedCarCouponUnreceivableAt = object.fullTunedCarCouponUnreceivableAt >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a CreateCarResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CreateCarResponse
             * @static
             * @param {wm5.protobuf.CreateCarResponse} message CreateCarResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateCarResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.accessCode = "";
                    object.banapassportAmId = 0;
                    object.personId = "";
                    object.userId = 0;
                    object.carId = 0;
                    object.bnidLevel = 0;
                    object.stClearBits = 0;
                    object.stClearDivCount = 0;
                    object.stClearCount = 0;
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, true);
                        object.stLoseBits = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.stLoseBits = options.longs === String ? "0" : 0;
                    object.stLose = false;
                    object.stConsecutiveWins = 0;
                    object.stConsecutiveWinsMax = 0;
                    object.specialAuraMotif = null;
                    object.rgStamp = 0;
                    object.fullTunedCarCouponUnreceivableAt = 0;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.accessCode != null && message.hasOwnProperty("accessCode"))
                    object.accessCode = message.accessCode;
                if (message.banapassportAmId != null && message.hasOwnProperty("banapassportAmId"))
                    object.banapassportAmId = message.banapassportAmId;
                if (message.personId != null && message.hasOwnProperty("personId"))
                    object.personId = message.personId;
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.bnidLevel != null && message.hasOwnProperty("bnidLevel"))
                    object.bnidLevel = message.bnidLevel;
                if (message.stClearBits != null && message.hasOwnProperty("stClearBits"))
                    object.stClearBits = message.stClearBits;
                if (message.stClearDivCount != null && message.hasOwnProperty("stClearDivCount"))
                    object.stClearDivCount = message.stClearDivCount;
                if (message.stClearCount != null && message.hasOwnProperty("stClearCount"))
                    object.stClearCount = message.stClearCount;
                if (message.stLoseBits != null && message.hasOwnProperty("stLoseBits"))
                    if (typeof message.stLoseBits === "number")
                        object.stLoseBits = options.longs === String ? String(message.stLoseBits) : message.stLoseBits;
                    else
                        object.stLoseBits = options.longs === String ? $util.Long.prototype.toString.call(message.stLoseBits) : options.longs === Number ? new $util.LongBits(message.stLoseBits.low >>> 0, message.stLoseBits.high >>> 0).toNumber(true) : message.stLoseBits;
                if (message.stLose != null && message.hasOwnProperty("stLose"))
                    object.stLose = message.stLose;
                if (message.stConsecutiveWins != null && message.hasOwnProperty("stConsecutiveWins"))
                    object.stConsecutiveWins = message.stConsecutiveWins;
                if (message.stConsecutiveWinsMax != null && message.hasOwnProperty("stConsecutiveWinsMax"))
                    object.stConsecutiveWinsMax = message.stConsecutiveWinsMax;
                if (message.specialAuraMotif != null && message.hasOwnProperty("specialAuraMotif"))
                    object.specialAuraMotif = $root.wm5.protobuf.SpecialAuraMotif.toObject(message.specialAuraMotif, options);
                if (message.rgStamp != null && message.hasOwnProperty("rgStamp"))
                    object.rgStamp = message.rgStamp;
                if (message.fullTunedCarCouponUnreceivableAt != null && message.hasOwnProperty("fullTunedCarCouponUnreceivableAt"))
                    object.fullTunedCarCouponUnreceivableAt = message.fullTunedCarCouponUnreceivableAt;
                return object;
            };

            /**
             * Converts this CreateCarResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CreateCarResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateCarResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateCarResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.CreateCarResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateCarResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CreateCarResponse";
            };

            return CreateCarResponse;
        })();

        protobuf.LoadGameHistoryRequest = (function() {

            /**
             * Properties of a LoadGameHistoryRequest.
             * @memberof wm5.protobuf
             * @interface ILoadGameHistoryRequest
             * @property {number} carId LoadGameHistoryRequest carId
             */

            /**
             * Constructs a new LoadGameHistoryRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadGameHistoryRequest.
             * @implements ILoadGameHistoryRequest
             * @constructor
             * @param {wm5.protobuf.ILoadGameHistoryRequest=} [properties] Properties to set
             */
            function LoadGameHistoryRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadGameHistoryRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.LoadGameHistoryRequest
             * @instance
             */
            LoadGameHistoryRequest.prototype.carId = 0;

            /**
             * Creates a new LoadGameHistoryRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadGameHistoryRequest
             * @static
             * @param {wm5.protobuf.ILoadGameHistoryRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadGameHistoryRequest} LoadGameHistoryRequest instance
             */
            LoadGameHistoryRequest.create = function create(properties) {
                return new LoadGameHistoryRequest(properties);
            };

            /**
             * Encodes the specified LoadGameHistoryRequest message. Does not implicitly {@link wm5.protobuf.LoadGameHistoryRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadGameHistoryRequest
             * @static
             * @param {wm5.protobuf.ILoadGameHistoryRequest} message LoadGameHistoryRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGameHistoryRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                return writer;
            };

            /**
             * Encodes the specified LoadGameHistoryRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGameHistoryRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadGameHistoryRequest
             * @static
             * @param {wm5.protobuf.ILoadGameHistoryRequest} message LoadGameHistoryRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGameHistoryRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadGameHistoryRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadGameHistoryRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadGameHistoryRequest} LoadGameHistoryRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGameHistoryRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGameHistoryRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadGameHistoryRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadGameHistoryRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadGameHistoryRequest} LoadGameHistoryRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGameHistoryRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadGameHistoryRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadGameHistoryRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadGameHistoryRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                return null;
            };

            /**
             * Creates a LoadGameHistoryRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadGameHistoryRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadGameHistoryRequest} LoadGameHistoryRequest
             */
            LoadGameHistoryRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadGameHistoryRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadGameHistoryRequest();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadGameHistoryRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadGameHistoryRequest
             * @static
             * @param {wm5.protobuf.LoadGameHistoryRequest} message LoadGameHistoryRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadGameHistoryRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.carId = 0;
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                return object;
            };

            /**
             * Converts this LoadGameHistoryRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadGameHistoryRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadGameHistoryRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadGameHistoryRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadGameHistoryRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadGameHistoryRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadGameHistoryRequest";
            };

            return LoadGameHistoryRequest;
        })();

        protobuf.LoadGameHistoryResponse = (function() {

            /**
             * Properties of a LoadGameHistoryResponse.
             * @memberof wm5.protobuf
             * @interface ILoadGameHistoryResponse
             * @property {wm5.protobuf.ErrorCode} error LoadGameHistoryResponse error
             * @property {Array.<wm5.protobuf.LoadGameHistoryResponse.ITimeAttackRecord>|null} [taRecords] LoadGameHistoryResponse taRecords
             * @property {number} taRankingUpdatedAt LoadGameHistoryResponse taRankingUpdatedAt
             * @property {Array.<wm5.protobuf.LoadGameHistoryResponse.IGhostBattleRecord>|null} [ghostHistory] LoadGameHistoryResponse ghostHistory
             * @property {number} ghostBattleCount LoadGameHistoryResponse ghostBattleCount
             * @property {number} ghostBattleWinCount LoadGameHistoryResponse ghostBattleWinCount
             * @property {number} stampSheetCount LoadGameHistoryResponse stampSheetCount
             * @property {Array.<number>|null} [stampSheet] LoadGameHistoryResponse stampSheet
             */

            /**
             * Constructs a new LoadGameHistoryResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadGameHistoryResponse.
             * @implements ILoadGameHistoryResponse
             * @constructor
             * @param {wm5.protobuf.ILoadGameHistoryResponse=} [properties] Properties to set
             */
            function LoadGameHistoryResponse(properties) {
                this.taRecords = [];
                this.ghostHistory = [];
                this.stampSheet = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadGameHistoryResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @instance
             */
            LoadGameHistoryResponse.prototype.error = 0;

            /**
             * LoadGameHistoryResponse taRecords.
             * @member {Array.<wm5.protobuf.LoadGameHistoryResponse.ITimeAttackRecord>} taRecords
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @instance
             */
            LoadGameHistoryResponse.prototype.taRecords = $util.emptyArray;

            /**
             * LoadGameHistoryResponse taRankingUpdatedAt.
             * @member {number} taRankingUpdatedAt
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @instance
             */
            LoadGameHistoryResponse.prototype.taRankingUpdatedAt = 0;

            /**
             * LoadGameHistoryResponse ghostHistory.
             * @member {Array.<wm5.protobuf.LoadGameHistoryResponse.IGhostBattleRecord>} ghostHistory
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @instance
             */
            LoadGameHistoryResponse.prototype.ghostHistory = $util.emptyArray;

            /**
             * LoadGameHistoryResponse ghostBattleCount.
             * @member {number} ghostBattleCount
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @instance
             */
            LoadGameHistoryResponse.prototype.ghostBattleCount = 0;

            /**
             * LoadGameHistoryResponse ghostBattleWinCount.
             * @member {number} ghostBattleWinCount
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @instance
             */
            LoadGameHistoryResponse.prototype.ghostBattleWinCount = 0;

            /**
             * LoadGameHistoryResponse stampSheetCount.
             * @member {number} stampSheetCount
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @instance
             */
            LoadGameHistoryResponse.prototype.stampSheetCount = 0;

            /**
             * LoadGameHistoryResponse stampSheet.
             * @member {Array.<number>} stampSheet
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @instance
             */
            LoadGameHistoryResponse.prototype.stampSheet = $util.emptyArray;

            /**
             * Creates a new LoadGameHistoryResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @static
             * @param {wm5.protobuf.ILoadGameHistoryResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadGameHistoryResponse} LoadGameHistoryResponse instance
             */
            LoadGameHistoryResponse.create = function create(properties) {
                return new LoadGameHistoryResponse(properties);
            };

            /**
             * Encodes the specified LoadGameHistoryResponse message. Does not implicitly {@link wm5.protobuf.LoadGameHistoryResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @static
             * @param {wm5.protobuf.ILoadGameHistoryResponse} message LoadGameHistoryResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGameHistoryResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.taRecords != null && message.taRecords.length)
                    for (let i = 0; i < message.taRecords.length; ++i)
                        $root.wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord.encode(message.taRecords[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.taRankingUpdatedAt);
                if (message.ghostHistory != null && message.ghostHistory.length)
                    for (let i = 0; i < message.ghostHistory.length; ++i)
                        $root.wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord.encode(message.ghostHistory[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.ghostBattleCount);
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.ghostBattleWinCount);
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.stampSheetCount);
                if (message.stampSheet != null && message.stampSheet.length)
                    for (let i = 0; i < message.stampSheet.length; ++i)
                        writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.stampSheet[i]);
                return writer;
            };

            /**
             * Encodes the specified LoadGameHistoryResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGameHistoryResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @static
             * @param {wm5.protobuf.ILoadGameHistoryResponse} message LoadGameHistoryResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGameHistoryResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadGameHistoryResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadGameHistoryResponse} LoadGameHistoryResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGameHistoryResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGameHistoryResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            if (!(message.taRecords && message.taRecords.length))
                                message.taRecords = [];
                            message.taRecords.push($root.wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord.decode(reader, reader.uint32()));
                            break;
                        }
                    case 3: {
                            message.taRankingUpdatedAt = reader.uint32();
                            break;
                        }
                    case 4: {
                            if (!(message.ghostHistory && message.ghostHistory.length))
                                message.ghostHistory = [];
                            message.ghostHistory.push($root.wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord.decode(reader, reader.uint32()));
                            break;
                        }
                    case 5: {
                            message.ghostBattleCount = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.ghostBattleWinCount = reader.uint32();
                            break;
                        }
                    case 7: {
                            message.stampSheetCount = reader.uint32();
                            break;
                        }
                    case 8: {
                            if (!(message.stampSheet && message.stampSheet.length))
                                message.stampSheet = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.stampSheet.push(reader.uint32());
                            } else
                                message.stampSheet.push(reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("taRankingUpdatedAt"))
                    throw $util.ProtocolError("missing required 'taRankingUpdatedAt'", { instance: message });
                if (!message.hasOwnProperty("ghostBattleCount"))
                    throw $util.ProtocolError("missing required 'ghostBattleCount'", { instance: message });
                if (!message.hasOwnProperty("ghostBattleWinCount"))
                    throw $util.ProtocolError("missing required 'ghostBattleWinCount'", { instance: message });
                if (!message.hasOwnProperty("stampSheetCount"))
                    throw $util.ProtocolError("missing required 'stampSheetCount'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadGameHistoryResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadGameHistoryResponse} LoadGameHistoryResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGameHistoryResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadGameHistoryResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadGameHistoryResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.taRecords != null && message.hasOwnProperty("taRecords")) {
                    if (!Array.isArray(message.taRecords))
                        return "taRecords: array expected";
                    for (let i = 0; i < message.taRecords.length; ++i) {
                        let error = $root.wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord.verify(message.taRecords[i]);
                        if (error)
                            return "taRecords." + error;
                    }
                }
                if (!$util.isInteger(message.taRankingUpdatedAt))
                    return "taRankingUpdatedAt: integer expected";
                if (message.ghostHistory != null && message.hasOwnProperty("ghostHistory")) {
                    if (!Array.isArray(message.ghostHistory))
                        return "ghostHistory: array expected";
                    for (let i = 0; i < message.ghostHistory.length; ++i) {
                        let error = $root.wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord.verify(message.ghostHistory[i]);
                        if (error)
                            return "ghostHistory." + error;
                    }
                }
                if (!$util.isInteger(message.ghostBattleCount))
                    return "ghostBattleCount: integer expected";
                if (!$util.isInteger(message.ghostBattleWinCount))
                    return "ghostBattleWinCount: integer expected";
                if (!$util.isInteger(message.stampSheetCount))
                    return "stampSheetCount: integer expected";
                if (message.stampSheet != null && message.hasOwnProperty("stampSheet")) {
                    if (!Array.isArray(message.stampSheet))
                        return "stampSheet: array expected";
                    for (let i = 0; i < message.stampSheet.length; ++i)
                        if (!$util.isInteger(message.stampSheet[i]))
                            return "stampSheet: integer[] expected";
                }
                return null;
            };

            /**
             * Creates a LoadGameHistoryResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadGameHistoryResponse} LoadGameHistoryResponse
             */
            LoadGameHistoryResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadGameHistoryResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadGameHistoryResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.taRecords) {
                    if (!Array.isArray(object.taRecords))
                        throw TypeError(".wm5.protobuf.LoadGameHistoryResponse.taRecords: array expected");
                    message.taRecords = [];
                    for (let i = 0; i < object.taRecords.length; ++i) {
                        if (typeof object.taRecords[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadGameHistoryResponse.taRecords: object expected");
                        message.taRecords[i] = $root.wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord.fromObject(object.taRecords[i]);
                    }
                }
                if (object.taRankingUpdatedAt != null)
                    message.taRankingUpdatedAt = object.taRankingUpdatedAt >>> 0;
                if (object.ghostHistory) {
                    if (!Array.isArray(object.ghostHistory))
                        throw TypeError(".wm5.protobuf.LoadGameHistoryResponse.ghostHistory: array expected");
                    message.ghostHistory = [];
                    for (let i = 0; i < object.ghostHistory.length; ++i) {
                        if (typeof object.ghostHistory[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadGameHistoryResponse.ghostHistory: object expected");
                        message.ghostHistory[i] = $root.wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord.fromObject(object.ghostHistory[i]);
                    }
                }
                if (object.ghostBattleCount != null)
                    message.ghostBattleCount = object.ghostBattleCount >>> 0;
                if (object.ghostBattleWinCount != null)
                    message.ghostBattleWinCount = object.ghostBattleWinCount >>> 0;
                if (object.stampSheetCount != null)
                    message.stampSheetCount = object.stampSheetCount >>> 0;
                if (object.stampSheet) {
                    if (!Array.isArray(object.stampSheet))
                        throw TypeError(".wm5.protobuf.LoadGameHistoryResponse.stampSheet: array expected");
                    message.stampSheet = [];
                    for (let i = 0; i < object.stampSheet.length; ++i)
                        message.stampSheet[i] = object.stampSheet[i] >>> 0;
                }
                return message;
            };

            /**
             * Creates a plain object from a LoadGameHistoryResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @static
             * @param {wm5.protobuf.LoadGameHistoryResponse} message LoadGameHistoryResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadGameHistoryResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.taRecords = [];
                    object.ghostHistory = [];
                    object.stampSheet = [];
                }
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.taRankingUpdatedAt = 0;
                    object.ghostBattleCount = 0;
                    object.ghostBattleWinCount = 0;
                    object.stampSheetCount = 0;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.taRecords && message.taRecords.length) {
                    object.taRecords = [];
                    for (let j = 0; j < message.taRecords.length; ++j)
                        object.taRecords[j] = $root.wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord.toObject(message.taRecords[j], options);
                }
                if (message.taRankingUpdatedAt != null && message.hasOwnProperty("taRankingUpdatedAt"))
                    object.taRankingUpdatedAt = message.taRankingUpdatedAt;
                if (message.ghostHistory && message.ghostHistory.length) {
                    object.ghostHistory = [];
                    for (let j = 0; j < message.ghostHistory.length; ++j)
                        object.ghostHistory[j] = $root.wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord.toObject(message.ghostHistory[j], options);
                }
                if (message.ghostBattleCount != null && message.hasOwnProperty("ghostBattleCount"))
                    object.ghostBattleCount = message.ghostBattleCount;
                if (message.ghostBattleWinCount != null && message.hasOwnProperty("ghostBattleWinCount"))
                    object.ghostBattleWinCount = message.ghostBattleWinCount;
                if (message.stampSheetCount != null && message.hasOwnProperty("stampSheetCount"))
                    object.stampSheetCount = message.stampSheetCount;
                if (message.stampSheet && message.stampSheet.length) {
                    object.stampSheet = [];
                    for (let j = 0; j < message.stampSheet.length; ++j)
                        object.stampSheet[j] = message.stampSheet[j];
                }
                return object;
            };

            /**
             * Converts this LoadGameHistoryResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadGameHistoryResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadGameHistoryResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadGameHistoryResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadGameHistoryResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadGameHistoryResponse";
            };

            LoadGameHistoryResponse.TimeAttackRecord = (function() {

                /**
                 * Properties of a TimeAttackRecord.
                 * @memberof wm5.protobuf.LoadGameHistoryResponse
                 * @interface ITimeAttackRecord
                 * @property {number} course TimeAttackRecord course
                 * @property {number|null} [time] TimeAttackRecord time
                 * @property {number|null} [tunePower] TimeAttackRecord tunePower
                 * @property {number|null} [tuneHandling] TimeAttackRecord tuneHandling
                 * @property {number|null} [wholeRank] TimeAttackRecord wholeRank
                 * @property {number} wholeParticipants TimeAttackRecord wholeParticipants
                 * @property {number|null} [modelRank] TimeAttackRecord modelRank
                 * @property {number} modelParticipants TimeAttackRecord modelParticipants
                 */

                /**
                 * Constructs a new TimeAttackRecord.
                 * @memberof wm5.protobuf.LoadGameHistoryResponse
                 * @classdesc Represents a TimeAttackRecord.
                 * @implements ITimeAttackRecord
                 * @constructor
                 * @param {wm5.protobuf.LoadGameHistoryResponse.ITimeAttackRecord=} [properties] Properties to set
                 */
                function TimeAttackRecord(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * TimeAttackRecord course.
                 * @member {number} course
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @instance
                 */
                TimeAttackRecord.prototype.course = 0;

                /**
                 * TimeAttackRecord time.
                 * @member {number} time
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @instance
                 */
                TimeAttackRecord.prototype.time = 0;

                /**
                 * TimeAttackRecord tunePower.
                 * @member {number} tunePower
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @instance
                 */
                TimeAttackRecord.prototype.tunePower = 0;

                /**
                 * TimeAttackRecord tuneHandling.
                 * @member {number} tuneHandling
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @instance
                 */
                TimeAttackRecord.prototype.tuneHandling = 0;

                /**
                 * TimeAttackRecord wholeRank.
                 * @member {number} wholeRank
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @instance
                 */
                TimeAttackRecord.prototype.wholeRank = 0;

                /**
                 * TimeAttackRecord wholeParticipants.
                 * @member {number} wholeParticipants
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @instance
                 */
                TimeAttackRecord.prototype.wholeParticipants = 0;

                /**
                 * TimeAttackRecord modelRank.
                 * @member {number} modelRank
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @instance
                 */
                TimeAttackRecord.prototype.modelRank = 0;

                /**
                 * TimeAttackRecord modelParticipants.
                 * @member {number} modelParticipants
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @instance
                 */
                TimeAttackRecord.prototype.modelParticipants = 0;

                /**
                 * Creates a new TimeAttackRecord instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @static
                 * @param {wm5.protobuf.LoadGameHistoryResponse.ITimeAttackRecord=} [properties] Properties to set
                 * @returns {wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord} TimeAttackRecord instance
                 */
                TimeAttackRecord.create = function create(properties) {
                    return new TimeAttackRecord(properties);
                };

                /**
                 * Encodes the specified TimeAttackRecord message. Does not implicitly {@link wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @static
                 * @param {wm5.protobuf.LoadGameHistoryResponse.ITimeAttackRecord} message TimeAttackRecord message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TimeAttackRecord.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.course);
                    if (message.time != null && Object.hasOwnProperty.call(message, "time"))
                        writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.time);
                    if (message.tunePower != null && Object.hasOwnProperty.call(message, "tunePower"))
                        writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.tunePower);
                    if (message.tuneHandling != null && Object.hasOwnProperty.call(message, "tuneHandling"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.tuneHandling);
                    if (message.wholeRank != null && Object.hasOwnProperty.call(message, "wholeRank"))
                        writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.wholeRank);
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.wholeParticipants);
                    if (message.modelRank != null && Object.hasOwnProperty.call(message, "modelRank"))
                        writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.modelRank);
                    writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.modelParticipants);
                    return writer;
                };

                /**
                 * Encodes the specified TimeAttackRecord message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @static
                 * @param {wm5.protobuf.LoadGameHistoryResponse.ITimeAttackRecord} message TimeAttackRecord message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TimeAttackRecord.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a TimeAttackRecord message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord} TimeAttackRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TimeAttackRecord.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.course = reader.uint32();
                                break;
                            }
                        case 2: {
                                message.time = reader.uint32();
                                break;
                            }
                        case 3: {
                                message.tunePower = reader.uint32();
                                break;
                            }
                        case 4: {
                                message.tuneHandling = reader.uint32();
                                break;
                            }
                        case 5: {
                                message.wholeRank = reader.uint32();
                                break;
                            }
                        case 6: {
                                message.wholeParticipants = reader.uint32();
                                break;
                            }
                        case 7: {
                                message.modelRank = reader.uint32();
                                break;
                            }
                        case 8: {
                                message.modelParticipants = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("course"))
                        throw $util.ProtocolError("missing required 'course'", { instance: message });
                    if (!message.hasOwnProperty("wholeParticipants"))
                        throw $util.ProtocolError("missing required 'wholeParticipants'", { instance: message });
                    if (!message.hasOwnProperty("modelParticipants"))
                        throw $util.ProtocolError("missing required 'modelParticipants'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a TimeAttackRecord message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord} TimeAttackRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TimeAttackRecord.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a TimeAttackRecord message.
                 * @function verify
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                TimeAttackRecord.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.course))
                        return "course: integer expected";
                    if (message.time != null && message.hasOwnProperty("time"))
                        if (!$util.isInteger(message.time))
                            return "time: integer expected";
                    if (message.tunePower != null && message.hasOwnProperty("tunePower"))
                        if (!$util.isInteger(message.tunePower))
                            return "tunePower: integer expected";
                    if (message.tuneHandling != null && message.hasOwnProperty("tuneHandling"))
                        if (!$util.isInteger(message.tuneHandling))
                            return "tuneHandling: integer expected";
                    if (message.wholeRank != null && message.hasOwnProperty("wholeRank"))
                        if (!$util.isInteger(message.wholeRank))
                            return "wholeRank: integer expected";
                    if (!$util.isInteger(message.wholeParticipants))
                        return "wholeParticipants: integer expected";
                    if (message.modelRank != null && message.hasOwnProperty("modelRank"))
                        if (!$util.isInteger(message.modelRank))
                            return "modelRank: integer expected";
                    if (!$util.isInteger(message.modelParticipants))
                        return "modelParticipants: integer expected";
                    return null;
                };

                /**
                 * Creates a TimeAttackRecord message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord} TimeAttackRecord
                 */
                TimeAttackRecord.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord)
                        return object;
                    let message = new $root.wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord();
                    if (object.course != null)
                        message.course = object.course >>> 0;
                    if (object.time != null)
                        message.time = object.time >>> 0;
                    if (object.tunePower != null)
                        message.tunePower = object.tunePower >>> 0;
                    if (object.tuneHandling != null)
                        message.tuneHandling = object.tuneHandling >>> 0;
                    if (object.wholeRank != null)
                        message.wholeRank = object.wholeRank >>> 0;
                    if (object.wholeParticipants != null)
                        message.wholeParticipants = object.wholeParticipants >>> 0;
                    if (object.modelRank != null)
                        message.modelRank = object.modelRank >>> 0;
                    if (object.modelParticipants != null)
                        message.modelParticipants = object.modelParticipants >>> 0;
                    return message;
                };

                /**
                 * Creates a plain object from a TimeAttackRecord message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @static
                 * @param {wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord} message TimeAttackRecord
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                TimeAttackRecord.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.course = 0;
                        object.time = 0;
                        object.tunePower = 0;
                        object.tuneHandling = 0;
                        object.wholeRank = 0;
                        object.wholeParticipants = 0;
                        object.modelRank = 0;
                        object.modelParticipants = 0;
                    }
                    if (message.course != null && message.hasOwnProperty("course"))
                        object.course = message.course;
                    if (message.time != null && message.hasOwnProperty("time"))
                        object.time = message.time;
                    if (message.tunePower != null && message.hasOwnProperty("tunePower"))
                        object.tunePower = message.tunePower;
                    if (message.tuneHandling != null && message.hasOwnProperty("tuneHandling"))
                        object.tuneHandling = message.tuneHandling;
                    if (message.wholeRank != null && message.hasOwnProperty("wholeRank"))
                        object.wholeRank = message.wholeRank;
                    if (message.wholeParticipants != null && message.hasOwnProperty("wholeParticipants"))
                        object.wholeParticipants = message.wholeParticipants;
                    if (message.modelRank != null && message.hasOwnProperty("modelRank"))
                        object.modelRank = message.modelRank;
                    if (message.modelParticipants != null && message.hasOwnProperty("modelParticipants"))
                        object.modelParticipants = message.modelParticipants;
                    return object;
                };

                /**
                 * Converts this TimeAttackRecord to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                TimeAttackRecord.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for TimeAttackRecord
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                TimeAttackRecord.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.LoadGameHistoryResponse.TimeAttackRecord";
                };

                return TimeAttackRecord;
            })();

            LoadGameHistoryResponse.GhostBattleRecord = (function() {

                /**
                 * Properties of a GhostBattleRecord.
                 * @memberof wm5.protobuf.LoadGameHistoryResponse
                 * @interface IGhostBattleRecord
                 * @property {string} opponentName GhostBattleRecord opponentName
                 * @property {number} opponentModel GhostBattleRecord opponentModel
                 * @property {number} opponentVisualModel GhostBattleRecord opponentVisualModel
                 * @property {number} opponentDefaultColor GhostBattleRecord opponentDefaultColor
                 * @property {number} opponentRegionId GhostBattleRecord opponentRegionId
                 * @property {number} opponentTunePower GhostBattleRecord opponentTunePower
                 * @property {number} opponentTuneHandling GhostBattleRecord opponentTuneHandling
                 * @property {number} area GhostBattleRecord area
                 * @property {number} result GhostBattleRecord result
                 * @property {boolean} isChallenger GhostBattleRecord isChallenger
                 * @property {number} stampReturnCount GhostBattleRecord stampReturnCount
                 * @property {number} playedAt GhostBattleRecord playedAt
                 * @property {string} playedShopName GhostBattleRecord playedShopName
                 */

                /**
                 * Constructs a new GhostBattleRecord.
                 * @memberof wm5.protobuf.LoadGameHistoryResponse
                 * @classdesc Represents a GhostBattleRecord.
                 * @implements IGhostBattleRecord
                 * @constructor
                 * @param {wm5.protobuf.LoadGameHistoryResponse.IGhostBattleRecord=} [properties] Properties to set
                 */
                function GhostBattleRecord(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * GhostBattleRecord opponentName.
                 * @member {string} opponentName
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @instance
                 */
                GhostBattleRecord.prototype.opponentName = "";

                /**
                 * GhostBattleRecord opponentModel.
                 * @member {number} opponentModel
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @instance
                 */
                GhostBattleRecord.prototype.opponentModel = 0;

                /**
                 * GhostBattleRecord opponentVisualModel.
                 * @member {number} opponentVisualModel
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @instance
                 */
                GhostBattleRecord.prototype.opponentVisualModel = 0;

                /**
                 * GhostBattleRecord opponentDefaultColor.
                 * @member {number} opponentDefaultColor
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @instance
                 */
                GhostBattleRecord.prototype.opponentDefaultColor = 0;

                /**
                 * GhostBattleRecord opponentRegionId.
                 * @member {number} opponentRegionId
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @instance
                 */
                GhostBattleRecord.prototype.opponentRegionId = 0;

                /**
                 * GhostBattleRecord opponentTunePower.
                 * @member {number} opponentTunePower
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @instance
                 */
                GhostBattleRecord.prototype.opponentTunePower = 0;

                /**
                 * GhostBattleRecord opponentTuneHandling.
                 * @member {number} opponentTuneHandling
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @instance
                 */
                GhostBattleRecord.prototype.opponentTuneHandling = 0;

                /**
                 * GhostBattleRecord area.
                 * @member {number} area
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @instance
                 */
                GhostBattleRecord.prototype.area = 0;

                /**
                 * GhostBattleRecord result.
                 * @member {number} result
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @instance
                 */
                GhostBattleRecord.prototype.result = 0;

                /**
                 * GhostBattleRecord isChallenger.
                 * @member {boolean} isChallenger
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @instance
                 */
                GhostBattleRecord.prototype.isChallenger = false;

                /**
                 * GhostBattleRecord stampReturnCount.
                 * @member {number} stampReturnCount
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @instance
                 */
                GhostBattleRecord.prototype.stampReturnCount = 0;

                /**
                 * GhostBattleRecord playedAt.
                 * @member {number} playedAt
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @instance
                 */
                GhostBattleRecord.prototype.playedAt = 0;

                /**
                 * GhostBattleRecord playedShopName.
                 * @member {string} playedShopName
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @instance
                 */
                GhostBattleRecord.prototype.playedShopName = "";

                /**
                 * Creates a new GhostBattleRecord instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @static
                 * @param {wm5.protobuf.LoadGameHistoryResponse.IGhostBattleRecord=} [properties] Properties to set
                 * @returns {wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord} GhostBattleRecord instance
                 */
                GhostBattleRecord.create = function create(properties) {
                    return new GhostBattleRecord(properties);
                };

                /**
                 * Encodes the specified GhostBattleRecord message. Does not implicitly {@link wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @static
                 * @param {wm5.protobuf.LoadGameHistoryResponse.IGhostBattleRecord} message GhostBattleRecord message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GhostBattleRecord.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.opponentName);
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.opponentModel);
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.opponentVisualModel);
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.opponentDefaultColor);
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.opponentRegionId);
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.opponentTunePower);
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.opponentTuneHandling);
                    writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.area);
                    writer.uint32(/* id 9, wireType 0 =*/72).sint32(message.result);
                    writer.uint32(/* id 10, wireType 0 =*/80).bool(message.isChallenger);
                    writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.stampReturnCount);
                    writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.playedAt);
                    writer.uint32(/* id 13, wireType 2 =*/106).string(message.playedShopName);
                    return writer;
                };

                /**
                 * Encodes the specified GhostBattleRecord message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @static
                 * @param {wm5.protobuf.LoadGameHistoryResponse.IGhostBattleRecord} message GhostBattleRecord message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GhostBattleRecord.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a GhostBattleRecord message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord} GhostBattleRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GhostBattleRecord.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.opponentName = reader.string();
                                break;
                            }
                        case 2: {
                                message.opponentModel = reader.uint32();
                                break;
                            }
                        case 3: {
                                message.opponentVisualModel = reader.uint32();
                                break;
                            }
                        case 4: {
                                message.opponentDefaultColor = reader.uint32();
                                break;
                            }
                        case 5: {
                                message.opponentRegionId = reader.uint32();
                                break;
                            }
                        case 6: {
                                message.opponentTunePower = reader.uint32();
                                break;
                            }
                        case 7: {
                                message.opponentTuneHandling = reader.uint32();
                                break;
                            }
                        case 8: {
                                message.area = reader.uint32();
                                break;
                            }
                        case 9: {
                                message.result = reader.sint32();
                                break;
                            }
                        case 10: {
                                message.isChallenger = reader.bool();
                                break;
                            }
                        case 11: {
                                message.stampReturnCount = reader.uint32();
                                break;
                            }
                        case 12: {
                                message.playedAt = reader.uint32();
                                break;
                            }
                        case 13: {
                                message.playedShopName = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("opponentName"))
                        throw $util.ProtocolError("missing required 'opponentName'", { instance: message });
                    if (!message.hasOwnProperty("opponentModel"))
                        throw $util.ProtocolError("missing required 'opponentModel'", { instance: message });
                    if (!message.hasOwnProperty("opponentVisualModel"))
                        throw $util.ProtocolError("missing required 'opponentVisualModel'", { instance: message });
                    if (!message.hasOwnProperty("opponentDefaultColor"))
                        throw $util.ProtocolError("missing required 'opponentDefaultColor'", { instance: message });
                    if (!message.hasOwnProperty("opponentRegionId"))
                        throw $util.ProtocolError("missing required 'opponentRegionId'", { instance: message });
                    if (!message.hasOwnProperty("opponentTunePower"))
                        throw $util.ProtocolError("missing required 'opponentTunePower'", { instance: message });
                    if (!message.hasOwnProperty("opponentTuneHandling"))
                        throw $util.ProtocolError("missing required 'opponentTuneHandling'", { instance: message });
                    if (!message.hasOwnProperty("area"))
                        throw $util.ProtocolError("missing required 'area'", { instance: message });
                    if (!message.hasOwnProperty("result"))
                        throw $util.ProtocolError("missing required 'result'", { instance: message });
                    if (!message.hasOwnProperty("isChallenger"))
                        throw $util.ProtocolError("missing required 'isChallenger'", { instance: message });
                    if (!message.hasOwnProperty("stampReturnCount"))
                        throw $util.ProtocolError("missing required 'stampReturnCount'", { instance: message });
                    if (!message.hasOwnProperty("playedAt"))
                        throw $util.ProtocolError("missing required 'playedAt'", { instance: message });
                    if (!message.hasOwnProperty("playedShopName"))
                        throw $util.ProtocolError("missing required 'playedShopName'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a GhostBattleRecord message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord} GhostBattleRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GhostBattleRecord.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a GhostBattleRecord message.
                 * @function verify
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GhostBattleRecord.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isString(message.opponentName))
                        return "opponentName: string expected";
                    if (!$util.isInteger(message.opponentModel))
                        return "opponentModel: integer expected";
                    if (!$util.isInteger(message.opponentVisualModel))
                        return "opponentVisualModel: integer expected";
                    if (!$util.isInteger(message.opponentDefaultColor))
                        return "opponentDefaultColor: integer expected";
                    if (!$util.isInteger(message.opponentRegionId))
                        return "opponentRegionId: integer expected";
                    if (!$util.isInteger(message.opponentTunePower))
                        return "opponentTunePower: integer expected";
                    if (!$util.isInteger(message.opponentTuneHandling))
                        return "opponentTuneHandling: integer expected";
                    if (!$util.isInteger(message.area))
                        return "area: integer expected";
                    if (!$util.isInteger(message.result))
                        return "result: integer expected";
                    if (typeof message.isChallenger !== "boolean")
                        return "isChallenger: boolean expected";
                    if (!$util.isInteger(message.stampReturnCount))
                        return "stampReturnCount: integer expected";
                    if (!$util.isInteger(message.playedAt))
                        return "playedAt: integer expected";
                    if (!$util.isString(message.playedShopName))
                        return "playedShopName: string expected";
                    return null;
                };

                /**
                 * Creates a GhostBattleRecord message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord} GhostBattleRecord
                 */
                GhostBattleRecord.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord)
                        return object;
                    let message = new $root.wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord();
                    if (object.opponentName != null)
                        message.opponentName = String(object.opponentName);
                    if (object.opponentModel != null)
                        message.opponentModel = object.opponentModel >>> 0;
                    if (object.opponentVisualModel != null)
                        message.opponentVisualModel = object.opponentVisualModel >>> 0;
                    if (object.opponentDefaultColor != null)
                        message.opponentDefaultColor = object.opponentDefaultColor >>> 0;
                    if (object.opponentRegionId != null)
                        message.opponentRegionId = object.opponentRegionId >>> 0;
                    if (object.opponentTunePower != null)
                        message.opponentTunePower = object.opponentTunePower >>> 0;
                    if (object.opponentTuneHandling != null)
                        message.opponentTuneHandling = object.opponentTuneHandling >>> 0;
                    if (object.area != null)
                        message.area = object.area >>> 0;
                    if (object.result != null)
                        message.result = object.result | 0;
                    if (object.isChallenger != null)
                        message.isChallenger = Boolean(object.isChallenger);
                    if (object.stampReturnCount != null)
                        message.stampReturnCount = object.stampReturnCount >>> 0;
                    if (object.playedAt != null)
                        message.playedAt = object.playedAt >>> 0;
                    if (object.playedShopName != null)
                        message.playedShopName = String(object.playedShopName);
                    return message;
                };

                /**
                 * Creates a plain object from a GhostBattleRecord message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @static
                 * @param {wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord} message GhostBattleRecord
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GhostBattleRecord.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.opponentName = "";
                        object.opponentModel = 0;
                        object.opponentVisualModel = 0;
                        object.opponentDefaultColor = 0;
                        object.opponentRegionId = 0;
                        object.opponentTunePower = 0;
                        object.opponentTuneHandling = 0;
                        object.area = 0;
                        object.result = 0;
                        object.isChallenger = false;
                        object.stampReturnCount = 0;
                        object.playedAt = 0;
                        object.playedShopName = "";
                    }
                    if (message.opponentName != null && message.hasOwnProperty("opponentName"))
                        object.opponentName = message.opponentName;
                    if (message.opponentModel != null && message.hasOwnProperty("opponentModel"))
                        object.opponentModel = message.opponentModel;
                    if (message.opponentVisualModel != null && message.hasOwnProperty("opponentVisualModel"))
                        object.opponentVisualModel = message.opponentVisualModel;
                    if (message.opponentDefaultColor != null && message.hasOwnProperty("opponentDefaultColor"))
                        object.opponentDefaultColor = message.opponentDefaultColor;
                    if (message.opponentRegionId != null && message.hasOwnProperty("opponentRegionId"))
                        object.opponentRegionId = message.opponentRegionId;
                    if (message.opponentTunePower != null && message.hasOwnProperty("opponentTunePower"))
                        object.opponentTunePower = message.opponentTunePower;
                    if (message.opponentTuneHandling != null && message.hasOwnProperty("opponentTuneHandling"))
                        object.opponentTuneHandling = message.opponentTuneHandling;
                    if (message.area != null && message.hasOwnProperty("area"))
                        object.area = message.area;
                    if (message.result != null && message.hasOwnProperty("result"))
                        object.result = message.result;
                    if (message.isChallenger != null && message.hasOwnProperty("isChallenger"))
                        object.isChallenger = message.isChallenger;
                    if (message.stampReturnCount != null && message.hasOwnProperty("stampReturnCount"))
                        object.stampReturnCount = message.stampReturnCount;
                    if (message.playedAt != null && message.hasOwnProperty("playedAt"))
                        object.playedAt = message.playedAt;
                    if (message.playedShopName != null && message.hasOwnProperty("playedShopName"))
                        object.playedShopName = message.playedShopName;
                    return object;
                };

                /**
                 * Converts this GhostBattleRecord to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GhostBattleRecord.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for GhostBattleRecord
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GhostBattleRecord.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.LoadGameHistoryResponse.GhostBattleRecord";
                };

                return GhostBattleRecord;
            })();

            return LoadGameHistoryResponse;
        })();

        protobuf.UpdateCarRequest = (function() {

            /**
             * Properties of an UpdateCarRequest.
             * @memberof wm5.protobuf
             * @interface IUpdateCarRequest
             * @property {number} carId UpdateCarRequest carId
             * @property {wm5.protobuf.ICar|null} [car] UpdateCarRequest car
             * @property {number|null} [hp600Count] UpdateCarRequest hp600Count
             * @property {Array.<wm5.protobuf.ICarItem>|null} [earnedItems] UpdateCarRequest earnedItems
             * @property {wm5.protobuf.ICarSetting|null} [setting] UpdateCarRequest setting
             * @property {number|null} [earnedMaxiGold] UpdateCarRequest earnedMaxiGold
             * @property {number|null} [expendedMaxiGold] UpdateCarRequest expendedMaxiGold
             * @property {number|null} [maxiGold] UpdateCarRequest maxiGold
             * @property {boolean|null} [toBeDeleted] UpdateCarRequest toBeDeleted
             * @property {boolean|null} [auraMotifAutoChange] UpdateCarRequest auraMotifAutoChange
             * @property {boolean|null} [repayingCampaign] UpdateCarRequest repayingCampaign
             * @property {number|null} [rgStamp] UpdateCarRequest rgStamp
             * @property {number} timestamp UpdateCarRequest timestamp
             */

            /**
             * Constructs a new UpdateCarRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents an UpdateCarRequest.
             * @implements IUpdateCarRequest
             * @constructor
             * @param {wm5.protobuf.IUpdateCarRequest=} [properties] Properties to set
             */
            function UpdateCarRequest(properties) {
                this.earnedItems = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * UpdateCarRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.UpdateCarRequest
             * @instance
             */
            UpdateCarRequest.prototype.carId = 0;

            /**
             * UpdateCarRequest car.
             * @member {wm5.protobuf.ICar|null|undefined} car
             * @memberof wm5.protobuf.UpdateCarRequest
             * @instance
             */
            UpdateCarRequest.prototype.car = null;

            /**
             * UpdateCarRequest hp600Count.
             * @member {number} hp600Count
             * @memberof wm5.protobuf.UpdateCarRequest
             * @instance
             */
            UpdateCarRequest.prototype.hp600Count = 0;

            /**
             * UpdateCarRequest earnedItems.
             * @member {Array.<wm5.protobuf.ICarItem>} earnedItems
             * @memberof wm5.protobuf.UpdateCarRequest
             * @instance
             */
            UpdateCarRequest.prototype.earnedItems = $util.emptyArray;

            /**
             * UpdateCarRequest setting.
             * @member {wm5.protobuf.ICarSetting|null|undefined} setting
             * @memberof wm5.protobuf.UpdateCarRequest
             * @instance
             */
            UpdateCarRequest.prototype.setting = null;

            /**
             * UpdateCarRequest earnedMaxiGold.
             * @member {number} earnedMaxiGold
             * @memberof wm5.protobuf.UpdateCarRequest
             * @instance
             */
            UpdateCarRequest.prototype.earnedMaxiGold = 0;

            /**
             * UpdateCarRequest expendedMaxiGold.
             * @member {number} expendedMaxiGold
             * @memberof wm5.protobuf.UpdateCarRequest
             * @instance
             */
            UpdateCarRequest.prototype.expendedMaxiGold = 0;

            /**
             * UpdateCarRequest maxiGold.
             * @member {number} maxiGold
             * @memberof wm5.protobuf.UpdateCarRequest
             * @instance
             */
            UpdateCarRequest.prototype.maxiGold = 0;

            /**
             * UpdateCarRequest toBeDeleted.
             * @member {boolean} toBeDeleted
             * @memberof wm5.protobuf.UpdateCarRequest
             * @instance
             */
            UpdateCarRequest.prototype.toBeDeleted = false;

            /**
             * UpdateCarRequest auraMotifAutoChange.
             * @member {boolean} auraMotifAutoChange
             * @memberof wm5.protobuf.UpdateCarRequest
             * @instance
             */
            UpdateCarRequest.prototype.auraMotifAutoChange = false;

            /**
             * UpdateCarRequest repayingCampaign.
             * @member {boolean} repayingCampaign
             * @memberof wm5.protobuf.UpdateCarRequest
             * @instance
             */
            UpdateCarRequest.prototype.repayingCampaign = false;

            /**
             * UpdateCarRequest rgStamp.
             * @member {number} rgStamp
             * @memberof wm5.protobuf.UpdateCarRequest
             * @instance
             */
            UpdateCarRequest.prototype.rgStamp = 0;

            /**
             * UpdateCarRequest timestamp.
             * @member {number} timestamp
             * @memberof wm5.protobuf.UpdateCarRequest
             * @instance
             */
            UpdateCarRequest.prototype.timestamp = 0;

            /**
             * Creates a new UpdateCarRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.UpdateCarRequest
             * @static
             * @param {wm5.protobuf.IUpdateCarRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.UpdateCarRequest} UpdateCarRequest instance
             */
            UpdateCarRequest.create = function create(properties) {
                return new UpdateCarRequest(properties);
            };

            /**
             * Encodes the specified UpdateCarRequest message. Does not implicitly {@link wm5.protobuf.UpdateCarRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.UpdateCarRequest
             * @static
             * @param {wm5.protobuf.IUpdateCarRequest} message UpdateCarRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateCarRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                if (message.car != null && Object.hasOwnProperty.call(message, "car"))
                    $root.wm5.protobuf.Car.encode(message.car, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.hp600Count != null && Object.hasOwnProperty.call(message, "hp600Count"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.hp600Count);
                if (message.earnedItems != null && message.earnedItems.length)
                    for (let i = 0; i < message.earnedItems.length; ++i)
                        $root.wm5.protobuf.CarItem.encode(message.earnedItems[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                if (message.setting != null && Object.hasOwnProperty.call(message, "setting"))
                    $root.wm5.protobuf.CarSetting.encode(message.setting, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                if (message.earnedMaxiGold != null && Object.hasOwnProperty.call(message, "earnedMaxiGold"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.earnedMaxiGold);
                if (message.expendedMaxiGold != null && Object.hasOwnProperty.call(message, "expendedMaxiGold"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.expendedMaxiGold);
                if (message.maxiGold != null && Object.hasOwnProperty.call(message, "maxiGold"))
                    writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.maxiGold);
                if (message.toBeDeleted != null && Object.hasOwnProperty.call(message, "toBeDeleted"))
                    writer.uint32(/* id 9, wireType 0 =*/72).bool(message.toBeDeleted);
                if (message.auraMotifAutoChange != null && Object.hasOwnProperty.call(message, "auraMotifAutoChange"))
                    writer.uint32(/* id 10, wireType 0 =*/80).bool(message.auraMotifAutoChange);
                if (message.repayingCampaign != null && Object.hasOwnProperty.call(message, "repayingCampaign"))
                    writer.uint32(/* id 11, wireType 0 =*/88).bool(message.repayingCampaign);
                if (message.rgStamp != null && Object.hasOwnProperty.call(message, "rgStamp"))
                    writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.rgStamp);
                writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.timestamp);
                return writer;
            };

            /**
             * Encodes the specified UpdateCarRequest message, length delimited. Does not implicitly {@link wm5.protobuf.UpdateCarRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.UpdateCarRequest
             * @static
             * @param {wm5.protobuf.IUpdateCarRequest} message UpdateCarRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateCarRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an UpdateCarRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.UpdateCarRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.UpdateCarRequest} UpdateCarRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateCarRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.UpdateCarRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.car = $root.wm5.protobuf.Car.decode(reader, reader.uint32());
                            break;
                        }
                    case 3: {
                            message.hp600Count = reader.uint32();
                            break;
                        }
                    case 4: {
                            if (!(message.earnedItems && message.earnedItems.length))
                                message.earnedItems = [];
                            message.earnedItems.push($root.wm5.protobuf.CarItem.decode(reader, reader.uint32()));
                            break;
                        }
                    case 5: {
                            message.setting = $root.wm5.protobuf.CarSetting.decode(reader, reader.uint32());
                            break;
                        }
                    case 6: {
                            message.earnedMaxiGold = reader.uint32();
                            break;
                        }
                    case 7: {
                            message.expendedMaxiGold = reader.uint32();
                            break;
                        }
                    case 8: {
                            message.maxiGold = reader.uint32();
                            break;
                        }
                    case 9: {
                            message.toBeDeleted = reader.bool();
                            break;
                        }
                    case 10: {
                            message.auraMotifAutoChange = reader.bool();
                            break;
                        }
                    case 11: {
                            message.repayingCampaign = reader.bool();
                            break;
                        }
                    case 12: {
                            message.rgStamp = reader.uint32();
                            break;
                        }
                    case 13: {
                            message.timestamp = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                if (!message.hasOwnProperty("timestamp"))
                    throw $util.ProtocolError("missing required 'timestamp'", { instance: message });
                return message;
            };

            /**
             * Decodes an UpdateCarRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.UpdateCarRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.UpdateCarRequest} UpdateCarRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateCarRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an UpdateCarRequest message.
             * @function verify
             * @memberof wm5.protobuf.UpdateCarRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UpdateCarRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                if (message.car != null && message.hasOwnProperty("car")) {
                    let error = $root.wm5.protobuf.Car.verify(message.car);
                    if (error)
                        return "car." + error;
                }
                if (message.hp600Count != null && message.hasOwnProperty("hp600Count"))
                    if (!$util.isInteger(message.hp600Count))
                        return "hp600Count: integer expected";
                if (message.earnedItems != null && message.hasOwnProperty("earnedItems")) {
                    if (!Array.isArray(message.earnedItems))
                        return "earnedItems: array expected";
                    for (let i = 0; i < message.earnedItems.length; ++i) {
                        let error = $root.wm5.protobuf.CarItem.verify(message.earnedItems[i]);
                        if (error)
                            return "earnedItems." + error;
                    }
                }
                if (message.setting != null && message.hasOwnProperty("setting")) {
                    let error = $root.wm5.protobuf.CarSetting.verify(message.setting);
                    if (error)
                        return "setting." + error;
                }
                if (message.earnedMaxiGold != null && message.hasOwnProperty("earnedMaxiGold"))
                    if (!$util.isInteger(message.earnedMaxiGold))
                        return "earnedMaxiGold: integer expected";
                if (message.expendedMaxiGold != null && message.hasOwnProperty("expendedMaxiGold"))
                    if (!$util.isInteger(message.expendedMaxiGold))
                        return "expendedMaxiGold: integer expected";
                if (message.maxiGold != null && message.hasOwnProperty("maxiGold"))
                    if (!$util.isInteger(message.maxiGold))
                        return "maxiGold: integer expected";
                if (message.toBeDeleted != null && message.hasOwnProperty("toBeDeleted"))
                    if (typeof message.toBeDeleted !== "boolean")
                        return "toBeDeleted: boolean expected";
                if (message.auraMotifAutoChange != null && message.hasOwnProperty("auraMotifAutoChange"))
                    if (typeof message.auraMotifAutoChange !== "boolean")
                        return "auraMotifAutoChange: boolean expected";
                if (message.repayingCampaign != null && message.hasOwnProperty("repayingCampaign"))
                    if (typeof message.repayingCampaign !== "boolean")
                        return "repayingCampaign: boolean expected";
                if (message.rgStamp != null && message.hasOwnProperty("rgStamp"))
                    if (!$util.isInteger(message.rgStamp))
                        return "rgStamp: integer expected";
                if (!$util.isInteger(message.timestamp))
                    return "timestamp: integer expected";
                return null;
            };

            /**
             * Creates an UpdateCarRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.UpdateCarRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.UpdateCarRequest} UpdateCarRequest
             */
            UpdateCarRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.UpdateCarRequest)
                    return object;
                let message = new $root.wm5.protobuf.UpdateCarRequest();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.car != null) {
                    if (typeof object.car !== "object")
                        throw TypeError(".wm5.protobuf.UpdateCarRequest.car: object expected");
                    message.car = $root.wm5.protobuf.Car.fromObject(object.car);
                }
                if (object.hp600Count != null)
                    message.hp600Count = object.hp600Count >>> 0;
                if (object.earnedItems) {
                    if (!Array.isArray(object.earnedItems))
                        throw TypeError(".wm5.protobuf.UpdateCarRequest.earnedItems: array expected");
                    message.earnedItems = [];
                    for (let i = 0; i < object.earnedItems.length; ++i) {
                        if (typeof object.earnedItems[i] !== "object")
                            throw TypeError(".wm5.protobuf.UpdateCarRequest.earnedItems: object expected");
                        message.earnedItems[i] = $root.wm5.protobuf.CarItem.fromObject(object.earnedItems[i]);
                    }
                }
                if (object.setting != null) {
                    if (typeof object.setting !== "object")
                        throw TypeError(".wm5.protobuf.UpdateCarRequest.setting: object expected");
                    message.setting = $root.wm5.protobuf.CarSetting.fromObject(object.setting);
                }
                if (object.earnedMaxiGold != null)
                    message.earnedMaxiGold = object.earnedMaxiGold >>> 0;
                if (object.expendedMaxiGold != null)
                    message.expendedMaxiGold = object.expendedMaxiGold >>> 0;
                if (object.maxiGold != null)
                    message.maxiGold = object.maxiGold >>> 0;
                if (object.toBeDeleted != null)
                    message.toBeDeleted = Boolean(object.toBeDeleted);
                if (object.auraMotifAutoChange != null)
                    message.auraMotifAutoChange = Boolean(object.auraMotifAutoChange);
                if (object.repayingCampaign != null)
                    message.repayingCampaign = Boolean(object.repayingCampaign);
                if (object.rgStamp != null)
                    message.rgStamp = object.rgStamp >>> 0;
                if (object.timestamp != null)
                    message.timestamp = object.timestamp >>> 0;
                return message;
            };

            /**
             * Creates a plain object from an UpdateCarRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.UpdateCarRequest
             * @static
             * @param {wm5.protobuf.UpdateCarRequest} message UpdateCarRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UpdateCarRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.earnedItems = [];
                if (options.defaults) {
                    object.carId = 0;
                    object.car = null;
                    object.hp600Count = 0;
                    object.setting = null;
                    object.earnedMaxiGold = 0;
                    object.expendedMaxiGold = 0;
                    object.maxiGold = 0;
                    object.toBeDeleted = false;
                    object.auraMotifAutoChange = false;
                    object.repayingCampaign = false;
                    object.rgStamp = 0;
                    object.timestamp = 0;
                }
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.car != null && message.hasOwnProperty("car"))
                    object.car = $root.wm5.protobuf.Car.toObject(message.car, options);
                if (message.hp600Count != null && message.hasOwnProperty("hp600Count"))
                    object.hp600Count = message.hp600Count;
                if (message.earnedItems && message.earnedItems.length) {
                    object.earnedItems = [];
                    for (let j = 0; j < message.earnedItems.length; ++j)
                        object.earnedItems[j] = $root.wm5.protobuf.CarItem.toObject(message.earnedItems[j], options);
                }
                if (message.setting != null && message.hasOwnProperty("setting"))
                    object.setting = $root.wm5.protobuf.CarSetting.toObject(message.setting, options);
                if (message.earnedMaxiGold != null && message.hasOwnProperty("earnedMaxiGold"))
                    object.earnedMaxiGold = message.earnedMaxiGold;
                if (message.expendedMaxiGold != null && message.hasOwnProperty("expendedMaxiGold"))
                    object.expendedMaxiGold = message.expendedMaxiGold;
                if (message.maxiGold != null && message.hasOwnProperty("maxiGold"))
                    object.maxiGold = message.maxiGold;
                if (message.toBeDeleted != null && message.hasOwnProperty("toBeDeleted"))
                    object.toBeDeleted = message.toBeDeleted;
                if (message.auraMotifAutoChange != null && message.hasOwnProperty("auraMotifAutoChange"))
                    object.auraMotifAutoChange = message.auraMotifAutoChange;
                if (message.repayingCampaign != null && message.hasOwnProperty("repayingCampaign"))
                    object.repayingCampaign = message.repayingCampaign;
                if (message.rgStamp != null && message.hasOwnProperty("rgStamp"))
                    object.rgStamp = message.rgStamp;
                if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                    object.timestamp = message.timestamp;
                return object;
            };

            /**
             * Converts this UpdateCarRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.UpdateCarRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UpdateCarRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for UpdateCarRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.UpdateCarRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UpdateCarRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.UpdateCarRequest";
            };

            return UpdateCarRequest;
        })();

        protobuf.UpdateCarResponse = (function() {

            /**
             * Properties of an UpdateCarResponse.
             * @memberof wm5.protobuf
             * @interface IUpdateCarResponse
             * @property {wm5.protobuf.ErrorCode} error UpdateCarResponse error
             */

            /**
             * Constructs a new UpdateCarResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents an UpdateCarResponse.
             * @implements IUpdateCarResponse
             * @constructor
             * @param {wm5.protobuf.IUpdateCarResponse=} [properties] Properties to set
             */
            function UpdateCarResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * UpdateCarResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.UpdateCarResponse
             * @instance
             */
            UpdateCarResponse.prototype.error = 0;

            /**
             * Creates a new UpdateCarResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.UpdateCarResponse
             * @static
             * @param {wm5.protobuf.IUpdateCarResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.UpdateCarResponse} UpdateCarResponse instance
             */
            UpdateCarResponse.create = function create(properties) {
                return new UpdateCarResponse(properties);
            };

            /**
             * Encodes the specified UpdateCarResponse message. Does not implicitly {@link wm5.protobuf.UpdateCarResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.UpdateCarResponse
             * @static
             * @param {wm5.protobuf.IUpdateCarResponse} message UpdateCarResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateCarResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified UpdateCarResponse message, length delimited. Does not implicitly {@link wm5.protobuf.UpdateCarResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.UpdateCarResponse
             * @static
             * @param {wm5.protobuf.IUpdateCarResponse} message UpdateCarResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateCarResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an UpdateCarResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.UpdateCarResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.UpdateCarResponse} UpdateCarResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateCarResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.UpdateCarResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes an UpdateCarResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.UpdateCarResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.UpdateCarResponse} UpdateCarResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateCarResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an UpdateCarResponse message.
             * @function verify
             * @memberof wm5.protobuf.UpdateCarResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UpdateCarResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates an UpdateCarResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.UpdateCarResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.UpdateCarResponse} UpdateCarResponse
             */
            UpdateCarResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.UpdateCarResponse)
                    return object;
                let message = new $root.wm5.protobuf.UpdateCarResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from an UpdateCarResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.UpdateCarResponse
             * @static
             * @param {wm5.protobuf.UpdateCarResponse} message UpdateCarResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UpdateCarResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this UpdateCarResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.UpdateCarResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UpdateCarResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for UpdateCarResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.UpdateCarResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UpdateCarResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.UpdateCarResponse";
            };

            return UpdateCarResponse;
        })();

        protobuf.SaveGameResultRequest = (function() {

            /**
             * Properties of a SaveGameResultRequest.
             * @memberof wm5.protobuf
             * @interface ISaveGameResultRequest
             * @property {number} carId SaveGameResultRequest carId
             * @property {wm5.protobuf.GameMode} gameMode SaveGameResultRequest gameMode
             * @property {number} playedAt SaveGameResultRequest playedAt
             * @property {number} playCount SaveGameResultRequest playCount
             * @property {boolean} retired SaveGameResultRequest retired
             * @property {boolean} timeup SaveGameResultRequest timeup
             * @property {wm5.protobuf.ICar|null} [car] SaveGameResultRequest car
             * @property {wm5.protobuf.ICarSetting|null} [setting] SaveGameResultRequest setting
             * @property {number|null} [odometer] SaveGameResultRequest odometer
             * @property {number|null} [hp600Count] SaveGameResultRequest hp600Count
             * @property {boolean|null} [earnedCustomColor] SaveGameResultRequest earnedCustomColor
             * @property {Array.<wm5.protobuf.TutorialType>|null} [confirmedTutorials] SaveGameResultRequest confirmedTutorials
             * @property {Array.<wm5.protobuf.ICarItem>|null} [earnedItems] SaveGameResultRequest earnedItems
             * @property {Array.<string>|null} [preservedTitles] SaveGameResultRequest preservedTitles
             * @property {number|null} [earnedMaxiGold] SaveGameResultRequest earnedMaxiGold
             * @property {number|null} [expendedMaxiGold] SaveGameResultRequest expendedMaxiGold
             * @property {number|null} [maxiGold] SaveGameResultRequest maxiGold
             * @property {boolean|null} [repayingCampaign] SaveGameResultRequest repayingCampaign
             * @property {Array.<number>|null} [neighborCars] SaveGameResultRequest neighborCars
             * @property {wm5.protobuf.SaveGameResultRequest.IStoryResult|null} [stResult] SaveGameResultRequest stResult
             * @property {wm5.protobuf.SaveGameResultRequest.ITimeAttackResult|null} [taResult] SaveGameResultRequest taResult
             * @property {wm5.protobuf.SaveGameResultRequest.IVersusBattleResult|null} [vsResult] SaveGameResultRequest vsResult
             * @property {wm5.protobuf.SaveGameResultRequest.IGhostBattleResult|null} [rgResult] SaveGameResultRequest rgResult
             */

            /**
             * Constructs a new SaveGameResultRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a SaveGameResultRequest.
             * @implements ISaveGameResultRequest
             * @constructor
             * @param {wm5.protobuf.ISaveGameResultRequest=} [properties] Properties to set
             */
            function SaveGameResultRequest(properties) {
                this.confirmedTutorials = [];
                this.earnedItems = [];
                this.preservedTitles = [];
                this.neighborCars = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SaveGameResultRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.carId = 0;

            /**
             * SaveGameResultRequest gameMode.
             * @member {wm5.protobuf.GameMode} gameMode
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.gameMode = 1;

            /**
             * SaveGameResultRequest playedAt.
             * @member {number} playedAt
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.playedAt = 0;

            /**
             * SaveGameResultRequest playCount.
             * @member {number} playCount
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.playCount = 0;

            /**
             * SaveGameResultRequest retired.
             * @member {boolean} retired
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.retired = false;

            /**
             * SaveGameResultRequest timeup.
             * @member {boolean} timeup
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.timeup = false;

            /**
             * SaveGameResultRequest car.
             * @member {wm5.protobuf.ICar|null|undefined} car
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.car = null;

            /**
             * SaveGameResultRequest setting.
             * @member {wm5.protobuf.ICarSetting|null|undefined} setting
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.setting = null;

            /**
             * SaveGameResultRequest odometer.
             * @member {number} odometer
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.odometer = 0;

            /**
             * SaveGameResultRequest hp600Count.
             * @member {number} hp600Count
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.hp600Count = 0;

            /**
             * SaveGameResultRequest earnedCustomColor.
             * @member {boolean} earnedCustomColor
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.earnedCustomColor = false;

            /**
             * SaveGameResultRequest confirmedTutorials.
             * @member {Array.<wm5.protobuf.TutorialType>} confirmedTutorials
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.confirmedTutorials = $util.emptyArray;

            /**
             * SaveGameResultRequest earnedItems.
             * @member {Array.<wm5.protobuf.ICarItem>} earnedItems
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.earnedItems = $util.emptyArray;

            /**
             * SaveGameResultRequest preservedTitles.
             * @member {Array.<string>} preservedTitles
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.preservedTitles = $util.emptyArray;

            /**
             * SaveGameResultRequest earnedMaxiGold.
             * @member {number} earnedMaxiGold
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.earnedMaxiGold = 0;

            /**
             * SaveGameResultRequest expendedMaxiGold.
             * @member {number} expendedMaxiGold
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.expendedMaxiGold = 0;

            /**
             * SaveGameResultRequest maxiGold.
             * @member {number} maxiGold
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.maxiGold = 0;

            /**
             * SaveGameResultRequest repayingCampaign.
             * @member {boolean} repayingCampaign
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.repayingCampaign = false;

            /**
             * SaveGameResultRequest neighborCars.
             * @member {Array.<number>} neighborCars
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.neighborCars = $util.emptyArray;

            /**
             * SaveGameResultRequest stResult.
             * @member {wm5.protobuf.SaveGameResultRequest.IStoryResult|null|undefined} stResult
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.stResult = null;

            /**
             * SaveGameResultRequest taResult.
             * @member {wm5.protobuf.SaveGameResultRequest.ITimeAttackResult|null|undefined} taResult
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.taResult = null;

            /**
             * SaveGameResultRequest vsResult.
             * @member {wm5.protobuf.SaveGameResultRequest.IVersusBattleResult|null|undefined} vsResult
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.vsResult = null;

            /**
             * SaveGameResultRequest rgResult.
             * @member {wm5.protobuf.SaveGameResultRequest.IGhostBattleResult|null|undefined} rgResult
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             */
            SaveGameResultRequest.prototype.rgResult = null;

            /**
             * Creates a new SaveGameResultRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @static
             * @param {wm5.protobuf.ISaveGameResultRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.SaveGameResultRequest} SaveGameResultRequest instance
             */
            SaveGameResultRequest.create = function create(properties) {
                return new SaveGameResultRequest(properties);
            };

            /**
             * Encodes the specified SaveGameResultRequest message. Does not implicitly {@link wm5.protobuf.SaveGameResultRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @static
             * @param {wm5.protobuf.ISaveGameResultRequest} message SaveGameResultRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveGameResultRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.gameMode);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.playedAt);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.playCount);
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.retired);
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.timeup);
                if (message.car != null && Object.hasOwnProperty.call(message, "car"))
                    $root.wm5.protobuf.Car.encode(message.car, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                if (message.setting != null && Object.hasOwnProperty.call(message, "setting"))
                    $root.wm5.protobuf.CarSetting.encode(message.setting, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                if (message.odometer != null && Object.hasOwnProperty.call(message, "odometer"))
                    writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.odometer);
                if (message.hp600Count != null && Object.hasOwnProperty.call(message, "hp600Count"))
                    writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.hp600Count);
                if (message.earnedCustomColor != null && Object.hasOwnProperty.call(message, "earnedCustomColor"))
                    writer.uint32(/* id 11, wireType 0 =*/88).bool(message.earnedCustomColor);
                if (message.confirmedTutorials != null && message.confirmedTutorials.length)
                    for (let i = 0; i < message.confirmedTutorials.length; ++i)
                        writer.uint32(/* id 12, wireType 0 =*/96).int32(message.confirmedTutorials[i]);
                if (message.earnedItems != null && message.earnedItems.length)
                    for (let i = 0; i < message.earnedItems.length; ++i)
                        $root.wm5.protobuf.CarItem.encode(message.earnedItems[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                if (message.preservedTitles != null && message.preservedTitles.length)
                    for (let i = 0; i < message.preservedTitles.length; ++i)
                        writer.uint32(/* id 15, wireType 2 =*/122).string(message.preservedTitles[i]);
                if (message.earnedMaxiGold != null && Object.hasOwnProperty.call(message, "earnedMaxiGold"))
                    writer.uint32(/* id 16, wireType 0 =*/128).uint32(message.earnedMaxiGold);
                if (message.expendedMaxiGold != null && Object.hasOwnProperty.call(message, "expendedMaxiGold"))
                    writer.uint32(/* id 17, wireType 0 =*/136).uint32(message.expendedMaxiGold);
                if (message.maxiGold != null && Object.hasOwnProperty.call(message, "maxiGold"))
                    writer.uint32(/* id 18, wireType 0 =*/144).uint32(message.maxiGold);
                if (message.repayingCampaign != null && Object.hasOwnProperty.call(message, "repayingCampaign"))
                    writer.uint32(/* id 20, wireType 0 =*/160).bool(message.repayingCampaign);
                if (message.neighborCars != null && message.neighborCars.length)
                    for (let i = 0; i < message.neighborCars.length; ++i)
                        writer.uint32(/* id 21, wireType 0 =*/168).uint32(message.neighborCars[i]);
                if (message.stResult != null && Object.hasOwnProperty.call(message, "stResult"))
                    $root.wm5.protobuf.SaveGameResultRequest.StoryResult.encode(message.stResult, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                if (message.taResult != null && Object.hasOwnProperty.call(message, "taResult"))
                    $root.wm5.protobuf.SaveGameResultRequest.TimeAttackResult.encode(message.taResult, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                if (message.vsResult != null && Object.hasOwnProperty.call(message, "vsResult"))
                    $root.wm5.protobuf.SaveGameResultRequest.VersusBattleResult.encode(message.vsResult, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                if (message.rgResult != null && Object.hasOwnProperty.call(message, "rgResult"))
                    $root.wm5.protobuf.SaveGameResultRequest.GhostBattleResult.encode(message.rgResult, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified SaveGameResultRequest message, length delimited. Does not implicitly {@link wm5.protobuf.SaveGameResultRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @static
             * @param {wm5.protobuf.ISaveGameResultRequest} message SaveGameResultRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveGameResultRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SaveGameResultRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SaveGameResultRequest} SaveGameResultRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveGameResultRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveGameResultRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.gameMode = reader.int32();
                            break;
                        }
                    case 3: {
                            message.playedAt = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.playCount = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.retired = reader.bool();
                            break;
                        }
                    case 6: {
                            message.timeup = reader.bool();
                            break;
                        }
                    case 7: {
                            message.car = $root.wm5.protobuf.Car.decode(reader, reader.uint32());
                            break;
                        }
                    case 8: {
                            message.setting = $root.wm5.protobuf.CarSetting.decode(reader, reader.uint32());
                            break;
                        }
                    case 9: {
                            message.odometer = reader.uint32();
                            break;
                        }
                    case 10: {
                            message.hp600Count = reader.uint32();
                            break;
                        }
                    case 11: {
                            message.earnedCustomColor = reader.bool();
                            break;
                        }
                    case 12: {
                            if (!(message.confirmedTutorials && message.confirmedTutorials.length))
                                message.confirmedTutorials = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.confirmedTutorials.push(reader.int32());
                            } else
                                message.confirmedTutorials.push(reader.int32());
                            break;
                        }
                    case 13: {
                            if (!(message.earnedItems && message.earnedItems.length))
                                message.earnedItems = [];
                            message.earnedItems.push($root.wm5.protobuf.CarItem.decode(reader, reader.uint32()));
                            break;
                        }
                    case 15: {
                            if (!(message.preservedTitles && message.preservedTitles.length))
                                message.preservedTitles = [];
                            message.preservedTitles.push(reader.string());
                            break;
                        }
                    case 16: {
                            message.earnedMaxiGold = reader.uint32();
                            break;
                        }
                    case 17: {
                            message.expendedMaxiGold = reader.uint32();
                            break;
                        }
                    case 18: {
                            message.maxiGold = reader.uint32();
                            break;
                        }
                    case 20: {
                            message.repayingCampaign = reader.bool();
                            break;
                        }
                    case 21: {
                            if (!(message.neighborCars && message.neighborCars.length))
                                message.neighborCars = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.neighborCars.push(reader.uint32());
                            } else
                                message.neighborCars.push(reader.uint32());
                            break;
                        }
                    case 22: {
                            message.stResult = $root.wm5.protobuf.SaveGameResultRequest.StoryResult.decode(reader, reader.uint32());
                            break;
                        }
                    case 23: {
                            message.taResult = $root.wm5.protobuf.SaveGameResultRequest.TimeAttackResult.decode(reader, reader.uint32());
                            break;
                        }
                    case 24: {
                            message.vsResult = $root.wm5.protobuf.SaveGameResultRequest.VersusBattleResult.decode(reader, reader.uint32());
                            break;
                        }
                    case 25: {
                            message.rgResult = $root.wm5.protobuf.SaveGameResultRequest.GhostBattleResult.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                if (!message.hasOwnProperty("gameMode"))
                    throw $util.ProtocolError("missing required 'gameMode'", { instance: message });
                if (!message.hasOwnProperty("playedAt"))
                    throw $util.ProtocolError("missing required 'playedAt'", { instance: message });
                if (!message.hasOwnProperty("playCount"))
                    throw $util.ProtocolError("missing required 'playCount'", { instance: message });
                if (!message.hasOwnProperty("retired"))
                    throw $util.ProtocolError("missing required 'retired'", { instance: message });
                if (!message.hasOwnProperty("timeup"))
                    throw $util.ProtocolError("missing required 'timeup'", { instance: message });
                return message;
            };

            /**
             * Decodes a SaveGameResultRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SaveGameResultRequest} SaveGameResultRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveGameResultRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SaveGameResultRequest message.
             * @function verify
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SaveGameResultRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                switch (message.gameMode) {
                default:
                    return "gameMode: enum value expected";
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                    break;
                }
                if (!$util.isInteger(message.playedAt))
                    return "playedAt: integer expected";
                if (!$util.isInteger(message.playCount))
                    return "playCount: integer expected";
                if (typeof message.retired !== "boolean")
                    return "retired: boolean expected";
                if (typeof message.timeup !== "boolean")
                    return "timeup: boolean expected";
                if (message.car != null && message.hasOwnProperty("car")) {
                    let error = $root.wm5.protobuf.Car.verify(message.car);
                    if (error)
                        return "car." + error;
                }
                if (message.setting != null && message.hasOwnProperty("setting")) {
                    let error = $root.wm5.protobuf.CarSetting.verify(message.setting);
                    if (error)
                        return "setting." + error;
                }
                if (message.odometer != null && message.hasOwnProperty("odometer"))
                    if (!$util.isInteger(message.odometer))
                        return "odometer: integer expected";
                if (message.hp600Count != null && message.hasOwnProperty("hp600Count"))
                    if (!$util.isInteger(message.hp600Count))
                        return "hp600Count: integer expected";
                if (message.earnedCustomColor != null && message.hasOwnProperty("earnedCustomColor"))
                    if (typeof message.earnedCustomColor !== "boolean")
                        return "earnedCustomColor: boolean expected";
                if (message.confirmedTutorials != null && message.hasOwnProperty("confirmedTutorials")) {
                    if (!Array.isArray(message.confirmedTutorials))
                        return "confirmedTutorials: array expected";
                    for (let i = 0; i < message.confirmedTutorials.length; ++i)
                        switch (message.confirmedTutorials[i]) {
                        default:
                            return "confirmedTutorials: enum value[] expected";
                        case 1:
                        case 2:
                        case 4:
                        case 8:
                        case 16:
                        case 32:
                        case 64:
                        case 128:
                        case 256:
                        case 512:
                        case 1024:
                        case 2048:
                        case 4096:
                        case 8192:
                        case 16384:
                        case 32768:
                        case 65536:
                        case 131072:
                        case 262144:
                        case 524288:
                        case 1048576:
                        case 2097152:
                        case 4194304:
                        case 8388608:
                        case 16777216:
                        case 33554432:
                        case 67108864:
                        case 134217728:
                        case 268435456:
                        case 536870912:
                        case 1073741824:
                            break;
                        }
                }
                if (message.earnedItems != null && message.hasOwnProperty("earnedItems")) {
                    if (!Array.isArray(message.earnedItems))
                        return "earnedItems: array expected";
                    for (let i = 0; i < message.earnedItems.length; ++i) {
                        let error = $root.wm5.protobuf.CarItem.verify(message.earnedItems[i]);
                        if (error)
                            return "earnedItems." + error;
                    }
                }
                if (message.preservedTitles != null && message.hasOwnProperty("preservedTitles")) {
                    if (!Array.isArray(message.preservedTitles))
                        return "preservedTitles: array expected";
                    for (let i = 0; i < message.preservedTitles.length; ++i)
                        if (!$util.isString(message.preservedTitles[i]))
                            return "preservedTitles: string[] expected";
                }
                if (message.earnedMaxiGold != null && message.hasOwnProperty("earnedMaxiGold"))
                    if (!$util.isInteger(message.earnedMaxiGold))
                        return "earnedMaxiGold: integer expected";
                if (message.expendedMaxiGold != null && message.hasOwnProperty("expendedMaxiGold"))
                    if (!$util.isInteger(message.expendedMaxiGold))
                        return "expendedMaxiGold: integer expected";
                if (message.maxiGold != null && message.hasOwnProperty("maxiGold"))
                    if (!$util.isInteger(message.maxiGold))
                        return "maxiGold: integer expected";
                if (message.repayingCampaign != null && message.hasOwnProperty("repayingCampaign"))
                    if (typeof message.repayingCampaign !== "boolean")
                        return "repayingCampaign: boolean expected";
                if (message.neighborCars != null && message.hasOwnProperty("neighborCars")) {
                    if (!Array.isArray(message.neighborCars))
                        return "neighborCars: array expected";
                    for (let i = 0; i < message.neighborCars.length; ++i)
                        if (!$util.isInteger(message.neighborCars[i]))
                            return "neighborCars: integer[] expected";
                }
                if (message.stResult != null && message.hasOwnProperty("stResult")) {
                    let error = $root.wm5.protobuf.SaveGameResultRequest.StoryResult.verify(message.stResult);
                    if (error)
                        return "stResult." + error;
                }
                if (message.taResult != null && message.hasOwnProperty("taResult")) {
                    let error = $root.wm5.protobuf.SaveGameResultRequest.TimeAttackResult.verify(message.taResult);
                    if (error)
                        return "taResult." + error;
                }
                if (message.vsResult != null && message.hasOwnProperty("vsResult")) {
                    let error = $root.wm5.protobuf.SaveGameResultRequest.VersusBattleResult.verify(message.vsResult);
                    if (error)
                        return "vsResult." + error;
                }
                if (message.rgResult != null && message.hasOwnProperty("rgResult")) {
                    let error = $root.wm5.protobuf.SaveGameResultRequest.GhostBattleResult.verify(message.rgResult);
                    if (error)
                        return "rgResult." + error;
                }
                return null;
            };

            /**
             * Creates a SaveGameResultRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SaveGameResultRequest} SaveGameResultRequest
             */
            SaveGameResultRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SaveGameResultRequest)
                    return object;
                let message = new $root.wm5.protobuf.SaveGameResultRequest();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                switch (object.gameMode) {
                default:
                    if (typeof object.gameMode === "number") {
                        message.gameMode = object.gameMode;
                        break;
                    }
                    break;
                case "MODE_STORY":
                case 1:
                    message.gameMode = 1;
                    break;
                case "MODE_TIME_ATTACK":
                case 2:
                    message.gameMode = 2;
                    break;
                case "MODE_VS_BATTLE":
                case 3:
                    message.gameMode = 3;
                    break;
                case "MODE_GHOST_BATTLE":
                case 4:
                    message.gameMode = 4;
                    break;
                case "MODE_EVENT":
                case 5:
                    message.gameMode = 5;
                    break;
                }
                if (object.playedAt != null)
                    message.playedAt = object.playedAt >>> 0;
                if (object.playCount != null)
                    message.playCount = object.playCount >>> 0;
                if (object.retired != null)
                    message.retired = Boolean(object.retired);
                if (object.timeup != null)
                    message.timeup = Boolean(object.timeup);
                if (object.car != null) {
                    if (typeof object.car !== "object")
                        throw TypeError(".wm5.protobuf.SaveGameResultRequest.car: object expected");
                    message.car = $root.wm5.protobuf.Car.fromObject(object.car);
                }
                if (object.setting != null) {
                    if (typeof object.setting !== "object")
                        throw TypeError(".wm5.protobuf.SaveGameResultRequest.setting: object expected");
                    message.setting = $root.wm5.protobuf.CarSetting.fromObject(object.setting);
                }
                if (object.odometer != null)
                    message.odometer = object.odometer >>> 0;
                if (object.hp600Count != null)
                    message.hp600Count = object.hp600Count >>> 0;
                if (object.earnedCustomColor != null)
                    message.earnedCustomColor = Boolean(object.earnedCustomColor);
                if (object.confirmedTutorials) {
                    if (!Array.isArray(object.confirmedTutorials))
                        throw TypeError(".wm5.protobuf.SaveGameResultRequest.confirmedTutorials: array expected");
                    message.confirmedTutorials = [];
                    for (let i = 0; i < object.confirmedTutorials.length; ++i)
                        switch (object.confirmedTutorials[i]) {
                        default:
                            if (typeof object.confirmedTutorials[i] === "number") {
                                message.confirmedTutorials[i] = object.confirmedTutorials[i];
                                break;
                            }
                        case "TUTORIAL_STORY":
                        case 1:
                            message.confirmedTutorials[i] = 1;
                            break;
                        case "TUTORIAL_TIME_ATTACK":
                        case 2:
                            message.confirmedTutorials[i] = 2;
                            break;
                        case "TUTORIAL_GHOST":
                        case 4:
                            message.confirmedTutorials[i] = 4;
                            break;
                        case "TUTORIAL_GHOST_CHALLENGE":
                        case 8:
                            message.confirmedTutorials[i] = 8;
                            break;
                        case "TUTORIAL_GHOST_LEVEL":
                        case 16:
                            message.confirmedTutorials[i] = 16;
                            break;
                        case "TUTORIAL_UNUSED_1":
                        case 32:
                            message.confirmedTutorials[i] = 32;
                            break;
                        case "TUTORIAL_GHOST_SEARCH":
                        case 64:
                            message.confirmedTutorials[i] = 64;
                            break;
                        case "TUTORIAL_GHOST_COMPETITION":
                        case 128:
                            message.confirmedTutorials[i] = 128;
                            break;
                        case "TUTORIAL_HP600_CARD":
                        case 256:
                            message.confirmedTutorials[i] = 256;
                            break;
                        case "TUTORIAL_UNUSED_2":
                        case 512:
                            message.confirmedTutorials[i] = 512;
                            break;
                        case "TUTORIAL_COMPETITION_QUALIFIED":
                        case 1024:
                            message.confirmedTutorials[i] = 1024;
                            break;
                        case "TUTORIAL_COMPETITION_TERMINAL":
                        case 2048:
                            message.confirmedTutorials[i] = 2048;
                            break;
                        case "TUTORIAL_COMPETITION_NOTICE":
                        case 4096:
                            message.confirmedTutorials[i] = 4096;
                            break;
                        case "TUTORIAL_COMPETITION_FINISHED":
                        case 8192:
                            message.confirmedTutorials[i] = 8192;
                            break;
                        case "TUTORIAL_UNUSED_3":
                        case 16384:
                            message.confirmedTutorials[i] = 16384;
                            break;
                        case "TUTORIAL_BINGO_RULE":
                        case 32768:
                            message.confirmedTutorials[i] = 32768;
                            break;
                        case "TUTORIAL_BINGO_NOTICE":
                        case 65536:
                            message.confirmedTutorials[i] = 65536;
                            break;
                        case "TUTORIAL_UNUSED_4":
                        case 131072:
                            message.confirmedTutorials[i] = 131072;
                            break;
                        case "TUTORIAL_SHOP_FOR_DRIVE":
                        case 262144:
                            message.confirmedTutorials[i] = 262144;
                            break;
                        case "TUTORIAL_SHOP_GRADE_GAUGE":
                        case 524288:
                            message.confirmedTutorials[i] = 524288;
                            break;
                        case "TUTORIAL_GHOST_STAMP":
                        case 1048576:
                            message.confirmedTutorials[i] = 1048576;
                            break;
                        case "TUTORIAL_GHOST_STAMP_DECLINED":
                        case 2097152:
                            message.confirmedTutorials[i] = 2097152;
                            break;
                        case "TUTORIAL_GHOST_STAMP_FRIENDS":
                        case 4194304:
                            message.confirmedTutorials[i] = 4194304;
                            break;
                        case "TUTORIAL_TERMINAL_SCRATCH":
                        case 8388608:
                            message.confirmedTutorials[i] = 8388608;
                            break;
                        case "TUTORIAL_UNUSED_5":
                        case 16777216:
                            message.confirmedTutorials[i] = 16777216;
                            break;
                        case "TUTORIAL_INVITE_FRIEND_CAMPAIGN":
                        case 33554432:
                            message.confirmedTutorials[i] = 33554432;
                            break;
                        case "TUTORIAL_CAR_COUPON_FULL_TUNED_RECEIVABLE":
                        case 67108864:
                            message.confirmedTutorials[i] = 67108864;
                            break;
                        case "TUTORIAL_VS_CONTINUE_TICKET":
                        case 134217728:
                            message.confirmedTutorials[i] = 134217728;
                            break;
                        case "TUTORIAL_EXPEDITION":
                        case 268435456:
                            message.confirmedTutorials[i] = 268435456;
                            break;
                        case "TUTORIAL_EXPEDITION_WANTED":
                        case 536870912:
                            message.confirmedTutorials[i] = 536870912;
                            break;
                        case "TUTORIAL_EXPEDITION_REWARD":
                        case 1073741824:
                            message.confirmedTutorials[i] = 1073741824;
                            break;
                        }
                }
                if (object.earnedItems) {
                    if (!Array.isArray(object.earnedItems))
                        throw TypeError(".wm5.protobuf.SaveGameResultRequest.earnedItems: array expected");
                    message.earnedItems = [];
                    for (let i = 0; i < object.earnedItems.length; ++i) {
                        if (typeof object.earnedItems[i] !== "object")
                            throw TypeError(".wm5.protobuf.SaveGameResultRequest.earnedItems: object expected");
                        message.earnedItems[i] = $root.wm5.protobuf.CarItem.fromObject(object.earnedItems[i]);
                    }
                }
                if (object.preservedTitles) {
                    if (!Array.isArray(object.preservedTitles))
                        throw TypeError(".wm5.protobuf.SaveGameResultRequest.preservedTitles: array expected");
                    message.preservedTitles = [];
                    for (let i = 0; i < object.preservedTitles.length; ++i)
                        message.preservedTitles[i] = String(object.preservedTitles[i]);
                }
                if (object.earnedMaxiGold != null)
                    message.earnedMaxiGold = object.earnedMaxiGold >>> 0;
                if (object.expendedMaxiGold != null)
                    message.expendedMaxiGold = object.expendedMaxiGold >>> 0;
                if (object.maxiGold != null)
                    message.maxiGold = object.maxiGold >>> 0;
                if (object.repayingCampaign != null)
                    message.repayingCampaign = Boolean(object.repayingCampaign);
                if (object.neighborCars) {
                    if (!Array.isArray(object.neighborCars))
                        throw TypeError(".wm5.protobuf.SaveGameResultRequest.neighborCars: array expected");
                    message.neighborCars = [];
                    for (let i = 0; i < object.neighborCars.length; ++i)
                        message.neighborCars[i] = object.neighborCars[i] >>> 0;
                }
                if (object.stResult != null) {
                    if (typeof object.stResult !== "object")
                        throw TypeError(".wm5.protobuf.SaveGameResultRequest.stResult: object expected");
                    message.stResult = $root.wm5.protobuf.SaveGameResultRequest.StoryResult.fromObject(object.stResult);
                }
                if (object.taResult != null) {
                    if (typeof object.taResult !== "object")
                        throw TypeError(".wm5.protobuf.SaveGameResultRequest.taResult: object expected");
                    message.taResult = $root.wm5.protobuf.SaveGameResultRequest.TimeAttackResult.fromObject(object.taResult);
                }
                if (object.vsResult != null) {
                    if (typeof object.vsResult !== "object")
                        throw TypeError(".wm5.protobuf.SaveGameResultRequest.vsResult: object expected");
                    message.vsResult = $root.wm5.protobuf.SaveGameResultRequest.VersusBattleResult.fromObject(object.vsResult);
                }
                if (object.rgResult != null) {
                    if (typeof object.rgResult !== "object")
                        throw TypeError(".wm5.protobuf.SaveGameResultRequest.rgResult: object expected");
                    message.rgResult = $root.wm5.protobuf.SaveGameResultRequest.GhostBattleResult.fromObject(object.rgResult);
                }
                return message;
            };

            /**
             * Creates a plain object from a SaveGameResultRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @static
             * @param {wm5.protobuf.SaveGameResultRequest} message SaveGameResultRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SaveGameResultRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.confirmedTutorials = [];
                    object.earnedItems = [];
                    object.preservedTitles = [];
                    object.neighborCars = [];
                }
                if (options.defaults) {
                    object.carId = 0;
                    object.gameMode = options.enums === String ? "MODE_STORY" : 1;
                    object.playedAt = 0;
                    object.playCount = 0;
                    object.retired = false;
                    object.timeup = false;
                    object.car = null;
                    object.setting = null;
                    object.odometer = 0;
                    object.hp600Count = 0;
                    object.earnedCustomColor = false;
                    object.earnedMaxiGold = 0;
                    object.expendedMaxiGold = 0;
                    object.maxiGold = 0;
                    object.repayingCampaign = false;
                    object.stResult = null;
                    object.taResult = null;
                    object.vsResult = null;
                    object.rgResult = null;
                }
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.gameMode != null && message.hasOwnProperty("gameMode"))
                    object.gameMode = options.enums === String ? $root.wm5.protobuf.GameMode[message.gameMode] === undefined ? message.gameMode : $root.wm5.protobuf.GameMode[message.gameMode] : message.gameMode;
                if (message.playedAt != null && message.hasOwnProperty("playedAt"))
                    object.playedAt = message.playedAt;
                if (message.playCount != null && message.hasOwnProperty("playCount"))
                    object.playCount = message.playCount;
                if (message.retired != null && message.hasOwnProperty("retired"))
                    object.retired = message.retired;
                if (message.timeup != null && message.hasOwnProperty("timeup"))
                    object.timeup = message.timeup;
                if (message.car != null && message.hasOwnProperty("car"))
                    object.car = $root.wm5.protobuf.Car.toObject(message.car, options);
                if (message.setting != null && message.hasOwnProperty("setting"))
                    object.setting = $root.wm5.protobuf.CarSetting.toObject(message.setting, options);
                if (message.odometer != null && message.hasOwnProperty("odometer"))
                    object.odometer = message.odometer;
                if (message.hp600Count != null && message.hasOwnProperty("hp600Count"))
                    object.hp600Count = message.hp600Count;
                if (message.earnedCustomColor != null && message.hasOwnProperty("earnedCustomColor"))
                    object.earnedCustomColor = message.earnedCustomColor;
                if (message.confirmedTutorials && message.confirmedTutorials.length) {
                    object.confirmedTutorials = [];
                    for (let j = 0; j < message.confirmedTutorials.length; ++j)
                        object.confirmedTutorials[j] = options.enums === String ? $root.wm5.protobuf.TutorialType[message.confirmedTutorials[j]] === undefined ? message.confirmedTutorials[j] : $root.wm5.protobuf.TutorialType[message.confirmedTutorials[j]] : message.confirmedTutorials[j];
                }
                if (message.earnedItems && message.earnedItems.length) {
                    object.earnedItems = [];
                    for (let j = 0; j < message.earnedItems.length; ++j)
                        object.earnedItems[j] = $root.wm5.protobuf.CarItem.toObject(message.earnedItems[j], options);
                }
                if (message.preservedTitles && message.preservedTitles.length) {
                    object.preservedTitles = [];
                    for (let j = 0; j < message.preservedTitles.length; ++j)
                        object.preservedTitles[j] = message.preservedTitles[j];
                }
                if (message.earnedMaxiGold != null && message.hasOwnProperty("earnedMaxiGold"))
                    object.earnedMaxiGold = message.earnedMaxiGold;
                if (message.expendedMaxiGold != null && message.hasOwnProperty("expendedMaxiGold"))
                    object.expendedMaxiGold = message.expendedMaxiGold;
                if (message.maxiGold != null && message.hasOwnProperty("maxiGold"))
                    object.maxiGold = message.maxiGold;
                if (message.repayingCampaign != null && message.hasOwnProperty("repayingCampaign"))
                    object.repayingCampaign = message.repayingCampaign;
                if (message.neighborCars && message.neighborCars.length) {
                    object.neighborCars = [];
                    for (let j = 0; j < message.neighborCars.length; ++j)
                        object.neighborCars[j] = message.neighborCars[j];
                }
                if (message.stResult != null && message.hasOwnProperty("stResult"))
                    object.stResult = $root.wm5.protobuf.SaveGameResultRequest.StoryResult.toObject(message.stResult, options);
                if (message.taResult != null && message.hasOwnProperty("taResult"))
                    object.taResult = $root.wm5.protobuf.SaveGameResultRequest.TimeAttackResult.toObject(message.taResult, options);
                if (message.vsResult != null && message.hasOwnProperty("vsResult"))
                    object.vsResult = $root.wm5.protobuf.SaveGameResultRequest.VersusBattleResult.toObject(message.vsResult, options);
                if (message.rgResult != null && message.hasOwnProperty("rgResult"))
                    object.rgResult = $root.wm5.protobuf.SaveGameResultRequest.GhostBattleResult.toObject(message.rgResult, options);
                return object;
            };

            /**
             * Converts this SaveGameResultRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SaveGameResultRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SaveGameResultRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.SaveGameResultRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SaveGameResultRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SaveGameResultRequest";
            };

            SaveGameResultRequest.StoryResult = (function() {

                /**
                 * Properties of a StoryResult.
                 * @memberof wm5.protobuf.SaveGameResultRequest
                 * @interface IStoryResult
                 * @property {number} stPlayCount StoryResult stPlayCount
                 * @property {number} stPlayedStory StoryResult stPlayedStory
                 * @property {number|null} [tuningPoint] StoryResult tuningPoint
                 * @property {number|null} [stClearBits] StoryResult stClearBits
                 * @property {number|null} [stClearDivCount] StoryResult stClearDivCount
                 * @property {number|null} [stClearCount] StoryResult stClearCount
                 * @property {number|Long|null} [stLoseBits] StoryResult stLoseBits
                 * @property {boolean|null} [stLose] StoryResult stLose
                 * @property {number|null} [stConsecutiveWins] StoryResult stConsecutiveWins
                 */

                /**
                 * Constructs a new StoryResult.
                 * @memberof wm5.protobuf.SaveGameResultRequest
                 * @classdesc Represents a StoryResult.
                 * @implements IStoryResult
                 * @constructor
                 * @param {wm5.protobuf.SaveGameResultRequest.IStoryResult=} [properties] Properties to set
                 */
                function StoryResult(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * StoryResult stPlayCount.
                 * @member {number} stPlayCount
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @instance
                 */
                StoryResult.prototype.stPlayCount = 0;

                /**
                 * StoryResult stPlayedStory.
                 * @member {number} stPlayedStory
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @instance
                 */
                StoryResult.prototype.stPlayedStory = 0;

                /**
                 * StoryResult tuningPoint.
                 * @member {number} tuningPoint
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @instance
                 */
                StoryResult.prototype.tuningPoint = 0;

                /**
                 * StoryResult stClearBits.
                 * @member {number} stClearBits
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @instance
                 */
                StoryResult.prototype.stClearBits = 0;

                /**
                 * StoryResult stClearDivCount.
                 * @member {number} stClearDivCount
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @instance
                 */
                StoryResult.prototype.stClearDivCount = 0;

                /**
                 * StoryResult stClearCount.
                 * @member {number} stClearCount
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @instance
                 */
                StoryResult.prototype.stClearCount = 0;

                /**
                 * StoryResult stLoseBits.
                 * @member {number|Long} stLoseBits
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @instance
                 */
                StoryResult.prototype.stLoseBits = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

                /**
                 * StoryResult stLose.
                 * @member {boolean} stLose
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @instance
                 */
                StoryResult.prototype.stLose = false;

                /**
                 * StoryResult stConsecutiveWins.
                 * @member {number} stConsecutiveWins
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @instance
                 */
                StoryResult.prototype.stConsecutiveWins = 0;

                /**
                 * Creates a new StoryResult instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @static
                 * @param {wm5.protobuf.SaveGameResultRequest.IStoryResult=} [properties] Properties to set
                 * @returns {wm5.protobuf.SaveGameResultRequest.StoryResult} StoryResult instance
                 */
                StoryResult.create = function create(properties) {
                    return new StoryResult(properties);
                };

                /**
                 * Encodes the specified StoryResult message. Does not implicitly {@link wm5.protobuf.SaveGameResultRequest.StoryResult.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @static
                 * @param {wm5.protobuf.SaveGameResultRequest.IStoryResult} message StoryResult message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StoryResult.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.stPlayCount);
                    if (message.tuningPoint != null && Object.hasOwnProperty.call(message, "tuningPoint"))
                        writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.tuningPoint);
                    if (message.stClearBits != null && Object.hasOwnProperty.call(message, "stClearBits"))
                        writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.stClearBits);
                    if (message.stClearDivCount != null && Object.hasOwnProperty.call(message, "stClearDivCount"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.stClearDivCount);
                    if (message.stClearCount != null && Object.hasOwnProperty.call(message, "stClearCount"))
                        writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.stClearCount);
                    if (message.stLoseBits != null && Object.hasOwnProperty.call(message, "stLoseBits"))
                        writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.stLoseBits);
                    if (message.stLose != null && Object.hasOwnProperty.call(message, "stLose"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.stLose);
                    if (message.stConsecutiveWins != null && Object.hasOwnProperty.call(message, "stConsecutiveWins"))
                        writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.stConsecutiveWins);
                    writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.stPlayedStory);
                    return writer;
                };

                /**
                 * Encodes the specified StoryResult message, length delimited. Does not implicitly {@link wm5.protobuf.SaveGameResultRequest.StoryResult.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @static
                 * @param {wm5.protobuf.SaveGameResultRequest.IStoryResult} message StoryResult message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StoryResult.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a StoryResult message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.SaveGameResultRequest.StoryResult} StoryResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StoryResult.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveGameResultRequest.StoryResult();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.stPlayCount = reader.uint32();
                                break;
                            }
                        case 9: {
                                message.stPlayedStory = reader.uint32();
                                break;
                            }
                        case 2: {
                                message.tuningPoint = reader.uint32();
                                break;
                            }
                        case 3: {
                                message.stClearBits = reader.uint32();
                                break;
                            }
                        case 4: {
                                message.stClearDivCount = reader.uint32();
                                break;
                            }
                        case 5: {
                                message.stClearCount = reader.uint32();
                                break;
                            }
                        case 6: {
                                message.stLoseBits = reader.uint64();
                                break;
                            }
                        case 7: {
                                message.stLose = reader.bool();
                                break;
                            }
                        case 8: {
                                message.stConsecutiveWins = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("stPlayCount"))
                        throw $util.ProtocolError("missing required 'stPlayCount'", { instance: message });
                    if (!message.hasOwnProperty("stPlayedStory"))
                        throw $util.ProtocolError("missing required 'stPlayedStory'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a StoryResult message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.SaveGameResultRequest.StoryResult} StoryResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StoryResult.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a StoryResult message.
                 * @function verify
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                StoryResult.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.stPlayCount))
                        return "stPlayCount: integer expected";
                    if (!$util.isInteger(message.stPlayedStory))
                        return "stPlayedStory: integer expected";
                    if (message.tuningPoint != null && message.hasOwnProperty("tuningPoint"))
                        if (!$util.isInteger(message.tuningPoint))
                            return "tuningPoint: integer expected";
                    if (message.stClearBits != null && message.hasOwnProperty("stClearBits"))
                        if (!$util.isInteger(message.stClearBits))
                            return "stClearBits: integer expected";
                    if (message.stClearDivCount != null && message.hasOwnProperty("stClearDivCount"))
                        if (!$util.isInteger(message.stClearDivCount))
                            return "stClearDivCount: integer expected";
                    if (message.stClearCount != null && message.hasOwnProperty("stClearCount"))
                        if (!$util.isInteger(message.stClearCount))
                            return "stClearCount: integer expected";
                    if (message.stLoseBits != null && message.hasOwnProperty("stLoseBits"))
                        if (!$util.isInteger(message.stLoseBits) && !(message.stLoseBits && $util.isInteger(message.stLoseBits.low) && $util.isInteger(message.stLoseBits.high)))
                            return "stLoseBits: integer|Long expected";
                    if (message.stLose != null && message.hasOwnProperty("stLose"))
                        if (typeof message.stLose !== "boolean")
                            return "stLose: boolean expected";
                    if (message.stConsecutiveWins != null && message.hasOwnProperty("stConsecutiveWins"))
                        if (!$util.isInteger(message.stConsecutiveWins))
                            return "stConsecutiveWins: integer expected";
                    return null;
                };

                /**
                 * Creates a StoryResult message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.SaveGameResultRequest.StoryResult} StoryResult
                 */
                StoryResult.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.SaveGameResultRequest.StoryResult)
                        return object;
                    let message = new $root.wm5.protobuf.SaveGameResultRequest.StoryResult();
                    if (object.stPlayCount != null)
                        message.stPlayCount = object.stPlayCount >>> 0;
                    if (object.stPlayedStory != null)
                        message.stPlayedStory = object.stPlayedStory >>> 0;
                    if (object.tuningPoint != null)
                        message.tuningPoint = object.tuningPoint >>> 0;
                    if (object.stClearBits != null)
                        message.stClearBits = object.stClearBits >>> 0;
                    if (object.stClearDivCount != null)
                        message.stClearDivCount = object.stClearDivCount >>> 0;
                    if (object.stClearCount != null)
                        message.stClearCount = object.stClearCount >>> 0;
                    if (object.stLoseBits != null)
                        if ($util.Long)
                            (message.stLoseBits = $util.Long.fromValue(object.stLoseBits)).unsigned = true;
                        else if (typeof object.stLoseBits === "string")
                            message.stLoseBits = parseInt(object.stLoseBits, 10);
                        else if (typeof object.stLoseBits === "number")
                            message.stLoseBits = object.stLoseBits;
                        else if (typeof object.stLoseBits === "object")
                            message.stLoseBits = new $util.LongBits(object.stLoseBits.low >>> 0, object.stLoseBits.high >>> 0).toNumber(true);
                    if (object.stLose != null)
                        message.stLose = Boolean(object.stLose);
                    if (object.stConsecutiveWins != null)
                        message.stConsecutiveWins = object.stConsecutiveWins >>> 0;
                    return message;
                };

                /**
                 * Creates a plain object from a StoryResult message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @static
                 * @param {wm5.protobuf.SaveGameResultRequest.StoryResult} message StoryResult
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                StoryResult.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.stPlayCount = 0;
                        object.tuningPoint = 0;
                        object.stClearBits = 0;
                        object.stClearDivCount = 0;
                        object.stClearCount = 0;
                        if ($util.Long) {
                            let long = new $util.Long(0, 0, true);
                            object.stLoseBits = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.stLoseBits = options.longs === String ? "0" : 0;
                        object.stLose = false;
                        object.stConsecutiveWins = 0;
                        object.stPlayedStory = 0;
                    }
                    if (message.stPlayCount != null && message.hasOwnProperty("stPlayCount"))
                        object.stPlayCount = message.stPlayCount;
                    if (message.tuningPoint != null && message.hasOwnProperty("tuningPoint"))
                        object.tuningPoint = message.tuningPoint;
                    if (message.stClearBits != null && message.hasOwnProperty("stClearBits"))
                        object.stClearBits = message.stClearBits;
                    if (message.stClearDivCount != null && message.hasOwnProperty("stClearDivCount"))
                        object.stClearDivCount = message.stClearDivCount;
                    if (message.stClearCount != null && message.hasOwnProperty("stClearCount"))
                        object.stClearCount = message.stClearCount;
                    if (message.stLoseBits != null && message.hasOwnProperty("stLoseBits"))
                        if (typeof message.stLoseBits === "number")
                            object.stLoseBits = options.longs === String ? String(message.stLoseBits) : message.stLoseBits;
                        else
                            object.stLoseBits = options.longs === String ? $util.Long.prototype.toString.call(message.stLoseBits) : options.longs === Number ? new $util.LongBits(message.stLoseBits.low >>> 0, message.stLoseBits.high >>> 0).toNumber(true) : message.stLoseBits;
                    if (message.stLose != null && message.hasOwnProperty("stLose"))
                        object.stLose = message.stLose;
                    if (message.stConsecutiveWins != null && message.hasOwnProperty("stConsecutiveWins"))
                        object.stConsecutiveWins = message.stConsecutiveWins;
                    if (message.stPlayedStory != null && message.hasOwnProperty("stPlayedStory"))
                        object.stPlayedStory = message.stPlayedStory;
                    return object;
                };

                /**
                 * Converts this StoryResult to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                StoryResult.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for StoryResult
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.SaveGameResultRequest.StoryResult
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                StoryResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.SaveGameResultRequest.StoryResult";
                };

                return StoryResult;
            })();

            SaveGameResultRequest.TimeAttackResult = (function() {

                /**
                 * Properties of a TimeAttackResult.
                 * @memberof wm5.protobuf.SaveGameResultRequest
                 * @interface ITimeAttackResult
                 * @property {number} time TimeAttackResult time
                 * @property {number} course TimeAttackResult course
                 * @property {boolean} isMorning TimeAttackResult isMorning
                 * @property {number} section_1Time TimeAttackResult section_1Time
                 * @property {number} section_2Time TimeAttackResult section_2Time
                 * @property {number} section_3Time TimeAttackResult section_3Time
                 * @property {number} section_4Time TimeAttackResult section_4Time
                 * @property {number|null} [section_5Time] TimeAttackResult section_5Time
                 * @property {number|null} [section_6Time] TimeAttackResult section_6Time
                 * @property {number|null} [section_7Time] TimeAttackResult section_7Time
                 * @property {number|null} [wholeRank] TimeAttackResult wholeRank
                 * @property {number|null} [modelRank] TimeAttackResult modelRank
                 */

                /**
                 * Constructs a new TimeAttackResult.
                 * @memberof wm5.protobuf.SaveGameResultRequest
                 * @classdesc Represents a TimeAttackResult.
                 * @implements ITimeAttackResult
                 * @constructor
                 * @param {wm5.protobuf.SaveGameResultRequest.ITimeAttackResult=} [properties] Properties to set
                 */
                function TimeAttackResult(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * TimeAttackResult time.
                 * @member {number} time
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @instance
                 */
                TimeAttackResult.prototype.time = 0;

                /**
                 * TimeAttackResult course.
                 * @member {number} course
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @instance
                 */
                TimeAttackResult.prototype.course = 0;

                /**
                 * TimeAttackResult isMorning.
                 * @member {boolean} isMorning
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @instance
                 */
                TimeAttackResult.prototype.isMorning = false;

                /**
                 * TimeAttackResult section_1Time.
                 * @member {number} section_1Time
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @instance
                 */
                TimeAttackResult.prototype.section_1Time = 0;

                /**
                 * TimeAttackResult section_2Time.
                 * @member {number} section_2Time
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @instance
                 */
                TimeAttackResult.prototype.section_2Time = 0;

                /**
                 * TimeAttackResult section_3Time.
                 * @member {number} section_3Time
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @instance
                 */
                TimeAttackResult.prototype.section_3Time = 0;

                /**
                 * TimeAttackResult section_4Time.
                 * @member {number} section_4Time
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @instance
                 */
                TimeAttackResult.prototype.section_4Time = 0;

                /**
                 * TimeAttackResult section_5Time.
                 * @member {number} section_5Time
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @instance
                 */
                TimeAttackResult.prototype.section_5Time = 0;

                /**
                 * TimeAttackResult section_6Time.
                 * @member {number} section_6Time
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @instance
                 */
                TimeAttackResult.prototype.section_6Time = 0;

                /**
                 * TimeAttackResult section_7Time.
                 * @member {number} section_7Time
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @instance
                 */
                TimeAttackResult.prototype.section_7Time = 0;

                /**
                 * TimeAttackResult wholeRank.
                 * @member {number} wholeRank
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @instance
                 */
                TimeAttackResult.prototype.wholeRank = 0;

                /**
                 * TimeAttackResult modelRank.
                 * @member {number} modelRank
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @instance
                 */
                TimeAttackResult.prototype.modelRank = 0;

                /**
                 * Creates a new TimeAttackResult instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @static
                 * @param {wm5.protobuf.SaveGameResultRequest.ITimeAttackResult=} [properties] Properties to set
                 * @returns {wm5.protobuf.SaveGameResultRequest.TimeAttackResult} TimeAttackResult instance
                 */
                TimeAttackResult.create = function create(properties) {
                    return new TimeAttackResult(properties);
                };

                /**
                 * Encodes the specified TimeAttackResult message. Does not implicitly {@link wm5.protobuf.SaveGameResultRequest.TimeAttackResult.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @static
                 * @param {wm5.protobuf.SaveGameResultRequest.ITimeAttackResult} message TimeAttackResult message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TimeAttackResult.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.time);
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.course);
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.section_1Time);
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.section_2Time);
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.section_3Time);
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.section_4Time);
                    if (message.section_5Time != null && Object.hasOwnProperty.call(message, "section_5Time"))
                        writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.section_5Time);
                    if (message.section_6Time != null && Object.hasOwnProperty.call(message, "section_6Time"))
                        writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.section_6Time);
                    if (message.section_7Time != null && Object.hasOwnProperty.call(message, "section_7Time"))
                        writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.section_7Time);
                    if (message.wholeRank != null && Object.hasOwnProperty.call(message, "wholeRank"))
                        writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.wholeRank);
                    if (message.modelRank != null && Object.hasOwnProperty.call(message, "modelRank"))
                        writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.modelRank);
                    writer.uint32(/* id 12, wireType 0 =*/96).bool(message.isMorning);
                    return writer;
                };

                /**
                 * Encodes the specified TimeAttackResult message, length delimited. Does not implicitly {@link wm5.protobuf.SaveGameResultRequest.TimeAttackResult.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @static
                 * @param {wm5.protobuf.SaveGameResultRequest.ITimeAttackResult} message TimeAttackResult message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TimeAttackResult.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a TimeAttackResult message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.SaveGameResultRequest.TimeAttackResult} TimeAttackResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TimeAttackResult.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveGameResultRequest.TimeAttackResult();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.time = reader.uint32();
                                break;
                            }
                        case 2: {
                                message.course = reader.uint32();
                                break;
                            }
                        case 12: {
                                message.isMorning = reader.bool();
                                break;
                            }
                        case 3: {
                                message.section_1Time = reader.uint32();
                                break;
                            }
                        case 4: {
                                message.section_2Time = reader.uint32();
                                break;
                            }
                        case 5: {
                                message.section_3Time = reader.uint32();
                                break;
                            }
                        case 6: {
                                message.section_4Time = reader.uint32();
                                break;
                            }
                        case 7: {
                                message.section_5Time = reader.uint32();
                                break;
                            }
                        case 8: {
                                message.section_6Time = reader.uint32();
                                break;
                            }
                        case 9: {
                                message.section_7Time = reader.uint32();
                                break;
                            }
                        case 10: {
                                message.wholeRank = reader.uint32();
                                break;
                            }
                        case 11: {
                                message.modelRank = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("time"))
                        throw $util.ProtocolError("missing required 'time'", { instance: message });
                    if (!message.hasOwnProperty("course"))
                        throw $util.ProtocolError("missing required 'course'", { instance: message });
                    if (!message.hasOwnProperty("isMorning"))
                        throw $util.ProtocolError("missing required 'isMorning'", { instance: message });
                    if (!message.hasOwnProperty("section_1Time"))
                        throw $util.ProtocolError("missing required 'section_1Time'", { instance: message });
                    if (!message.hasOwnProperty("section_2Time"))
                        throw $util.ProtocolError("missing required 'section_2Time'", { instance: message });
                    if (!message.hasOwnProperty("section_3Time"))
                        throw $util.ProtocolError("missing required 'section_3Time'", { instance: message });
                    if (!message.hasOwnProperty("section_4Time"))
                        throw $util.ProtocolError("missing required 'section_4Time'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a TimeAttackResult message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.SaveGameResultRequest.TimeAttackResult} TimeAttackResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TimeAttackResult.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a TimeAttackResult message.
                 * @function verify
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                TimeAttackResult.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.time))
                        return "time: integer expected";
                    if (!$util.isInteger(message.course))
                        return "course: integer expected";
                    if (typeof message.isMorning !== "boolean")
                        return "isMorning: boolean expected";
                    if (!$util.isInteger(message.section_1Time))
                        return "section_1Time: integer expected";
                    if (!$util.isInteger(message.section_2Time))
                        return "section_2Time: integer expected";
                    if (!$util.isInteger(message.section_3Time))
                        return "section_3Time: integer expected";
                    if (!$util.isInteger(message.section_4Time))
                        return "section_4Time: integer expected";
                    if (message.section_5Time != null && message.hasOwnProperty("section_5Time"))
                        if (!$util.isInteger(message.section_5Time))
                            return "section_5Time: integer expected";
                    if (message.section_6Time != null && message.hasOwnProperty("section_6Time"))
                        if (!$util.isInteger(message.section_6Time))
                            return "section_6Time: integer expected";
                    if (message.section_7Time != null && message.hasOwnProperty("section_7Time"))
                        if (!$util.isInteger(message.section_7Time))
                            return "section_7Time: integer expected";
                    if (message.wholeRank != null && message.hasOwnProperty("wholeRank"))
                        if (!$util.isInteger(message.wholeRank))
                            return "wholeRank: integer expected";
                    if (message.modelRank != null && message.hasOwnProperty("modelRank"))
                        if (!$util.isInteger(message.modelRank))
                            return "modelRank: integer expected";
                    return null;
                };

                /**
                 * Creates a TimeAttackResult message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.SaveGameResultRequest.TimeAttackResult} TimeAttackResult
                 */
                TimeAttackResult.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.SaveGameResultRequest.TimeAttackResult)
                        return object;
                    let message = new $root.wm5.protobuf.SaveGameResultRequest.TimeAttackResult();
                    if (object.time != null)
                        message.time = object.time >>> 0;
                    if (object.course != null)
                        message.course = object.course >>> 0;
                    if (object.isMorning != null)
                        message.isMorning = Boolean(object.isMorning);
                    if (object.section_1Time != null)
                        message.section_1Time = object.section_1Time >>> 0;
                    if (object.section_2Time != null)
                        message.section_2Time = object.section_2Time >>> 0;
                    if (object.section_3Time != null)
                        message.section_3Time = object.section_3Time >>> 0;
                    if (object.section_4Time != null)
                        message.section_4Time = object.section_4Time >>> 0;
                    if (object.section_5Time != null)
                        message.section_5Time = object.section_5Time >>> 0;
                    if (object.section_6Time != null)
                        message.section_6Time = object.section_6Time >>> 0;
                    if (object.section_7Time != null)
                        message.section_7Time = object.section_7Time >>> 0;
                    if (object.wholeRank != null)
                        message.wholeRank = object.wholeRank >>> 0;
                    if (object.modelRank != null)
                        message.modelRank = object.modelRank >>> 0;
                    return message;
                };

                /**
                 * Creates a plain object from a TimeAttackResult message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @static
                 * @param {wm5.protobuf.SaveGameResultRequest.TimeAttackResult} message TimeAttackResult
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                TimeAttackResult.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.time = 0;
                        object.course = 0;
                        object.section_1Time = 0;
                        object.section_2Time = 0;
                        object.section_3Time = 0;
                        object.section_4Time = 0;
                        object.section_5Time = 0;
                        object.section_6Time = 0;
                        object.section_7Time = 0;
                        object.wholeRank = 0;
                        object.modelRank = 0;
                        object.isMorning = false;
                    }
                    if (message.time != null && message.hasOwnProperty("time"))
                        object.time = message.time;
                    if (message.course != null && message.hasOwnProperty("course"))
                        object.course = message.course;
                    if (message.section_1Time != null && message.hasOwnProperty("section_1Time"))
                        object.section_1Time = message.section_1Time;
                    if (message.section_2Time != null && message.hasOwnProperty("section_2Time"))
                        object.section_2Time = message.section_2Time;
                    if (message.section_3Time != null && message.hasOwnProperty("section_3Time"))
                        object.section_3Time = message.section_3Time;
                    if (message.section_4Time != null && message.hasOwnProperty("section_4Time"))
                        object.section_4Time = message.section_4Time;
                    if (message.section_5Time != null && message.hasOwnProperty("section_5Time"))
                        object.section_5Time = message.section_5Time;
                    if (message.section_6Time != null && message.hasOwnProperty("section_6Time"))
                        object.section_6Time = message.section_6Time;
                    if (message.section_7Time != null && message.hasOwnProperty("section_7Time"))
                        object.section_7Time = message.section_7Time;
                    if (message.wholeRank != null && message.hasOwnProperty("wholeRank"))
                        object.wholeRank = message.wholeRank;
                    if (message.modelRank != null && message.hasOwnProperty("modelRank"))
                        object.modelRank = message.modelRank;
                    if (message.isMorning != null && message.hasOwnProperty("isMorning"))
                        object.isMorning = message.isMorning;
                    return object;
                };

                /**
                 * Converts this TimeAttackResult to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                TimeAttackResult.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for TimeAttackResult
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.SaveGameResultRequest.TimeAttackResult
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                TimeAttackResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.SaveGameResultRequest.TimeAttackResult";
                };

                return TimeAttackResult;
            })();

            SaveGameResultRequest.VersusBattleResult = (function() {

                /**
                 * Properties of a VersusBattleResult.
                 * @memberof wm5.protobuf.SaveGameResultRequest
                 * @interface IVersusBattleResult
                 * @property {number} result VersusBattleResult result
                 * @property {boolean} survived VersusBattleResult survived
                 * @property {Array.<number>|null} [opponentCarId] VersusBattleResult opponentCarId
                 * @property {number} numOfPlayers VersusBattleResult numOfPlayers
                 * @property {number} area VersusBattleResult area
                 * @property {boolean} isMorning VersusBattleResult isMorning
                 * @property {number} vsPlayCount VersusBattleResult vsPlayCount
                 * @property {number|null} [vsBurstCount] VersusBattleResult vsBurstCount
                 * @property {number|null} [vsStarCount] VersusBattleResult vsStarCount
                 * @property {number|null} [vsCoolOrWild] VersusBattleResult vsCoolOrWild
                 * @property {number|null} [vsSmoothOrRough] VersusBattleResult vsSmoothOrRough
                 * @property {number|null} [vsTripleStarMedals] VersusBattleResult vsTripleStarMedals
                 * @property {number|null} [vsDoubleStarMedals] VersusBattleResult vsDoubleStarMedals
                 * @property {number|null} [vsSingleStarMedals] VersusBattleResult vsSingleStarMedals
                 * @property {number|null} [vsPlainMedals] VersusBattleResult vsPlainMedals
                 * @property {number|null} [bingoEventId] VersusBattleResult bingoEventId
                 * @property {number|null} [bingoCardId] VersusBattleResult bingoCardId
                 */

                /**
                 * Constructs a new VersusBattleResult.
                 * @memberof wm5.protobuf.SaveGameResultRequest
                 * @classdesc Represents a VersusBattleResult.
                 * @implements IVersusBattleResult
                 * @constructor
                 * @param {wm5.protobuf.SaveGameResultRequest.IVersusBattleResult=} [properties] Properties to set
                 */
                function VersusBattleResult(properties) {
                    this.opponentCarId = [];
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * VersusBattleResult result.
                 * @member {number} result
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 */
                VersusBattleResult.prototype.result = 0;

                /**
                 * VersusBattleResult survived.
                 * @member {boolean} survived
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 */
                VersusBattleResult.prototype.survived = false;

                /**
                 * VersusBattleResult opponentCarId.
                 * @member {Array.<number>} opponentCarId
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 */
                VersusBattleResult.prototype.opponentCarId = $util.emptyArray;

                /**
                 * VersusBattleResult numOfPlayers.
                 * @member {number} numOfPlayers
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 */
                VersusBattleResult.prototype.numOfPlayers = 0;

                /**
                 * VersusBattleResult area.
                 * @member {number} area
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 */
                VersusBattleResult.prototype.area = 0;

                /**
                 * VersusBattleResult isMorning.
                 * @member {boolean} isMorning
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 */
                VersusBattleResult.prototype.isMorning = false;

                /**
                 * VersusBattleResult vsPlayCount.
                 * @member {number} vsPlayCount
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 */
                VersusBattleResult.prototype.vsPlayCount = 0;

                /**
                 * VersusBattleResult vsBurstCount.
                 * @member {number} vsBurstCount
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 */
                VersusBattleResult.prototype.vsBurstCount = 0;

                /**
                 * VersusBattleResult vsStarCount.
                 * @member {number} vsStarCount
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 */
                VersusBattleResult.prototype.vsStarCount = 0;

                /**
                 * VersusBattleResult vsCoolOrWild.
                 * @member {number} vsCoolOrWild
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 */
                VersusBattleResult.prototype.vsCoolOrWild = 0;

                /**
                 * VersusBattleResult vsSmoothOrRough.
                 * @member {number} vsSmoothOrRough
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 */
                VersusBattleResult.prototype.vsSmoothOrRough = 0;

                /**
                 * VersusBattleResult vsTripleStarMedals.
                 * @member {number} vsTripleStarMedals
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 */
                VersusBattleResult.prototype.vsTripleStarMedals = 0;

                /**
                 * VersusBattleResult vsDoubleStarMedals.
                 * @member {number} vsDoubleStarMedals
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 */
                VersusBattleResult.prototype.vsDoubleStarMedals = 0;

                /**
                 * VersusBattleResult vsSingleStarMedals.
                 * @member {number} vsSingleStarMedals
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 */
                VersusBattleResult.prototype.vsSingleStarMedals = 0;

                /**
                 * VersusBattleResult vsPlainMedals.
                 * @member {number} vsPlainMedals
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 */
                VersusBattleResult.prototype.vsPlainMedals = 0;

                /**
                 * VersusBattleResult bingoEventId.
                 * @member {number} bingoEventId
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 */
                VersusBattleResult.prototype.bingoEventId = 0;

                /**
                 * VersusBattleResult bingoCardId.
                 * @member {number} bingoCardId
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 */
                VersusBattleResult.prototype.bingoCardId = 0;

                /**
                 * Creates a new VersusBattleResult instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @static
                 * @param {wm5.protobuf.SaveGameResultRequest.IVersusBattleResult=} [properties] Properties to set
                 * @returns {wm5.protobuf.SaveGameResultRequest.VersusBattleResult} VersusBattleResult instance
                 */
                VersusBattleResult.create = function create(properties) {
                    return new VersusBattleResult(properties);
                };

                /**
                 * Encodes the specified VersusBattleResult message. Does not implicitly {@link wm5.protobuf.SaveGameResultRequest.VersusBattleResult.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @static
                 * @param {wm5.protobuf.SaveGameResultRequest.IVersusBattleResult} message VersusBattleResult message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                VersusBattleResult.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.result);
                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.survived);
                    if (message.opponentCarId != null && message.opponentCarId.length)
                        for (let i = 0; i < message.opponentCarId.length; ++i)
                            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.opponentCarId[i]);
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.numOfPlayers);
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.vsPlayCount);
                    if (message.vsBurstCount != null && Object.hasOwnProperty.call(message, "vsBurstCount"))
                        writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.vsBurstCount);
                    if (message.vsStarCount != null && Object.hasOwnProperty.call(message, "vsStarCount"))
                        writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.vsStarCount);
                    if (message.vsCoolOrWild != null && Object.hasOwnProperty.call(message, "vsCoolOrWild"))
                        writer.uint32(/* id 9, wireType 0 =*/72).sint32(message.vsCoolOrWild);
                    if (message.vsSmoothOrRough != null && Object.hasOwnProperty.call(message, "vsSmoothOrRough"))
                        writer.uint32(/* id 10, wireType 0 =*/80).sint32(message.vsSmoothOrRough);
                    if (message.vsTripleStarMedals != null && Object.hasOwnProperty.call(message, "vsTripleStarMedals"))
                        writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.vsTripleStarMedals);
                    if (message.vsDoubleStarMedals != null && Object.hasOwnProperty.call(message, "vsDoubleStarMedals"))
                        writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.vsDoubleStarMedals);
                    if (message.vsSingleStarMedals != null && Object.hasOwnProperty.call(message, "vsSingleStarMedals"))
                        writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.vsSingleStarMedals);
                    if (message.vsPlainMedals != null && Object.hasOwnProperty.call(message, "vsPlainMedals"))
                        writer.uint32(/* id 14, wireType 0 =*/112).uint32(message.vsPlainMedals);
                    if (message.bingoEventId != null && Object.hasOwnProperty.call(message, "bingoEventId"))
                        writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.bingoEventId);
                    if (message.bingoCardId != null && Object.hasOwnProperty.call(message, "bingoCardId"))
                        writer.uint32(/* id 16, wireType 0 =*/128).uint32(message.bingoCardId);
                    writer.uint32(/* id 17, wireType 0 =*/136).uint32(message.area);
                    writer.uint32(/* id 18, wireType 0 =*/144).bool(message.isMorning);
                    return writer;
                };

                /**
                 * Encodes the specified VersusBattleResult message, length delimited. Does not implicitly {@link wm5.protobuf.SaveGameResultRequest.VersusBattleResult.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @static
                 * @param {wm5.protobuf.SaveGameResultRequest.IVersusBattleResult} message VersusBattleResult message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                VersusBattleResult.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a VersusBattleResult message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.SaveGameResultRequest.VersusBattleResult} VersusBattleResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                VersusBattleResult.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveGameResultRequest.VersusBattleResult();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.result = reader.uint32();
                                break;
                            }
                        case 2: {
                                message.survived = reader.bool();
                                break;
                            }
                        case 3: {
                                if (!(message.opponentCarId && message.opponentCarId.length))
                                    message.opponentCarId = [];
                                if ((tag & 7) === 2) {
                                    let end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.opponentCarId.push(reader.uint32());
                                } else
                                    message.opponentCarId.push(reader.uint32());
                                break;
                            }
                        case 5: {
                                message.numOfPlayers = reader.uint32();
                                break;
                            }
                        case 17: {
                                message.area = reader.uint32();
                                break;
                            }
                        case 18: {
                                message.isMorning = reader.bool();
                                break;
                            }
                        case 6: {
                                message.vsPlayCount = reader.uint32();
                                break;
                            }
                        case 7: {
                                message.vsBurstCount = reader.uint32();
                                break;
                            }
                        case 8: {
                                message.vsStarCount = reader.uint32();
                                break;
                            }
                        case 9: {
                                message.vsCoolOrWild = reader.sint32();
                                break;
                            }
                        case 10: {
                                message.vsSmoothOrRough = reader.sint32();
                                break;
                            }
                        case 11: {
                                message.vsTripleStarMedals = reader.uint32();
                                break;
                            }
                        case 12: {
                                message.vsDoubleStarMedals = reader.uint32();
                                break;
                            }
                        case 13: {
                                message.vsSingleStarMedals = reader.uint32();
                                break;
                            }
                        case 14: {
                                message.vsPlainMedals = reader.uint32();
                                break;
                            }
                        case 15: {
                                message.bingoEventId = reader.uint32();
                                break;
                            }
                        case 16: {
                                message.bingoCardId = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("result"))
                        throw $util.ProtocolError("missing required 'result'", { instance: message });
                    if (!message.hasOwnProperty("survived"))
                        throw $util.ProtocolError("missing required 'survived'", { instance: message });
                    if (!message.hasOwnProperty("numOfPlayers"))
                        throw $util.ProtocolError("missing required 'numOfPlayers'", { instance: message });
                    if (!message.hasOwnProperty("area"))
                        throw $util.ProtocolError("missing required 'area'", { instance: message });
                    if (!message.hasOwnProperty("isMorning"))
                        throw $util.ProtocolError("missing required 'isMorning'", { instance: message });
                    if (!message.hasOwnProperty("vsPlayCount"))
                        throw $util.ProtocolError("missing required 'vsPlayCount'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a VersusBattleResult message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.SaveGameResultRequest.VersusBattleResult} VersusBattleResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                VersusBattleResult.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a VersusBattleResult message.
                 * @function verify
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                VersusBattleResult.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.result))
                        return "result: integer expected";
                    if (typeof message.survived !== "boolean")
                        return "survived: boolean expected";
                    if (message.opponentCarId != null && message.hasOwnProperty("opponentCarId")) {
                        if (!Array.isArray(message.opponentCarId))
                            return "opponentCarId: array expected";
                        for (let i = 0; i < message.opponentCarId.length; ++i)
                            if (!$util.isInteger(message.opponentCarId[i]))
                                return "opponentCarId: integer[] expected";
                    }
                    if (!$util.isInteger(message.numOfPlayers))
                        return "numOfPlayers: integer expected";
                    if (!$util.isInteger(message.area))
                        return "area: integer expected";
                    if (typeof message.isMorning !== "boolean")
                        return "isMorning: boolean expected";
                    if (!$util.isInteger(message.vsPlayCount))
                        return "vsPlayCount: integer expected";
                    if (message.vsBurstCount != null && message.hasOwnProperty("vsBurstCount"))
                        if (!$util.isInteger(message.vsBurstCount))
                            return "vsBurstCount: integer expected";
                    if (message.vsStarCount != null && message.hasOwnProperty("vsStarCount"))
                        if (!$util.isInteger(message.vsStarCount))
                            return "vsStarCount: integer expected";
                    if (message.vsCoolOrWild != null && message.hasOwnProperty("vsCoolOrWild"))
                        if (!$util.isInteger(message.vsCoolOrWild))
                            return "vsCoolOrWild: integer expected";
                    if (message.vsSmoothOrRough != null && message.hasOwnProperty("vsSmoothOrRough"))
                        if (!$util.isInteger(message.vsSmoothOrRough))
                            return "vsSmoothOrRough: integer expected";
                    if (message.vsTripleStarMedals != null && message.hasOwnProperty("vsTripleStarMedals"))
                        if (!$util.isInteger(message.vsTripleStarMedals))
                            return "vsTripleStarMedals: integer expected";
                    if (message.vsDoubleStarMedals != null && message.hasOwnProperty("vsDoubleStarMedals"))
                        if (!$util.isInteger(message.vsDoubleStarMedals))
                            return "vsDoubleStarMedals: integer expected";
                    if (message.vsSingleStarMedals != null && message.hasOwnProperty("vsSingleStarMedals"))
                        if (!$util.isInteger(message.vsSingleStarMedals))
                            return "vsSingleStarMedals: integer expected";
                    if (message.vsPlainMedals != null && message.hasOwnProperty("vsPlainMedals"))
                        if (!$util.isInteger(message.vsPlainMedals))
                            return "vsPlainMedals: integer expected";
                    if (message.bingoEventId != null && message.hasOwnProperty("bingoEventId"))
                        if (!$util.isInteger(message.bingoEventId))
                            return "bingoEventId: integer expected";
                    if (message.bingoCardId != null && message.hasOwnProperty("bingoCardId"))
                        if (!$util.isInteger(message.bingoCardId))
                            return "bingoCardId: integer expected";
                    return null;
                };

                /**
                 * Creates a VersusBattleResult message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.SaveGameResultRequest.VersusBattleResult} VersusBattleResult
                 */
                VersusBattleResult.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.SaveGameResultRequest.VersusBattleResult)
                        return object;
                    let message = new $root.wm5.protobuf.SaveGameResultRequest.VersusBattleResult();
                    if (object.result != null)
                        message.result = object.result >>> 0;
                    if (object.survived != null)
                        message.survived = Boolean(object.survived);
                    if (object.opponentCarId) {
                        if (!Array.isArray(object.opponentCarId))
                            throw TypeError(".wm5.protobuf.SaveGameResultRequest.VersusBattleResult.opponentCarId: array expected");
                        message.opponentCarId = [];
                        for (let i = 0; i < object.opponentCarId.length; ++i)
                            message.opponentCarId[i] = object.opponentCarId[i] >>> 0;
                    }
                    if (object.numOfPlayers != null)
                        message.numOfPlayers = object.numOfPlayers >>> 0;
                    if (object.area != null)
                        message.area = object.area >>> 0;
                    if (object.isMorning != null)
                        message.isMorning = Boolean(object.isMorning);
                    if (object.vsPlayCount != null)
                        message.vsPlayCount = object.vsPlayCount >>> 0;
                    if (object.vsBurstCount != null)
                        message.vsBurstCount = object.vsBurstCount >>> 0;
                    if (object.vsStarCount != null)
                        message.vsStarCount = object.vsStarCount >>> 0;
                    if (object.vsCoolOrWild != null)
                        message.vsCoolOrWild = object.vsCoolOrWild | 0;
                    if (object.vsSmoothOrRough != null)
                        message.vsSmoothOrRough = object.vsSmoothOrRough | 0;
                    if (object.vsTripleStarMedals != null)
                        message.vsTripleStarMedals = object.vsTripleStarMedals >>> 0;
                    if (object.vsDoubleStarMedals != null)
                        message.vsDoubleStarMedals = object.vsDoubleStarMedals >>> 0;
                    if (object.vsSingleStarMedals != null)
                        message.vsSingleStarMedals = object.vsSingleStarMedals >>> 0;
                    if (object.vsPlainMedals != null)
                        message.vsPlainMedals = object.vsPlainMedals >>> 0;
                    if (object.bingoEventId != null)
                        message.bingoEventId = object.bingoEventId >>> 0;
                    if (object.bingoCardId != null)
                        message.bingoCardId = object.bingoCardId >>> 0;
                    return message;
                };

                /**
                 * Creates a plain object from a VersusBattleResult message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @static
                 * @param {wm5.protobuf.SaveGameResultRequest.VersusBattleResult} message VersusBattleResult
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                VersusBattleResult.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.arrays || options.defaults)
                        object.opponentCarId = [];
                    if (options.defaults) {
                        object.result = 0;
                        object.survived = false;
                        object.numOfPlayers = 0;
                        object.vsPlayCount = 0;
                        object.vsBurstCount = 0;
                        object.vsStarCount = 0;
                        object.vsCoolOrWild = 0;
                        object.vsSmoothOrRough = 0;
                        object.vsTripleStarMedals = 0;
                        object.vsDoubleStarMedals = 0;
                        object.vsSingleStarMedals = 0;
                        object.vsPlainMedals = 0;
                        object.bingoEventId = 0;
                        object.bingoCardId = 0;
                        object.area = 0;
                        object.isMorning = false;
                    }
                    if (message.result != null && message.hasOwnProperty("result"))
                        object.result = message.result;
                    if (message.survived != null && message.hasOwnProperty("survived"))
                        object.survived = message.survived;
                    if (message.opponentCarId && message.opponentCarId.length) {
                        object.opponentCarId = [];
                        for (let j = 0; j < message.opponentCarId.length; ++j)
                            object.opponentCarId[j] = message.opponentCarId[j];
                    }
                    if (message.numOfPlayers != null && message.hasOwnProperty("numOfPlayers"))
                        object.numOfPlayers = message.numOfPlayers;
                    if (message.vsPlayCount != null && message.hasOwnProperty("vsPlayCount"))
                        object.vsPlayCount = message.vsPlayCount;
                    if (message.vsBurstCount != null && message.hasOwnProperty("vsBurstCount"))
                        object.vsBurstCount = message.vsBurstCount;
                    if (message.vsStarCount != null && message.hasOwnProperty("vsStarCount"))
                        object.vsStarCount = message.vsStarCount;
                    if (message.vsCoolOrWild != null && message.hasOwnProperty("vsCoolOrWild"))
                        object.vsCoolOrWild = message.vsCoolOrWild;
                    if (message.vsSmoothOrRough != null && message.hasOwnProperty("vsSmoothOrRough"))
                        object.vsSmoothOrRough = message.vsSmoothOrRough;
                    if (message.vsTripleStarMedals != null && message.hasOwnProperty("vsTripleStarMedals"))
                        object.vsTripleStarMedals = message.vsTripleStarMedals;
                    if (message.vsDoubleStarMedals != null && message.hasOwnProperty("vsDoubleStarMedals"))
                        object.vsDoubleStarMedals = message.vsDoubleStarMedals;
                    if (message.vsSingleStarMedals != null && message.hasOwnProperty("vsSingleStarMedals"))
                        object.vsSingleStarMedals = message.vsSingleStarMedals;
                    if (message.vsPlainMedals != null && message.hasOwnProperty("vsPlainMedals"))
                        object.vsPlainMedals = message.vsPlainMedals;
                    if (message.bingoEventId != null && message.hasOwnProperty("bingoEventId"))
                        object.bingoEventId = message.bingoEventId;
                    if (message.bingoCardId != null && message.hasOwnProperty("bingoCardId"))
                        object.bingoCardId = message.bingoCardId;
                    if (message.area != null && message.hasOwnProperty("area"))
                        object.area = message.area;
                    if (message.isMorning != null && message.hasOwnProperty("isMorning"))
                        object.isMorning = message.isMorning;
                    return object;
                };

                /**
                 * Converts this VersusBattleResult to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                VersusBattleResult.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for VersusBattleResult
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.SaveGameResultRequest.VersusBattleResult
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                VersusBattleResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.SaveGameResultRequest.VersusBattleResult";
                };

                return VersusBattleResult;
            })();

            SaveGameResultRequest.GhostBattleResult = (function() {

                /**
                 * Properties of a GhostBattleResult.
                 * @memberof wm5.protobuf.SaveGameResultRequest
                 * @interface IGhostBattleResult
                 * @property {number} result GhostBattleResult result
                 * @property {number} opponentCarId GhostBattleResult opponentCarId
                 * @property {number} area GhostBattleResult area
                 * @property {boolean} isMorning GhostBattleResult isMorning
                 * @property {wm5.protobuf.GhostSelectionMethod} selectionMethod GhostBattleResult selectionMethod
                 * @property {number|null} [stampSheetCount] GhostBattleResult stampSheetCount
                 * @property {Array.<number>|null} [stampSheet] GhostBattleResult stampSheet
                 * @property {boolean|null} [receiveStamp] GhostBattleResult receiveStamp
                 * @property {number|null} [rgStamp] GhostBattleResult rgStamp
                 * @property {Array.<number>|null} [confirmedTransferredStampTargetCarIds] GhostBattleResult confirmedTransferredStampTargetCarIds
                 * @property {number} rgPlayCount GhostBattleResult rgPlayCount
                 * @property {number|null} [rgWinCount] GhostBattleResult rgWinCount
                 * @property {number|null} [maxiCoin] GhostBattleResult maxiCoin
                 * @property {number|null} [shopPoint] GhostBattleResult shopPoint
                 * @property {number|null} [shopGrade] GhostBattleResult shopGrade
                 * @property {number|null} [rgBlock] GhostBattleResult rgBlock
                 * @property {Array.<number>|null} [rgProgress] GhostBattleResult rgProgress
                 * @property {number|null} [rgClearCount] GhostBattleResult rgClearCount
                 * @property {number|null} [competitionId] GhostBattleResult competitionId
                 * @property {number|null} [periodId] GhostBattleResult periodId
                 * @property {number|null} [brakingPoint] GhostBattleResult brakingPoint
                 * @property {boolean|null} [usedMaxiGoldBoostItem] GhostBattleResult usedMaxiGoldBoostItem
                 * @property {boolean|null} [acquireCrown] GhostBattleResult acquireCrown
                 * @property {boolean|null} [acquireAllCrowns] GhostBattleResult acquireAllCrowns
                 * @property {wm5.protobuf.SaveGameResultRequest.GhostBattleResult.IGhostExpeditionResult|null} [expeditionResult] GhostBattleResult expeditionResult
                 */

                /**
                 * Constructs a new GhostBattleResult.
                 * @memberof wm5.protobuf.SaveGameResultRequest
                 * @classdesc Represents a GhostBattleResult.
                 * @implements IGhostBattleResult
                 * @constructor
                 * @param {wm5.protobuf.SaveGameResultRequest.IGhostBattleResult=} [properties] Properties to set
                 */
                function GhostBattleResult(properties) {
                    this.stampSheet = [];
                    this.confirmedTransferredStampTargetCarIds = [];
                    this.rgProgress = [];
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * GhostBattleResult result.
                 * @member {number} result
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.result = 0;

                /**
                 * GhostBattleResult opponentCarId.
                 * @member {number} opponentCarId
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.opponentCarId = 0;

                /**
                 * GhostBattleResult area.
                 * @member {number} area
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.area = 0;

                /**
                 * GhostBattleResult isMorning.
                 * @member {boolean} isMorning
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.isMorning = false;

                /**
                 * GhostBattleResult selectionMethod.
                 * @member {wm5.protobuf.GhostSelectionMethod} selectionMethod
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.selectionMethod = 1;

                /**
                 * GhostBattleResult stampSheetCount.
                 * @member {number} stampSheetCount
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.stampSheetCount = 0;

                /**
                 * GhostBattleResult stampSheet.
                 * @member {Array.<number>} stampSheet
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.stampSheet = $util.emptyArray;

                /**
                 * GhostBattleResult receiveStamp.
                 * @member {boolean} receiveStamp
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.receiveStamp = false;

                /**
                 * GhostBattleResult rgStamp.
                 * @member {number} rgStamp
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.rgStamp = 0;

                /**
                 * GhostBattleResult confirmedTransferredStampTargetCarIds.
                 * @member {Array.<number>} confirmedTransferredStampTargetCarIds
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.confirmedTransferredStampTargetCarIds = $util.emptyArray;

                /**
                 * GhostBattleResult rgPlayCount.
                 * @member {number} rgPlayCount
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.rgPlayCount = 0;

                /**
                 * GhostBattleResult rgWinCount.
                 * @member {number} rgWinCount
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.rgWinCount = 0;

                /**
                 * GhostBattleResult maxiCoin.
                 * @member {number} maxiCoin
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.maxiCoin = 0;

                /**
                 * GhostBattleResult shopPoint.
                 * @member {number} shopPoint
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.shopPoint = 0;

                /**
                 * GhostBattleResult shopGrade.
                 * @member {number} shopGrade
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.shopGrade = 0;

                /**
                 * GhostBattleResult rgBlock.
                 * @member {number} rgBlock
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.rgBlock = 0;

                /**
                 * GhostBattleResult rgProgress.
                 * @member {Array.<number>} rgProgress
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.rgProgress = $util.emptyArray;

                /**
                 * GhostBattleResult rgClearCount.
                 * @member {number} rgClearCount
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.rgClearCount = 0;

                /**
                 * GhostBattleResult competitionId.
                 * @member {number} competitionId
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.competitionId = 0;

                /**
                 * GhostBattleResult periodId.
                 * @member {number} periodId
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.periodId = 0;

                /**
                 * GhostBattleResult brakingPoint.
                 * @member {number} brakingPoint
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.brakingPoint = 0;

                /**
                 * GhostBattleResult usedMaxiGoldBoostItem.
                 * @member {boolean} usedMaxiGoldBoostItem
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.usedMaxiGoldBoostItem = false;

                /**
                 * GhostBattleResult acquireCrown.
                 * @member {boolean} acquireCrown
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.acquireCrown = false;

                /**
                 * GhostBattleResult acquireAllCrowns.
                 * @member {boolean} acquireAllCrowns
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.acquireAllCrowns = false;

                /**
                 * GhostBattleResult expeditionResult.
                 * @member {wm5.protobuf.SaveGameResultRequest.GhostBattleResult.IGhostExpeditionResult|null|undefined} expeditionResult
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 */
                GhostBattleResult.prototype.expeditionResult = null;

                /**
                 * Creates a new GhostBattleResult instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @static
                 * @param {wm5.protobuf.SaveGameResultRequest.IGhostBattleResult=} [properties] Properties to set
                 * @returns {wm5.protobuf.SaveGameResultRequest.GhostBattleResult} GhostBattleResult instance
                 */
                GhostBattleResult.create = function create(properties) {
                    return new GhostBattleResult(properties);
                };

                /**
                 * Encodes the specified GhostBattleResult message. Does not implicitly {@link wm5.protobuf.SaveGameResultRequest.GhostBattleResult.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @static
                 * @param {wm5.protobuf.SaveGameResultRequest.IGhostBattleResult} message GhostBattleResult message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GhostBattleResult.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).sint32(message.result);
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.opponentCarId);
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.area);
                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.selectionMethod);
                    if (message.stampSheetCount != null && Object.hasOwnProperty.call(message, "stampSheetCount"))
                        writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.stampSheetCount);
                    if (message.stampSheet != null && message.stampSheet.length)
                        for (let i = 0; i < message.stampSheet.length; ++i)
                            writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.stampSheet[i]);
                    if (message.receiveStamp != null && Object.hasOwnProperty.call(message, "receiveStamp"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.receiveStamp);
                    writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.rgPlayCount);
                    if (message.rgWinCount != null && Object.hasOwnProperty.call(message, "rgWinCount"))
                        writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.rgWinCount);
                    if (message.maxiCoin != null && Object.hasOwnProperty.call(message, "maxiCoin"))
                        writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.maxiCoin);
                    if (message.shopPoint != null && Object.hasOwnProperty.call(message, "shopPoint"))
                        writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.shopPoint);
                    if (message.shopGrade != null && Object.hasOwnProperty.call(message, "shopGrade"))
                        writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.shopGrade);
                    if (message.rgBlock != null && Object.hasOwnProperty.call(message, "rgBlock"))
                        writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.rgBlock);
                    if (message.rgProgress != null && message.rgProgress.length) {
                        writer.uint32(/* id 14, wireType 2 =*/114).fork();
                        for (let i = 0; i < message.rgProgress.length; ++i)
                            writer.uint32(message.rgProgress[i]);
                        writer.ldelim();
                    }
                    if (message.rgClearCount != null && Object.hasOwnProperty.call(message, "rgClearCount"))
                        writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.rgClearCount);
                    if (message.competitionId != null && Object.hasOwnProperty.call(message, "competitionId"))
                        writer.uint32(/* id 16, wireType 0 =*/128).uint32(message.competitionId);
                    if (message.periodId != null && Object.hasOwnProperty.call(message, "periodId"))
                        writer.uint32(/* id 17, wireType 0 =*/136).uint32(message.periodId);
                    if (message.brakingPoint != null && Object.hasOwnProperty.call(message, "brakingPoint"))
                        writer.uint32(/* id 18, wireType 0 =*/144).uint32(message.brakingPoint);
                    if (message.usedMaxiGoldBoostItem != null && Object.hasOwnProperty.call(message, "usedMaxiGoldBoostItem"))
                        writer.uint32(/* id 19, wireType 0 =*/152).bool(message.usedMaxiGoldBoostItem);
                    if (message.acquireCrown != null && Object.hasOwnProperty.call(message, "acquireCrown"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.acquireCrown);
                    if (message.acquireAllCrowns != null && Object.hasOwnProperty.call(message, "acquireAllCrowns"))
                        writer.uint32(/* id 21, wireType 0 =*/168).bool(message.acquireAllCrowns);
                    if (message.rgStamp != null && Object.hasOwnProperty.call(message, "rgStamp"))
                        writer.uint32(/* id 23, wireType 0 =*/184).uint32(message.rgStamp);
                    if (message.confirmedTransferredStampTargetCarIds != null && message.confirmedTransferredStampTargetCarIds.length)
                        for (let i = 0; i < message.confirmedTransferredStampTargetCarIds.length; ++i)
                            writer.uint32(/* id 24, wireType 0 =*/192).uint32(message.confirmedTransferredStampTargetCarIds[i]);
                    writer.uint32(/* id 25, wireType 0 =*/200).bool(message.isMorning);
                    if (message.expeditionResult != null && Object.hasOwnProperty.call(message, "expeditionResult"))
                        $root.wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult.encode(message.expeditionResult, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified GhostBattleResult message, length delimited. Does not implicitly {@link wm5.protobuf.SaveGameResultRequest.GhostBattleResult.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @static
                 * @param {wm5.protobuf.SaveGameResultRequest.IGhostBattleResult} message GhostBattleResult message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GhostBattleResult.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a GhostBattleResult message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.SaveGameResultRequest.GhostBattleResult} GhostBattleResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GhostBattleResult.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveGameResultRequest.GhostBattleResult();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.result = reader.sint32();
                                break;
                            }
                        case 2: {
                                message.opponentCarId = reader.uint32();
                                break;
                            }
                        case 3: {
                                message.area = reader.uint32();
                                break;
                            }
                        case 25: {
                                message.isMorning = reader.bool();
                                break;
                            }
                        case 4: {
                                message.selectionMethod = reader.int32();
                                break;
                            }
                        case 5: {
                                message.stampSheetCount = reader.uint32();
                                break;
                            }
                        case 6: {
                                if (!(message.stampSheet && message.stampSheet.length))
                                    message.stampSheet = [];
                                if ((tag & 7) === 2) {
                                    let end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.stampSheet.push(reader.uint32());
                                } else
                                    message.stampSheet.push(reader.uint32());
                                break;
                            }
                        case 7: {
                                message.receiveStamp = reader.bool();
                                break;
                            }
                        case 23: {
                                message.rgStamp = reader.uint32();
                                break;
                            }
                        case 24: {
                                if (!(message.confirmedTransferredStampTargetCarIds && message.confirmedTransferredStampTargetCarIds.length))
                                    message.confirmedTransferredStampTargetCarIds = [];
                                if ((tag & 7) === 2) {
                                    let end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.confirmedTransferredStampTargetCarIds.push(reader.uint32());
                                } else
                                    message.confirmedTransferredStampTargetCarIds.push(reader.uint32());
                                break;
                            }
                        case 8: {
                                message.rgPlayCount = reader.uint32();
                                break;
                            }
                        case 9: {
                                message.rgWinCount = reader.uint32();
                                break;
                            }
                        case 10: {
                                message.maxiCoin = reader.uint32();
                                break;
                            }
                        case 11: {
                                message.shopPoint = reader.uint32();
                                break;
                            }
                        case 12: {
                                message.shopGrade = reader.uint32();
                                break;
                            }
                        case 13: {
                                message.rgBlock = reader.uint32();
                                break;
                            }
                        case 14: {
                                if (!(message.rgProgress && message.rgProgress.length))
                                    message.rgProgress = [];
                                if ((tag & 7) === 2) {
                                    let end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.rgProgress.push(reader.uint32());
                                } else
                                    message.rgProgress.push(reader.uint32());
                                break;
                            }
                        case 15: {
                                message.rgClearCount = reader.uint32();
                                break;
                            }
                        case 16: {
                                message.competitionId = reader.uint32();
                                break;
                            }
                        case 17: {
                                message.periodId = reader.uint32();
                                break;
                            }
                        case 18: {
                                message.brakingPoint = reader.uint32();
                                break;
                            }
                        case 19: {
                                message.usedMaxiGoldBoostItem = reader.bool();
                                break;
                            }
                        case 20: {
                                message.acquireCrown = reader.bool();
                                break;
                            }
                        case 21: {
                                message.acquireAllCrowns = reader.bool();
                                break;
                            }
                        case 26: {
                                message.expeditionResult = $root.wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("result"))
                        throw $util.ProtocolError("missing required 'result'", { instance: message });
                    if (!message.hasOwnProperty("opponentCarId"))
                        throw $util.ProtocolError("missing required 'opponentCarId'", { instance: message });
                    if (!message.hasOwnProperty("area"))
                        throw $util.ProtocolError("missing required 'area'", { instance: message });
                    if (!message.hasOwnProperty("isMorning"))
                        throw $util.ProtocolError("missing required 'isMorning'", { instance: message });
                    if (!message.hasOwnProperty("selectionMethod"))
                        throw $util.ProtocolError("missing required 'selectionMethod'", { instance: message });
                    if (!message.hasOwnProperty("rgPlayCount"))
                        throw $util.ProtocolError("missing required 'rgPlayCount'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a GhostBattleResult message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.SaveGameResultRequest.GhostBattleResult} GhostBattleResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GhostBattleResult.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a GhostBattleResult message.
                 * @function verify
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GhostBattleResult.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.result))
                        return "result: integer expected";
                    if (!$util.isInteger(message.opponentCarId))
                        return "opponentCarId: integer expected";
                    if (!$util.isInteger(message.area))
                        return "area: integer expected";
                    if (typeof message.isMorning !== "boolean")
                        return "isMorning: boolean expected";
                    switch (message.selectionMethod) {
                    default:
                        return "selectionMethod: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                        break;
                    }
                    if (message.stampSheetCount != null && message.hasOwnProperty("stampSheetCount"))
                        if (!$util.isInteger(message.stampSheetCount))
                            return "stampSheetCount: integer expected";
                    if (message.stampSheet != null && message.hasOwnProperty("stampSheet")) {
                        if (!Array.isArray(message.stampSheet))
                            return "stampSheet: array expected";
                        for (let i = 0; i < message.stampSheet.length; ++i)
                            if (!$util.isInteger(message.stampSheet[i]))
                                return "stampSheet: integer[] expected";
                    }
                    if (message.receiveStamp != null && message.hasOwnProperty("receiveStamp"))
                        if (typeof message.receiveStamp !== "boolean")
                            return "receiveStamp: boolean expected";
                    if (message.rgStamp != null && message.hasOwnProperty("rgStamp"))
                        if (!$util.isInteger(message.rgStamp))
                            return "rgStamp: integer expected";
                    if (message.confirmedTransferredStampTargetCarIds != null && message.hasOwnProperty("confirmedTransferredStampTargetCarIds")) {
                        if (!Array.isArray(message.confirmedTransferredStampTargetCarIds))
                            return "confirmedTransferredStampTargetCarIds: array expected";
                        for (let i = 0; i < message.confirmedTransferredStampTargetCarIds.length; ++i)
                            if (!$util.isInteger(message.confirmedTransferredStampTargetCarIds[i]))
                                return "confirmedTransferredStampTargetCarIds: integer[] expected";
                    }
                    if (!$util.isInteger(message.rgPlayCount))
                        return "rgPlayCount: integer expected";
                    if (message.rgWinCount != null && message.hasOwnProperty("rgWinCount"))
                        if (!$util.isInteger(message.rgWinCount))
                            return "rgWinCount: integer expected";
                    if (message.maxiCoin != null && message.hasOwnProperty("maxiCoin"))
                        if (!$util.isInteger(message.maxiCoin))
                            return "maxiCoin: integer expected";
                    if (message.shopPoint != null && message.hasOwnProperty("shopPoint"))
                        if (!$util.isInteger(message.shopPoint))
                            return "shopPoint: integer expected";
                    if (message.shopGrade != null && message.hasOwnProperty("shopGrade"))
                        if (!$util.isInteger(message.shopGrade))
                            return "shopGrade: integer expected";
                    if (message.rgBlock != null && message.hasOwnProperty("rgBlock"))
                        if (!$util.isInteger(message.rgBlock))
                            return "rgBlock: integer expected";
                    if (message.rgProgress != null && message.hasOwnProperty("rgProgress")) {
                        if (!Array.isArray(message.rgProgress))
                            return "rgProgress: array expected";
                        for (let i = 0; i < message.rgProgress.length; ++i)
                            if (!$util.isInteger(message.rgProgress[i]))
                                return "rgProgress: integer[] expected";
                    }
                    if (message.rgClearCount != null && message.hasOwnProperty("rgClearCount"))
                        if (!$util.isInteger(message.rgClearCount))
                            return "rgClearCount: integer expected";
                    if (message.competitionId != null && message.hasOwnProperty("competitionId"))
                        if (!$util.isInteger(message.competitionId))
                            return "competitionId: integer expected";
                    if (message.periodId != null && message.hasOwnProperty("periodId"))
                        if (!$util.isInteger(message.periodId))
                            return "periodId: integer expected";
                    if (message.brakingPoint != null && message.hasOwnProperty("brakingPoint"))
                        if (!$util.isInteger(message.brakingPoint))
                            return "brakingPoint: integer expected";
                    if (message.usedMaxiGoldBoostItem != null && message.hasOwnProperty("usedMaxiGoldBoostItem"))
                        if (typeof message.usedMaxiGoldBoostItem !== "boolean")
                            return "usedMaxiGoldBoostItem: boolean expected";
                    if (message.acquireCrown != null && message.hasOwnProperty("acquireCrown"))
                        if (typeof message.acquireCrown !== "boolean")
                            return "acquireCrown: boolean expected";
                    if (message.acquireAllCrowns != null && message.hasOwnProperty("acquireAllCrowns"))
                        if (typeof message.acquireAllCrowns !== "boolean")
                            return "acquireAllCrowns: boolean expected";
                    if (message.expeditionResult != null && message.hasOwnProperty("expeditionResult")) {
                        let error = $root.wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult.verify(message.expeditionResult);
                        if (error)
                            return "expeditionResult." + error;
                    }
                    return null;
                };

                /**
                 * Creates a GhostBattleResult message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.SaveGameResultRequest.GhostBattleResult} GhostBattleResult
                 */
                GhostBattleResult.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.SaveGameResultRequest.GhostBattleResult)
                        return object;
                    let message = new $root.wm5.protobuf.SaveGameResultRequest.GhostBattleResult();
                    if (object.result != null)
                        message.result = object.result | 0;
                    if (object.opponentCarId != null)
                        message.opponentCarId = object.opponentCarId >>> 0;
                    if (object.area != null)
                        message.area = object.area >>> 0;
                    if (object.isMorning != null)
                        message.isMorning = Boolean(object.isMorning);
                    switch (object.selectionMethod) {
                    default:
                        if (typeof object.selectionMethod === "number") {
                            message.selectionMethod = object.selectionMethod;
                            break;
                        }
                        break;
                    case "GHOST_CHALLENGE":
                    case 1:
                        message.selectionMethod = 1;
                        break;
                    case "GHOST_SELECT_BY_LEVEL":
                    case 2:
                        message.selectionMethod = 2;
                        break;
                    case "GHOST_SELECT_CROWN_MATCH":
                    case 3:
                        message.selectionMethod = 3;
                        break;
                    case "GHOST_SELECT_STAMP_MATCH":
                    case 4:
                        message.selectionMethod = 4;
                        break;
                    case "GHOST_SELECT_FROM_HISTORY":
                    case 5:
                        message.selectionMethod = 5;
                        break;
                    case "GHOST_SEARCH_BY_SHOP":
                    case 6:
                        message.selectionMethod = 6;
                        break;
                    case "GHOST_SEARCH_BY_NAME":
                    case 7:
                        message.selectionMethod = 7;
                        break;
                    case "GHOST_ACCEPT_CHALLENGER":
                    case 8:
                        message.selectionMethod = 8;
                        break;
                    case "GHOST_APPOINTMENT":
                    case 9:
                        message.selectionMethod = 9;
                        break;
                    case "GHOST_DEFAULT_OPPONENT":
                    case 10:
                        message.selectionMethod = 10;
                        break;
                    case "GHOST_COMPETITION":
                    case 11:
                        message.selectionMethod = 11;
                        break;
                    case "GHOST_SPECIAL":
                    case 12:
                        message.selectionMethod = 12;
                        break;
                    case "GHOST_EXPEDITION":
                    case 13:
                        message.selectionMethod = 13;
                        break;
                    }
                    if (object.stampSheetCount != null)
                        message.stampSheetCount = object.stampSheetCount >>> 0;
                    if (object.stampSheet) {
                        if (!Array.isArray(object.stampSheet))
                            throw TypeError(".wm5.protobuf.SaveGameResultRequest.GhostBattleResult.stampSheet: array expected");
                        message.stampSheet = [];
                        for (let i = 0; i < object.stampSheet.length; ++i)
                            message.stampSheet[i] = object.stampSheet[i] >>> 0;
                    }
                    if (object.receiveStamp != null)
                        message.receiveStamp = Boolean(object.receiveStamp);
                    if (object.rgStamp != null)
                        message.rgStamp = object.rgStamp >>> 0;
                    if (object.confirmedTransferredStampTargetCarIds) {
                        if (!Array.isArray(object.confirmedTransferredStampTargetCarIds))
                            throw TypeError(".wm5.protobuf.SaveGameResultRequest.GhostBattleResult.confirmedTransferredStampTargetCarIds: array expected");
                        message.confirmedTransferredStampTargetCarIds = [];
                        for (let i = 0; i < object.confirmedTransferredStampTargetCarIds.length; ++i)
                            message.confirmedTransferredStampTargetCarIds[i] = object.confirmedTransferredStampTargetCarIds[i] >>> 0;
                    }
                    if (object.rgPlayCount != null)
                        message.rgPlayCount = object.rgPlayCount >>> 0;
                    if (object.rgWinCount != null)
                        message.rgWinCount = object.rgWinCount >>> 0;
                    if (object.maxiCoin != null)
                        message.maxiCoin = object.maxiCoin >>> 0;
                    if (object.shopPoint != null)
                        message.shopPoint = object.shopPoint >>> 0;
                    if (object.shopGrade != null)
                        message.shopGrade = object.shopGrade >>> 0;
                    if (object.rgBlock != null)
                        message.rgBlock = object.rgBlock >>> 0;
                    if (object.rgProgress) {
                        if (!Array.isArray(object.rgProgress))
                            throw TypeError(".wm5.protobuf.SaveGameResultRequest.GhostBattleResult.rgProgress: array expected");
                        message.rgProgress = [];
                        for (let i = 0; i < object.rgProgress.length; ++i)
                            message.rgProgress[i] = object.rgProgress[i] >>> 0;
                    }
                    if (object.rgClearCount != null)
                        message.rgClearCount = object.rgClearCount >>> 0;
                    if (object.competitionId != null)
                        message.competitionId = object.competitionId >>> 0;
                    if (object.periodId != null)
                        message.periodId = object.periodId >>> 0;
                    if (object.brakingPoint != null)
                        message.brakingPoint = object.brakingPoint >>> 0;
                    if (object.usedMaxiGoldBoostItem != null)
                        message.usedMaxiGoldBoostItem = Boolean(object.usedMaxiGoldBoostItem);
                    if (object.acquireCrown != null)
                        message.acquireCrown = Boolean(object.acquireCrown);
                    if (object.acquireAllCrowns != null)
                        message.acquireAllCrowns = Boolean(object.acquireAllCrowns);
                    if (object.expeditionResult != null) {
                        if (typeof object.expeditionResult !== "object")
                            throw TypeError(".wm5.protobuf.SaveGameResultRequest.GhostBattleResult.expeditionResult: object expected");
                        message.expeditionResult = $root.wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult.fromObject(object.expeditionResult);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a GhostBattleResult message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @static
                 * @param {wm5.protobuf.SaveGameResultRequest.GhostBattleResult} message GhostBattleResult
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GhostBattleResult.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.arrays || options.defaults) {
                        object.stampSheet = [];
                        object.rgProgress = [];
                        object.confirmedTransferredStampTargetCarIds = [];
                    }
                    if (options.defaults) {
                        object.result = 0;
                        object.opponentCarId = 0;
                        object.area = 0;
                        object.selectionMethod = options.enums === String ? "GHOST_CHALLENGE" : 1;
                        object.stampSheetCount = 0;
                        object.receiveStamp = false;
                        object.rgPlayCount = 0;
                        object.rgWinCount = 0;
                        object.maxiCoin = 0;
                        object.shopPoint = 0;
                        object.shopGrade = 0;
                        object.rgBlock = 0;
                        object.rgClearCount = 0;
                        object.competitionId = 0;
                        object.periodId = 0;
                        object.brakingPoint = 0;
                        object.usedMaxiGoldBoostItem = false;
                        object.acquireCrown = false;
                        object.acquireAllCrowns = false;
                        object.rgStamp = 0;
                        object.isMorning = false;
                        object.expeditionResult = null;
                    }
                    if (message.result != null && message.hasOwnProperty("result"))
                        object.result = message.result;
                    if (message.opponentCarId != null && message.hasOwnProperty("opponentCarId"))
                        object.opponentCarId = message.opponentCarId;
                    if (message.area != null && message.hasOwnProperty("area"))
                        object.area = message.area;
                    if (message.selectionMethod != null && message.hasOwnProperty("selectionMethod"))
                        object.selectionMethod = options.enums === String ? $root.wm5.protobuf.GhostSelectionMethod[message.selectionMethod] === undefined ? message.selectionMethod : $root.wm5.protobuf.GhostSelectionMethod[message.selectionMethod] : message.selectionMethod;
                    if (message.stampSheetCount != null && message.hasOwnProperty("stampSheetCount"))
                        object.stampSheetCount = message.stampSheetCount;
                    if (message.stampSheet && message.stampSheet.length) {
                        object.stampSheet = [];
                        for (let j = 0; j < message.stampSheet.length; ++j)
                            object.stampSheet[j] = message.stampSheet[j];
                    }
                    if (message.receiveStamp != null && message.hasOwnProperty("receiveStamp"))
                        object.receiveStamp = message.receiveStamp;
                    if (message.rgPlayCount != null && message.hasOwnProperty("rgPlayCount"))
                        object.rgPlayCount = message.rgPlayCount;
                    if (message.rgWinCount != null && message.hasOwnProperty("rgWinCount"))
                        object.rgWinCount = message.rgWinCount;
                    if (message.maxiCoin != null && message.hasOwnProperty("maxiCoin"))
                        object.maxiCoin = message.maxiCoin;
                    if (message.shopPoint != null && message.hasOwnProperty("shopPoint"))
                        object.shopPoint = message.shopPoint;
                    if (message.shopGrade != null && message.hasOwnProperty("shopGrade"))
                        object.shopGrade = message.shopGrade;
                    if (message.rgBlock != null && message.hasOwnProperty("rgBlock"))
                        object.rgBlock = message.rgBlock;
                    if (message.rgProgress && message.rgProgress.length) {
                        object.rgProgress = [];
                        for (let j = 0; j < message.rgProgress.length; ++j)
                            object.rgProgress[j] = message.rgProgress[j];
                    }
                    if (message.rgClearCount != null && message.hasOwnProperty("rgClearCount"))
                        object.rgClearCount = message.rgClearCount;
                    if (message.competitionId != null && message.hasOwnProperty("competitionId"))
                        object.competitionId = message.competitionId;
                    if (message.periodId != null && message.hasOwnProperty("periodId"))
                        object.periodId = message.periodId;
                    if (message.brakingPoint != null && message.hasOwnProperty("brakingPoint"))
                        object.brakingPoint = message.brakingPoint;
                    if (message.usedMaxiGoldBoostItem != null && message.hasOwnProperty("usedMaxiGoldBoostItem"))
                        object.usedMaxiGoldBoostItem = message.usedMaxiGoldBoostItem;
                    if (message.acquireCrown != null && message.hasOwnProperty("acquireCrown"))
                        object.acquireCrown = message.acquireCrown;
                    if (message.acquireAllCrowns != null && message.hasOwnProperty("acquireAllCrowns"))
                        object.acquireAllCrowns = message.acquireAllCrowns;
                    if (message.rgStamp != null && message.hasOwnProperty("rgStamp"))
                        object.rgStamp = message.rgStamp;
                    if (message.confirmedTransferredStampTargetCarIds && message.confirmedTransferredStampTargetCarIds.length) {
                        object.confirmedTransferredStampTargetCarIds = [];
                        for (let j = 0; j < message.confirmedTransferredStampTargetCarIds.length; ++j)
                            object.confirmedTransferredStampTargetCarIds[j] = message.confirmedTransferredStampTargetCarIds[j];
                    }
                    if (message.isMorning != null && message.hasOwnProperty("isMorning"))
                        object.isMorning = message.isMorning;
                    if (message.expeditionResult != null && message.hasOwnProperty("expeditionResult"))
                        object.expeditionResult = $root.wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult.toObject(message.expeditionResult, options);
                    return object;
                };

                /**
                 * Converts this GhostBattleResult to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GhostBattleResult.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for GhostBattleResult
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GhostBattleResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.SaveGameResultRequest.GhostBattleResult";
                };

                GhostBattleResult.GhostExpeditionResult = (function() {

                    /**
                     * Properties of a GhostExpeditionResult.
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                     * @interface IGhostExpeditionResult
                     * @property {number} ghostExpeditionId GhostExpeditionResult ghostExpeditionId
                     * @property {number|null} [sugorokuPoint] GhostExpeditionResult sugorokuPoint
                     * @property {number|null} [earnedScore] GhostExpeditionResult earnedScore
                     * @property {number|null} [score] GhostExpeditionResult score
                     * @property {number|null} [wantedId] GhostExpeditionResult wantedId
                     * @property {Array.<wm5.protobuf.IUserItem>|null} [earnedItems] GhostExpeditionResult earnedItems
                     * @property {boolean|null} [aftereventBonus] GhostExpeditionResult aftereventBonus
                     */

                    /**
                     * Constructs a new GhostExpeditionResult.
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult
                     * @classdesc Represents a GhostExpeditionResult.
                     * @implements IGhostExpeditionResult
                     * @constructor
                     * @param {wm5.protobuf.SaveGameResultRequest.GhostBattleResult.IGhostExpeditionResult=} [properties] Properties to set
                     */
                    function GhostExpeditionResult(properties) {
                        this.earnedItems = [];
                        if (properties)
                            for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * GhostExpeditionResult ghostExpeditionId.
                     * @member {number} ghostExpeditionId
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult
                     * @instance
                     */
                    GhostExpeditionResult.prototype.ghostExpeditionId = 0;

                    /**
                     * GhostExpeditionResult sugorokuPoint.
                     * @member {number} sugorokuPoint
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult
                     * @instance
                     */
                    GhostExpeditionResult.prototype.sugorokuPoint = 0;

                    /**
                     * GhostExpeditionResult earnedScore.
                     * @member {number} earnedScore
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult
                     * @instance
                     */
                    GhostExpeditionResult.prototype.earnedScore = 0;

                    /**
                     * GhostExpeditionResult score.
                     * @member {number} score
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult
                     * @instance
                     */
                    GhostExpeditionResult.prototype.score = 0;

                    /**
                     * GhostExpeditionResult wantedId.
                     * @member {number} wantedId
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult
                     * @instance
                     */
                    GhostExpeditionResult.prototype.wantedId = 0;

                    /**
                     * GhostExpeditionResult earnedItems.
                     * @member {Array.<wm5.protobuf.IUserItem>} earnedItems
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult
                     * @instance
                     */
                    GhostExpeditionResult.prototype.earnedItems = $util.emptyArray;

                    /**
                     * GhostExpeditionResult aftereventBonus.
                     * @member {boolean} aftereventBonus
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult
                     * @instance
                     */
                    GhostExpeditionResult.prototype.aftereventBonus = false;

                    /**
                     * Creates a new GhostExpeditionResult instance using the specified properties.
                     * @function create
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult
                     * @static
                     * @param {wm5.protobuf.SaveGameResultRequest.GhostBattleResult.IGhostExpeditionResult=} [properties] Properties to set
                     * @returns {wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult} GhostExpeditionResult instance
                     */
                    GhostExpeditionResult.create = function create(properties) {
                        return new GhostExpeditionResult(properties);
                    };

                    /**
                     * Encodes the specified GhostExpeditionResult message. Does not implicitly {@link wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult.verify|verify} messages.
                     * @function encode
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult
                     * @static
                     * @param {wm5.protobuf.SaveGameResultRequest.GhostBattleResult.IGhostExpeditionResult} message GhostExpeditionResult message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GhostExpeditionResult.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.ghostExpeditionId);
                        if (message.sugorokuPoint != null && Object.hasOwnProperty.call(message, "sugorokuPoint"))
                            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.sugorokuPoint);
                        if (message.score != null && Object.hasOwnProperty.call(message, "score"))
                            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.score);
                        if (message.wantedId != null && Object.hasOwnProperty.call(message, "wantedId"))
                            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.wantedId);
                        if (message.earnedItems != null && message.earnedItems.length)
                            for (let i = 0; i < message.earnedItems.length; ++i)
                                $root.wm5.protobuf.UserItem.encode(message.earnedItems[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.aftereventBonus != null && Object.hasOwnProperty.call(message, "aftereventBonus"))
                            writer.uint32(/* id 6, wireType 0 =*/48).bool(message.aftereventBonus);
                        if (message.earnedScore != null && Object.hasOwnProperty.call(message, "earnedScore"))
                            writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.earnedScore);
                        return writer;
                    };

                    /**
                     * Encodes the specified GhostExpeditionResult message, length delimited. Does not implicitly {@link wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult
                     * @static
                     * @param {wm5.protobuf.SaveGameResultRequest.GhostBattleResult.IGhostExpeditionResult} message GhostExpeditionResult message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GhostExpeditionResult.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a GhostExpeditionResult message from the specified reader or buffer.
                     * @function decode
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult} GhostExpeditionResult
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GhostExpeditionResult.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult();
                        while (reader.pos < end) {
                            let tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.ghostExpeditionId = reader.uint32();
                                    break;
                                }
                            case 2: {
                                    message.sugorokuPoint = reader.uint32();
                                    break;
                                }
                            case 7: {
                                    message.earnedScore = reader.uint32();
                                    break;
                                }
                            case 3: {
                                    message.score = reader.uint32();
                                    break;
                                }
                            case 4: {
                                    message.wantedId = reader.uint32();
                                    break;
                                }
                            case 5: {
                                    if (!(message.earnedItems && message.earnedItems.length))
                                        message.earnedItems = [];
                                    message.earnedItems.push($root.wm5.protobuf.UserItem.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 6: {
                                    message.aftereventBonus = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("ghostExpeditionId"))
                            throw $util.ProtocolError("missing required 'ghostExpeditionId'", { instance: message });
                        return message;
                    };

                    /**
                     * Decodes a GhostExpeditionResult message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult} GhostExpeditionResult
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GhostExpeditionResult.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a GhostExpeditionResult message.
                     * @function verify
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GhostExpeditionResult.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isInteger(message.ghostExpeditionId))
                            return "ghostExpeditionId: integer expected";
                        if (message.sugorokuPoint != null && message.hasOwnProperty("sugorokuPoint"))
                            if (!$util.isInteger(message.sugorokuPoint))
                                return "sugorokuPoint: integer expected";
                        if (message.earnedScore != null && message.hasOwnProperty("earnedScore"))
                            if (!$util.isInteger(message.earnedScore))
                                return "earnedScore: integer expected";
                        if (message.score != null && message.hasOwnProperty("score"))
                            if (!$util.isInteger(message.score))
                                return "score: integer expected";
                        if (message.wantedId != null && message.hasOwnProperty("wantedId"))
                            if (!$util.isInteger(message.wantedId))
                                return "wantedId: integer expected";
                        if (message.earnedItems != null && message.hasOwnProperty("earnedItems")) {
                            if (!Array.isArray(message.earnedItems))
                                return "earnedItems: array expected";
                            for (let i = 0; i < message.earnedItems.length; ++i) {
                                let error = $root.wm5.protobuf.UserItem.verify(message.earnedItems[i]);
                                if (error)
                                    return "earnedItems." + error;
                            }
                        }
                        if (message.aftereventBonus != null && message.hasOwnProperty("aftereventBonus"))
                            if (typeof message.aftereventBonus !== "boolean")
                                return "aftereventBonus: boolean expected";
                        return null;
                    };

                    /**
                     * Creates a GhostExpeditionResult message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult} GhostExpeditionResult
                     */
                    GhostExpeditionResult.fromObject = function fromObject(object) {
                        if (object instanceof $root.wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult)
                            return object;
                        let message = new $root.wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult();
                        if (object.ghostExpeditionId != null)
                            message.ghostExpeditionId = object.ghostExpeditionId >>> 0;
                        if (object.sugorokuPoint != null)
                            message.sugorokuPoint = object.sugorokuPoint >>> 0;
                        if (object.earnedScore != null)
                            message.earnedScore = object.earnedScore >>> 0;
                        if (object.score != null)
                            message.score = object.score >>> 0;
                        if (object.wantedId != null)
                            message.wantedId = object.wantedId >>> 0;
                        if (object.earnedItems) {
                            if (!Array.isArray(object.earnedItems))
                                throw TypeError(".wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult.earnedItems: array expected");
                            message.earnedItems = [];
                            for (let i = 0; i < object.earnedItems.length; ++i) {
                                if (typeof object.earnedItems[i] !== "object")
                                    throw TypeError(".wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult.earnedItems: object expected");
                                message.earnedItems[i] = $root.wm5.protobuf.UserItem.fromObject(object.earnedItems[i]);
                            }
                        }
                        if (object.aftereventBonus != null)
                            message.aftereventBonus = Boolean(object.aftereventBonus);
                        return message;
                    };

                    /**
                     * Creates a plain object from a GhostExpeditionResult message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult
                     * @static
                     * @param {wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult} message GhostExpeditionResult
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GhostExpeditionResult.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        let object = {};
                        if (options.arrays || options.defaults)
                            object.earnedItems = [];
                        if (options.defaults) {
                            object.ghostExpeditionId = 0;
                            object.sugorokuPoint = 0;
                            object.score = 0;
                            object.wantedId = 0;
                            object.aftereventBonus = false;
                            object.earnedScore = 0;
                        }
                        if (message.ghostExpeditionId != null && message.hasOwnProperty("ghostExpeditionId"))
                            object.ghostExpeditionId = message.ghostExpeditionId;
                        if (message.sugorokuPoint != null && message.hasOwnProperty("sugorokuPoint"))
                            object.sugorokuPoint = message.sugorokuPoint;
                        if (message.score != null && message.hasOwnProperty("score"))
                            object.score = message.score;
                        if (message.wantedId != null && message.hasOwnProperty("wantedId"))
                            object.wantedId = message.wantedId;
                        if (message.earnedItems && message.earnedItems.length) {
                            object.earnedItems = [];
                            for (let j = 0; j < message.earnedItems.length; ++j)
                                object.earnedItems[j] = $root.wm5.protobuf.UserItem.toObject(message.earnedItems[j], options);
                        }
                        if (message.aftereventBonus != null && message.hasOwnProperty("aftereventBonus"))
                            object.aftereventBonus = message.aftereventBonus;
                        if (message.earnedScore != null && message.hasOwnProperty("earnedScore"))
                            object.earnedScore = message.earnedScore;
                        return object;
                    };

                    /**
                     * Converts this GhostExpeditionResult to JSON.
                     * @function toJSON
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GhostExpeditionResult.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    /**
                     * Gets the default type url for GhostExpeditionResult
                     * @function getTypeUrl
                     * @memberof wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GhostExpeditionResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/wm5.protobuf.SaveGameResultRequest.GhostBattleResult.GhostExpeditionResult";
                    };

                    return GhostExpeditionResult;
                })();

                return GhostBattleResult;
            })();

            return SaveGameResultRequest;
        })();

        protobuf.SaveGameResultResponse = (function() {

            /**
             * Properties of a SaveGameResultResponse.
             * @memberof wm5.protobuf
             * @interface ISaveGameResultResponse
             * @property {wm5.protobuf.ErrorCode} error SaveGameResultResponse error
             * @property {number|Long|null} [ghostSessionId] SaveGameResultResponse ghostSessionId
             */

            /**
             * Constructs a new SaveGameResultResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a SaveGameResultResponse.
             * @implements ISaveGameResultResponse
             * @constructor
             * @param {wm5.protobuf.ISaveGameResultResponse=} [properties] Properties to set
             */
            function SaveGameResultResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SaveGameResultResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.SaveGameResultResponse
             * @instance
             */
            SaveGameResultResponse.prototype.error = 0;

            /**
             * SaveGameResultResponse ghostSessionId.
             * @member {number|Long} ghostSessionId
             * @memberof wm5.protobuf.SaveGameResultResponse
             * @instance
             */
            SaveGameResultResponse.prototype.ghostSessionId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

            /**
             * Creates a new SaveGameResultResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SaveGameResultResponse
             * @static
             * @param {wm5.protobuf.ISaveGameResultResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.SaveGameResultResponse} SaveGameResultResponse instance
             */
            SaveGameResultResponse.create = function create(properties) {
                return new SaveGameResultResponse(properties);
            };

            /**
             * Encodes the specified SaveGameResultResponse message. Does not implicitly {@link wm5.protobuf.SaveGameResultResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SaveGameResultResponse
             * @static
             * @param {wm5.protobuf.ISaveGameResultResponse} message SaveGameResultResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveGameResultResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.ghostSessionId != null && Object.hasOwnProperty.call(message, "ghostSessionId"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.ghostSessionId);
                return writer;
            };

            /**
             * Encodes the specified SaveGameResultResponse message, length delimited. Does not implicitly {@link wm5.protobuf.SaveGameResultResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SaveGameResultResponse
             * @static
             * @param {wm5.protobuf.ISaveGameResultResponse} message SaveGameResultResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveGameResultResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SaveGameResultResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SaveGameResultResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SaveGameResultResponse} SaveGameResultResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveGameResultResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveGameResultResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.ghostSessionId = reader.uint64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a SaveGameResultResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SaveGameResultResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SaveGameResultResponse} SaveGameResultResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveGameResultResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SaveGameResultResponse message.
             * @function verify
             * @memberof wm5.protobuf.SaveGameResultResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SaveGameResultResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.ghostSessionId != null && message.hasOwnProperty("ghostSessionId"))
                    if (!$util.isInteger(message.ghostSessionId) && !(message.ghostSessionId && $util.isInteger(message.ghostSessionId.low) && $util.isInteger(message.ghostSessionId.high)))
                        return "ghostSessionId: integer|Long expected";
                return null;
            };

            /**
             * Creates a SaveGameResultResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SaveGameResultResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SaveGameResultResponse} SaveGameResultResponse
             */
            SaveGameResultResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SaveGameResultResponse)
                    return object;
                let message = new $root.wm5.protobuf.SaveGameResultResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.ghostSessionId != null)
                    if ($util.Long)
                        (message.ghostSessionId = $util.Long.fromValue(object.ghostSessionId)).unsigned = true;
                    else if (typeof object.ghostSessionId === "string")
                        message.ghostSessionId = parseInt(object.ghostSessionId, 10);
                    else if (typeof object.ghostSessionId === "number")
                        message.ghostSessionId = object.ghostSessionId;
                    else if (typeof object.ghostSessionId === "object")
                        message.ghostSessionId = new $util.LongBits(object.ghostSessionId.low >>> 0, object.ghostSessionId.high >>> 0).toNumber(true);
                return message;
            };

            /**
             * Creates a plain object from a SaveGameResultResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SaveGameResultResponse
             * @static
             * @param {wm5.protobuf.SaveGameResultResponse} message SaveGameResultResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SaveGameResultResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, true);
                        object.ghostSessionId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.ghostSessionId = options.longs === String ? "0" : 0;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.ghostSessionId != null && message.hasOwnProperty("ghostSessionId"))
                    if (typeof message.ghostSessionId === "number")
                        object.ghostSessionId = options.longs === String ? String(message.ghostSessionId) : message.ghostSessionId;
                    else
                        object.ghostSessionId = options.longs === String ? $util.Long.prototype.toString.call(message.ghostSessionId) : options.longs === Number ? new $util.LongBits(message.ghostSessionId.low >>> 0, message.ghostSessionId.high >>> 0).toNumber(true) : message.ghostSessionId;
                return object;
            };

            /**
             * Converts this SaveGameResultResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SaveGameResultResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SaveGameResultResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SaveGameResultResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.SaveGameResultResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SaveGameResultResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SaveGameResultResponse";
            };

            return SaveGameResultResponse;
        })();

        protobuf.SaveChargeRequest = (function() {

            /**
             * Properties of a SaveChargeRequest.
             * @memberof wm5.protobuf
             * @interface ISaveChargeRequest
             * @property {Array.<wm5.protobuf.SaveChargeRequest.IChargeLog>|null} [chargeLogs] SaveChargeRequest chargeLogs
             */

            /**
             * Constructs a new SaveChargeRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a SaveChargeRequest.
             * @implements ISaveChargeRequest
             * @constructor
             * @param {wm5.protobuf.ISaveChargeRequest=} [properties] Properties to set
             */
            function SaveChargeRequest(properties) {
                this.chargeLogs = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SaveChargeRequest chargeLogs.
             * @member {Array.<wm5.protobuf.SaveChargeRequest.IChargeLog>} chargeLogs
             * @memberof wm5.protobuf.SaveChargeRequest
             * @instance
             */
            SaveChargeRequest.prototype.chargeLogs = $util.emptyArray;

            /**
             * Creates a new SaveChargeRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SaveChargeRequest
             * @static
             * @param {wm5.protobuf.ISaveChargeRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.SaveChargeRequest} SaveChargeRequest instance
             */
            SaveChargeRequest.create = function create(properties) {
                return new SaveChargeRequest(properties);
            };

            /**
             * Encodes the specified SaveChargeRequest message. Does not implicitly {@link wm5.protobuf.SaveChargeRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SaveChargeRequest
             * @static
             * @param {wm5.protobuf.ISaveChargeRequest} message SaveChargeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveChargeRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.chargeLogs != null && message.chargeLogs.length)
                    for (let i = 0; i < message.chargeLogs.length; ++i)
                        $root.wm5.protobuf.SaveChargeRequest.ChargeLog.encode(message.chargeLogs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified SaveChargeRequest message, length delimited. Does not implicitly {@link wm5.protobuf.SaveChargeRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SaveChargeRequest
             * @static
             * @param {wm5.protobuf.ISaveChargeRequest} message SaveChargeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveChargeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SaveChargeRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SaveChargeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SaveChargeRequest} SaveChargeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveChargeRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveChargeRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.chargeLogs && message.chargeLogs.length))
                                message.chargeLogs = [];
                            message.chargeLogs.push($root.wm5.protobuf.SaveChargeRequest.ChargeLog.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a SaveChargeRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SaveChargeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SaveChargeRequest} SaveChargeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveChargeRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SaveChargeRequest message.
             * @function verify
             * @memberof wm5.protobuf.SaveChargeRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SaveChargeRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.chargeLogs != null && message.hasOwnProperty("chargeLogs")) {
                    if (!Array.isArray(message.chargeLogs))
                        return "chargeLogs: array expected";
                    for (let i = 0; i < message.chargeLogs.length; ++i) {
                        let error = $root.wm5.protobuf.SaveChargeRequest.ChargeLog.verify(message.chargeLogs[i]);
                        if (error)
                            return "chargeLogs." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a SaveChargeRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SaveChargeRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SaveChargeRequest} SaveChargeRequest
             */
            SaveChargeRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SaveChargeRequest)
                    return object;
                let message = new $root.wm5.protobuf.SaveChargeRequest();
                if (object.chargeLogs) {
                    if (!Array.isArray(object.chargeLogs))
                        throw TypeError(".wm5.protobuf.SaveChargeRequest.chargeLogs: array expected");
                    message.chargeLogs = [];
                    for (let i = 0; i < object.chargeLogs.length; ++i) {
                        if (typeof object.chargeLogs[i] !== "object")
                            throw TypeError(".wm5.protobuf.SaveChargeRequest.chargeLogs: object expected");
                        message.chargeLogs[i] = $root.wm5.protobuf.SaveChargeRequest.ChargeLog.fromObject(object.chargeLogs[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a SaveChargeRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SaveChargeRequest
             * @static
             * @param {wm5.protobuf.SaveChargeRequest} message SaveChargeRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SaveChargeRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.chargeLogs = [];
                if (message.chargeLogs && message.chargeLogs.length) {
                    object.chargeLogs = [];
                    for (let j = 0; j < message.chargeLogs.length; ++j)
                        object.chargeLogs[j] = $root.wm5.protobuf.SaveChargeRequest.ChargeLog.toObject(message.chargeLogs[j], options);
                }
                return object;
            };

            /**
             * Converts this SaveChargeRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SaveChargeRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SaveChargeRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SaveChargeRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.SaveChargeRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SaveChargeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SaveChargeRequest";
            };

            SaveChargeRequest.ChargeLog = (function() {

                /**
                 * Properties of a ChargeLog.
                 * @memberof wm5.protobuf.SaveChargeRequest
                 * @interface IChargeLog
                 * @property {number} datetime ChargeLog datetime
                 * @property {string} pcbSerial ChargeLog pcbSerial
                 * @property {string} placeId ChargeLog placeId
                 * @property {number|null} [userId] ChargeLog userId
                 */

                /**
                 * Constructs a new ChargeLog.
                 * @memberof wm5.protobuf.SaveChargeRequest
                 * @classdesc Represents a ChargeLog.
                 * @implements IChargeLog
                 * @constructor
                 * @param {wm5.protobuf.SaveChargeRequest.IChargeLog=} [properties] Properties to set
                 */
                function ChargeLog(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * ChargeLog datetime.
                 * @member {number} datetime
                 * @memberof wm5.protobuf.SaveChargeRequest.ChargeLog
                 * @instance
                 */
                ChargeLog.prototype.datetime = 0;

                /**
                 * ChargeLog pcbSerial.
                 * @member {string} pcbSerial
                 * @memberof wm5.protobuf.SaveChargeRequest.ChargeLog
                 * @instance
                 */
                ChargeLog.prototype.pcbSerial = "";

                /**
                 * ChargeLog placeId.
                 * @member {string} placeId
                 * @memberof wm5.protobuf.SaveChargeRequest.ChargeLog
                 * @instance
                 */
                ChargeLog.prototype.placeId = "";

                /**
                 * ChargeLog userId.
                 * @member {number} userId
                 * @memberof wm5.protobuf.SaveChargeRequest.ChargeLog
                 * @instance
                 */
                ChargeLog.prototype.userId = 0;

                /**
                 * Creates a new ChargeLog instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.SaveChargeRequest.ChargeLog
                 * @static
                 * @param {wm5.protobuf.SaveChargeRequest.IChargeLog=} [properties] Properties to set
                 * @returns {wm5.protobuf.SaveChargeRequest.ChargeLog} ChargeLog instance
                 */
                ChargeLog.create = function create(properties) {
                    return new ChargeLog(properties);
                };

                /**
                 * Encodes the specified ChargeLog message. Does not implicitly {@link wm5.protobuf.SaveChargeRequest.ChargeLog.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.SaveChargeRequest.ChargeLog
                 * @static
                 * @param {wm5.protobuf.SaveChargeRequest.IChargeLog} message ChargeLog message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ChargeLog.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.datetime);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.pcbSerial);
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.placeId);
                    if (message.userId != null && Object.hasOwnProperty.call(message, "userId"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.userId);
                    return writer;
                };

                /**
                 * Encodes the specified ChargeLog message, length delimited. Does not implicitly {@link wm5.protobuf.SaveChargeRequest.ChargeLog.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.SaveChargeRequest.ChargeLog
                 * @static
                 * @param {wm5.protobuf.SaveChargeRequest.IChargeLog} message ChargeLog message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ChargeLog.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a ChargeLog message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.SaveChargeRequest.ChargeLog
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.SaveChargeRequest.ChargeLog} ChargeLog
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ChargeLog.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveChargeRequest.ChargeLog();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.datetime = reader.uint32();
                                break;
                            }
                        case 2: {
                                message.pcbSerial = reader.string();
                                break;
                            }
                        case 3: {
                                message.placeId = reader.string();
                                break;
                            }
                        case 4: {
                                message.userId = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("datetime"))
                        throw $util.ProtocolError("missing required 'datetime'", { instance: message });
                    if (!message.hasOwnProperty("pcbSerial"))
                        throw $util.ProtocolError("missing required 'pcbSerial'", { instance: message });
                    if (!message.hasOwnProperty("placeId"))
                        throw $util.ProtocolError("missing required 'placeId'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a ChargeLog message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.SaveChargeRequest.ChargeLog
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.SaveChargeRequest.ChargeLog} ChargeLog
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ChargeLog.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a ChargeLog message.
                 * @function verify
                 * @memberof wm5.protobuf.SaveChargeRequest.ChargeLog
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ChargeLog.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.datetime))
                        return "datetime: integer expected";
                    if (!$util.isString(message.pcbSerial))
                        return "pcbSerial: string expected";
                    if (!$util.isString(message.placeId))
                        return "placeId: string expected";
                    if (message.userId != null && message.hasOwnProperty("userId"))
                        if (!$util.isInteger(message.userId))
                            return "userId: integer expected";
                    return null;
                };

                /**
                 * Creates a ChargeLog message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.SaveChargeRequest.ChargeLog
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.SaveChargeRequest.ChargeLog} ChargeLog
                 */
                ChargeLog.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.SaveChargeRequest.ChargeLog)
                        return object;
                    let message = new $root.wm5.protobuf.SaveChargeRequest.ChargeLog();
                    if (object.datetime != null)
                        message.datetime = object.datetime >>> 0;
                    if (object.pcbSerial != null)
                        message.pcbSerial = String(object.pcbSerial);
                    if (object.placeId != null)
                        message.placeId = String(object.placeId);
                    if (object.userId != null)
                        message.userId = object.userId >>> 0;
                    return message;
                };

                /**
                 * Creates a plain object from a ChargeLog message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.SaveChargeRequest.ChargeLog
                 * @static
                 * @param {wm5.protobuf.SaveChargeRequest.ChargeLog} message ChargeLog
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ChargeLog.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.datetime = 0;
                        object.pcbSerial = "";
                        object.placeId = "";
                        object.userId = 0;
                    }
                    if (message.datetime != null && message.hasOwnProperty("datetime"))
                        object.datetime = message.datetime;
                    if (message.pcbSerial != null && message.hasOwnProperty("pcbSerial"))
                        object.pcbSerial = message.pcbSerial;
                    if (message.placeId != null && message.hasOwnProperty("placeId"))
                        object.placeId = message.placeId;
                    if (message.userId != null && message.hasOwnProperty("userId"))
                        object.userId = message.userId;
                    return object;
                };

                /**
                 * Converts this ChargeLog to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.SaveChargeRequest.ChargeLog
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ChargeLog.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for ChargeLog
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.SaveChargeRequest.ChargeLog
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ChargeLog.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.SaveChargeRequest.ChargeLog";
                };

                return ChargeLog;
            })();

            return SaveChargeRequest;
        })();

        protobuf.SaveChargeResponse = (function() {

            /**
             * Properties of a SaveChargeResponse.
             * @memberof wm5.protobuf
             * @interface ISaveChargeResponse
             * @property {wm5.protobuf.ErrorCode} error SaveChargeResponse error
             */

            /**
             * Constructs a new SaveChargeResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a SaveChargeResponse.
             * @implements ISaveChargeResponse
             * @constructor
             * @param {wm5.protobuf.ISaveChargeResponse=} [properties] Properties to set
             */
            function SaveChargeResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SaveChargeResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.SaveChargeResponse
             * @instance
             */
            SaveChargeResponse.prototype.error = 0;

            /**
             * Creates a new SaveChargeResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SaveChargeResponse
             * @static
             * @param {wm5.protobuf.ISaveChargeResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.SaveChargeResponse} SaveChargeResponse instance
             */
            SaveChargeResponse.create = function create(properties) {
                return new SaveChargeResponse(properties);
            };

            /**
             * Encodes the specified SaveChargeResponse message. Does not implicitly {@link wm5.protobuf.SaveChargeResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SaveChargeResponse
             * @static
             * @param {wm5.protobuf.ISaveChargeResponse} message SaveChargeResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveChargeResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified SaveChargeResponse message, length delimited. Does not implicitly {@link wm5.protobuf.SaveChargeResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SaveChargeResponse
             * @static
             * @param {wm5.protobuf.ISaveChargeResponse} message SaveChargeResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveChargeResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SaveChargeResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SaveChargeResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SaveChargeResponse} SaveChargeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveChargeResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveChargeResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a SaveChargeResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SaveChargeResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SaveChargeResponse} SaveChargeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveChargeResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SaveChargeResponse message.
             * @function verify
             * @memberof wm5.protobuf.SaveChargeResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SaveChargeResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a SaveChargeResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SaveChargeResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SaveChargeResponse} SaveChargeResponse
             */
            SaveChargeResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SaveChargeResponse)
                    return object;
                let message = new $root.wm5.protobuf.SaveChargeResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a SaveChargeResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SaveChargeResponse
             * @static
             * @param {wm5.protobuf.SaveChargeResponse} message SaveChargeResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SaveChargeResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this SaveChargeResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SaveChargeResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SaveChargeResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SaveChargeResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.SaveChargeResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SaveChargeResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SaveChargeResponse";
            };

            return SaveChargeResponse;
        })();

        protobuf.LoadGhostBattleInfoRequest = (function() {

            /**
             * Properties of a LoadGhostBattleInfoRequest.
             * @memberof wm5.protobuf
             * @interface ILoadGhostBattleInfoRequest
             * @property {number} carId LoadGhostBattleInfoRequest carId
             */

            /**
             * Constructs a new LoadGhostBattleInfoRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadGhostBattleInfoRequest.
             * @implements ILoadGhostBattleInfoRequest
             * @constructor
             * @param {wm5.protobuf.ILoadGhostBattleInfoRequest=} [properties] Properties to set
             */
            function LoadGhostBattleInfoRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadGhostBattleInfoRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.LoadGhostBattleInfoRequest
             * @instance
             */
            LoadGhostBattleInfoRequest.prototype.carId = 0;

            /**
             * Creates a new LoadGhostBattleInfoRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadGhostBattleInfoRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostBattleInfoRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadGhostBattleInfoRequest} LoadGhostBattleInfoRequest instance
             */
            LoadGhostBattleInfoRequest.create = function create(properties) {
                return new LoadGhostBattleInfoRequest(properties);
            };

            /**
             * Encodes the specified LoadGhostBattleInfoRequest message. Does not implicitly {@link wm5.protobuf.LoadGhostBattleInfoRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadGhostBattleInfoRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostBattleInfoRequest} message LoadGhostBattleInfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostBattleInfoRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                return writer;
            };

            /**
             * Encodes the specified LoadGhostBattleInfoRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGhostBattleInfoRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadGhostBattleInfoRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostBattleInfoRequest} message LoadGhostBattleInfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostBattleInfoRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadGhostBattleInfoRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadGhostBattleInfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadGhostBattleInfoRequest} LoadGhostBattleInfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostBattleInfoRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGhostBattleInfoRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadGhostBattleInfoRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadGhostBattleInfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadGhostBattleInfoRequest} LoadGhostBattleInfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostBattleInfoRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadGhostBattleInfoRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadGhostBattleInfoRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadGhostBattleInfoRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                return null;
            };

            /**
             * Creates a LoadGhostBattleInfoRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadGhostBattleInfoRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadGhostBattleInfoRequest} LoadGhostBattleInfoRequest
             */
            LoadGhostBattleInfoRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadGhostBattleInfoRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadGhostBattleInfoRequest();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadGhostBattleInfoRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadGhostBattleInfoRequest
             * @static
             * @param {wm5.protobuf.LoadGhostBattleInfoRequest} message LoadGhostBattleInfoRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadGhostBattleInfoRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.carId = 0;
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                return object;
            };

            /**
             * Converts this LoadGhostBattleInfoRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadGhostBattleInfoRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadGhostBattleInfoRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadGhostBattleInfoRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadGhostBattleInfoRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadGhostBattleInfoRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadGhostBattleInfoRequest";
            };

            return LoadGhostBattleInfoRequest;
        })();

        protobuf.LoadGhostBattleInfoResponse = (function() {

            /**
             * Properties of a LoadGhostBattleInfoResponse.
             * @memberof wm5.protobuf
             * @interface ILoadGhostBattleInfoResponse
             * @property {wm5.protobuf.ErrorCode} error LoadGhostBattleInfoResponse error
             * @property {Array.<wm5.protobuf.IFriendCar>|null} [friendCars] LoadGhostBattleInfoResponse friendCars
             * @property {Array.<wm5.protobuf.IChallengerCar>|null} [challengers] LoadGhostBattleInfoResponse challengers
             * @property {Array.<wm5.protobuf.IStampTargetCar>|null} [stampTargetCars] LoadGhostBattleInfoResponse stampTargetCars
             * @property {Array.<wm5.protobuf.IPreviousVersionStampTargetCar>|null} [previousVersionStampTargetCars] LoadGhostBattleInfoResponse previousVersionStampTargetCars
             * @property {Array.<wm5.protobuf.ICar>|null} [history] LoadGhostBattleInfoResponse history
             * @property {Array.<wm5.protobuf.LoadGhostBattleInfoResponse.IWeakenedCar>|null} [weakenedCars] LoadGhostBattleInfoResponse weakenedCars
             * @property {wm5.protobuf.IGhostCar|null} [defaultOpponent] LoadGhostBattleInfoResponse defaultOpponent
             * @property {number} stampSheetCount LoadGhostBattleInfoResponse stampSheetCount
             * @property {Array.<number>|null} [stampSheet] LoadGhostBattleInfoResponse stampSheet
             * @property {Array.<number>|null} [stampReturnStats] LoadGhostBattleInfoResponse stampReturnStats
             * @property {wm5.protobuf.IGhostCar|null} [specialGhost] LoadGhostBattleInfoResponse specialGhost
             */

            /**
             * Constructs a new LoadGhostBattleInfoResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadGhostBattleInfoResponse.
             * @implements ILoadGhostBattleInfoResponse
             * @constructor
             * @param {wm5.protobuf.ILoadGhostBattleInfoResponse=} [properties] Properties to set
             */
            function LoadGhostBattleInfoResponse(properties) {
                this.friendCars = [];
                this.challengers = [];
                this.stampTargetCars = [];
                this.previousVersionStampTargetCars = [];
                this.history = [];
                this.weakenedCars = [];
                this.stampSheet = [];
                this.stampReturnStats = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadGhostBattleInfoResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @instance
             */
            LoadGhostBattleInfoResponse.prototype.error = 0;

            /**
             * LoadGhostBattleInfoResponse friendCars.
             * @member {Array.<wm5.protobuf.IFriendCar>} friendCars
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @instance
             */
            LoadGhostBattleInfoResponse.prototype.friendCars = $util.emptyArray;

            /**
             * LoadGhostBattleInfoResponse challengers.
             * @member {Array.<wm5.protobuf.IChallengerCar>} challengers
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @instance
             */
            LoadGhostBattleInfoResponse.prototype.challengers = $util.emptyArray;

            /**
             * LoadGhostBattleInfoResponse stampTargetCars.
             * @member {Array.<wm5.protobuf.IStampTargetCar>} stampTargetCars
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @instance
             */
            LoadGhostBattleInfoResponse.prototype.stampTargetCars = $util.emptyArray;

            /**
             * LoadGhostBattleInfoResponse previousVersionStampTargetCars.
             * @member {Array.<wm5.protobuf.IPreviousVersionStampTargetCar>} previousVersionStampTargetCars
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @instance
             */
            LoadGhostBattleInfoResponse.prototype.previousVersionStampTargetCars = $util.emptyArray;

            /**
             * LoadGhostBattleInfoResponse history.
             * @member {Array.<wm5.protobuf.ICar>} history
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @instance
             */
            LoadGhostBattleInfoResponse.prototype.history = $util.emptyArray;

            /**
             * LoadGhostBattleInfoResponse weakenedCars.
             * @member {Array.<wm5.protobuf.LoadGhostBattleInfoResponse.IWeakenedCar>} weakenedCars
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @instance
             */
            LoadGhostBattleInfoResponse.prototype.weakenedCars = $util.emptyArray;

            /**
             * LoadGhostBattleInfoResponse defaultOpponent.
             * @member {wm5.protobuf.IGhostCar|null|undefined} defaultOpponent
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @instance
             */
            LoadGhostBattleInfoResponse.prototype.defaultOpponent = null;

            /**
             * LoadGhostBattleInfoResponse stampSheetCount.
             * @member {number} stampSheetCount
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @instance
             */
            LoadGhostBattleInfoResponse.prototype.stampSheetCount = 0;

            /**
             * LoadGhostBattleInfoResponse stampSheet.
             * @member {Array.<number>} stampSheet
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @instance
             */
            LoadGhostBattleInfoResponse.prototype.stampSheet = $util.emptyArray;

            /**
             * LoadGhostBattleInfoResponse stampReturnStats.
             * @member {Array.<number>} stampReturnStats
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @instance
             */
            LoadGhostBattleInfoResponse.prototype.stampReturnStats = $util.emptyArray;

            /**
             * LoadGhostBattleInfoResponse specialGhost.
             * @member {wm5.protobuf.IGhostCar|null|undefined} specialGhost
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @instance
             */
            LoadGhostBattleInfoResponse.prototype.specialGhost = null;

            /**
             * Creates a new LoadGhostBattleInfoResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostBattleInfoResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadGhostBattleInfoResponse} LoadGhostBattleInfoResponse instance
             */
            LoadGhostBattleInfoResponse.create = function create(properties) {
                return new LoadGhostBattleInfoResponse(properties);
            };

            /**
             * Encodes the specified LoadGhostBattleInfoResponse message. Does not implicitly {@link wm5.protobuf.LoadGhostBattleInfoResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostBattleInfoResponse} message LoadGhostBattleInfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostBattleInfoResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.friendCars != null && message.friendCars.length)
                    for (let i = 0; i < message.friendCars.length; ++i)
                        $root.wm5.protobuf.FriendCar.encode(message.friendCars[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.challengers != null && message.challengers.length)
                    for (let i = 0; i < message.challengers.length; ++i)
                        $root.wm5.protobuf.ChallengerCar.encode(message.challengers[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.stampTargetCars != null && message.stampTargetCars.length)
                    for (let i = 0; i < message.stampTargetCars.length; ++i)
                        $root.wm5.protobuf.StampTargetCar.encode(message.stampTargetCars[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                if (message.history != null && message.history.length)
                    for (let i = 0; i < message.history.length; ++i)
                        $root.wm5.protobuf.Car.encode(message.history[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                if (message.defaultOpponent != null && Object.hasOwnProperty.call(message, "defaultOpponent"))
                    $root.wm5.protobuf.GhostCar.encode(message.defaultOpponent, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.stampSheetCount);
                if (message.stampSheet != null && message.stampSheet.length)
                    for (let i = 0; i < message.stampSheet.length; ++i)
                        writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.stampSheet[i]);
                if (message.stampReturnStats != null && message.stampReturnStats.length)
                    for (let i = 0; i < message.stampReturnStats.length; ++i)
                        writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.stampReturnStats[i]);
                if (message.weakenedCars != null && message.weakenedCars.length)
                    for (let i = 0; i < message.weakenedCars.length; ++i)
                        $root.wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar.encode(message.weakenedCars[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                if (message.specialGhost != null && Object.hasOwnProperty.call(message, "specialGhost"))
                    $root.wm5.protobuf.GhostCar.encode(message.specialGhost, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                if (message.previousVersionStampTargetCars != null && message.previousVersionStampTargetCars.length)
                    for (let i = 0; i < message.previousVersionStampTargetCars.length; ++i)
                        $root.wm5.protobuf.PreviousVersionStampTargetCar.encode(message.previousVersionStampTargetCars[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified LoadGhostBattleInfoResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGhostBattleInfoResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostBattleInfoResponse} message LoadGhostBattleInfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostBattleInfoResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadGhostBattleInfoResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadGhostBattleInfoResponse} LoadGhostBattleInfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostBattleInfoResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGhostBattleInfoResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            if (!(message.friendCars && message.friendCars.length))
                                message.friendCars = [];
                            message.friendCars.push($root.wm5.protobuf.FriendCar.decode(reader, reader.uint32()));
                            break;
                        }
                    case 3: {
                            if (!(message.challengers && message.challengers.length))
                                message.challengers = [];
                            message.challengers.push($root.wm5.protobuf.ChallengerCar.decode(reader, reader.uint32()));
                            break;
                        }
                    case 4: {
                            if (!(message.stampTargetCars && message.stampTargetCars.length))
                                message.stampTargetCars = [];
                            message.stampTargetCars.push($root.wm5.protobuf.StampTargetCar.decode(reader, reader.uint32()));
                            break;
                        }
                    case 12: {
                            if (!(message.previousVersionStampTargetCars && message.previousVersionStampTargetCars.length))
                                message.previousVersionStampTargetCars = [];
                            message.previousVersionStampTargetCars.push($root.wm5.protobuf.PreviousVersionStampTargetCar.decode(reader, reader.uint32()));
                            break;
                        }
                    case 5: {
                            if (!(message.history && message.history.length))
                                message.history = [];
                            message.history.push($root.wm5.protobuf.Car.decode(reader, reader.uint32()));
                            break;
                        }
                    case 10: {
                            if (!(message.weakenedCars && message.weakenedCars.length))
                                message.weakenedCars = [];
                            message.weakenedCars.push($root.wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar.decode(reader, reader.uint32()));
                            break;
                        }
                    case 6: {
                            message.defaultOpponent = $root.wm5.protobuf.GhostCar.decode(reader, reader.uint32());
                            break;
                        }
                    case 7: {
                            message.stampSheetCount = reader.uint32();
                            break;
                        }
                    case 8: {
                            if (!(message.stampSheet && message.stampSheet.length))
                                message.stampSheet = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.stampSheet.push(reader.uint32());
                            } else
                                message.stampSheet.push(reader.uint32());
                            break;
                        }
                    case 9: {
                            if (!(message.stampReturnStats && message.stampReturnStats.length))
                                message.stampReturnStats = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.stampReturnStats.push(reader.uint32());
                            } else
                                message.stampReturnStats.push(reader.uint32());
                            break;
                        }
                    case 11: {
                            message.specialGhost = $root.wm5.protobuf.GhostCar.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("stampSheetCount"))
                    throw $util.ProtocolError("missing required 'stampSheetCount'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadGhostBattleInfoResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadGhostBattleInfoResponse} LoadGhostBattleInfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostBattleInfoResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadGhostBattleInfoResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadGhostBattleInfoResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.friendCars != null && message.hasOwnProperty("friendCars")) {
                    if (!Array.isArray(message.friendCars))
                        return "friendCars: array expected";
                    for (let i = 0; i < message.friendCars.length; ++i) {
                        let error = $root.wm5.protobuf.FriendCar.verify(message.friendCars[i]);
                        if (error)
                            return "friendCars." + error;
                    }
                }
                if (message.challengers != null && message.hasOwnProperty("challengers")) {
                    if (!Array.isArray(message.challengers))
                        return "challengers: array expected";
                    for (let i = 0; i < message.challengers.length; ++i) {
                        let error = $root.wm5.protobuf.ChallengerCar.verify(message.challengers[i]);
                        if (error)
                            return "challengers." + error;
                    }
                }
                if (message.stampTargetCars != null && message.hasOwnProperty("stampTargetCars")) {
                    if (!Array.isArray(message.stampTargetCars))
                        return "stampTargetCars: array expected";
                    for (let i = 0; i < message.stampTargetCars.length; ++i) {
                        let error = $root.wm5.protobuf.StampTargetCar.verify(message.stampTargetCars[i]);
                        if (error)
                            return "stampTargetCars." + error;
                    }
                }
                if (message.previousVersionStampTargetCars != null && message.hasOwnProperty("previousVersionStampTargetCars")) {
                    if (!Array.isArray(message.previousVersionStampTargetCars))
                        return "previousVersionStampTargetCars: array expected";
                    for (let i = 0; i < message.previousVersionStampTargetCars.length; ++i) {
                        let error = $root.wm5.protobuf.PreviousVersionStampTargetCar.verify(message.previousVersionStampTargetCars[i]);
                        if (error)
                            return "previousVersionStampTargetCars." + error;
                    }
                }
                if (message.history != null && message.hasOwnProperty("history")) {
                    if (!Array.isArray(message.history))
                        return "history: array expected";
                    for (let i = 0; i < message.history.length; ++i) {
                        let error = $root.wm5.protobuf.Car.verify(message.history[i]);
                        if (error)
                            return "history." + error;
                    }
                }
                if (message.weakenedCars != null && message.hasOwnProperty("weakenedCars")) {
                    if (!Array.isArray(message.weakenedCars))
                        return "weakenedCars: array expected";
                    for (let i = 0; i < message.weakenedCars.length; ++i) {
                        let error = $root.wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar.verify(message.weakenedCars[i]);
                        if (error)
                            return "weakenedCars." + error;
                    }
                }
                if (message.defaultOpponent != null && message.hasOwnProperty("defaultOpponent")) {
                    let error = $root.wm5.protobuf.GhostCar.verify(message.defaultOpponent);
                    if (error)
                        return "defaultOpponent." + error;
                }
                if (!$util.isInteger(message.stampSheetCount))
                    return "stampSheetCount: integer expected";
                if (message.stampSheet != null && message.hasOwnProperty("stampSheet")) {
                    if (!Array.isArray(message.stampSheet))
                        return "stampSheet: array expected";
                    for (let i = 0; i < message.stampSheet.length; ++i)
                        if (!$util.isInteger(message.stampSheet[i]))
                            return "stampSheet: integer[] expected";
                }
                if (message.stampReturnStats != null && message.hasOwnProperty("stampReturnStats")) {
                    if (!Array.isArray(message.stampReturnStats))
                        return "stampReturnStats: array expected";
                    for (let i = 0; i < message.stampReturnStats.length; ++i)
                        if (!$util.isInteger(message.stampReturnStats[i]))
                            return "stampReturnStats: integer[] expected";
                }
                if (message.specialGhost != null && message.hasOwnProperty("specialGhost")) {
                    let error = $root.wm5.protobuf.GhostCar.verify(message.specialGhost);
                    if (error)
                        return "specialGhost." + error;
                }
                return null;
            };

            /**
             * Creates a LoadGhostBattleInfoResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadGhostBattleInfoResponse} LoadGhostBattleInfoResponse
             */
            LoadGhostBattleInfoResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadGhostBattleInfoResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadGhostBattleInfoResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.friendCars) {
                    if (!Array.isArray(object.friendCars))
                        throw TypeError(".wm5.protobuf.LoadGhostBattleInfoResponse.friendCars: array expected");
                    message.friendCars = [];
                    for (let i = 0; i < object.friendCars.length; ++i) {
                        if (typeof object.friendCars[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadGhostBattleInfoResponse.friendCars: object expected");
                        message.friendCars[i] = $root.wm5.protobuf.FriendCar.fromObject(object.friendCars[i]);
                    }
                }
                if (object.challengers) {
                    if (!Array.isArray(object.challengers))
                        throw TypeError(".wm5.protobuf.LoadGhostBattleInfoResponse.challengers: array expected");
                    message.challengers = [];
                    for (let i = 0; i < object.challengers.length; ++i) {
                        if (typeof object.challengers[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadGhostBattleInfoResponse.challengers: object expected");
                        message.challengers[i] = $root.wm5.protobuf.ChallengerCar.fromObject(object.challengers[i]);
                    }
                }
                if (object.stampTargetCars) {
                    if (!Array.isArray(object.stampTargetCars))
                        throw TypeError(".wm5.protobuf.LoadGhostBattleInfoResponse.stampTargetCars: array expected");
                    message.stampTargetCars = [];
                    for (let i = 0; i < object.stampTargetCars.length; ++i) {
                        if (typeof object.stampTargetCars[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadGhostBattleInfoResponse.stampTargetCars: object expected");
                        message.stampTargetCars[i] = $root.wm5.protobuf.StampTargetCar.fromObject(object.stampTargetCars[i]);
                    }
                }
                if (object.previousVersionStampTargetCars) {
                    if (!Array.isArray(object.previousVersionStampTargetCars))
                        throw TypeError(".wm5.protobuf.LoadGhostBattleInfoResponse.previousVersionStampTargetCars: array expected");
                    message.previousVersionStampTargetCars = [];
                    for (let i = 0; i < object.previousVersionStampTargetCars.length; ++i) {
                        if (typeof object.previousVersionStampTargetCars[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadGhostBattleInfoResponse.previousVersionStampTargetCars: object expected");
                        message.previousVersionStampTargetCars[i] = $root.wm5.protobuf.PreviousVersionStampTargetCar.fromObject(object.previousVersionStampTargetCars[i]);
                    }
                }
                if (object.history) {
                    if (!Array.isArray(object.history))
                        throw TypeError(".wm5.protobuf.LoadGhostBattleInfoResponse.history: array expected");
                    message.history = [];
                    for (let i = 0; i < object.history.length; ++i) {
                        if (typeof object.history[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadGhostBattleInfoResponse.history: object expected");
                        message.history[i] = $root.wm5.protobuf.Car.fromObject(object.history[i]);
                    }
                }
                if (object.weakenedCars) {
                    if (!Array.isArray(object.weakenedCars))
                        throw TypeError(".wm5.protobuf.LoadGhostBattleInfoResponse.weakenedCars: array expected");
                    message.weakenedCars = [];
                    for (let i = 0; i < object.weakenedCars.length; ++i) {
                        if (typeof object.weakenedCars[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadGhostBattleInfoResponse.weakenedCars: object expected");
                        message.weakenedCars[i] = $root.wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar.fromObject(object.weakenedCars[i]);
                    }
                }
                if (object.defaultOpponent != null) {
                    if (typeof object.defaultOpponent !== "object")
                        throw TypeError(".wm5.protobuf.LoadGhostBattleInfoResponse.defaultOpponent: object expected");
                    message.defaultOpponent = $root.wm5.protobuf.GhostCar.fromObject(object.defaultOpponent);
                }
                if (object.stampSheetCount != null)
                    message.stampSheetCount = object.stampSheetCount >>> 0;
                if (object.stampSheet) {
                    if (!Array.isArray(object.stampSheet))
                        throw TypeError(".wm5.protobuf.LoadGhostBattleInfoResponse.stampSheet: array expected");
                    message.stampSheet = [];
                    for (let i = 0; i < object.stampSheet.length; ++i)
                        message.stampSheet[i] = object.stampSheet[i] >>> 0;
                }
                if (object.stampReturnStats) {
                    if (!Array.isArray(object.stampReturnStats))
                        throw TypeError(".wm5.protobuf.LoadGhostBattleInfoResponse.stampReturnStats: array expected");
                    message.stampReturnStats = [];
                    for (let i = 0; i < object.stampReturnStats.length; ++i)
                        message.stampReturnStats[i] = object.stampReturnStats[i] >>> 0;
                }
                if (object.specialGhost != null) {
                    if (typeof object.specialGhost !== "object")
                        throw TypeError(".wm5.protobuf.LoadGhostBattleInfoResponse.specialGhost: object expected");
                    message.specialGhost = $root.wm5.protobuf.GhostCar.fromObject(object.specialGhost);
                }
                return message;
            };

            /**
             * Creates a plain object from a LoadGhostBattleInfoResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @static
             * @param {wm5.protobuf.LoadGhostBattleInfoResponse} message LoadGhostBattleInfoResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadGhostBattleInfoResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.friendCars = [];
                    object.challengers = [];
                    object.stampTargetCars = [];
                    object.history = [];
                    object.stampSheet = [];
                    object.stampReturnStats = [];
                    object.weakenedCars = [];
                    object.previousVersionStampTargetCars = [];
                }
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.defaultOpponent = null;
                    object.stampSheetCount = 0;
                    object.specialGhost = null;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.friendCars && message.friendCars.length) {
                    object.friendCars = [];
                    for (let j = 0; j < message.friendCars.length; ++j)
                        object.friendCars[j] = $root.wm5.protobuf.FriendCar.toObject(message.friendCars[j], options);
                }
                if (message.challengers && message.challengers.length) {
                    object.challengers = [];
                    for (let j = 0; j < message.challengers.length; ++j)
                        object.challengers[j] = $root.wm5.protobuf.ChallengerCar.toObject(message.challengers[j], options);
                }
                if (message.stampTargetCars && message.stampTargetCars.length) {
                    object.stampTargetCars = [];
                    for (let j = 0; j < message.stampTargetCars.length; ++j)
                        object.stampTargetCars[j] = $root.wm5.protobuf.StampTargetCar.toObject(message.stampTargetCars[j], options);
                }
                if (message.history && message.history.length) {
                    object.history = [];
                    for (let j = 0; j < message.history.length; ++j)
                        object.history[j] = $root.wm5.protobuf.Car.toObject(message.history[j], options);
                }
                if (message.defaultOpponent != null && message.hasOwnProperty("defaultOpponent"))
                    object.defaultOpponent = $root.wm5.protobuf.GhostCar.toObject(message.defaultOpponent, options);
                if (message.stampSheetCount != null && message.hasOwnProperty("stampSheetCount"))
                    object.stampSheetCount = message.stampSheetCount;
                if (message.stampSheet && message.stampSheet.length) {
                    object.stampSheet = [];
                    for (let j = 0; j < message.stampSheet.length; ++j)
                        object.stampSheet[j] = message.stampSheet[j];
                }
                if (message.stampReturnStats && message.stampReturnStats.length) {
                    object.stampReturnStats = [];
                    for (let j = 0; j < message.stampReturnStats.length; ++j)
                        object.stampReturnStats[j] = message.stampReturnStats[j];
                }
                if (message.weakenedCars && message.weakenedCars.length) {
                    object.weakenedCars = [];
                    for (let j = 0; j < message.weakenedCars.length; ++j)
                        object.weakenedCars[j] = $root.wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar.toObject(message.weakenedCars[j], options);
                }
                if (message.specialGhost != null && message.hasOwnProperty("specialGhost"))
                    object.specialGhost = $root.wm5.protobuf.GhostCar.toObject(message.specialGhost, options);
                if (message.previousVersionStampTargetCars && message.previousVersionStampTargetCars.length) {
                    object.previousVersionStampTargetCars = [];
                    for (let j = 0; j < message.previousVersionStampTargetCars.length; ++j)
                        object.previousVersionStampTargetCars[j] = $root.wm5.protobuf.PreviousVersionStampTargetCar.toObject(message.previousVersionStampTargetCars[j], options);
                }
                return object;
            };

            /**
             * Converts this LoadGhostBattleInfoResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadGhostBattleInfoResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadGhostBattleInfoResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadGhostBattleInfoResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadGhostBattleInfoResponse";
            };

            LoadGhostBattleInfoResponse.WeakenedCar = (function() {

                /**
                 * Properties of a WeakenedCar.
                 * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
                 * @interface IWeakenedCar
                 * @property {number} carId WeakenedCar carId
                 * @property {number} consecutiveLosses WeakenedCar consecutiveLosses
                 */

                /**
                 * Constructs a new WeakenedCar.
                 * @memberof wm5.protobuf.LoadGhostBattleInfoResponse
                 * @classdesc Represents a WeakenedCar.
                 * @implements IWeakenedCar
                 * @constructor
                 * @param {wm5.protobuf.LoadGhostBattleInfoResponse.IWeakenedCar=} [properties] Properties to set
                 */
                function WeakenedCar(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * WeakenedCar carId.
                 * @member {number} carId
                 * @memberof wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar
                 * @instance
                 */
                WeakenedCar.prototype.carId = 0;

                /**
                 * WeakenedCar consecutiveLosses.
                 * @member {number} consecutiveLosses
                 * @memberof wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar
                 * @instance
                 */
                WeakenedCar.prototype.consecutiveLosses = 0;

                /**
                 * Creates a new WeakenedCar instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar
                 * @static
                 * @param {wm5.protobuf.LoadGhostBattleInfoResponse.IWeakenedCar=} [properties] Properties to set
                 * @returns {wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar} WeakenedCar instance
                 */
                WeakenedCar.create = function create(properties) {
                    return new WeakenedCar(properties);
                };

                /**
                 * Encodes the specified WeakenedCar message. Does not implicitly {@link wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar
                 * @static
                 * @param {wm5.protobuf.LoadGhostBattleInfoResponse.IWeakenedCar} message WeakenedCar message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WeakenedCar.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.consecutiveLosses);
                    return writer;
                };

                /**
                 * Encodes the specified WeakenedCar message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar
                 * @static
                 * @param {wm5.protobuf.LoadGhostBattleInfoResponse.IWeakenedCar} message WeakenedCar message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WeakenedCar.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a WeakenedCar message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar} WeakenedCar
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WeakenedCar.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.carId = reader.uint32();
                                break;
                            }
                        case 2: {
                                message.consecutiveLosses = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("carId"))
                        throw $util.ProtocolError("missing required 'carId'", { instance: message });
                    if (!message.hasOwnProperty("consecutiveLosses"))
                        throw $util.ProtocolError("missing required 'consecutiveLosses'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a WeakenedCar message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar} WeakenedCar
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WeakenedCar.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a WeakenedCar message.
                 * @function verify
                 * @memberof wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                WeakenedCar.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.carId))
                        return "carId: integer expected";
                    if (!$util.isInteger(message.consecutiveLosses))
                        return "consecutiveLosses: integer expected";
                    return null;
                };

                /**
                 * Creates a WeakenedCar message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar} WeakenedCar
                 */
                WeakenedCar.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar)
                        return object;
                    let message = new $root.wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar();
                    if (object.carId != null)
                        message.carId = object.carId >>> 0;
                    if (object.consecutiveLosses != null)
                        message.consecutiveLosses = object.consecutiveLosses >>> 0;
                    return message;
                };

                /**
                 * Creates a plain object from a WeakenedCar message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar
                 * @static
                 * @param {wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar} message WeakenedCar
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                WeakenedCar.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.carId = 0;
                        object.consecutiveLosses = 0;
                    }
                    if (message.carId != null && message.hasOwnProperty("carId"))
                        object.carId = message.carId;
                    if (message.consecutiveLosses != null && message.hasOwnProperty("consecutiveLosses"))
                        object.consecutiveLosses = message.consecutiveLosses;
                    return object;
                };

                /**
                 * Converts this WeakenedCar to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                WeakenedCar.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for WeakenedCar
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                WeakenedCar.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.LoadGhostBattleInfoResponse.WeakenedCar";
                };

                return WeakenedCar;
            })();

            return LoadGhostBattleInfoResponse;
        })();

        protobuf.LoadStampTargetRequest = (function() {

            /**
             * Properties of a LoadStampTargetRequest.
             * @memberof wm5.protobuf
             * @interface ILoadStampTargetRequest
             * @property {number} carId LoadStampTargetRequest carId
             * @property {boolean} needToPromote LoadStampTargetRequest needToPromote
             */

            /**
             * Constructs a new LoadStampTargetRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadStampTargetRequest.
             * @implements ILoadStampTargetRequest
             * @constructor
             * @param {wm5.protobuf.ILoadStampTargetRequest=} [properties] Properties to set
             */
            function LoadStampTargetRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadStampTargetRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.LoadStampTargetRequest
             * @instance
             */
            LoadStampTargetRequest.prototype.carId = 0;

            /**
             * LoadStampTargetRequest needToPromote.
             * @member {boolean} needToPromote
             * @memberof wm5.protobuf.LoadStampTargetRequest
             * @instance
             */
            LoadStampTargetRequest.prototype.needToPromote = false;

            /**
             * Creates a new LoadStampTargetRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadStampTargetRequest
             * @static
             * @param {wm5.protobuf.ILoadStampTargetRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadStampTargetRequest} LoadStampTargetRequest instance
             */
            LoadStampTargetRequest.create = function create(properties) {
                return new LoadStampTargetRequest(properties);
            };

            /**
             * Encodes the specified LoadStampTargetRequest message. Does not implicitly {@link wm5.protobuf.LoadStampTargetRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadStampTargetRequest
             * @static
             * @param {wm5.protobuf.ILoadStampTargetRequest} message LoadStampTargetRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadStampTargetRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.needToPromote);
                return writer;
            };

            /**
             * Encodes the specified LoadStampTargetRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadStampTargetRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadStampTargetRequest
             * @static
             * @param {wm5.protobuf.ILoadStampTargetRequest} message LoadStampTargetRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadStampTargetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadStampTargetRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadStampTargetRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadStampTargetRequest} LoadStampTargetRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadStampTargetRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadStampTargetRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.needToPromote = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                if (!message.hasOwnProperty("needToPromote"))
                    throw $util.ProtocolError("missing required 'needToPromote'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadStampTargetRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadStampTargetRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadStampTargetRequest} LoadStampTargetRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadStampTargetRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadStampTargetRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadStampTargetRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadStampTargetRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                if (typeof message.needToPromote !== "boolean")
                    return "needToPromote: boolean expected";
                return null;
            };

            /**
             * Creates a LoadStampTargetRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadStampTargetRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadStampTargetRequest} LoadStampTargetRequest
             */
            LoadStampTargetRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadStampTargetRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadStampTargetRequest();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.needToPromote != null)
                    message.needToPromote = Boolean(object.needToPromote);
                return message;
            };

            /**
             * Creates a plain object from a LoadStampTargetRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadStampTargetRequest
             * @static
             * @param {wm5.protobuf.LoadStampTargetRequest} message LoadStampTargetRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadStampTargetRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.carId = 0;
                    object.needToPromote = false;
                }
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.needToPromote != null && message.hasOwnProperty("needToPromote"))
                    object.needToPromote = message.needToPromote;
                return object;
            };

            /**
             * Converts this LoadStampTargetRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadStampTargetRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadStampTargetRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadStampTargetRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadStampTargetRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadStampTargetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadStampTargetRequest";
            };

            return LoadStampTargetRequest;
        })();

        protobuf.LoadStampTargetResponse = (function() {

            /**
             * Properties of a LoadStampTargetResponse.
             * @memberof wm5.protobuf
             * @interface ILoadStampTargetResponse
             * @property {wm5.protobuf.ErrorCode} error LoadStampTargetResponse error
             * @property {Array.<wm5.protobuf.IStampTargetCar>|null} [cars] LoadStampTargetResponse cars
             * @property {Array.<wm5.protobuf.IChallengerCar>|null} [challengers] LoadStampTargetResponse challengers
             */

            /**
             * Constructs a new LoadStampTargetResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadStampTargetResponse.
             * @implements ILoadStampTargetResponse
             * @constructor
             * @param {wm5.protobuf.ILoadStampTargetResponse=} [properties] Properties to set
             */
            function LoadStampTargetResponse(properties) {
                this.cars = [];
                this.challengers = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadStampTargetResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadStampTargetResponse
             * @instance
             */
            LoadStampTargetResponse.prototype.error = 0;

            /**
             * LoadStampTargetResponse cars.
             * @member {Array.<wm5.protobuf.IStampTargetCar>} cars
             * @memberof wm5.protobuf.LoadStampTargetResponse
             * @instance
             */
            LoadStampTargetResponse.prototype.cars = $util.emptyArray;

            /**
             * LoadStampTargetResponse challengers.
             * @member {Array.<wm5.protobuf.IChallengerCar>} challengers
             * @memberof wm5.protobuf.LoadStampTargetResponse
             * @instance
             */
            LoadStampTargetResponse.prototype.challengers = $util.emptyArray;

            /**
             * Creates a new LoadStampTargetResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadStampTargetResponse
             * @static
             * @param {wm5.protobuf.ILoadStampTargetResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadStampTargetResponse} LoadStampTargetResponse instance
             */
            LoadStampTargetResponse.create = function create(properties) {
                return new LoadStampTargetResponse(properties);
            };

            /**
             * Encodes the specified LoadStampTargetResponse message. Does not implicitly {@link wm5.protobuf.LoadStampTargetResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadStampTargetResponse
             * @static
             * @param {wm5.protobuf.ILoadStampTargetResponse} message LoadStampTargetResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadStampTargetResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.cars != null && message.cars.length)
                    for (let i = 0; i < message.cars.length; ++i)
                        $root.wm5.protobuf.StampTargetCar.encode(message.cars[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.challengers != null && message.challengers.length)
                    for (let i = 0; i < message.challengers.length; ++i)
                        $root.wm5.protobuf.ChallengerCar.encode(message.challengers[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified LoadStampTargetResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadStampTargetResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadStampTargetResponse
             * @static
             * @param {wm5.protobuf.ILoadStampTargetResponse} message LoadStampTargetResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadStampTargetResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadStampTargetResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadStampTargetResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadStampTargetResponse} LoadStampTargetResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadStampTargetResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadStampTargetResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            if (!(message.cars && message.cars.length))
                                message.cars = [];
                            message.cars.push($root.wm5.protobuf.StampTargetCar.decode(reader, reader.uint32()));
                            break;
                        }
                    case 3: {
                            if (!(message.challengers && message.challengers.length))
                                message.challengers = [];
                            message.challengers.push($root.wm5.protobuf.ChallengerCar.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadStampTargetResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadStampTargetResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadStampTargetResponse} LoadStampTargetResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadStampTargetResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadStampTargetResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadStampTargetResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadStampTargetResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.cars != null && message.hasOwnProperty("cars")) {
                    if (!Array.isArray(message.cars))
                        return "cars: array expected";
                    for (let i = 0; i < message.cars.length; ++i) {
                        let error = $root.wm5.protobuf.StampTargetCar.verify(message.cars[i]);
                        if (error)
                            return "cars." + error;
                    }
                }
                if (message.challengers != null && message.hasOwnProperty("challengers")) {
                    if (!Array.isArray(message.challengers))
                        return "challengers: array expected";
                    for (let i = 0; i < message.challengers.length; ++i) {
                        let error = $root.wm5.protobuf.ChallengerCar.verify(message.challengers[i]);
                        if (error)
                            return "challengers." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a LoadStampTargetResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadStampTargetResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadStampTargetResponse} LoadStampTargetResponse
             */
            LoadStampTargetResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadStampTargetResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadStampTargetResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.cars) {
                    if (!Array.isArray(object.cars))
                        throw TypeError(".wm5.protobuf.LoadStampTargetResponse.cars: array expected");
                    message.cars = [];
                    for (let i = 0; i < object.cars.length; ++i) {
                        if (typeof object.cars[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadStampTargetResponse.cars: object expected");
                        message.cars[i] = $root.wm5.protobuf.StampTargetCar.fromObject(object.cars[i]);
                    }
                }
                if (object.challengers) {
                    if (!Array.isArray(object.challengers))
                        throw TypeError(".wm5.protobuf.LoadStampTargetResponse.challengers: array expected");
                    message.challengers = [];
                    for (let i = 0; i < object.challengers.length; ++i) {
                        if (typeof object.challengers[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadStampTargetResponse.challengers: object expected");
                        message.challengers[i] = $root.wm5.protobuf.ChallengerCar.fromObject(object.challengers[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a LoadStampTargetResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadStampTargetResponse
             * @static
             * @param {wm5.protobuf.LoadStampTargetResponse} message LoadStampTargetResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadStampTargetResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.cars = [];
                    object.challengers = [];
                }
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.cars && message.cars.length) {
                    object.cars = [];
                    for (let j = 0; j < message.cars.length; ++j)
                        object.cars[j] = $root.wm5.protobuf.StampTargetCar.toObject(message.cars[j], options);
                }
                if (message.challengers && message.challengers.length) {
                    object.challengers = [];
                    for (let j = 0; j < message.challengers.length; ++j)
                        object.challengers[j] = $root.wm5.protobuf.ChallengerCar.toObject(message.challengers[j], options);
                }
                return object;
            };

            /**
             * Converts this LoadStampTargetResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadStampTargetResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadStampTargetResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadStampTargetResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadStampTargetResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadStampTargetResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadStampTargetResponse";
            };

            return LoadStampTargetResponse;
        })();

        protobuf.LockStampTargetRequest = (function() {

            /**
             * Properties of a LockStampTargetRequest.
             * @memberof wm5.protobuf
             * @interface ILockStampTargetRequest
             * @property {number} carId LockStampTargetRequest carId
             * @property {Array.<number>|null} [targetCars] LockStampTargetRequest targetCars
             */

            /**
             * Constructs a new LockStampTargetRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LockStampTargetRequest.
             * @implements ILockStampTargetRequest
             * @constructor
             * @param {wm5.protobuf.ILockStampTargetRequest=} [properties] Properties to set
             */
            function LockStampTargetRequest(properties) {
                this.targetCars = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LockStampTargetRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.LockStampTargetRequest
             * @instance
             */
            LockStampTargetRequest.prototype.carId = 0;

            /**
             * LockStampTargetRequest targetCars.
             * @member {Array.<number>} targetCars
             * @memberof wm5.protobuf.LockStampTargetRequest
             * @instance
             */
            LockStampTargetRequest.prototype.targetCars = $util.emptyArray;

            /**
             * Creates a new LockStampTargetRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LockStampTargetRequest
             * @static
             * @param {wm5.protobuf.ILockStampTargetRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LockStampTargetRequest} LockStampTargetRequest instance
             */
            LockStampTargetRequest.create = function create(properties) {
                return new LockStampTargetRequest(properties);
            };

            /**
             * Encodes the specified LockStampTargetRequest message. Does not implicitly {@link wm5.protobuf.LockStampTargetRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LockStampTargetRequest
             * @static
             * @param {wm5.protobuf.ILockStampTargetRequest} message LockStampTargetRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LockStampTargetRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                if (message.targetCars != null && message.targetCars.length)
                    for (let i = 0; i < message.targetCars.length; ++i)
                        writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetCars[i]);
                return writer;
            };

            /**
             * Encodes the specified LockStampTargetRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LockStampTargetRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LockStampTargetRequest
             * @static
             * @param {wm5.protobuf.ILockStampTargetRequest} message LockStampTargetRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LockStampTargetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LockStampTargetRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LockStampTargetRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LockStampTargetRequest} LockStampTargetRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LockStampTargetRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LockStampTargetRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 2: {
                            if (!(message.targetCars && message.targetCars.length))
                                message.targetCars = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.targetCars.push(reader.uint32());
                            } else
                                message.targetCars.push(reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                return message;
            };

            /**
             * Decodes a LockStampTargetRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LockStampTargetRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LockStampTargetRequest} LockStampTargetRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LockStampTargetRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LockStampTargetRequest message.
             * @function verify
             * @memberof wm5.protobuf.LockStampTargetRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LockStampTargetRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                if (message.targetCars != null && message.hasOwnProperty("targetCars")) {
                    if (!Array.isArray(message.targetCars))
                        return "targetCars: array expected";
                    for (let i = 0; i < message.targetCars.length; ++i)
                        if (!$util.isInteger(message.targetCars[i]))
                            return "targetCars: integer[] expected";
                }
                return null;
            };

            /**
             * Creates a LockStampTargetRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LockStampTargetRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LockStampTargetRequest} LockStampTargetRequest
             */
            LockStampTargetRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LockStampTargetRequest)
                    return object;
                let message = new $root.wm5.protobuf.LockStampTargetRequest();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.targetCars) {
                    if (!Array.isArray(object.targetCars))
                        throw TypeError(".wm5.protobuf.LockStampTargetRequest.targetCars: array expected");
                    message.targetCars = [];
                    for (let i = 0; i < object.targetCars.length; ++i)
                        message.targetCars[i] = object.targetCars[i] >>> 0;
                }
                return message;
            };

            /**
             * Creates a plain object from a LockStampTargetRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LockStampTargetRequest
             * @static
             * @param {wm5.protobuf.LockStampTargetRequest} message LockStampTargetRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LockStampTargetRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.targetCars = [];
                if (options.defaults)
                    object.carId = 0;
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.targetCars && message.targetCars.length) {
                    object.targetCars = [];
                    for (let j = 0; j < message.targetCars.length; ++j)
                        object.targetCars[j] = message.targetCars[j];
                }
                return object;
            };

            /**
             * Converts this LockStampTargetRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LockStampTargetRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LockStampTargetRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LockStampTargetRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LockStampTargetRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LockStampTargetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LockStampTargetRequest";
            };

            return LockStampTargetRequest;
        })();

        protobuf.LockStampTargetResponse = (function() {

            /**
             * Properties of a LockStampTargetResponse.
             * @memberof wm5.protobuf
             * @interface ILockStampTargetResponse
             * @property {wm5.protobuf.ErrorCode} error LockStampTargetResponse error
             */

            /**
             * Constructs a new LockStampTargetResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LockStampTargetResponse.
             * @implements ILockStampTargetResponse
             * @constructor
             * @param {wm5.protobuf.ILockStampTargetResponse=} [properties] Properties to set
             */
            function LockStampTargetResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LockStampTargetResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LockStampTargetResponse
             * @instance
             */
            LockStampTargetResponse.prototype.error = 0;

            /**
             * Creates a new LockStampTargetResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LockStampTargetResponse
             * @static
             * @param {wm5.protobuf.ILockStampTargetResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LockStampTargetResponse} LockStampTargetResponse instance
             */
            LockStampTargetResponse.create = function create(properties) {
                return new LockStampTargetResponse(properties);
            };

            /**
             * Encodes the specified LockStampTargetResponse message. Does not implicitly {@link wm5.protobuf.LockStampTargetResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LockStampTargetResponse
             * @static
             * @param {wm5.protobuf.ILockStampTargetResponse} message LockStampTargetResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LockStampTargetResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified LockStampTargetResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LockStampTargetResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LockStampTargetResponse
             * @static
             * @param {wm5.protobuf.ILockStampTargetResponse} message LockStampTargetResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LockStampTargetResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LockStampTargetResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LockStampTargetResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LockStampTargetResponse} LockStampTargetResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LockStampTargetResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LockStampTargetResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a LockStampTargetResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LockStampTargetResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LockStampTargetResponse} LockStampTargetResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LockStampTargetResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LockStampTargetResponse message.
             * @function verify
             * @memberof wm5.protobuf.LockStampTargetResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LockStampTargetResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a LockStampTargetResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LockStampTargetResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LockStampTargetResponse} LockStampTargetResponse
             */
            LockStampTargetResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LockStampTargetResponse)
                    return object;
                let message = new $root.wm5.protobuf.LockStampTargetResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a LockStampTargetResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LockStampTargetResponse
             * @static
             * @param {wm5.protobuf.LockStampTargetResponse} message LockStampTargetResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LockStampTargetResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this LockStampTargetResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LockStampTargetResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LockStampTargetResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LockStampTargetResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LockStampTargetResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LockStampTargetResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LockStampTargetResponse";
            };

            return LockStampTargetResponse;
        })();

        protobuf.LoadGhostCompetitionInfoRequest = (function() {

            /**
             * Properties of a LoadGhostCompetitionInfoRequest.
             * @memberof wm5.protobuf
             * @interface ILoadGhostCompetitionInfoRequest
             * @property {number} carId LoadGhostCompetitionInfoRequest carId
             * @property {number} competitionId LoadGhostCompetitionInfoRequest competitionId
             */

            /**
             * Constructs a new LoadGhostCompetitionInfoRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadGhostCompetitionInfoRequest.
             * @implements ILoadGhostCompetitionInfoRequest
             * @constructor
             * @param {wm5.protobuf.ILoadGhostCompetitionInfoRequest=} [properties] Properties to set
             */
            function LoadGhostCompetitionInfoRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadGhostCompetitionInfoRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoRequest
             * @instance
             */
            LoadGhostCompetitionInfoRequest.prototype.carId = 0;

            /**
             * LoadGhostCompetitionInfoRequest competitionId.
             * @member {number} competitionId
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoRequest
             * @instance
             */
            LoadGhostCompetitionInfoRequest.prototype.competitionId = 0;

            /**
             * Creates a new LoadGhostCompetitionInfoRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostCompetitionInfoRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadGhostCompetitionInfoRequest} LoadGhostCompetitionInfoRequest instance
             */
            LoadGhostCompetitionInfoRequest.create = function create(properties) {
                return new LoadGhostCompetitionInfoRequest(properties);
            };

            /**
             * Encodes the specified LoadGhostCompetitionInfoRequest message. Does not implicitly {@link wm5.protobuf.LoadGhostCompetitionInfoRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostCompetitionInfoRequest} message LoadGhostCompetitionInfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostCompetitionInfoRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.competitionId);
                return writer;
            };

            /**
             * Encodes the specified LoadGhostCompetitionInfoRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGhostCompetitionInfoRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostCompetitionInfoRequest} message LoadGhostCompetitionInfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostCompetitionInfoRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadGhostCompetitionInfoRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadGhostCompetitionInfoRequest} LoadGhostCompetitionInfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostCompetitionInfoRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGhostCompetitionInfoRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.competitionId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                if (!message.hasOwnProperty("competitionId"))
                    throw $util.ProtocolError("missing required 'competitionId'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadGhostCompetitionInfoRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadGhostCompetitionInfoRequest} LoadGhostCompetitionInfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostCompetitionInfoRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadGhostCompetitionInfoRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadGhostCompetitionInfoRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                if (!$util.isInteger(message.competitionId))
                    return "competitionId: integer expected";
                return null;
            };

            /**
             * Creates a LoadGhostCompetitionInfoRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadGhostCompetitionInfoRequest} LoadGhostCompetitionInfoRequest
             */
            LoadGhostCompetitionInfoRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadGhostCompetitionInfoRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadGhostCompetitionInfoRequest();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.competitionId != null)
                    message.competitionId = object.competitionId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadGhostCompetitionInfoRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoRequest
             * @static
             * @param {wm5.protobuf.LoadGhostCompetitionInfoRequest} message LoadGhostCompetitionInfoRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadGhostCompetitionInfoRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.carId = 0;
                    object.competitionId = 0;
                }
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.competitionId != null && message.hasOwnProperty("competitionId"))
                    object.competitionId = message.competitionId;
                return object;
            };

            /**
             * Converts this LoadGhostCompetitionInfoRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadGhostCompetitionInfoRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadGhostCompetitionInfoRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadGhostCompetitionInfoRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadGhostCompetitionInfoRequest";
            };

            return LoadGhostCompetitionInfoRequest;
        })();

        protobuf.LoadGhostCompetitionInfoResponse = (function() {

            /**
             * Properties of a LoadGhostCompetitionInfoResponse.
             * @memberof wm5.protobuf
             * @interface ILoadGhostCompetitionInfoResponse
             * @property {wm5.protobuf.ErrorCode} error LoadGhostCompetitionInfoResponse error
             * @property {number|null} [periodId] LoadGhostCompetitionInfoResponse periodId
             * @property {boolean} closed LoadGhostCompetitionInfoResponse closed
             * @property {number|null} [brakingPoint] LoadGhostCompetitionInfoResponse brakingPoint
             * @property {boolean|null} [qualified] LoadGhostCompetitionInfoResponse qualified
             * @property {Array.<number>|null} [topResults] LoadGhostCompetitionInfoResponse topResults
             * @property {number|null} [result] LoadGhostCompetitionInfoResponse result
             * @property {number|null} [rank] LoadGhostCompetitionInfoResponse rank
             * @property {Array.<number>|null} [parameters1] LoadGhostCompetitionInfoResponse parameters1
             * @property {boolean|null} [parameters2] LoadGhostCompetitionInfoResponse parameters2
             */

            /**
             * Constructs a new LoadGhostCompetitionInfoResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadGhostCompetitionInfoResponse.
             * @implements ILoadGhostCompetitionInfoResponse
             * @constructor
             * @param {wm5.protobuf.ILoadGhostCompetitionInfoResponse=} [properties] Properties to set
             */
            function LoadGhostCompetitionInfoResponse(properties) {
                this.topResults = [];
                this.parameters1 = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadGhostCompetitionInfoResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @instance
             */
            LoadGhostCompetitionInfoResponse.prototype.error = 0;

            /**
             * LoadGhostCompetitionInfoResponse periodId.
             * @member {number} periodId
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @instance
             */
            LoadGhostCompetitionInfoResponse.prototype.periodId = 0;

            /**
             * LoadGhostCompetitionInfoResponse closed.
             * @member {boolean} closed
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @instance
             */
            LoadGhostCompetitionInfoResponse.prototype.closed = false;

            /**
             * LoadGhostCompetitionInfoResponse brakingPoint.
             * @member {number} brakingPoint
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @instance
             */
            LoadGhostCompetitionInfoResponse.prototype.brakingPoint = 0;

            /**
             * LoadGhostCompetitionInfoResponse qualified.
             * @member {boolean} qualified
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @instance
             */
            LoadGhostCompetitionInfoResponse.prototype.qualified = false;

            /**
             * LoadGhostCompetitionInfoResponse topResults.
             * @member {Array.<number>} topResults
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @instance
             */
            LoadGhostCompetitionInfoResponse.prototype.topResults = $util.emptyArray;

            /**
             * LoadGhostCompetitionInfoResponse result.
             * @member {number} result
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @instance
             */
            LoadGhostCompetitionInfoResponse.prototype.result = 0;

            /**
             * LoadGhostCompetitionInfoResponse rank.
             * @member {number} rank
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @instance
             */
            LoadGhostCompetitionInfoResponse.prototype.rank = 0;

            /**
             * LoadGhostCompetitionInfoResponse parameters1.
             * @member {Array.<number>} parameters1
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @instance
             */
            LoadGhostCompetitionInfoResponse.prototype.parameters1 = $util.emptyArray;

            /**
             * LoadGhostCompetitionInfoResponse parameters2.
             * @member {boolean} parameters2
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @instance
             */
            LoadGhostCompetitionInfoResponse.prototype.parameters2 = false;

            /**
             * Creates a new LoadGhostCompetitionInfoResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostCompetitionInfoResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadGhostCompetitionInfoResponse} LoadGhostCompetitionInfoResponse instance
             */
            LoadGhostCompetitionInfoResponse.create = function create(properties) {
                return new LoadGhostCompetitionInfoResponse(properties);
            };

            /**
             * Encodes the specified LoadGhostCompetitionInfoResponse message. Does not implicitly {@link wm5.protobuf.LoadGhostCompetitionInfoResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostCompetitionInfoResponse} message LoadGhostCompetitionInfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostCompetitionInfoResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.periodId != null && Object.hasOwnProperty.call(message, "periodId"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.periodId);
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.closed);
                if (message.brakingPoint != null && Object.hasOwnProperty.call(message, "brakingPoint"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.brakingPoint);
                if (message.qualified != null && Object.hasOwnProperty.call(message, "qualified"))
                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.qualified);
                if (message.topResults != null && message.topResults.length) {
                    writer.uint32(/* id 6, wireType 2 =*/50).fork();
                    for (let i = 0; i < message.topResults.length; ++i)
                        writer.sint32(message.topResults[i]);
                    writer.ldelim();
                }
                if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                    writer.uint32(/* id 7, wireType 0 =*/56).sint32(message.result);
                if (message.rank != null && Object.hasOwnProperty.call(message, "rank"))
                    writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.rank);
                if (message.parameters1 != null && message.parameters1.length)
                    for (let i = 0; i < message.parameters1.length; ++i)
                        writer.uint32(/* id 9, wireType 5 =*/77).float(message.parameters1[i]);
                if (message.parameters2 != null && Object.hasOwnProperty.call(message, "parameters2"))
                    writer.uint32(/* id 10, wireType 0 =*/80).bool(message.parameters2);
                return writer;
            };

            /**
             * Encodes the specified LoadGhostCompetitionInfoResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGhostCompetitionInfoResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostCompetitionInfoResponse} message LoadGhostCompetitionInfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostCompetitionInfoResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadGhostCompetitionInfoResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadGhostCompetitionInfoResponse} LoadGhostCompetitionInfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostCompetitionInfoResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGhostCompetitionInfoResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.periodId = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.closed = reader.bool();
                            break;
                        }
                    case 4: {
                            message.brakingPoint = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.qualified = reader.bool();
                            break;
                        }
                    case 6: {
                            if (!(message.topResults && message.topResults.length))
                                message.topResults = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.topResults.push(reader.sint32());
                            } else
                                message.topResults.push(reader.sint32());
                            break;
                        }
                    case 7: {
                            message.result = reader.sint32();
                            break;
                        }
                    case 8: {
                            message.rank = reader.uint32();
                            break;
                        }
                    case 9: {
                            if (!(message.parameters1 && message.parameters1.length))
                                message.parameters1 = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.parameters1.push(reader.float());
                            } else
                                message.parameters1.push(reader.float());
                            break;
                        }
                    case 10: {
                            message.parameters2 = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("closed"))
                    throw $util.ProtocolError("missing required 'closed'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadGhostCompetitionInfoResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadGhostCompetitionInfoResponse} LoadGhostCompetitionInfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostCompetitionInfoResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadGhostCompetitionInfoResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadGhostCompetitionInfoResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.periodId != null && message.hasOwnProperty("periodId"))
                    if (!$util.isInteger(message.periodId))
                        return "periodId: integer expected";
                if (typeof message.closed !== "boolean")
                    return "closed: boolean expected";
                if (message.brakingPoint != null && message.hasOwnProperty("brakingPoint"))
                    if (!$util.isInteger(message.brakingPoint))
                        return "brakingPoint: integer expected";
                if (message.qualified != null && message.hasOwnProperty("qualified"))
                    if (typeof message.qualified !== "boolean")
                        return "qualified: boolean expected";
                if (message.topResults != null && message.hasOwnProperty("topResults")) {
                    if (!Array.isArray(message.topResults))
                        return "topResults: array expected";
                    for (let i = 0; i < message.topResults.length; ++i)
                        if (!$util.isInteger(message.topResults[i]))
                            return "topResults: integer[] expected";
                }
                if (message.result != null && message.hasOwnProperty("result"))
                    if (!$util.isInteger(message.result))
                        return "result: integer expected";
                if (message.rank != null && message.hasOwnProperty("rank"))
                    if (!$util.isInteger(message.rank))
                        return "rank: integer expected";
                if (message.parameters1 != null && message.hasOwnProperty("parameters1")) {
                    if (!Array.isArray(message.parameters1))
                        return "parameters1: array expected";
                    for (let i = 0; i < message.parameters1.length; ++i)
                        if (typeof message.parameters1[i] !== "number")
                            return "parameters1: number[] expected";
                }
                if (message.parameters2 != null && message.hasOwnProperty("parameters2"))
                    if (typeof message.parameters2 !== "boolean")
                        return "parameters2: boolean expected";
                return null;
            };

            /**
             * Creates a LoadGhostCompetitionInfoResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadGhostCompetitionInfoResponse} LoadGhostCompetitionInfoResponse
             */
            LoadGhostCompetitionInfoResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadGhostCompetitionInfoResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadGhostCompetitionInfoResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.periodId != null)
                    message.periodId = object.periodId >>> 0;
                if (object.closed != null)
                    message.closed = Boolean(object.closed);
                if (object.brakingPoint != null)
                    message.brakingPoint = object.brakingPoint >>> 0;
                if (object.qualified != null)
                    message.qualified = Boolean(object.qualified);
                if (object.topResults) {
                    if (!Array.isArray(object.topResults))
                        throw TypeError(".wm5.protobuf.LoadGhostCompetitionInfoResponse.topResults: array expected");
                    message.topResults = [];
                    for (let i = 0; i < object.topResults.length; ++i)
                        message.topResults[i] = object.topResults[i] | 0;
                }
                if (object.result != null)
                    message.result = object.result | 0;
                if (object.rank != null)
                    message.rank = object.rank >>> 0;
                if (object.parameters1) {
                    if (!Array.isArray(object.parameters1))
                        throw TypeError(".wm5.protobuf.LoadGhostCompetitionInfoResponse.parameters1: array expected");
                    message.parameters1 = [];
                    for (let i = 0; i < object.parameters1.length; ++i)
                        message.parameters1[i] = Number(object.parameters1[i]);
                }
                if (object.parameters2 != null)
                    message.parameters2 = Boolean(object.parameters2);
                return message;
            };

            /**
             * Creates a plain object from a LoadGhostCompetitionInfoResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @static
             * @param {wm5.protobuf.LoadGhostCompetitionInfoResponse} message LoadGhostCompetitionInfoResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadGhostCompetitionInfoResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.topResults = [];
                    object.parameters1 = [];
                }
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.periodId = 0;
                    object.closed = false;
                    object.brakingPoint = 0;
                    object.qualified = false;
                    object.result = 0;
                    object.rank = 0;
                    object.parameters2 = false;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.periodId != null && message.hasOwnProperty("periodId"))
                    object.periodId = message.periodId;
                if (message.closed != null && message.hasOwnProperty("closed"))
                    object.closed = message.closed;
                if (message.brakingPoint != null && message.hasOwnProperty("brakingPoint"))
                    object.brakingPoint = message.brakingPoint;
                if (message.qualified != null && message.hasOwnProperty("qualified"))
                    object.qualified = message.qualified;
                if (message.topResults && message.topResults.length) {
                    object.topResults = [];
                    for (let j = 0; j < message.topResults.length; ++j)
                        object.topResults[j] = message.topResults[j];
                }
                if (message.result != null && message.hasOwnProperty("result"))
                    object.result = message.result;
                if (message.rank != null && message.hasOwnProperty("rank"))
                    object.rank = message.rank;
                if (message.parameters1 && message.parameters1.length) {
                    object.parameters1 = [];
                    for (let j = 0; j < message.parameters1.length; ++j)
                        object.parameters1[j] = options.json && !isFinite(message.parameters1[j]) ? String(message.parameters1[j]) : message.parameters1[j];
                }
                if (message.parameters2 != null && message.hasOwnProperty("parameters2"))
                    object.parameters2 = message.parameters2;
                return object;
            };

            /**
             * Converts this LoadGhostCompetitionInfoResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadGhostCompetitionInfoResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadGhostCompetitionInfoResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadGhostCompetitionInfoResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadGhostCompetitionInfoResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadGhostCompetitionInfoResponse";
            };

            return LoadGhostCompetitionInfoResponse;
        })();

        protobuf.LoadTimeAttackRecordRequest = (function() {

            /**
             * Properties of a LoadTimeAttackRecordRequest.
             * @memberof wm5.protobuf
             * @interface ILoadTimeAttackRecordRequest
             * @property {number|null} [carId] LoadTimeAttackRecordRequest carId
             * @property {number} model LoadTimeAttackRecordRequest model
             * @property {number} course LoadTimeAttackRecordRequest course
             */

            /**
             * Constructs a new LoadTimeAttackRecordRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadTimeAttackRecordRequest.
             * @implements ILoadTimeAttackRecordRequest
             * @constructor
             * @param {wm5.protobuf.ILoadTimeAttackRecordRequest=} [properties] Properties to set
             */
            function LoadTimeAttackRecordRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadTimeAttackRecordRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.LoadTimeAttackRecordRequest
             * @instance
             */
            LoadTimeAttackRecordRequest.prototype.carId = 0;

            /**
             * LoadTimeAttackRecordRequest model.
             * @member {number} model
             * @memberof wm5.protobuf.LoadTimeAttackRecordRequest
             * @instance
             */
            LoadTimeAttackRecordRequest.prototype.model = 0;

            /**
             * LoadTimeAttackRecordRequest course.
             * @member {number} course
             * @memberof wm5.protobuf.LoadTimeAttackRecordRequest
             * @instance
             */
            LoadTimeAttackRecordRequest.prototype.course = 0;

            /**
             * Creates a new LoadTimeAttackRecordRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadTimeAttackRecordRequest
             * @static
             * @param {wm5.protobuf.ILoadTimeAttackRecordRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadTimeAttackRecordRequest} LoadTimeAttackRecordRequest instance
             */
            LoadTimeAttackRecordRequest.create = function create(properties) {
                return new LoadTimeAttackRecordRequest(properties);
            };

            /**
             * Encodes the specified LoadTimeAttackRecordRequest message. Does not implicitly {@link wm5.protobuf.LoadTimeAttackRecordRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadTimeAttackRecordRequest
             * @static
             * @param {wm5.protobuf.ILoadTimeAttackRecordRequest} message LoadTimeAttackRecordRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadTimeAttackRecordRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.carId != null && Object.hasOwnProperty.call(message, "carId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.model);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.course);
                return writer;
            };

            /**
             * Encodes the specified LoadTimeAttackRecordRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadTimeAttackRecordRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadTimeAttackRecordRequest
             * @static
             * @param {wm5.protobuf.ILoadTimeAttackRecordRequest} message LoadTimeAttackRecordRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadTimeAttackRecordRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadTimeAttackRecordRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadTimeAttackRecordRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadTimeAttackRecordRequest} LoadTimeAttackRecordRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadTimeAttackRecordRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadTimeAttackRecordRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.model = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.course = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("model"))
                    throw $util.ProtocolError("missing required 'model'", { instance: message });
                if (!message.hasOwnProperty("course"))
                    throw $util.ProtocolError("missing required 'course'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadTimeAttackRecordRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadTimeAttackRecordRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadTimeAttackRecordRequest} LoadTimeAttackRecordRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadTimeAttackRecordRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadTimeAttackRecordRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadTimeAttackRecordRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadTimeAttackRecordRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.carId != null && message.hasOwnProperty("carId"))
                    if (!$util.isInteger(message.carId))
                        return "carId: integer expected";
                if (!$util.isInteger(message.model))
                    return "model: integer expected";
                if (!$util.isInteger(message.course))
                    return "course: integer expected";
                return null;
            };

            /**
             * Creates a LoadTimeAttackRecordRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadTimeAttackRecordRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadTimeAttackRecordRequest} LoadTimeAttackRecordRequest
             */
            LoadTimeAttackRecordRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadTimeAttackRecordRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadTimeAttackRecordRequest();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.model != null)
                    message.model = object.model >>> 0;
                if (object.course != null)
                    message.course = object.course >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadTimeAttackRecordRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadTimeAttackRecordRequest
             * @static
             * @param {wm5.protobuf.LoadTimeAttackRecordRequest} message LoadTimeAttackRecordRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadTimeAttackRecordRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.carId = 0;
                    object.model = 0;
                    object.course = 0;
                }
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.model != null && message.hasOwnProperty("model"))
                    object.model = message.model;
                if (message.course != null && message.hasOwnProperty("course"))
                    object.course = message.course;
                return object;
            };

            /**
             * Converts this LoadTimeAttackRecordRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadTimeAttackRecordRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadTimeAttackRecordRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadTimeAttackRecordRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadTimeAttackRecordRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadTimeAttackRecordRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadTimeAttackRecordRequest";
            };

            return LoadTimeAttackRecordRequest;
        })();

        protobuf.LoadTimeAttackRecordResponse = (function() {

            /**
             * Properties of a LoadTimeAttackRecordResponse.
             * @memberof wm5.protobuf
             * @interface ILoadTimeAttackRecordResponse
             * @property {wm5.protobuf.ErrorCode} error LoadTimeAttackRecordResponse error
             * @property {Array.<number>|null} [wholeRanking] LoadTimeAttackRecordResponse wholeRanking
             * @property {Array.<number>|null} [modelRanking] LoadTimeAttackRecordResponse modelRanking
             * @property {number|null} [personalBestTime] LoadTimeAttackRecordResponse personalBestTime
             * @property {number|null} [pbSection_1Time] LoadTimeAttackRecordResponse pbSection_1Time
             * @property {number|null} [pbSection_2Time] LoadTimeAttackRecordResponse pbSection_2Time
             * @property {number|null} [pbSection_3Time] LoadTimeAttackRecordResponse pbSection_3Time
             * @property {number|null} [pbSection_4Time] LoadTimeAttackRecordResponse pbSection_4Time
             * @property {number|null} [pbSection_5Time] LoadTimeAttackRecordResponse pbSection_5Time
             * @property {number|null} [pbSection_6Time] LoadTimeAttackRecordResponse pbSection_6Time
             * @property {number|null} [pbSection_7Time] LoadTimeAttackRecordResponse pbSection_7Time
             */

            /**
             * Constructs a new LoadTimeAttackRecordResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadTimeAttackRecordResponse.
             * @implements ILoadTimeAttackRecordResponse
             * @constructor
             * @param {wm5.protobuf.ILoadTimeAttackRecordResponse=} [properties] Properties to set
             */
            function LoadTimeAttackRecordResponse(properties) {
                this.wholeRanking = [];
                this.modelRanking = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadTimeAttackRecordResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @instance
             */
            LoadTimeAttackRecordResponse.prototype.error = 0;

            /**
             * LoadTimeAttackRecordResponse wholeRanking.
             * @member {Array.<number>} wholeRanking
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @instance
             */
            LoadTimeAttackRecordResponse.prototype.wholeRanking = $util.emptyArray;

            /**
             * LoadTimeAttackRecordResponse modelRanking.
             * @member {Array.<number>} modelRanking
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @instance
             */
            LoadTimeAttackRecordResponse.prototype.modelRanking = $util.emptyArray;

            /**
             * LoadTimeAttackRecordResponse personalBestTime.
             * @member {number} personalBestTime
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @instance
             */
            LoadTimeAttackRecordResponse.prototype.personalBestTime = 0;

            /**
             * LoadTimeAttackRecordResponse pbSection_1Time.
             * @member {number} pbSection_1Time
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @instance
             */
            LoadTimeAttackRecordResponse.prototype.pbSection_1Time = 0;

            /**
             * LoadTimeAttackRecordResponse pbSection_2Time.
             * @member {number} pbSection_2Time
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @instance
             */
            LoadTimeAttackRecordResponse.prototype.pbSection_2Time = 0;

            /**
             * LoadTimeAttackRecordResponse pbSection_3Time.
             * @member {number} pbSection_3Time
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @instance
             */
            LoadTimeAttackRecordResponse.prototype.pbSection_3Time = 0;

            /**
             * LoadTimeAttackRecordResponse pbSection_4Time.
             * @member {number} pbSection_4Time
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @instance
             */
            LoadTimeAttackRecordResponse.prototype.pbSection_4Time = 0;

            /**
             * LoadTimeAttackRecordResponse pbSection_5Time.
             * @member {number} pbSection_5Time
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @instance
             */
            LoadTimeAttackRecordResponse.prototype.pbSection_5Time = 0;

            /**
             * LoadTimeAttackRecordResponse pbSection_6Time.
             * @member {number} pbSection_6Time
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @instance
             */
            LoadTimeAttackRecordResponse.prototype.pbSection_6Time = 0;

            /**
             * LoadTimeAttackRecordResponse pbSection_7Time.
             * @member {number} pbSection_7Time
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @instance
             */
            LoadTimeAttackRecordResponse.prototype.pbSection_7Time = 0;

            /**
             * Creates a new LoadTimeAttackRecordResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @static
             * @param {wm5.protobuf.ILoadTimeAttackRecordResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadTimeAttackRecordResponse} LoadTimeAttackRecordResponse instance
             */
            LoadTimeAttackRecordResponse.create = function create(properties) {
                return new LoadTimeAttackRecordResponse(properties);
            };

            /**
             * Encodes the specified LoadTimeAttackRecordResponse message. Does not implicitly {@link wm5.protobuf.LoadTimeAttackRecordResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @static
             * @param {wm5.protobuf.ILoadTimeAttackRecordResponse} message LoadTimeAttackRecordResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadTimeAttackRecordResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.wholeRanking != null && message.wholeRanking.length) {
                    writer.uint32(/* id 2, wireType 2 =*/18).fork();
                    for (let i = 0; i < message.wholeRanking.length; ++i)
                        writer.uint32(message.wholeRanking[i]);
                    writer.ldelim();
                }
                if (message.modelRanking != null && message.modelRanking.length) {
                    writer.uint32(/* id 3, wireType 2 =*/26).fork();
                    for (let i = 0; i < message.modelRanking.length; ++i)
                        writer.uint32(message.modelRanking[i]);
                    writer.ldelim();
                }
                if (message.personalBestTime != null && Object.hasOwnProperty.call(message, "personalBestTime"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.personalBestTime);
                if (message.pbSection_1Time != null && Object.hasOwnProperty.call(message, "pbSection_1Time"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.pbSection_1Time);
                if (message.pbSection_2Time != null && Object.hasOwnProperty.call(message, "pbSection_2Time"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.pbSection_2Time);
                if (message.pbSection_3Time != null && Object.hasOwnProperty.call(message, "pbSection_3Time"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.pbSection_3Time);
                if (message.pbSection_4Time != null && Object.hasOwnProperty.call(message, "pbSection_4Time"))
                    writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.pbSection_4Time);
                if (message.pbSection_5Time != null && Object.hasOwnProperty.call(message, "pbSection_5Time"))
                    writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.pbSection_5Time);
                if (message.pbSection_6Time != null && Object.hasOwnProperty.call(message, "pbSection_6Time"))
                    writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.pbSection_6Time);
                if (message.pbSection_7Time != null && Object.hasOwnProperty.call(message, "pbSection_7Time"))
                    writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.pbSection_7Time);
                return writer;
            };

            /**
             * Encodes the specified LoadTimeAttackRecordResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadTimeAttackRecordResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @static
             * @param {wm5.protobuf.ILoadTimeAttackRecordResponse} message LoadTimeAttackRecordResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadTimeAttackRecordResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadTimeAttackRecordResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadTimeAttackRecordResponse} LoadTimeAttackRecordResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadTimeAttackRecordResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadTimeAttackRecordResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            if (!(message.wholeRanking && message.wholeRanking.length))
                                message.wholeRanking = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.wholeRanking.push(reader.uint32());
                            } else
                                message.wholeRanking.push(reader.uint32());
                            break;
                        }
                    case 3: {
                            if (!(message.modelRanking && message.modelRanking.length))
                                message.modelRanking = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.modelRanking.push(reader.uint32());
                            } else
                                message.modelRanking.push(reader.uint32());
                            break;
                        }
                    case 4: {
                            message.personalBestTime = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.pbSection_1Time = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.pbSection_2Time = reader.uint32();
                            break;
                        }
                    case 7: {
                            message.pbSection_3Time = reader.uint32();
                            break;
                        }
                    case 8: {
                            message.pbSection_4Time = reader.uint32();
                            break;
                        }
                    case 9: {
                            message.pbSection_5Time = reader.uint32();
                            break;
                        }
                    case 10: {
                            message.pbSection_6Time = reader.uint32();
                            break;
                        }
                    case 11: {
                            message.pbSection_7Time = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadTimeAttackRecordResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadTimeAttackRecordResponse} LoadTimeAttackRecordResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadTimeAttackRecordResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadTimeAttackRecordResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadTimeAttackRecordResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.wholeRanking != null && message.hasOwnProperty("wholeRanking")) {
                    if (!Array.isArray(message.wholeRanking))
                        return "wholeRanking: array expected";
                    for (let i = 0; i < message.wholeRanking.length; ++i)
                        if (!$util.isInteger(message.wholeRanking[i]))
                            return "wholeRanking: integer[] expected";
                }
                if (message.modelRanking != null && message.hasOwnProperty("modelRanking")) {
                    if (!Array.isArray(message.modelRanking))
                        return "modelRanking: array expected";
                    for (let i = 0; i < message.modelRanking.length; ++i)
                        if (!$util.isInteger(message.modelRanking[i]))
                            return "modelRanking: integer[] expected";
                }
                if (message.personalBestTime != null && message.hasOwnProperty("personalBestTime"))
                    if (!$util.isInteger(message.personalBestTime))
                        return "personalBestTime: integer expected";
                if (message.pbSection_1Time != null && message.hasOwnProperty("pbSection_1Time"))
                    if (!$util.isInteger(message.pbSection_1Time))
                        return "pbSection_1Time: integer expected";
                if (message.pbSection_2Time != null && message.hasOwnProperty("pbSection_2Time"))
                    if (!$util.isInteger(message.pbSection_2Time))
                        return "pbSection_2Time: integer expected";
                if (message.pbSection_3Time != null && message.hasOwnProperty("pbSection_3Time"))
                    if (!$util.isInteger(message.pbSection_3Time))
                        return "pbSection_3Time: integer expected";
                if (message.pbSection_4Time != null && message.hasOwnProperty("pbSection_4Time"))
                    if (!$util.isInteger(message.pbSection_4Time))
                        return "pbSection_4Time: integer expected";
                if (message.pbSection_5Time != null && message.hasOwnProperty("pbSection_5Time"))
                    if (!$util.isInteger(message.pbSection_5Time))
                        return "pbSection_5Time: integer expected";
                if (message.pbSection_6Time != null && message.hasOwnProperty("pbSection_6Time"))
                    if (!$util.isInteger(message.pbSection_6Time))
                        return "pbSection_6Time: integer expected";
                if (message.pbSection_7Time != null && message.hasOwnProperty("pbSection_7Time"))
                    if (!$util.isInteger(message.pbSection_7Time))
                        return "pbSection_7Time: integer expected";
                return null;
            };

            /**
             * Creates a LoadTimeAttackRecordResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadTimeAttackRecordResponse} LoadTimeAttackRecordResponse
             */
            LoadTimeAttackRecordResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadTimeAttackRecordResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadTimeAttackRecordResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.wholeRanking) {
                    if (!Array.isArray(object.wholeRanking))
                        throw TypeError(".wm5.protobuf.LoadTimeAttackRecordResponse.wholeRanking: array expected");
                    message.wholeRanking = [];
                    for (let i = 0; i < object.wholeRanking.length; ++i)
                        message.wholeRanking[i] = object.wholeRanking[i] >>> 0;
                }
                if (object.modelRanking) {
                    if (!Array.isArray(object.modelRanking))
                        throw TypeError(".wm5.protobuf.LoadTimeAttackRecordResponse.modelRanking: array expected");
                    message.modelRanking = [];
                    for (let i = 0; i < object.modelRanking.length; ++i)
                        message.modelRanking[i] = object.modelRanking[i] >>> 0;
                }
                if (object.personalBestTime != null)
                    message.personalBestTime = object.personalBestTime >>> 0;
                if (object.pbSection_1Time != null)
                    message.pbSection_1Time = object.pbSection_1Time >>> 0;
                if (object.pbSection_2Time != null)
                    message.pbSection_2Time = object.pbSection_2Time >>> 0;
                if (object.pbSection_3Time != null)
                    message.pbSection_3Time = object.pbSection_3Time >>> 0;
                if (object.pbSection_4Time != null)
                    message.pbSection_4Time = object.pbSection_4Time >>> 0;
                if (object.pbSection_5Time != null)
                    message.pbSection_5Time = object.pbSection_5Time >>> 0;
                if (object.pbSection_6Time != null)
                    message.pbSection_6Time = object.pbSection_6Time >>> 0;
                if (object.pbSection_7Time != null)
                    message.pbSection_7Time = object.pbSection_7Time >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadTimeAttackRecordResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @static
             * @param {wm5.protobuf.LoadTimeAttackRecordResponse} message LoadTimeAttackRecordResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadTimeAttackRecordResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.wholeRanking = [];
                    object.modelRanking = [];
                }
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.personalBestTime = 0;
                    object.pbSection_1Time = 0;
                    object.pbSection_2Time = 0;
                    object.pbSection_3Time = 0;
                    object.pbSection_4Time = 0;
                    object.pbSection_5Time = 0;
                    object.pbSection_6Time = 0;
                    object.pbSection_7Time = 0;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.wholeRanking && message.wholeRanking.length) {
                    object.wholeRanking = [];
                    for (let j = 0; j < message.wholeRanking.length; ++j)
                        object.wholeRanking[j] = message.wholeRanking[j];
                }
                if (message.modelRanking && message.modelRanking.length) {
                    object.modelRanking = [];
                    for (let j = 0; j < message.modelRanking.length; ++j)
                        object.modelRanking[j] = message.modelRanking[j];
                }
                if (message.personalBestTime != null && message.hasOwnProperty("personalBestTime"))
                    object.personalBestTime = message.personalBestTime;
                if (message.pbSection_1Time != null && message.hasOwnProperty("pbSection_1Time"))
                    object.pbSection_1Time = message.pbSection_1Time;
                if (message.pbSection_2Time != null && message.hasOwnProperty("pbSection_2Time"))
                    object.pbSection_2Time = message.pbSection_2Time;
                if (message.pbSection_3Time != null && message.hasOwnProperty("pbSection_3Time"))
                    object.pbSection_3Time = message.pbSection_3Time;
                if (message.pbSection_4Time != null && message.hasOwnProperty("pbSection_4Time"))
                    object.pbSection_4Time = message.pbSection_4Time;
                if (message.pbSection_5Time != null && message.hasOwnProperty("pbSection_5Time"))
                    object.pbSection_5Time = message.pbSection_5Time;
                if (message.pbSection_6Time != null && message.hasOwnProperty("pbSection_6Time"))
                    object.pbSection_6Time = message.pbSection_6Time;
                if (message.pbSection_7Time != null && message.hasOwnProperty("pbSection_7Time"))
                    object.pbSection_7Time = message.pbSection_7Time;
                return object;
            };

            /**
             * Converts this LoadTimeAttackRecordResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadTimeAttackRecordResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadTimeAttackRecordResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadTimeAttackRecordResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadTimeAttackRecordResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadTimeAttackRecordResponse";
            };

            return LoadTimeAttackRecordResponse;
        })();

        protobuf.SaveTerminalResultRequest = (function() {

            /**
             * Properties of a SaveTerminalResultRequest.
             * @memberof wm5.protobuf
             * @interface ISaveTerminalResultRequest
             * @property {number} userId SaveTerminalResultRequest userId
             * @property {number} timestamp SaveTerminalResultRequest timestamp
             * @property {Array.<number>|null} [carOrder] SaveTerminalResultRequest carOrder
             * @property {number|null} [teamCarId] SaveTerminalResultRequest teamCarId
             * @property {Array.<wm5.protobuf.TutorialType>|null} [confirmedTutorials] SaveTerminalResultRequest confirmedTutorials
             * @property {boolean|null} [teamNoticesConfirmed] SaveTerminalResultRequest teamNoticesConfirmed
             * @property {boolean|null} [teamMenuEntered] SaveTerminalResultRequest teamMenuEntered
             * @property {boolean|null} [garageMenuEntered] SaveTerminalResultRequest garageMenuEntered
             */

            /**
             * Constructs a new SaveTerminalResultRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a SaveTerminalResultRequest.
             * @implements ISaveTerminalResultRequest
             * @constructor
             * @param {wm5.protobuf.ISaveTerminalResultRequest=} [properties] Properties to set
             */
            function SaveTerminalResultRequest(properties) {
                this.carOrder = [];
                this.confirmedTutorials = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SaveTerminalResultRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @instance
             */
            SaveTerminalResultRequest.prototype.userId = 0;

            /**
             * SaveTerminalResultRequest timestamp.
             * @member {number} timestamp
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @instance
             */
            SaveTerminalResultRequest.prototype.timestamp = 0;

            /**
             * SaveTerminalResultRequest carOrder.
             * @member {Array.<number>} carOrder
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @instance
             */
            SaveTerminalResultRequest.prototype.carOrder = $util.emptyArray;

            /**
             * SaveTerminalResultRequest teamCarId.
             * @member {number} teamCarId
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @instance
             */
            SaveTerminalResultRequest.prototype.teamCarId = 0;

            /**
             * SaveTerminalResultRequest confirmedTutorials.
             * @member {Array.<wm5.protobuf.TutorialType>} confirmedTutorials
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @instance
             */
            SaveTerminalResultRequest.prototype.confirmedTutorials = $util.emptyArray;

            /**
             * SaveTerminalResultRequest teamNoticesConfirmed.
             * @member {boolean} teamNoticesConfirmed
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @instance
             */
            SaveTerminalResultRequest.prototype.teamNoticesConfirmed = false;

            /**
             * SaveTerminalResultRequest teamMenuEntered.
             * @member {boolean} teamMenuEntered
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @instance
             */
            SaveTerminalResultRequest.prototype.teamMenuEntered = false;

            /**
             * SaveTerminalResultRequest garageMenuEntered.
             * @member {boolean} garageMenuEntered
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @instance
             */
            SaveTerminalResultRequest.prototype.garageMenuEntered = false;

            /**
             * Creates a new SaveTerminalResultRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @static
             * @param {wm5.protobuf.ISaveTerminalResultRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.SaveTerminalResultRequest} SaveTerminalResultRequest instance
             */
            SaveTerminalResultRequest.create = function create(properties) {
                return new SaveTerminalResultRequest(properties);
            };

            /**
             * Encodes the specified SaveTerminalResultRequest message. Does not implicitly {@link wm5.protobuf.SaveTerminalResultRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @static
             * @param {wm5.protobuf.ISaveTerminalResultRequest} message SaveTerminalResultRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveTerminalResultRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.timestamp);
                if (message.carOrder != null && message.carOrder.length)
                    for (let i = 0; i < message.carOrder.length; ++i)
                        writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.carOrder[i]);
                if (message.teamCarId != null && Object.hasOwnProperty.call(message, "teamCarId"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.teamCarId);
                if (message.confirmedTutorials != null && message.confirmedTutorials.length)
                    for (let i = 0; i < message.confirmedTutorials.length; ++i)
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.confirmedTutorials[i]);
                if (message.teamNoticesConfirmed != null && Object.hasOwnProperty.call(message, "teamNoticesConfirmed"))
                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.teamNoticesConfirmed);
                if (message.teamMenuEntered != null && Object.hasOwnProperty.call(message, "teamMenuEntered"))
                    writer.uint32(/* id 7, wireType 0 =*/56).bool(message.teamMenuEntered);
                if (message.garageMenuEntered != null && Object.hasOwnProperty.call(message, "garageMenuEntered"))
                    writer.uint32(/* id 8, wireType 0 =*/64).bool(message.garageMenuEntered);
                return writer;
            };

            /**
             * Encodes the specified SaveTerminalResultRequest message, length delimited. Does not implicitly {@link wm5.protobuf.SaveTerminalResultRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @static
             * @param {wm5.protobuf.ISaveTerminalResultRequest} message SaveTerminalResultRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveTerminalResultRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SaveTerminalResultRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SaveTerminalResultRequest} SaveTerminalResultRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveTerminalResultRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveTerminalResultRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.timestamp = reader.uint32();
                            break;
                        }
                    case 3: {
                            if (!(message.carOrder && message.carOrder.length))
                                message.carOrder = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.carOrder.push(reader.uint32());
                            } else
                                message.carOrder.push(reader.uint32());
                            break;
                        }
                    case 4: {
                            message.teamCarId = reader.uint32();
                            break;
                        }
                    case 5: {
                            if (!(message.confirmedTutorials && message.confirmedTutorials.length))
                                message.confirmedTutorials = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.confirmedTutorials.push(reader.int32());
                            } else
                                message.confirmedTutorials.push(reader.int32());
                            break;
                        }
                    case 6: {
                            message.teamNoticesConfirmed = reader.bool();
                            break;
                        }
                    case 7: {
                            message.teamMenuEntered = reader.bool();
                            break;
                        }
                    case 8: {
                            message.garageMenuEntered = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                if (!message.hasOwnProperty("timestamp"))
                    throw $util.ProtocolError("missing required 'timestamp'", { instance: message });
                return message;
            };

            /**
             * Decodes a SaveTerminalResultRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SaveTerminalResultRequest} SaveTerminalResultRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveTerminalResultRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SaveTerminalResultRequest message.
             * @function verify
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SaveTerminalResultRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                if (!$util.isInteger(message.timestamp))
                    return "timestamp: integer expected";
                if (message.carOrder != null && message.hasOwnProperty("carOrder")) {
                    if (!Array.isArray(message.carOrder))
                        return "carOrder: array expected";
                    for (let i = 0; i < message.carOrder.length; ++i)
                        if (!$util.isInteger(message.carOrder[i]))
                            return "carOrder: integer[] expected";
                }
                if (message.teamCarId != null && message.hasOwnProperty("teamCarId"))
                    if (!$util.isInteger(message.teamCarId))
                        return "teamCarId: integer expected";
                if (message.confirmedTutorials != null && message.hasOwnProperty("confirmedTutorials")) {
                    if (!Array.isArray(message.confirmedTutorials))
                        return "confirmedTutorials: array expected";
                    for (let i = 0; i < message.confirmedTutorials.length; ++i)
                        switch (message.confirmedTutorials[i]) {
                        default:
                            return "confirmedTutorials: enum value[] expected";
                        case 1:
                        case 2:
                        case 4:
                        case 8:
                        case 16:
                        case 32:
                        case 64:
                        case 128:
                        case 256:
                        case 512:
                        case 1024:
                        case 2048:
                        case 4096:
                        case 8192:
                        case 16384:
                        case 32768:
                        case 65536:
                        case 131072:
                        case 262144:
                        case 524288:
                        case 1048576:
                        case 2097152:
                        case 4194304:
                        case 8388608:
                        case 16777216:
                        case 33554432:
                        case 67108864:
                        case 134217728:
                        case 268435456:
                        case 536870912:
                        case 1073741824:
                            break;
                        }
                }
                if (message.teamNoticesConfirmed != null && message.hasOwnProperty("teamNoticesConfirmed"))
                    if (typeof message.teamNoticesConfirmed !== "boolean")
                        return "teamNoticesConfirmed: boolean expected";
                if (message.teamMenuEntered != null && message.hasOwnProperty("teamMenuEntered"))
                    if (typeof message.teamMenuEntered !== "boolean")
                        return "teamMenuEntered: boolean expected";
                if (message.garageMenuEntered != null && message.hasOwnProperty("garageMenuEntered"))
                    if (typeof message.garageMenuEntered !== "boolean")
                        return "garageMenuEntered: boolean expected";
                return null;
            };

            /**
             * Creates a SaveTerminalResultRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SaveTerminalResultRequest} SaveTerminalResultRequest
             */
            SaveTerminalResultRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SaveTerminalResultRequest)
                    return object;
                let message = new $root.wm5.protobuf.SaveTerminalResultRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.timestamp != null)
                    message.timestamp = object.timestamp >>> 0;
                if (object.carOrder) {
                    if (!Array.isArray(object.carOrder))
                        throw TypeError(".wm5.protobuf.SaveTerminalResultRequest.carOrder: array expected");
                    message.carOrder = [];
                    for (let i = 0; i < object.carOrder.length; ++i)
                        message.carOrder[i] = object.carOrder[i] >>> 0;
                }
                if (object.teamCarId != null)
                    message.teamCarId = object.teamCarId >>> 0;
                if (object.confirmedTutorials) {
                    if (!Array.isArray(object.confirmedTutorials))
                        throw TypeError(".wm5.protobuf.SaveTerminalResultRequest.confirmedTutorials: array expected");
                    message.confirmedTutorials = [];
                    for (let i = 0; i < object.confirmedTutorials.length; ++i)
                        switch (object.confirmedTutorials[i]) {
                        default:
                            if (typeof object.confirmedTutorials[i] === "number") {
                                message.confirmedTutorials[i] = object.confirmedTutorials[i];
                                break;
                            }
                        case "TUTORIAL_STORY":
                        case 1:
                            message.confirmedTutorials[i] = 1;
                            break;
                        case "TUTORIAL_TIME_ATTACK":
                        case 2:
                            message.confirmedTutorials[i] = 2;
                            break;
                        case "TUTORIAL_GHOST":
                        case 4:
                            message.confirmedTutorials[i] = 4;
                            break;
                        case "TUTORIAL_GHOST_CHALLENGE":
                        case 8:
                            message.confirmedTutorials[i] = 8;
                            break;
                        case "TUTORIAL_GHOST_LEVEL":
                        case 16:
                            message.confirmedTutorials[i] = 16;
                            break;
                        case "TUTORIAL_UNUSED_1":
                        case 32:
                            message.confirmedTutorials[i] = 32;
                            break;
                        case "TUTORIAL_GHOST_SEARCH":
                        case 64:
                            message.confirmedTutorials[i] = 64;
                            break;
                        case "TUTORIAL_GHOST_COMPETITION":
                        case 128:
                            message.confirmedTutorials[i] = 128;
                            break;
                        case "TUTORIAL_HP600_CARD":
                        case 256:
                            message.confirmedTutorials[i] = 256;
                            break;
                        case "TUTORIAL_UNUSED_2":
                        case 512:
                            message.confirmedTutorials[i] = 512;
                            break;
                        case "TUTORIAL_COMPETITION_QUALIFIED":
                        case 1024:
                            message.confirmedTutorials[i] = 1024;
                            break;
                        case "TUTORIAL_COMPETITION_TERMINAL":
                        case 2048:
                            message.confirmedTutorials[i] = 2048;
                            break;
                        case "TUTORIAL_COMPETITION_NOTICE":
                        case 4096:
                            message.confirmedTutorials[i] = 4096;
                            break;
                        case "TUTORIAL_COMPETITION_FINISHED":
                        case 8192:
                            message.confirmedTutorials[i] = 8192;
                            break;
                        case "TUTORIAL_UNUSED_3":
                        case 16384:
                            message.confirmedTutorials[i] = 16384;
                            break;
                        case "TUTORIAL_BINGO_RULE":
                        case 32768:
                            message.confirmedTutorials[i] = 32768;
                            break;
                        case "TUTORIAL_BINGO_NOTICE":
                        case 65536:
                            message.confirmedTutorials[i] = 65536;
                            break;
                        case "TUTORIAL_UNUSED_4":
                        case 131072:
                            message.confirmedTutorials[i] = 131072;
                            break;
                        case "TUTORIAL_SHOP_FOR_DRIVE":
                        case 262144:
                            message.confirmedTutorials[i] = 262144;
                            break;
                        case "TUTORIAL_SHOP_GRADE_GAUGE":
                        case 524288:
                            message.confirmedTutorials[i] = 524288;
                            break;
                        case "TUTORIAL_GHOST_STAMP":
                        case 1048576:
                            message.confirmedTutorials[i] = 1048576;
                            break;
                        case "TUTORIAL_GHOST_STAMP_DECLINED":
                        case 2097152:
                            message.confirmedTutorials[i] = 2097152;
                            break;
                        case "TUTORIAL_GHOST_STAMP_FRIENDS":
                        case 4194304:
                            message.confirmedTutorials[i] = 4194304;
                            break;
                        case "TUTORIAL_TERMINAL_SCRATCH":
                        case 8388608:
                            message.confirmedTutorials[i] = 8388608;
                            break;
                        case "TUTORIAL_UNUSED_5":
                        case 16777216:
                            message.confirmedTutorials[i] = 16777216;
                            break;
                        case "TUTORIAL_INVITE_FRIEND_CAMPAIGN":
                        case 33554432:
                            message.confirmedTutorials[i] = 33554432;
                            break;
                        case "TUTORIAL_CAR_COUPON_FULL_TUNED_RECEIVABLE":
                        case 67108864:
                            message.confirmedTutorials[i] = 67108864;
                            break;
                        case "TUTORIAL_VS_CONTINUE_TICKET":
                        case 134217728:
                            message.confirmedTutorials[i] = 134217728;
                            break;
                        case "TUTORIAL_EXPEDITION":
                        case 268435456:
                            message.confirmedTutorials[i] = 268435456;
                            break;
                        case "TUTORIAL_EXPEDITION_WANTED":
                        case 536870912:
                            message.confirmedTutorials[i] = 536870912;
                            break;
                        case "TUTORIAL_EXPEDITION_REWARD":
                        case 1073741824:
                            message.confirmedTutorials[i] = 1073741824;
                            break;
                        }
                }
                if (object.teamNoticesConfirmed != null)
                    message.teamNoticesConfirmed = Boolean(object.teamNoticesConfirmed);
                if (object.teamMenuEntered != null)
                    message.teamMenuEntered = Boolean(object.teamMenuEntered);
                if (object.garageMenuEntered != null)
                    message.garageMenuEntered = Boolean(object.garageMenuEntered);
                return message;
            };

            /**
             * Creates a plain object from a SaveTerminalResultRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @static
             * @param {wm5.protobuf.SaveTerminalResultRequest} message SaveTerminalResultRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SaveTerminalResultRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.carOrder = [];
                    object.confirmedTutorials = [];
                }
                if (options.defaults) {
                    object.userId = 0;
                    object.timestamp = 0;
                    object.teamCarId = 0;
                    object.teamNoticesConfirmed = false;
                    object.teamMenuEntered = false;
                    object.garageMenuEntered = false;
                }
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                    object.timestamp = message.timestamp;
                if (message.carOrder && message.carOrder.length) {
                    object.carOrder = [];
                    for (let j = 0; j < message.carOrder.length; ++j)
                        object.carOrder[j] = message.carOrder[j];
                }
                if (message.teamCarId != null && message.hasOwnProperty("teamCarId"))
                    object.teamCarId = message.teamCarId;
                if (message.confirmedTutorials && message.confirmedTutorials.length) {
                    object.confirmedTutorials = [];
                    for (let j = 0; j < message.confirmedTutorials.length; ++j)
                        object.confirmedTutorials[j] = options.enums === String ? $root.wm5.protobuf.TutorialType[message.confirmedTutorials[j]] === undefined ? message.confirmedTutorials[j] : $root.wm5.protobuf.TutorialType[message.confirmedTutorials[j]] : message.confirmedTutorials[j];
                }
                if (message.teamNoticesConfirmed != null && message.hasOwnProperty("teamNoticesConfirmed"))
                    object.teamNoticesConfirmed = message.teamNoticesConfirmed;
                if (message.teamMenuEntered != null && message.hasOwnProperty("teamMenuEntered"))
                    object.teamMenuEntered = message.teamMenuEntered;
                if (message.garageMenuEntered != null && message.hasOwnProperty("garageMenuEntered"))
                    object.garageMenuEntered = message.garageMenuEntered;
                return object;
            };

            /**
             * Converts this SaveTerminalResultRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SaveTerminalResultRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SaveTerminalResultRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.SaveTerminalResultRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SaveTerminalResultRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SaveTerminalResultRequest";
            };

            return SaveTerminalResultRequest;
        })();

        protobuf.SaveTerminalResultResponse = (function() {

            /**
             * Properties of a SaveTerminalResultResponse.
             * @memberof wm5.protobuf
             * @interface ISaveTerminalResultResponse
             * @property {wm5.protobuf.ErrorCode} error SaveTerminalResultResponse error
             */

            /**
             * Constructs a new SaveTerminalResultResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a SaveTerminalResultResponse.
             * @implements ISaveTerminalResultResponse
             * @constructor
             * @param {wm5.protobuf.ISaveTerminalResultResponse=} [properties] Properties to set
             */
            function SaveTerminalResultResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SaveTerminalResultResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.SaveTerminalResultResponse
             * @instance
             */
            SaveTerminalResultResponse.prototype.error = 0;

            /**
             * Creates a new SaveTerminalResultResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SaveTerminalResultResponse
             * @static
             * @param {wm5.protobuf.ISaveTerminalResultResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.SaveTerminalResultResponse} SaveTerminalResultResponse instance
             */
            SaveTerminalResultResponse.create = function create(properties) {
                return new SaveTerminalResultResponse(properties);
            };

            /**
             * Encodes the specified SaveTerminalResultResponse message. Does not implicitly {@link wm5.protobuf.SaveTerminalResultResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SaveTerminalResultResponse
             * @static
             * @param {wm5.protobuf.ISaveTerminalResultResponse} message SaveTerminalResultResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveTerminalResultResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified SaveTerminalResultResponse message, length delimited. Does not implicitly {@link wm5.protobuf.SaveTerminalResultResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SaveTerminalResultResponse
             * @static
             * @param {wm5.protobuf.ISaveTerminalResultResponse} message SaveTerminalResultResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveTerminalResultResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SaveTerminalResultResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SaveTerminalResultResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SaveTerminalResultResponse} SaveTerminalResultResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveTerminalResultResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveTerminalResultResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a SaveTerminalResultResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SaveTerminalResultResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SaveTerminalResultResponse} SaveTerminalResultResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveTerminalResultResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SaveTerminalResultResponse message.
             * @function verify
             * @memberof wm5.protobuf.SaveTerminalResultResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SaveTerminalResultResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a SaveTerminalResultResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SaveTerminalResultResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SaveTerminalResultResponse} SaveTerminalResultResponse
             */
            SaveTerminalResultResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SaveTerminalResultResponse)
                    return object;
                let message = new $root.wm5.protobuf.SaveTerminalResultResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a SaveTerminalResultResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SaveTerminalResultResponse
             * @static
             * @param {wm5.protobuf.SaveTerminalResultResponse} message SaveTerminalResultResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SaveTerminalResultResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this SaveTerminalResultResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SaveTerminalResultResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SaveTerminalResultResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SaveTerminalResultResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.SaveTerminalResultResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SaveTerminalResultResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SaveTerminalResultResponse";
            };

            return SaveTerminalResultResponse;
        })();

        protobuf.PingRequest = (function() {

            /**
             * Properties of a PingRequest.
             * @memberof wm5.protobuf
             * @interface IPingRequest
             * @property {number|null} [ping] PingRequest ping
             */

            /**
             * Constructs a new PingRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a PingRequest.
             * @implements IPingRequest
             * @constructor
             * @param {wm5.protobuf.IPingRequest=} [properties] Properties to set
             */
            function PingRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * PingRequest ping.
             * @member {number} ping
             * @memberof wm5.protobuf.PingRequest
             * @instance
             */
            PingRequest.prototype.ping = 0;

            /**
             * Creates a new PingRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.PingRequest
             * @static
             * @param {wm5.protobuf.IPingRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.PingRequest} PingRequest instance
             */
            PingRequest.create = function create(properties) {
                return new PingRequest(properties);
            };

            /**
             * Encodes the specified PingRequest message. Does not implicitly {@link wm5.protobuf.PingRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.PingRequest
             * @static
             * @param {wm5.protobuf.IPingRequest} message PingRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PingRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.ping != null && Object.hasOwnProperty.call(message, "ping"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.ping);
                return writer;
            };

            /**
             * Encodes the specified PingRequest message, length delimited. Does not implicitly {@link wm5.protobuf.PingRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.PingRequest
             * @static
             * @param {wm5.protobuf.IPingRequest} message PingRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PingRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a PingRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.PingRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.PingRequest} PingRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PingRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.PingRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.ping = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a PingRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.PingRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.PingRequest} PingRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PingRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a PingRequest message.
             * @function verify
             * @memberof wm5.protobuf.PingRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PingRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.ping != null && message.hasOwnProperty("ping"))
                    if (!$util.isInteger(message.ping))
                        return "ping: integer expected";
                return null;
            };

            /**
             * Creates a PingRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.PingRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.PingRequest} PingRequest
             */
            PingRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.PingRequest)
                    return object;
                let message = new $root.wm5.protobuf.PingRequest();
                if (object.ping != null)
                    message.ping = object.ping >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a PingRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.PingRequest
             * @static
             * @param {wm5.protobuf.PingRequest} message PingRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PingRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.ping = 0;
                if (message.ping != null && message.hasOwnProperty("ping"))
                    object.ping = message.ping;
                return object;
            };

            /**
             * Converts this PingRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.PingRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PingRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for PingRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.PingRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PingRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.PingRequest";
            };

            return PingRequest;
        })();

        protobuf.PingResponse = (function() {

            /**
             * Properties of a PingResponse.
             * @memberof wm5.protobuf
             * @interface IPingResponse
             * @property {wm5.protobuf.ErrorCode} error PingResponse error
             * @property {number} pong PingResponse pong
             * @property {boolean|null} [bnidServerAvailable] PingResponse bnidServerAvailable
             * @property {boolean|null} [banacoinAvailable] PingResponse banacoinAvailable
             */

            /**
             * Constructs a new PingResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a PingResponse.
             * @implements IPingResponse
             * @constructor
             * @param {wm5.protobuf.IPingResponse=} [properties] Properties to set
             */
            function PingResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * PingResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.PingResponse
             * @instance
             */
            PingResponse.prototype.error = 0;

            /**
             * PingResponse pong.
             * @member {number} pong
             * @memberof wm5.protobuf.PingResponse
             * @instance
             */
            PingResponse.prototype.pong = 0;

            /**
             * PingResponse bnidServerAvailable.
             * @member {boolean} bnidServerAvailable
             * @memberof wm5.protobuf.PingResponse
             * @instance
             */
            PingResponse.prototype.bnidServerAvailable = false;

            /**
             * PingResponse banacoinAvailable.
             * @member {boolean} banacoinAvailable
             * @memberof wm5.protobuf.PingResponse
             * @instance
             */
            PingResponse.prototype.banacoinAvailable = false;

            /**
             * Creates a new PingResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.PingResponse
             * @static
             * @param {wm5.protobuf.IPingResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.PingResponse} PingResponse instance
             */
            PingResponse.create = function create(properties) {
                return new PingResponse(properties);
            };

            /**
             * Encodes the specified PingResponse message. Does not implicitly {@link wm5.protobuf.PingResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.PingResponse
             * @static
             * @param {wm5.protobuf.IPingResponse} message PingResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PingResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.pong);
                if (message.bnidServerAvailable != null && Object.hasOwnProperty.call(message, "bnidServerAvailable"))
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.bnidServerAvailable);
                if (message.banacoinAvailable != null && Object.hasOwnProperty.call(message, "banacoinAvailable"))
                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.banacoinAvailable);
                return writer;
            };

            /**
             * Encodes the specified PingResponse message, length delimited. Does not implicitly {@link wm5.protobuf.PingResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.PingResponse
             * @static
             * @param {wm5.protobuf.IPingResponse} message PingResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PingResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a PingResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.PingResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.PingResponse} PingResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PingResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.PingResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.pong = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.bnidServerAvailable = reader.bool();
                            break;
                        }
                    case 4: {
                            message.banacoinAvailable = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("pong"))
                    throw $util.ProtocolError("missing required 'pong'", { instance: message });
                return message;
            };

            /**
             * Decodes a PingResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.PingResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.PingResponse} PingResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PingResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a PingResponse message.
             * @function verify
             * @memberof wm5.protobuf.PingResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PingResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (!$util.isInteger(message.pong))
                    return "pong: integer expected";
                if (message.bnidServerAvailable != null && message.hasOwnProperty("bnidServerAvailable"))
                    if (typeof message.bnidServerAvailable !== "boolean")
                        return "bnidServerAvailable: boolean expected";
                if (message.banacoinAvailable != null && message.hasOwnProperty("banacoinAvailable"))
                    if (typeof message.banacoinAvailable !== "boolean")
                        return "banacoinAvailable: boolean expected";
                return null;
            };

            /**
             * Creates a PingResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.PingResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.PingResponse} PingResponse
             */
            PingResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.PingResponse)
                    return object;
                let message = new $root.wm5.protobuf.PingResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.pong != null)
                    message.pong = object.pong >>> 0;
                if (object.bnidServerAvailable != null)
                    message.bnidServerAvailable = Boolean(object.bnidServerAvailable);
                if (object.banacoinAvailable != null)
                    message.banacoinAvailable = Boolean(object.banacoinAvailable);
                return message;
            };

            /**
             * Creates a plain object from a PingResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.PingResponse
             * @static
             * @param {wm5.protobuf.PingResponse} message PingResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PingResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.pong = 0;
                    object.bnidServerAvailable = false;
                    object.banacoinAvailable = false;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.pong != null && message.hasOwnProperty("pong"))
                    object.pong = message.pong;
                if (message.bnidServerAvailable != null && message.hasOwnProperty("bnidServerAvailable"))
                    object.bnidServerAvailable = message.bnidServerAvailable;
                if (message.banacoinAvailable != null && message.hasOwnProperty("banacoinAvailable"))
                    object.banacoinAvailable = message.banacoinAvailable;
                return object;
            };

            /**
             * Converts this PingResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.PingResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PingResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for PingResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.PingResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PingResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.PingResponse";
            };

            return PingResponse;
        })();

        protobuf.LoadTerminalInformationRequest = (function() {

            /**
             * Properties of a LoadTerminalInformationRequest.
             * @memberof wm5.protobuf
             * @interface ILoadTerminalInformationRequest
             * @property {number} userId LoadTerminalInformationRequest userId
             */

            /**
             * Constructs a new LoadTerminalInformationRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadTerminalInformationRequest.
             * @implements ILoadTerminalInformationRequest
             * @constructor
             * @param {wm5.protobuf.ILoadTerminalInformationRequest=} [properties] Properties to set
             */
            function LoadTerminalInformationRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadTerminalInformationRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.LoadTerminalInformationRequest
             * @instance
             */
            LoadTerminalInformationRequest.prototype.userId = 0;

            /**
             * Creates a new LoadTerminalInformationRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadTerminalInformationRequest
             * @static
             * @param {wm5.protobuf.ILoadTerminalInformationRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadTerminalInformationRequest} LoadTerminalInformationRequest instance
             */
            LoadTerminalInformationRequest.create = function create(properties) {
                return new LoadTerminalInformationRequest(properties);
            };

            /**
             * Encodes the specified LoadTerminalInformationRequest message. Does not implicitly {@link wm5.protobuf.LoadTerminalInformationRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadTerminalInformationRequest
             * @static
             * @param {wm5.protobuf.ILoadTerminalInformationRequest} message LoadTerminalInformationRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadTerminalInformationRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                return writer;
            };

            /**
             * Encodes the specified LoadTerminalInformationRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadTerminalInformationRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadTerminalInformationRequest
             * @static
             * @param {wm5.protobuf.ILoadTerminalInformationRequest} message LoadTerminalInformationRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadTerminalInformationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadTerminalInformationRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadTerminalInformationRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadTerminalInformationRequest} LoadTerminalInformationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadTerminalInformationRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadTerminalInformationRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadTerminalInformationRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadTerminalInformationRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadTerminalInformationRequest} LoadTerminalInformationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadTerminalInformationRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadTerminalInformationRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadTerminalInformationRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadTerminalInformationRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                return null;
            };

            /**
             * Creates a LoadTerminalInformationRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadTerminalInformationRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadTerminalInformationRequest} LoadTerminalInformationRequest
             */
            LoadTerminalInformationRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadTerminalInformationRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadTerminalInformationRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadTerminalInformationRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadTerminalInformationRequest
             * @static
             * @param {wm5.protobuf.LoadTerminalInformationRequest} message LoadTerminalInformationRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadTerminalInformationRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.userId = 0;
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                return object;
            };

            /**
             * Converts this LoadTerminalInformationRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadTerminalInformationRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadTerminalInformationRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadTerminalInformationRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadTerminalInformationRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadTerminalInformationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadTerminalInformationRequest";
            };

            return LoadTerminalInformationRequest;
        })();

        protobuf.LoadTerminalInformationResponse = (function() {

            /**
             * Properties of a LoadTerminalInformationResponse.
             * @memberof wm5.protobuf
             * @interface ILoadTerminalInformationResponse
             * @property {wm5.protobuf.ErrorCode} error LoadTerminalInformationResponse error
             * @property {number|null} [teamCreatedAt] LoadTerminalInformationResponse teamCreatedAt
             * @property {boolean|null} [teamApplying] LoadTerminalInformationResponse teamApplying
             * @property {wm5.protobuf.ITeam|null} [team] LoadTerminalInformationResponse team
             * @property {number|null} [numOfPendingMembers] LoadTerminalInformationResponse numOfPendingMembers
             * @property {Array.<wm5.protobuf.LoadTerminalInformationResponse.ITeamNews>|null} [teamNewsEntries] LoadTerminalInformationResponse teamNewsEntries
             * @property {Array.<wm5.protobuf.ITeamApplicant>|null} [applicants] LoadTerminalInformationResponse applicants
             * @property {number|null} [teamCarId] LoadTerminalInformationResponse teamCarId
             * @property {boolean} maxiGoldReceivable LoadTerminalInformationResponse maxiGoldReceivable
             * @property {boolean} prizeReceivable LoadTerminalInformationResponse prizeReceivable
             * @property {Array.<wm5.protobuf.LoadTerminalInformationResponse.ITerminalNotice>|null} [noticeEntries] LoadTerminalInformationResponse noticeEntries
             * @property {Array.<string>|null} [noticeMessage] LoadTerminalInformationResponse noticeMessage
             * @property {Array.<wm5.protobuf.NoticeEntry>|null} [noticeWindow] LoadTerminalInformationResponse noticeWindow
             * @property {Array.<string>|null} [noticeWindowMessage] LoadTerminalInformationResponse noticeWindowMessage
             * @property {wm5.protobuf.ITransferNotice} transferNotice LoadTerminalInformationResponse transferNotice
             * @property {boolean} announceFeature LoadTerminalInformationResponse announceFeature
             * @property {boolean} freeScratched LoadTerminalInformationResponse freeScratched
             */

            /**
             * Constructs a new LoadTerminalInformationResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadTerminalInformationResponse.
             * @implements ILoadTerminalInformationResponse
             * @constructor
             * @param {wm5.protobuf.ILoadTerminalInformationResponse=} [properties] Properties to set
             */
            function LoadTerminalInformationResponse(properties) {
                this.teamNewsEntries = [];
                this.applicants = [];
                this.noticeEntries = [];
                this.noticeMessage = [];
                this.noticeWindow = [];
                this.noticeWindowMessage = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadTerminalInformationResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             */
            LoadTerminalInformationResponse.prototype.error = 0;

            /**
             * LoadTerminalInformationResponse teamCreatedAt.
             * @member {number} teamCreatedAt
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             */
            LoadTerminalInformationResponse.prototype.teamCreatedAt = 0;

            /**
             * LoadTerminalInformationResponse teamApplying.
             * @member {boolean} teamApplying
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             */
            LoadTerminalInformationResponse.prototype.teamApplying = false;

            /**
             * LoadTerminalInformationResponse team.
             * @member {wm5.protobuf.ITeam|null|undefined} team
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             */
            LoadTerminalInformationResponse.prototype.team = null;

            /**
             * LoadTerminalInformationResponse numOfPendingMembers.
             * @member {number} numOfPendingMembers
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             */
            LoadTerminalInformationResponse.prototype.numOfPendingMembers = 0;

            /**
             * LoadTerminalInformationResponse teamNewsEntries.
             * @member {Array.<wm5.protobuf.LoadTerminalInformationResponse.ITeamNews>} teamNewsEntries
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             */
            LoadTerminalInformationResponse.prototype.teamNewsEntries = $util.emptyArray;

            /**
             * LoadTerminalInformationResponse applicants.
             * @member {Array.<wm5.protobuf.ITeamApplicant>} applicants
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             */
            LoadTerminalInformationResponse.prototype.applicants = $util.emptyArray;

            /**
             * LoadTerminalInformationResponse teamCarId.
             * @member {number} teamCarId
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             */
            LoadTerminalInformationResponse.prototype.teamCarId = 0;

            /**
             * LoadTerminalInformationResponse maxiGoldReceivable.
             * @member {boolean} maxiGoldReceivable
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             */
            LoadTerminalInformationResponse.prototype.maxiGoldReceivable = false;

            /**
             * LoadTerminalInformationResponse prizeReceivable.
             * @member {boolean} prizeReceivable
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             */
            LoadTerminalInformationResponse.prototype.prizeReceivable = false;

            /**
             * LoadTerminalInformationResponse noticeEntries.
             * @member {Array.<wm5.protobuf.LoadTerminalInformationResponse.ITerminalNotice>} noticeEntries
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             */
            LoadTerminalInformationResponse.prototype.noticeEntries = $util.emptyArray;

            /**
             * LoadTerminalInformationResponse noticeMessage.
             * @member {Array.<string>} noticeMessage
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             */
            LoadTerminalInformationResponse.prototype.noticeMessage = $util.emptyArray;

            /**
             * LoadTerminalInformationResponse noticeWindow.
             * @member {Array.<wm5.protobuf.NoticeEntry>} noticeWindow
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             */
            LoadTerminalInformationResponse.prototype.noticeWindow = $util.emptyArray;

            /**
             * LoadTerminalInformationResponse noticeWindowMessage.
             * @member {Array.<string>} noticeWindowMessage
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             */
            LoadTerminalInformationResponse.prototype.noticeWindowMessage = $util.emptyArray;

            /**
             * LoadTerminalInformationResponse transferNotice.
             * @member {wm5.protobuf.ITransferNotice} transferNotice
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             */
            LoadTerminalInformationResponse.prototype.transferNotice = null;

            /**
             * LoadTerminalInformationResponse announceFeature.
             * @member {boolean} announceFeature
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             */
            LoadTerminalInformationResponse.prototype.announceFeature = false;

            /**
             * LoadTerminalInformationResponse freeScratched.
             * @member {boolean} freeScratched
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             */
            LoadTerminalInformationResponse.prototype.freeScratched = false;

            /**
             * Creates a new LoadTerminalInformationResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @static
             * @param {wm5.protobuf.ILoadTerminalInformationResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadTerminalInformationResponse} LoadTerminalInformationResponse instance
             */
            LoadTerminalInformationResponse.create = function create(properties) {
                return new LoadTerminalInformationResponse(properties);
            };

            /**
             * Encodes the specified LoadTerminalInformationResponse message. Does not implicitly {@link wm5.protobuf.LoadTerminalInformationResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @static
             * @param {wm5.protobuf.ILoadTerminalInformationResponse} message LoadTerminalInformationResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadTerminalInformationResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.teamCreatedAt != null && Object.hasOwnProperty.call(message, "teamCreatedAt"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.teamCreatedAt);
                if (message.teamApplying != null && Object.hasOwnProperty.call(message, "teamApplying"))
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.teamApplying);
                if (message.team != null && Object.hasOwnProperty.call(message, "team"))
                    $root.wm5.protobuf.Team.encode(message.team, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                if (message.numOfPendingMembers != null && Object.hasOwnProperty.call(message, "numOfPendingMembers"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.numOfPendingMembers);
                if (message.teamNewsEntries != null && message.teamNewsEntries.length)
                    for (let i = 0; i < message.teamNewsEntries.length; ++i)
                        $root.wm5.protobuf.LoadTerminalInformationResponse.TeamNews.encode(message.teamNewsEntries[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                if (message.applicants != null && message.applicants.length)
                    for (let i = 0; i < message.applicants.length; ++i)
                        $root.wm5.protobuf.TeamApplicant.encode(message.applicants[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                if (message.teamCarId != null && Object.hasOwnProperty.call(message, "teamCarId"))
                    writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.teamCarId);
                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.maxiGoldReceivable);
                if (message.noticeEntries != null && message.noticeEntries.length)
                    for (let i = 0; i < message.noticeEntries.length; ++i)
                        $root.wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice.encode(message.noticeEntries[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                if (message.noticeMessage != null && message.noticeMessage.length)
                    for (let i = 0; i < message.noticeMessage.length; ++i)
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.noticeMessage[i]);
                if (message.noticeWindow != null && message.noticeWindow.length)
                    for (let i = 0; i < message.noticeWindow.length; ++i)
                        writer.uint32(/* id 12, wireType 0 =*/96).int32(message.noticeWindow[i]);
                if (message.noticeWindowMessage != null && message.noticeWindowMessage.length)
                    for (let i = 0; i < message.noticeWindowMessage.length; ++i)
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.noticeWindowMessage[i]);
                $root.wm5.protobuf.TransferNotice.encode(message.transferNotice, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.announceFeature);
                writer.uint32(/* id 17, wireType 0 =*/136).bool(message.prizeReceivable);
                writer.uint32(/* id 18, wireType 0 =*/144).bool(message.freeScratched);
                return writer;
            };

            /**
             * Encodes the specified LoadTerminalInformationResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadTerminalInformationResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @static
             * @param {wm5.protobuf.ILoadTerminalInformationResponse} message LoadTerminalInformationResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadTerminalInformationResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadTerminalInformationResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadTerminalInformationResponse} LoadTerminalInformationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadTerminalInformationResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadTerminalInformationResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.teamCreatedAt = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.teamApplying = reader.bool();
                            break;
                        }
                    case 4: {
                            message.team = $root.wm5.protobuf.Team.decode(reader, reader.uint32());
                            break;
                        }
                    case 5: {
                            message.numOfPendingMembers = reader.uint32();
                            break;
                        }
                    case 6: {
                            if (!(message.teamNewsEntries && message.teamNewsEntries.length))
                                message.teamNewsEntries = [];
                            message.teamNewsEntries.push($root.wm5.protobuf.LoadTerminalInformationResponse.TeamNews.decode(reader, reader.uint32()));
                            break;
                        }
                    case 7: {
                            if (!(message.applicants && message.applicants.length))
                                message.applicants = [];
                            message.applicants.push($root.wm5.protobuf.TeamApplicant.decode(reader, reader.uint32()));
                            break;
                        }
                    case 8: {
                            message.teamCarId = reader.uint32();
                            break;
                        }
                    case 9: {
                            message.maxiGoldReceivable = reader.bool();
                            break;
                        }
                    case 17: {
                            message.prizeReceivable = reader.bool();
                            break;
                        }
                    case 10: {
                            if (!(message.noticeEntries && message.noticeEntries.length))
                                message.noticeEntries = [];
                            message.noticeEntries.push($root.wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice.decode(reader, reader.uint32()));
                            break;
                        }
                    case 11: {
                            if (!(message.noticeMessage && message.noticeMessage.length))
                                message.noticeMessage = [];
                            message.noticeMessage.push(reader.string());
                            break;
                        }
                    case 12: {
                            if (!(message.noticeWindow && message.noticeWindow.length))
                                message.noticeWindow = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.noticeWindow.push(reader.int32());
                            } else
                                message.noticeWindow.push(reader.int32());
                            break;
                        }
                    case 13: {
                            if (!(message.noticeWindowMessage && message.noticeWindowMessage.length))
                                message.noticeWindowMessage = [];
                            message.noticeWindowMessage.push(reader.string());
                            break;
                        }
                    case 14: {
                            message.transferNotice = $root.wm5.protobuf.TransferNotice.decode(reader, reader.uint32());
                            break;
                        }
                    case 16: {
                            message.announceFeature = reader.bool();
                            break;
                        }
                    case 18: {
                            message.freeScratched = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("maxiGoldReceivable"))
                    throw $util.ProtocolError("missing required 'maxiGoldReceivable'", { instance: message });
                if (!message.hasOwnProperty("prizeReceivable"))
                    throw $util.ProtocolError("missing required 'prizeReceivable'", { instance: message });
                if (!message.hasOwnProperty("transferNotice"))
                    throw $util.ProtocolError("missing required 'transferNotice'", { instance: message });
                if (!message.hasOwnProperty("announceFeature"))
                    throw $util.ProtocolError("missing required 'announceFeature'", { instance: message });
                if (!message.hasOwnProperty("freeScratched"))
                    throw $util.ProtocolError("missing required 'freeScratched'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadTerminalInformationResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadTerminalInformationResponse} LoadTerminalInformationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadTerminalInformationResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadTerminalInformationResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadTerminalInformationResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.teamCreatedAt != null && message.hasOwnProperty("teamCreatedAt"))
                    if (!$util.isInteger(message.teamCreatedAt))
                        return "teamCreatedAt: integer expected";
                if (message.teamApplying != null && message.hasOwnProperty("teamApplying"))
                    if (typeof message.teamApplying !== "boolean")
                        return "teamApplying: boolean expected";
                if (message.team != null && message.hasOwnProperty("team")) {
                    let error = $root.wm5.protobuf.Team.verify(message.team);
                    if (error)
                        return "team." + error;
                }
                if (message.numOfPendingMembers != null && message.hasOwnProperty("numOfPendingMembers"))
                    if (!$util.isInteger(message.numOfPendingMembers))
                        return "numOfPendingMembers: integer expected";
                if (message.teamNewsEntries != null && message.hasOwnProperty("teamNewsEntries")) {
                    if (!Array.isArray(message.teamNewsEntries))
                        return "teamNewsEntries: array expected";
                    for (let i = 0; i < message.teamNewsEntries.length; ++i) {
                        let error = $root.wm5.protobuf.LoadTerminalInformationResponse.TeamNews.verify(message.teamNewsEntries[i]);
                        if (error)
                            return "teamNewsEntries." + error;
                    }
                }
                if (message.applicants != null && message.hasOwnProperty("applicants")) {
                    if (!Array.isArray(message.applicants))
                        return "applicants: array expected";
                    for (let i = 0; i < message.applicants.length; ++i) {
                        let error = $root.wm5.protobuf.TeamApplicant.verify(message.applicants[i]);
                        if (error)
                            return "applicants." + error;
                    }
                }
                if (message.teamCarId != null && message.hasOwnProperty("teamCarId"))
                    if (!$util.isInteger(message.teamCarId))
                        return "teamCarId: integer expected";
                if (typeof message.maxiGoldReceivable !== "boolean")
                    return "maxiGoldReceivable: boolean expected";
                if (typeof message.prizeReceivable !== "boolean")
                    return "prizeReceivable: boolean expected";
                if (message.noticeEntries != null && message.hasOwnProperty("noticeEntries")) {
                    if (!Array.isArray(message.noticeEntries))
                        return "noticeEntries: array expected";
                    for (let i = 0; i < message.noticeEntries.length; ++i) {
                        let error = $root.wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice.verify(message.noticeEntries[i]);
                        if (error)
                            return "noticeEntries." + error;
                    }
                }
                if (message.noticeMessage != null && message.hasOwnProperty("noticeMessage")) {
                    if (!Array.isArray(message.noticeMessage))
                        return "noticeMessage: array expected";
                    for (let i = 0; i < message.noticeMessage.length; ++i)
                        if (!$util.isString(message.noticeMessage[i]))
                            return "noticeMessage: string[] expected";
                }
                if (message.noticeWindow != null && message.hasOwnProperty("noticeWindow")) {
                    if (!Array.isArray(message.noticeWindow))
                        return "noticeWindow: array expected";
                    for (let i = 0; i < message.noticeWindow.length; ++i)
                        switch (message.noticeWindow[i]) {
                        default:
                            return "noticeWindow: enum value[] expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                            break;
                        }
                }
                if (message.noticeWindowMessage != null && message.hasOwnProperty("noticeWindowMessage")) {
                    if (!Array.isArray(message.noticeWindowMessage))
                        return "noticeWindowMessage: array expected";
                    for (let i = 0; i < message.noticeWindowMessage.length; ++i)
                        if (!$util.isString(message.noticeWindowMessage[i]))
                            return "noticeWindowMessage: string[] expected";
                }
                {
                    let error = $root.wm5.protobuf.TransferNotice.verify(message.transferNotice);
                    if (error)
                        return "transferNotice." + error;
                }
                if (typeof message.announceFeature !== "boolean")
                    return "announceFeature: boolean expected";
                if (typeof message.freeScratched !== "boolean")
                    return "freeScratched: boolean expected";
                return null;
            };

            /**
             * Creates a LoadTerminalInformationResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadTerminalInformationResponse} LoadTerminalInformationResponse
             */
            LoadTerminalInformationResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadTerminalInformationResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadTerminalInformationResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.teamCreatedAt != null)
                    message.teamCreatedAt = object.teamCreatedAt >>> 0;
                if (object.teamApplying != null)
                    message.teamApplying = Boolean(object.teamApplying);
                if (object.team != null) {
                    if (typeof object.team !== "object")
                        throw TypeError(".wm5.protobuf.LoadTerminalInformationResponse.team: object expected");
                    message.team = $root.wm5.protobuf.Team.fromObject(object.team);
                }
                if (object.numOfPendingMembers != null)
                    message.numOfPendingMembers = object.numOfPendingMembers >>> 0;
                if (object.teamNewsEntries) {
                    if (!Array.isArray(object.teamNewsEntries))
                        throw TypeError(".wm5.protobuf.LoadTerminalInformationResponse.teamNewsEntries: array expected");
                    message.teamNewsEntries = [];
                    for (let i = 0; i < object.teamNewsEntries.length; ++i) {
                        if (typeof object.teamNewsEntries[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadTerminalInformationResponse.teamNewsEntries: object expected");
                        message.teamNewsEntries[i] = $root.wm5.protobuf.LoadTerminalInformationResponse.TeamNews.fromObject(object.teamNewsEntries[i]);
                    }
                }
                if (object.applicants) {
                    if (!Array.isArray(object.applicants))
                        throw TypeError(".wm5.protobuf.LoadTerminalInformationResponse.applicants: array expected");
                    message.applicants = [];
                    for (let i = 0; i < object.applicants.length; ++i) {
                        if (typeof object.applicants[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadTerminalInformationResponse.applicants: object expected");
                        message.applicants[i] = $root.wm5.protobuf.TeamApplicant.fromObject(object.applicants[i]);
                    }
                }
                if (object.teamCarId != null)
                    message.teamCarId = object.teamCarId >>> 0;
                if (object.maxiGoldReceivable != null)
                    message.maxiGoldReceivable = Boolean(object.maxiGoldReceivable);
                if (object.prizeReceivable != null)
                    message.prizeReceivable = Boolean(object.prizeReceivable);
                if (object.noticeEntries) {
                    if (!Array.isArray(object.noticeEntries))
                        throw TypeError(".wm5.protobuf.LoadTerminalInformationResponse.noticeEntries: array expected");
                    message.noticeEntries = [];
                    for (let i = 0; i < object.noticeEntries.length; ++i) {
                        if (typeof object.noticeEntries[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadTerminalInformationResponse.noticeEntries: object expected");
                        message.noticeEntries[i] = $root.wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice.fromObject(object.noticeEntries[i]);
                    }
                }
                if (object.noticeMessage) {
                    if (!Array.isArray(object.noticeMessage))
                        throw TypeError(".wm5.protobuf.LoadTerminalInformationResponse.noticeMessage: array expected");
                    message.noticeMessage = [];
                    for (let i = 0; i < object.noticeMessage.length; ++i)
                        message.noticeMessage[i] = String(object.noticeMessage[i]);
                }
                if (object.noticeWindow) {
                    if (!Array.isArray(object.noticeWindow))
                        throw TypeError(".wm5.protobuf.LoadTerminalInformationResponse.noticeWindow: array expected");
                    message.noticeWindow = [];
                    for (let i = 0; i < object.noticeWindow.length; ++i)
                        switch (object.noticeWindow[i]) {
                        default:
                            if (typeof object.noticeWindow[i] === "number") {
                                message.noticeWindow[i] = object.noticeWindow[i];
                                break;
                            }
                        case "NOTICE_TEAM_JOINED":
                        case 1:
                            message.noticeWindow[i] = 1;
                            break;
                        case "NOTICE_TEAM_DISSOLVED":
                        case 2:
                            message.noticeWindow[i] = 2;
                            break;
                        case "NOTICE_TEAM_LEADER_CHANGED":
                        case 3:
                            message.noticeWindow[i] = 3;
                            break;
                        case "NOTICE_TEAM_FORCEDLY_DISSOLVED":
                        case 4:
                            message.noticeWindow[i] = 4;
                            break;
                        case "NOTICE_TEAM_NOT_TRANSFERRED":
                        case 5:
                            message.noticeWindow[i] = 5;
                            break;
                        case "NOTICE_TEAM_TRANSFERRED":
                        case 6:
                            message.noticeWindow[i] = 6;
                            break;
                        case "NOTICE_TEAM_REJOIN_FINISHED":
                        case 7:
                            message.noticeWindow[i] = 7;
                            break;
                        case "NOTICE_TEAM_NAME_CHANGED":
                        case 8:
                            message.noticeWindow[i] = 8;
                            break;
                        case "NOTICE_TEAM_SUSPENDED":
                        case 9:
                            message.noticeWindow[i] = 9;
                            break;
                        case "NOTICE_WEBSITE_CANCELLED":
                        case 10:
                            message.noticeWindow[i] = 10;
                            break;
                        case "NOTICE_WEBSITE_EXPIRATION_EXPECTED":
                        case 11:
                            message.noticeWindow[i] = 11;
                            break;
                        case "NOTICE_WEBSITE_EXPIRED":
                        case 12:
                            message.noticeWindow[i] = 12;
                            break;
                        }
                }
                if (object.noticeWindowMessage) {
                    if (!Array.isArray(object.noticeWindowMessage))
                        throw TypeError(".wm5.protobuf.LoadTerminalInformationResponse.noticeWindowMessage: array expected");
                    message.noticeWindowMessage = [];
                    for (let i = 0; i < object.noticeWindowMessage.length; ++i)
                        message.noticeWindowMessage[i] = String(object.noticeWindowMessage[i]);
                }
                if (object.transferNotice != null) {
                    if (typeof object.transferNotice !== "object")
                        throw TypeError(".wm5.protobuf.LoadTerminalInformationResponse.transferNotice: object expected");
                    message.transferNotice = $root.wm5.protobuf.TransferNotice.fromObject(object.transferNotice);
                }
                if (object.announceFeature != null)
                    message.announceFeature = Boolean(object.announceFeature);
                if (object.freeScratched != null)
                    message.freeScratched = Boolean(object.freeScratched);
                return message;
            };

            /**
             * Creates a plain object from a LoadTerminalInformationResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @static
             * @param {wm5.protobuf.LoadTerminalInformationResponse} message LoadTerminalInformationResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadTerminalInformationResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.teamNewsEntries = [];
                    object.applicants = [];
                    object.noticeEntries = [];
                    object.noticeMessage = [];
                    object.noticeWindow = [];
                    object.noticeWindowMessage = [];
                }
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.teamCreatedAt = 0;
                    object.teamApplying = false;
                    object.team = null;
                    object.numOfPendingMembers = 0;
                    object.teamCarId = 0;
                    object.maxiGoldReceivable = false;
                    object.transferNotice = null;
                    object.announceFeature = false;
                    object.prizeReceivable = false;
                    object.freeScratched = false;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.teamCreatedAt != null && message.hasOwnProperty("teamCreatedAt"))
                    object.teamCreatedAt = message.teamCreatedAt;
                if (message.teamApplying != null && message.hasOwnProperty("teamApplying"))
                    object.teamApplying = message.teamApplying;
                if (message.team != null && message.hasOwnProperty("team"))
                    object.team = $root.wm5.protobuf.Team.toObject(message.team, options);
                if (message.numOfPendingMembers != null && message.hasOwnProperty("numOfPendingMembers"))
                    object.numOfPendingMembers = message.numOfPendingMembers;
                if (message.teamNewsEntries && message.teamNewsEntries.length) {
                    object.teamNewsEntries = [];
                    for (let j = 0; j < message.teamNewsEntries.length; ++j)
                        object.teamNewsEntries[j] = $root.wm5.protobuf.LoadTerminalInformationResponse.TeamNews.toObject(message.teamNewsEntries[j], options);
                }
                if (message.applicants && message.applicants.length) {
                    object.applicants = [];
                    for (let j = 0; j < message.applicants.length; ++j)
                        object.applicants[j] = $root.wm5.protobuf.TeamApplicant.toObject(message.applicants[j], options);
                }
                if (message.teamCarId != null && message.hasOwnProperty("teamCarId"))
                    object.teamCarId = message.teamCarId;
                if (message.maxiGoldReceivable != null && message.hasOwnProperty("maxiGoldReceivable"))
                    object.maxiGoldReceivable = message.maxiGoldReceivable;
                if (message.noticeEntries && message.noticeEntries.length) {
                    object.noticeEntries = [];
                    for (let j = 0; j < message.noticeEntries.length; ++j)
                        object.noticeEntries[j] = $root.wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice.toObject(message.noticeEntries[j], options);
                }
                if (message.noticeMessage && message.noticeMessage.length) {
                    object.noticeMessage = [];
                    for (let j = 0; j < message.noticeMessage.length; ++j)
                        object.noticeMessage[j] = message.noticeMessage[j];
                }
                if (message.noticeWindow && message.noticeWindow.length) {
                    object.noticeWindow = [];
                    for (let j = 0; j < message.noticeWindow.length; ++j)
                        object.noticeWindow[j] = options.enums === String ? $root.wm5.protobuf.NoticeEntry[message.noticeWindow[j]] === undefined ? message.noticeWindow[j] : $root.wm5.protobuf.NoticeEntry[message.noticeWindow[j]] : message.noticeWindow[j];
                }
                if (message.noticeWindowMessage && message.noticeWindowMessage.length) {
                    object.noticeWindowMessage = [];
                    for (let j = 0; j < message.noticeWindowMessage.length; ++j)
                        object.noticeWindowMessage[j] = message.noticeWindowMessage[j];
                }
                if (message.transferNotice != null && message.hasOwnProperty("transferNotice"))
                    object.transferNotice = $root.wm5.protobuf.TransferNotice.toObject(message.transferNotice, options);
                if (message.announceFeature != null && message.hasOwnProperty("announceFeature"))
                    object.announceFeature = message.announceFeature;
                if (message.prizeReceivable != null && message.hasOwnProperty("prizeReceivable"))
                    object.prizeReceivable = message.prizeReceivable;
                if (message.freeScratched != null && message.hasOwnProperty("freeScratched"))
                    object.freeScratched = message.freeScratched;
                return object;
            };

            /**
             * Converts this LoadTerminalInformationResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadTerminalInformationResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadTerminalInformationResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadTerminalInformationResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadTerminalInformationResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadTerminalInformationResponse";
            };

            LoadTerminalInformationResponse.TeamNews = (function() {

                /**
                 * Properties of a TeamNews.
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse
                 * @interface ITeamNews
                 * @property {wm5.protobuf.TeamNewsEntry} newsType TeamNews newsType
                 * @property {number} datetime TeamNews datetime
                 * @property {string|null} [field_1] TeamNews field_1
                 * @property {number|null} [field_2] TeamNews field_2
                 */

                /**
                 * Constructs a new TeamNews.
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse
                 * @classdesc Represents a TeamNews.
                 * @implements ITeamNews
                 * @constructor
                 * @param {wm5.protobuf.LoadTerminalInformationResponse.ITeamNews=} [properties] Properties to set
                 */
                function TeamNews(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * TeamNews newsType.
                 * @member {wm5.protobuf.TeamNewsEntry} newsType
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TeamNews
                 * @instance
                 */
                TeamNews.prototype.newsType = 1;

                /**
                 * TeamNews datetime.
                 * @member {number} datetime
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TeamNews
                 * @instance
                 */
                TeamNews.prototype.datetime = 0;

                /**
                 * TeamNews field_1.
                 * @member {string} field_1
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TeamNews
                 * @instance
                 */
                TeamNews.prototype.field_1 = "";

                /**
                 * TeamNews field_2.
                 * @member {number} field_2
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TeamNews
                 * @instance
                 */
                TeamNews.prototype.field_2 = 0;

                /**
                 * Creates a new TeamNews instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TeamNews
                 * @static
                 * @param {wm5.protobuf.LoadTerminalInformationResponse.ITeamNews=} [properties] Properties to set
                 * @returns {wm5.protobuf.LoadTerminalInformationResponse.TeamNews} TeamNews instance
                 */
                TeamNews.create = function create(properties) {
                    return new TeamNews(properties);
                };

                /**
                 * Encodes the specified TeamNews message. Does not implicitly {@link wm5.protobuf.LoadTerminalInformationResponse.TeamNews.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TeamNews
                 * @static
                 * @param {wm5.protobuf.LoadTerminalInformationResponse.ITeamNews} message TeamNews message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TeamNews.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.newsType);
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.datetime);
                    if (message.field_1 != null && Object.hasOwnProperty.call(message, "field_1"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.field_1);
                    if (message.field_2 != null && Object.hasOwnProperty.call(message, "field_2"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.field_2);
                    return writer;
                };

                /**
                 * Encodes the specified TeamNews message, length delimited. Does not implicitly {@link wm5.protobuf.LoadTerminalInformationResponse.TeamNews.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TeamNews
                 * @static
                 * @param {wm5.protobuf.LoadTerminalInformationResponse.ITeamNews} message TeamNews message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TeamNews.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a TeamNews message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TeamNews
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.LoadTerminalInformationResponse.TeamNews} TeamNews
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TeamNews.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadTerminalInformationResponse.TeamNews();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.newsType = reader.int32();
                                break;
                            }
                        case 2: {
                                message.datetime = reader.uint32();
                                break;
                            }
                        case 3: {
                                message.field_1 = reader.string();
                                break;
                            }
                        case 4: {
                                message.field_2 = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("newsType"))
                        throw $util.ProtocolError("missing required 'newsType'", { instance: message });
                    if (!message.hasOwnProperty("datetime"))
                        throw $util.ProtocolError("missing required 'datetime'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a TeamNews message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TeamNews
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.LoadTerminalInformationResponse.TeamNews} TeamNews
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TeamNews.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a TeamNews message.
                 * @function verify
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TeamNews
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                TeamNews.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    switch (message.newsType) {
                    default:
                        return "newsType: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                        break;
                    }
                    if (!$util.isInteger(message.datetime))
                        return "datetime: integer expected";
                    if (message.field_1 != null && message.hasOwnProperty("field_1"))
                        if (!$util.isString(message.field_1))
                            return "field_1: string expected";
                    if (message.field_2 != null && message.hasOwnProperty("field_2"))
                        if (!$util.isInteger(message.field_2))
                            return "field_2: integer expected";
                    return null;
                };

                /**
                 * Creates a TeamNews message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TeamNews
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.LoadTerminalInformationResponse.TeamNews} TeamNews
                 */
                TeamNews.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.LoadTerminalInformationResponse.TeamNews)
                        return object;
                    let message = new $root.wm5.protobuf.LoadTerminalInformationResponse.TeamNews();
                    switch (object.newsType) {
                    default:
                        if (typeof object.newsType === "number") {
                            message.newsType = object.newsType;
                            break;
                        }
                        break;
                    case "NEWS_JOINED":
                    case 1:
                        message.newsType = 1;
                        break;
                    case "NEWS_LEADER_CHANGED":
                    case 2:
                        message.newsType = 2;
                        break;
                    case "NEWS_STICKER_CHANGED":
                    case 3:
                        message.newsType = 3;
                        break;
                    }
                    if (object.datetime != null)
                        message.datetime = object.datetime >>> 0;
                    if (object.field_1 != null)
                        message.field_1 = String(object.field_1);
                    if (object.field_2 != null)
                        message.field_2 = object.field_2 >>> 0;
                    return message;
                };

                /**
                 * Creates a plain object from a TeamNews message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TeamNews
                 * @static
                 * @param {wm5.protobuf.LoadTerminalInformationResponse.TeamNews} message TeamNews
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                TeamNews.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.newsType = options.enums === String ? "NEWS_JOINED" : 1;
                        object.datetime = 0;
                        object.field_1 = "";
                        object.field_2 = 0;
                    }
                    if (message.newsType != null && message.hasOwnProperty("newsType"))
                        object.newsType = options.enums === String ? $root.wm5.protobuf.TeamNewsEntry[message.newsType] === undefined ? message.newsType : $root.wm5.protobuf.TeamNewsEntry[message.newsType] : message.newsType;
                    if (message.datetime != null && message.hasOwnProperty("datetime"))
                        object.datetime = message.datetime;
                    if (message.field_1 != null && message.hasOwnProperty("field_1"))
                        object.field_1 = message.field_1;
                    if (message.field_2 != null && message.hasOwnProperty("field_2"))
                        object.field_2 = message.field_2;
                    return object;
                };

                /**
                 * Converts this TeamNews to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TeamNews
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                TeamNews.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for TeamNews
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TeamNews
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                TeamNews.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.LoadTerminalInformationResponse.TeamNews";
                };

                return TeamNews;
            })();

            LoadTerminalInformationResponse.TerminalNotice = (function() {

                /**
                 * Properties of a TerminalNotice.
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse
                 * @interface ITerminalNotice
                 * @property {wm5.protobuf.NoticeEntry} noticeType TerminalNotice noticeType
                 * @property {string|null} [field_1] TerminalNotice field_1
                 * @property {number|null} [field_2] TerminalNotice field_2
                 * @property {number|null} [field_3] TerminalNotice field_3
                 */

                /**
                 * Constructs a new TerminalNotice.
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse
                 * @classdesc Represents a TerminalNotice.
                 * @implements ITerminalNotice
                 * @constructor
                 * @param {wm5.protobuf.LoadTerminalInformationResponse.ITerminalNotice=} [properties] Properties to set
                 */
                function TerminalNotice(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * TerminalNotice noticeType.
                 * @member {wm5.protobuf.NoticeEntry} noticeType
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice
                 * @instance
                 */
                TerminalNotice.prototype.noticeType = 1;

                /**
                 * TerminalNotice field_1.
                 * @member {string} field_1
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice
                 * @instance
                 */
                TerminalNotice.prototype.field_1 = "";

                /**
                 * TerminalNotice field_2.
                 * @member {number} field_2
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice
                 * @instance
                 */
                TerminalNotice.prototype.field_2 = 0;

                /**
                 * TerminalNotice field_3.
                 * @member {number} field_3
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice
                 * @instance
                 */
                TerminalNotice.prototype.field_3 = 0;

                /**
                 * Creates a new TerminalNotice instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice
                 * @static
                 * @param {wm5.protobuf.LoadTerminalInformationResponse.ITerminalNotice=} [properties] Properties to set
                 * @returns {wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice} TerminalNotice instance
                 */
                TerminalNotice.create = function create(properties) {
                    return new TerminalNotice(properties);
                };

                /**
                 * Encodes the specified TerminalNotice message. Does not implicitly {@link wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice
                 * @static
                 * @param {wm5.protobuf.LoadTerminalInformationResponse.ITerminalNotice} message TerminalNotice message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TerminalNotice.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.noticeType);
                    if (message.field_1 != null && Object.hasOwnProperty.call(message, "field_1"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.field_1);
                    if (message.field_2 != null && Object.hasOwnProperty.call(message, "field_2"))
                        writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.field_2);
                    if (message.field_3 != null && Object.hasOwnProperty.call(message, "field_3"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.field_3);
                    return writer;
                };

                /**
                 * Encodes the specified TerminalNotice message, length delimited. Does not implicitly {@link wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice
                 * @static
                 * @param {wm5.protobuf.LoadTerminalInformationResponse.ITerminalNotice} message TerminalNotice message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TerminalNotice.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a TerminalNotice message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice} TerminalNotice
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TerminalNotice.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.noticeType = reader.int32();
                                break;
                            }
                        case 2: {
                                message.field_1 = reader.string();
                                break;
                            }
                        case 3: {
                                message.field_2 = reader.uint32();
                                break;
                            }
                        case 4: {
                                message.field_3 = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("noticeType"))
                        throw $util.ProtocolError("missing required 'noticeType'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a TerminalNotice message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice} TerminalNotice
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TerminalNotice.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a TerminalNotice message.
                 * @function verify
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                TerminalNotice.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    switch (message.noticeType) {
                    default:
                        return "noticeType: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                        break;
                    }
                    if (message.field_1 != null && message.hasOwnProperty("field_1"))
                        if (!$util.isString(message.field_1))
                            return "field_1: string expected";
                    if (message.field_2 != null && message.hasOwnProperty("field_2"))
                        if (!$util.isInteger(message.field_2))
                            return "field_2: integer expected";
                    if (message.field_3 != null && message.hasOwnProperty("field_3"))
                        if (!$util.isInteger(message.field_3))
                            return "field_3: integer expected";
                    return null;
                };

                /**
                 * Creates a TerminalNotice message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice} TerminalNotice
                 */
                TerminalNotice.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice)
                        return object;
                    let message = new $root.wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice();
                    switch (object.noticeType) {
                    default:
                        if (typeof object.noticeType === "number") {
                            message.noticeType = object.noticeType;
                            break;
                        }
                        break;
                    case "NOTICE_TEAM_JOINED":
                    case 1:
                        message.noticeType = 1;
                        break;
                    case "NOTICE_TEAM_DISSOLVED":
                    case 2:
                        message.noticeType = 2;
                        break;
                    case "NOTICE_TEAM_LEADER_CHANGED":
                    case 3:
                        message.noticeType = 3;
                        break;
                    case "NOTICE_TEAM_FORCEDLY_DISSOLVED":
                    case 4:
                        message.noticeType = 4;
                        break;
                    case "NOTICE_TEAM_NOT_TRANSFERRED":
                    case 5:
                        message.noticeType = 5;
                        break;
                    case "NOTICE_TEAM_TRANSFERRED":
                    case 6:
                        message.noticeType = 6;
                        break;
                    case "NOTICE_TEAM_REJOIN_FINISHED":
                    case 7:
                        message.noticeType = 7;
                        break;
                    case "NOTICE_TEAM_NAME_CHANGED":
                    case 8:
                        message.noticeType = 8;
                        break;
                    case "NOTICE_TEAM_SUSPENDED":
                    case 9:
                        message.noticeType = 9;
                        break;
                    case "NOTICE_WEBSITE_CANCELLED":
                    case 10:
                        message.noticeType = 10;
                        break;
                    case "NOTICE_WEBSITE_EXPIRATION_EXPECTED":
                    case 11:
                        message.noticeType = 11;
                        break;
                    case "NOTICE_WEBSITE_EXPIRED":
                    case 12:
                        message.noticeType = 12;
                        break;
                    }
                    if (object.field_1 != null)
                        message.field_1 = String(object.field_1);
                    if (object.field_2 != null)
                        message.field_2 = object.field_2 >>> 0;
                    if (object.field_3 != null)
                        message.field_3 = object.field_3 >>> 0;
                    return message;
                };

                /**
                 * Creates a plain object from a TerminalNotice message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice
                 * @static
                 * @param {wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice} message TerminalNotice
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                TerminalNotice.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.noticeType = options.enums === String ? "NOTICE_TEAM_JOINED" : 1;
                        object.field_1 = "";
                        object.field_2 = 0;
                        object.field_3 = 0;
                    }
                    if (message.noticeType != null && message.hasOwnProperty("noticeType"))
                        object.noticeType = options.enums === String ? $root.wm5.protobuf.NoticeEntry[message.noticeType] === undefined ? message.noticeType : $root.wm5.protobuf.NoticeEntry[message.noticeType] : message.noticeType;
                    if (message.field_1 != null && message.hasOwnProperty("field_1"))
                        object.field_1 = message.field_1;
                    if (message.field_2 != null && message.hasOwnProperty("field_2"))
                        object.field_2 = message.field_2;
                    if (message.field_3 != null && message.hasOwnProperty("field_3"))
                        object.field_3 = message.field_3;
                    return object;
                };

                /**
                 * Converts this TerminalNotice to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                TerminalNotice.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for TerminalNotice
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                TerminalNotice.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.LoadTerminalInformationResponse.TerminalNotice";
                };

                return TerminalNotice;
            })();

            return LoadTerminalInformationResponse;
        })();

        protobuf.CreateUserRequest = (function() {

            /**
             * Properties of a CreateUserRequest.
             * @memberof wm5.protobuf
             * @interface ICreateUserRequest
             * @property {number|null} [banapassportAmId] CreateUserRequest banapassportAmId
             * @property {string|null} [cardChipId] CreateUserRequest cardChipId
             * @property {string|null} [accessCode] CreateUserRequest accessCode
             * @property {number|null} [cardTypeCode] CreateUserRequest cardTypeCode
             * @property {number|null} [cardRegionCode] CreateUserRequest cardRegionCode
             * @property {wm5.protobuf.DeviceType|null} [device] CreateUserRequest device
             * @property {number} timestamp CreateUserRequest timestamp
             */

            /**
             * Constructs a new CreateUserRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a CreateUserRequest.
             * @implements ICreateUserRequest
             * @constructor
             * @param {wm5.protobuf.ICreateUserRequest=} [properties] Properties to set
             */
            function CreateUserRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateUserRequest banapassportAmId.
             * @member {number} banapassportAmId
             * @memberof wm5.protobuf.CreateUserRequest
             * @instance
             */
            CreateUserRequest.prototype.banapassportAmId = 0;

            /**
             * CreateUserRequest cardChipId.
             * @member {string} cardChipId
             * @memberof wm5.protobuf.CreateUserRequest
             * @instance
             */
            CreateUserRequest.prototype.cardChipId = "";

            /**
             * CreateUserRequest accessCode.
             * @member {string} accessCode
             * @memberof wm5.protobuf.CreateUserRequest
             * @instance
             */
            CreateUserRequest.prototype.accessCode = "";

            /**
             * CreateUserRequest cardTypeCode.
             * @member {number} cardTypeCode
             * @memberof wm5.protobuf.CreateUserRequest
             * @instance
             */
            CreateUserRequest.prototype.cardTypeCode = 0;

            /**
             * CreateUserRequest cardRegionCode.
             * @member {number} cardRegionCode
             * @memberof wm5.protobuf.CreateUserRequest
             * @instance
             */
            CreateUserRequest.prototype.cardRegionCode = 0;

            /**
             * CreateUserRequest device.
             * @member {wm5.protobuf.DeviceType} device
             * @memberof wm5.protobuf.CreateUserRequest
             * @instance
             */
            CreateUserRequest.prototype.device = 0;

            /**
             * CreateUserRequest timestamp.
             * @member {number} timestamp
             * @memberof wm5.protobuf.CreateUserRequest
             * @instance
             */
            CreateUserRequest.prototype.timestamp = 0;

            /**
             * Creates a new CreateUserRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CreateUserRequest
             * @static
             * @param {wm5.protobuf.ICreateUserRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.CreateUserRequest} CreateUserRequest instance
             */
            CreateUserRequest.create = function create(properties) {
                return new CreateUserRequest(properties);
            };

            /**
             * Encodes the specified CreateUserRequest message. Does not implicitly {@link wm5.protobuf.CreateUserRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CreateUserRequest
             * @static
             * @param {wm5.protobuf.ICreateUserRequest} message CreateUserRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateUserRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.banapassportAmId != null && Object.hasOwnProperty.call(message, "banapassportAmId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.banapassportAmId);
                if (message.cardChipId != null && Object.hasOwnProperty.call(message, "cardChipId"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.cardChipId);
                if (message.accessCode != null && Object.hasOwnProperty.call(message, "accessCode"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.accessCode);
                if (message.cardTypeCode != null && Object.hasOwnProperty.call(message, "cardTypeCode"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.cardTypeCode);
                if (message.cardRegionCode != null && Object.hasOwnProperty.call(message, "cardRegionCode"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.cardRegionCode);
                if (message.device != null && Object.hasOwnProperty.call(message, "device"))
                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.device);
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.timestamp);
                return writer;
            };

            /**
             * Encodes the specified CreateUserRequest message, length delimited. Does not implicitly {@link wm5.protobuf.CreateUserRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CreateUserRequest
             * @static
             * @param {wm5.protobuf.ICreateUserRequest} message CreateUserRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateUserRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateUserRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CreateUserRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CreateUserRequest} CreateUserRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateUserRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CreateUserRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.banapassportAmId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.cardChipId = reader.string();
                            break;
                        }
                    case 3: {
                            message.accessCode = reader.string();
                            break;
                        }
                    case 4: {
                            message.cardTypeCode = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.cardRegionCode = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.device = reader.int32();
                            break;
                        }
                    case 7: {
                            message.timestamp = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("timestamp"))
                    throw $util.ProtocolError("missing required 'timestamp'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateUserRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CreateUserRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CreateUserRequest} CreateUserRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateUserRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateUserRequest message.
             * @function verify
             * @memberof wm5.protobuf.CreateUserRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateUserRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.banapassportAmId != null && message.hasOwnProperty("banapassportAmId"))
                    if (!$util.isInteger(message.banapassportAmId))
                        return "banapassportAmId: integer expected";
                if (message.cardChipId != null && message.hasOwnProperty("cardChipId"))
                    if (!$util.isString(message.cardChipId))
                        return "cardChipId: string expected";
                if (message.accessCode != null && message.hasOwnProperty("accessCode"))
                    if (!$util.isString(message.accessCode))
                        return "accessCode: string expected";
                if (message.cardTypeCode != null && message.hasOwnProperty("cardTypeCode"))
                    if (!$util.isInteger(message.cardTypeCode))
                        return "cardTypeCode: integer expected";
                if (message.cardRegionCode != null && message.hasOwnProperty("cardRegionCode"))
                    if (!$util.isInteger(message.cardRegionCode))
                        return "cardRegionCode: integer expected";
                if (message.device != null && message.hasOwnProperty("device"))
                    switch (message.device) {
                    default:
                        return "device: enum value expected";
                    case 0:
                    case 1:
                        break;
                    }
                if (!$util.isInteger(message.timestamp))
                    return "timestamp: integer expected";
                return null;
            };

            /**
             * Creates a CreateUserRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CreateUserRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CreateUserRequest} CreateUserRequest
             */
            CreateUserRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CreateUserRequest)
                    return object;
                let message = new $root.wm5.protobuf.CreateUserRequest();
                if (object.banapassportAmId != null)
                    message.banapassportAmId = object.banapassportAmId >>> 0;
                if (object.cardChipId != null)
                    message.cardChipId = String(object.cardChipId);
                if (object.accessCode != null)
                    message.accessCode = String(object.accessCode);
                if (object.cardTypeCode != null)
                    message.cardTypeCode = object.cardTypeCode >>> 0;
                if (object.cardRegionCode != null)
                    message.cardRegionCode = object.cardRegionCode >>> 0;
                switch (object.device) {
                default:
                    if (typeof object.device === "number") {
                        message.device = object.device;
                        break;
                    }
                    break;
                case "DEVICE_CARD":
                case 0:
                    message.device = 0;
                    break;
                case "DEVICE_PHONE":
                case 1:
                    message.device = 1;
                    break;
                }
                if (object.timestamp != null)
                    message.timestamp = object.timestamp >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a CreateUserRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CreateUserRequest
             * @static
             * @param {wm5.protobuf.CreateUserRequest} message CreateUserRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateUserRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.banapassportAmId = 0;
                    object.cardChipId = "";
                    object.accessCode = "";
                    object.cardTypeCode = 0;
                    object.cardRegionCode = 0;
                    object.device = options.enums === String ? "DEVICE_CARD" : 0;
                    object.timestamp = 0;
                }
                if (message.banapassportAmId != null && message.hasOwnProperty("banapassportAmId"))
                    object.banapassportAmId = message.banapassportAmId;
                if (message.cardChipId != null && message.hasOwnProperty("cardChipId"))
                    object.cardChipId = message.cardChipId;
                if (message.accessCode != null && message.hasOwnProperty("accessCode"))
                    object.accessCode = message.accessCode;
                if (message.cardTypeCode != null && message.hasOwnProperty("cardTypeCode"))
                    object.cardTypeCode = message.cardTypeCode;
                if (message.cardRegionCode != null && message.hasOwnProperty("cardRegionCode"))
                    object.cardRegionCode = message.cardRegionCode;
                if (message.device != null && message.hasOwnProperty("device"))
                    object.device = options.enums === String ? $root.wm5.protobuf.DeviceType[message.device] === undefined ? message.device : $root.wm5.protobuf.DeviceType[message.device] : message.device;
                if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                    object.timestamp = message.timestamp;
                return object;
            };

            /**
             * Converts this CreateUserRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CreateUserRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateUserRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateUserRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.CreateUserRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateUserRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CreateUserRequest";
            };

            return CreateUserRequest;
        })();

        protobuf.CreateUserResponse = (function() {

            /**
             * Properties of a CreateUserResponse.
             * @memberof wm5.protobuf
             * @interface ICreateUserResponse
             * @property {wm5.protobuf.ErrorCode} error CreateUserResponse error
             * @property {string|null} [accessCode] CreateUserResponse accessCode
             * @property {number|null} [banapassportAmId] CreateUserResponse banapassportAmId
             * @property {string|null} [personId] CreateUserResponse personId
             * @property {number|null} [bnidLevel] CreateUserResponse bnidLevel
             * @property {number} userId CreateUserResponse userId
             */

            /**
             * Constructs a new CreateUserResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a CreateUserResponse.
             * @implements ICreateUserResponse
             * @constructor
             * @param {wm5.protobuf.ICreateUserResponse=} [properties] Properties to set
             */
            function CreateUserResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateUserResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.CreateUserResponse
             * @instance
             */
            CreateUserResponse.prototype.error = 0;

            /**
             * CreateUserResponse accessCode.
             * @member {string} accessCode
             * @memberof wm5.protobuf.CreateUserResponse
             * @instance
             */
            CreateUserResponse.prototype.accessCode = "";

            /**
             * CreateUserResponse banapassportAmId.
             * @member {number} banapassportAmId
             * @memberof wm5.protobuf.CreateUserResponse
             * @instance
             */
            CreateUserResponse.prototype.banapassportAmId = 0;

            /**
             * CreateUserResponse personId.
             * @member {string} personId
             * @memberof wm5.protobuf.CreateUserResponse
             * @instance
             */
            CreateUserResponse.prototype.personId = "";

            /**
             * CreateUserResponse bnidLevel.
             * @member {number} bnidLevel
             * @memberof wm5.protobuf.CreateUserResponse
             * @instance
             */
            CreateUserResponse.prototype.bnidLevel = 0;

            /**
             * CreateUserResponse userId.
             * @member {number} userId
             * @memberof wm5.protobuf.CreateUserResponse
             * @instance
             */
            CreateUserResponse.prototype.userId = 0;

            /**
             * Creates a new CreateUserResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CreateUserResponse
             * @static
             * @param {wm5.protobuf.ICreateUserResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.CreateUserResponse} CreateUserResponse instance
             */
            CreateUserResponse.create = function create(properties) {
                return new CreateUserResponse(properties);
            };

            /**
             * Encodes the specified CreateUserResponse message. Does not implicitly {@link wm5.protobuf.CreateUserResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CreateUserResponse
             * @static
             * @param {wm5.protobuf.ICreateUserResponse} message CreateUserResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateUserResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.accessCode != null && Object.hasOwnProperty.call(message, "accessCode"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.accessCode);
                if (message.banapassportAmId != null && Object.hasOwnProperty.call(message, "banapassportAmId"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.banapassportAmId);
                if (message.personId != null && Object.hasOwnProperty.call(message, "personId"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.personId);
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.userId);
                if (message.bnidLevel != null && Object.hasOwnProperty.call(message, "bnidLevel"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.bnidLevel);
                return writer;
            };

            /**
             * Encodes the specified CreateUserResponse message, length delimited. Does not implicitly {@link wm5.protobuf.CreateUserResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CreateUserResponse
             * @static
             * @param {wm5.protobuf.ICreateUserResponse} message CreateUserResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateUserResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateUserResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CreateUserResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CreateUserResponse} CreateUserResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateUserResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CreateUserResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.accessCode = reader.string();
                            break;
                        }
                    case 3: {
                            message.banapassportAmId = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.personId = reader.string();
                            break;
                        }
                    case 6: {
                            message.bnidLevel = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.userId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateUserResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CreateUserResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CreateUserResponse} CreateUserResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateUserResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateUserResponse message.
             * @function verify
             * @memberof wm5.protobuf.CreateUserResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateUserResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.accessCode != null && message.hasOwnProperty("accessCode"))
                    if (!$util.isString(message.accessCode))
                        return "accessCode: string expected";
                if (message.banapassportAmId != null && message.hasOwnProperty("banapassportAmId"))
                    if (!$util.isInteger(message.banapassportAmId))
                        return "banapassportAmId: integer expected";
                if (message.personId != null && message.hasOwnProperty("personId"))
                    if (!$util.isString(message.personId))
                        return "personId: string expected";
                if (message.bnidLevel != null && message.hasOwnProperty("bnidLevel"))
                    if (!$util.isInteger(message.bnidLevel))
                        return "bnidLevel: integer expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                return null;
            };

            /**
             * Creates a CreateUserResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CreateUserResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CreateUserResponse} CreateUserResponse
             */
            CreateUserResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CreateUserResponse)
                    return object;
                let message = new $root.wm5.protobuf.CreateUserResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.accessCode != null)
                    message.accessCode = String(object.accessCode);
                if (object.banapassportAmId != null)
                    message.banapassportAmId = object.banapassportAmId >>> 0;
                if (object.personId != null)
                    message.personId = String(object.personId);
                if (object.bnidLevel != null)
                    message.bnidLevel = object.bnidLevel >>> 0;
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a CreateUserResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CreateUserResponse
             * @static
             * @param {wm5.protobuf.CreateUserResponse} message CreateUserResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateUserResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.accessCode = "";
                    object.banapassportAmId = 0;
                    object.personId = "";
                    object.userId = 0;
                    object.bnidLevel = 0;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.accessCode != null && message.hasOwnProperty("accessCode"))
                    object.accessCode = message.accessCode;
                if (message.banapassportAmId != null && message.hasOwnProperty("banapassportAmId"))
                    object.banapassportAmId = message.banapassportAmId;
                if (message.personId != null && message.hasOwnProperty("personId"))
                    object.personId = message.personId;
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.bnidLevel != null && message.hasOwnProperty("bnidLevel"))
                    object.bnidLevel = message.bnidLevel;
                return object;
            };

            /**
             * Converts this CreateUserResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CreateUserResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateUserResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateUserResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.CreateUserResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateUserResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CreateUserResponse";
            };

            return CreateUserResponse;
        })();

        protobuf.AskAccessCodeRequest = (function() {

            /**
             * Properties of an AskAccessCodeRequest.
             * @memberof wm5.protobuf
             * @interface IAskAccessCodeRequest
             * @property {string} cardChipId AskAccessCodeRequest cardChipId
             */

            /**
             * Constructs a new AskAccessCodeRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents an AskAccessCodeRequest.
             * @implements IAskAccessCodeRequest
             * @constructor
             * @param {wm5.protobuf.IAskAccessCodeRequest=} [properties] Properties to set
             */
            function AskAccessCodeRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * AskAccessCodeRequest cardChipId.
             * @member {string} cardChipId
             * @memberof wm5.protobuf.AskAccessCodeRequest
             * @instance
             */
            AskAccessCodeRequest.prototype.cardChipId = "";

            /**
             * Creates a new AskAccessCodeRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.AskAccessCodeRequest
             * @static
             * @param {wm5.protobuf.IAskAccessCodeRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.AskAccessCodeRequest} AskAccessCodeRequest instance
             */
            AskAccessCodeRequest.create = function create(properties) {
                return new AskAccessCodeRequest(properties);
            };

            /**
             * Encodes the specified AskAccessCodeRequest message. Does not implicitly {@link wm5.protobuf.AskAccessCodeRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.AskAccessCodeRequest
             * @static
             * @param {wm5.protobuf.IAskAccessCodeRequest} message AskAccessCodeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AskAccessCodeRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.cardChipId);
                return writer;
            };

            /**
             * Encodes the specified AskAccessCodeRequest message, length delimited. Does not implicitly {@link wm5.protobuf.AskAccessCodeRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.AskAccessCodeRequest
             * @static
             * @param {wm5.protobuf.IAskAccessCodeRequest} message AskAccessCodeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AskAccessCodeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an AskAccessCodeRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.AskAccessCodeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.AskAccessCodeRequest} AskAccessCodeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AskAccessCodeRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.AskAccessCodeRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.cardChipId = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("cardChipId"))
                    throw $util.ProtocolError("missing required 'cardChipId'", { instance: message });
                return message;
            };

            /**
             * Decodes an AskAccessCodeRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.AskAccessCodeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.AskAccessCodeRequest} AskAccessCodeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AskAccessCodeRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an AskAccessCodeRequest message.
             * @function verify
             * @memberof wm5.protobuf.AskAccessCodeRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AskAccessCodeRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isString(message.cardChipId))
                    return "cardChipId: string expected";
                return null;
            };

            /**
             * Creates an AskAccessCodeRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.AskAccessCodeRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.AskAccessCodeRequest} AskAccessCodeRequest
             */
            AskAccessCodeRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.AskAccessCodeRequest)
                    return object;
                let message = new $root.wm5.protobuf.AskAccessCodeRequest();
                if (object.cardChipId != null)
                    message.cardChipId = String(object.cardChipId);
                return message;
            };

            /**
             * Creates a plain object from an AskAccessCodeRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.AskAccessCodeRequest
             * @static
             * @param {wm5.protobuf.AskAccessCodeRequest} message AskAccessCodeRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AskAccessCodeRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.cardChipId = "";
                if (message.cardChipId != null && message.hasOwnProperty("cardChipId"))
                    object.cardChipId = message.cardChipId;
                return object;
            };

            /**
             * Converts this AskAccessCodeRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.AskAccessCodeRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AskAccessCodeRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for AskAccessCodeRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.AskAccessCodeRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            AskAccessCodeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.AskAccessCodeRequest";
            };

            return AskAccessCodeRequest;
        })();

        protobuf.AskAccessCodeResponse = (function() {

            /**
             * Properties of an AskAccessCodeResponse.
             * @memberof wm5.protobuf
             * @interface IAskAccessCodeResponse
             * @property {wm5.protobuf.ErrorCode} error AskAccessCodeResponse error
             * @property {string} accessCode AskAccessCodeResponse accessCode
             */

            /**
             * Constructs a new AskAccessCodeResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents an AskAccessCodeResponse.
             * @implements IAskAccessCodeResponse
             * @constructor
             * @param {wm5.protobuf.IAskAccessCodeResponse=} [properties] Properties to set
             */
            function AskAccessCodeResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * AskAccessCodeResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.AskAccessCodeResponse
             * @instance
             */
            AskAccessCodeResponse.prototype.error = 0;

            /**
             * AskAccessCodeResponse accessCode.
             * @member {string} accessCode
             * @memberof wm5.protobuf.AskAccessCodeResponse
             * @instance
             */
            AskAccessCodeResponse.prototype.accessCode = "";

            /**
             * Creates a new AskAccessCodeResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.AskAccessCodeResponse
             * @static
             * @param {wm5.protobuf.IAskAccessCodeResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.AskAccessCodeResponse} AskAccessCodeResponse instance
             */
            AskAccessCodeResponse.create = function create(properties) {
                return new AskAccessCodeResponse(properties);
            };

            /**
             * Encodes the specified AskAccessCodeResponse message. Does not implicitly {@link wm5.protobuf.AskAccessCodeResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.AskAccessCodeResponse
             * @static
             * @param {wm5.protobuf.IAskAccessCodeResponse} message AskAccessCodeResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AskAccessCodeResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.accessCode);
                return writer;
            };

            /**
             * Encodes the specified AskAccessCodeResponse message, length delimited. Does not implicitly {@link wm5.protobuf.AskAccessCodeResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.AskAccessCodeResponse
             * @static
             * @param {wm5.protobuf.IAskAccessCodeResponse} message AskAccessCodeResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AskAccessCodeResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an AskAccessCodeResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.AskAccessCodeResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.AskAccessCodeResponse} AskAccessCodeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AskAccessCodeResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.AskAccessCodeResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.accessCode = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("accessCode"))
                    throw $util.ProtocolError("missing required 'accessCode'", { instance: message });
                return message;
            };

            /**
             * Decodes an AskAccessCodeResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.AskAccessCodeResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.AskAccessCodeResponse} AskAccessCodeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AskAccessCodeResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an AskAccessCodeResponse message.
             * @function verify
             * @memberof wm5.protobuf.AskAccessCodeResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AskAccessCodeResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (!$util.isString(message.accessCode))
                    return "accessCode: string expected";
                return null;
            };

            /**
             * Creates an AskAccessCodeResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.AskAccessCodeResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.AskAccessCodeResponse} AskAccessCodeResponse
             */
            AskAccessCodeResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.AskAccessCodeResponse)
                    return object;
                let message = new $root.wm5.protobuf.AskAccessCodeResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.accessCode != null)
                    message.accessCode = String(object.accessCode);
                return message;
            };

            /**
             * Creates a plain object from an AskAccessCodeResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.AskAccessCodeResponse
             * @static
             * @param {wm5.protobuf.AskAccessCodeResponse} message AskAccessCodeResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AskAccessCodeResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.accessCode = "";
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.accessCode != null && message.hasOwnProperty("accessCode"))
                    object.accessCode = message.accessCode;
                return object;
            };

            /**
             * Converts this AskAccessCodeResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.AskAccessCodeResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AskAccessCodeResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for AskAccessCodeResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.AskAccessCodeResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            AskAccessCodeResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.AskAccessCodeResponse";
            };

            return AskAccessCodeResponse;
        })();

        protobuf.RegisterOpponentGhostRequest = (function() {

            /**
             * Properties of a RegisterOpponentGhostRequest.
             * @memberof wm5.protobuf
             * @interface IRegisterOpponentGhostRequest
             * @property {number} carId RegisterOpponentGhostRequest carId
             * @property {number} specialGhostId RegisterOpponentGhostRequest specialGhostId
             */

            /**
             * Constructs a new RegisterOpponentGhostRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a RegisterOpponentGhostRequest.
             * @implements IRegisterOpponentGhostRequest
             * @constructor
             * @param {wm5.protobuf.IRegisterOpponentGhostRequest=} [properties] Properties to set
             */
            function RegisterOpponentGhostRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * RegisterOpponentGhostRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.RegisterOpponentGhostRequest
             * @instance
             */
            RegisterOpponentGhostRequest.prototype.carId = 0;

            /**
             * RegisterOpponentGhostRequest specialGhostId.
             * @member {number} specialGhostId
             * @memberof wm5.protobuf.RegisterOpponentGhostRequest
             * @instance
             */
            RegisterOpponentGhostRequest.prototype.specialGhostId = 0;

            /**
             * Creates a new RegisterOpponentGhostRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.RegisterOpponentGhostRequest
             * @static
             * @param {wm5.protobuf.IRegisterOpponentGhostRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.RegisterOpponentGhostRequest} RegisterOpponentGhostRequest instance
             */
            RegisterOpponentGhostRequest.create = function create(properties) {
                return new RegisterOpponentGhostRequest(properties);
            };

            /**
             * Encodes the specified RegisterOpponentGhostRequest message. Does not implicitly {@link wm5.protobuf.RegisterOpponentGhostRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.RegisterOpponentGhostRequest
             * @static
             * @param {wm5.protobuf.IRegisterOpponentGhostRequest} message RegisterOpponentGhostRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RegisterOpponentGhostRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.specialGhostId);
                return writer;
            };

            /**
             * Encodes the specified RegisterOpponentGhostRequest message, length delimited. Does not implicitly {@link wm5.protobuf.RegisterOpponentGhostRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.RegisterOpponentGhostRequest
             * @static
             * @param {wm5.protobuf.IRegisterOpponentGhostRequest} message RegisterOpponentGhostRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RegisterOpponentGhostRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RegisterOpponentGhostRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.RegisterOpponentGhostRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.RegisterOpponentGhostRequest} RegisterOpponentGhostRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RegisterOpponentGhostRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.RegisterOpponentGhostRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.specialGhostId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                if (!message.hasOwnProperty("specialGhostId"))
                    throw $util.ProtocolError("missing required 'specialGhostId'", { instance: message });
                return message;
            };

            /**
             * Decodes a RegisterOpponentGhostRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.RegisterOpponentGhostRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.RegisterOpponentGhostRequest} RegisterOpponentGhostRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RegisterOpponentGhostRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RegisterOpponentGhostRequest message.
             * @function verify
             * @memberof wm5.protobuf.RegisterOpponentGhostRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RegisterOpponentGhostRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                if (!$util.isInteger(message.specialGhostId))
                    return "specialGhostId: integer expected";
                return null;
            };

            /**
             * Creates a RegisterOpponentGhostRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.RegisterOpponentGhostRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.RegisterOpponentGhostRequest} RegisterOpponentGhostRequest
             */
            RegisterOpponentGhostRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.RegisterOpponentGhostRequest)
                    return object;
                let message = new $root.wm5.protobuf.RegisterOpponentGhostRequest();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.specialGhostId != null)
                    message.specialGhostId = object.specialGhostId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a RegisterOpponentGhostRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.RegisterOpponentGhostRequest
             * @static
             * @param {wm5.protobuf.RegisterOpponentGhostRequest} message RegisterOpponentGhostRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RegisterOpponentGhostRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.carId = 0;
                    object.specialGhostId = 0;
                }
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.specialGhostId != null && message.hasOwnProperty("specialGhostId"))
                    object.specialGhostId = message.specialGhostId;
                return object;
            };

            /**
             * Converts this RegisterOpponentGhostRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.RegisterOpponentGhostRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RegisterOpponentGhostRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for RegisterOpponentGhostRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.RegisterOpponentGhostRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RegisterOpponentGhostRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.RegisterOpponentGhostRequest";
            };

            return RegisterOpponentGhostRequest;
        })();

        protobuf.RegisterOpponentGhostResponse = (function() {

            /**
             * Properties of a RegisterOpponentGhostResponse.
             * @memberof wm5.protobuf
             * @interface IRegisterOpponentGhostResponse
             * @property {wm5.protobuf.ErrorCode} error RegisterOpponentGhostResponse error
             */

            /**
             * Constructs a new RegisterOpponentGhostResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a RegisterOpponentGhostResponse.
             * @implements IRegisterOpponentGhostResponse
             * @constructor
             * @param {wm5.protobuf.IRegisterOpponentGhostResponse=} [properties] Properties to set
             */
            function RegisterOpponentGhostResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * RegisterOpponentGhostResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.RegisterOpponentGhostResponse
             * @instance
             */
            RegisterOpponentGhostResponse.prototype.error = 0;

            /**
             * Creates a new RegisterOpponentGhostResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.RegisterOpponentGhostResponse
             * @static
             * @param {wm5.protobuf.IRegisterOpponentGhostResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.RegisterOpponentGhostResponse} RegisterOpponentGhostResponse instance
             */
            RegisterOpponentGhostResponse.create = function create(properties) {
                return new RegisterOpponentGhostResponse(properties);
            };

            /**
             * Encodes the specified RegisterOpponentGhostResponse message. Does not implicitly {@link wm5.protobuf.RegisterOpponentGhostResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.RegisterOpponentGhostResponse
             * @static
             * @param {wm5.protobuf.IRegisterOpponentGhostResponse} message RegisterOpponentGhostResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RegisterOpponentGhostResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified RegisterOpponentGhostResponse message, length delimited. Does not implicitly {@link wm5.protobuf.RegisterOpponentGhostResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.RegisterOpponentGhostResponse
             * @static
             * @param {wm5.protobuf.IRegisterOpponentGhostResponse} message RegisterOpponentGhostResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RegisterOpponentGhostResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RegisterOpponentGhostResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.RegisterOpponentGhostResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.RegisterOpponentGhostResponse} RegisterOpponentGhostResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RegisterOpponentGhostResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.RegisterOpponentGhostResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a RegisterOpponentGhostResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.RegisterOpponentGhostResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.RegisterOpponentGhostResponse} RegisterOpponentGhostResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RegisterOpponentGhostResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RegisterOpponentGhostResponse message.
             * @function verify
             * @memberof wm5.protobuf.RegisterOpponentGhostResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RegisterOpponentGhostResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a RegisterOpponentGhostResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.RegisterOpponentGhostResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.RegisterOpponentGhostResponse} RegisterOpponentGhostResponse
             */
            RegisterOpponentGhostResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.RegisterOpponentGhostResponse)
                    return object;
                let message = new $root.wm5.protobuf.RegisterOpponentGhostResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a RegisterOpponentGhostResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.RegisterOpponentGhostResponse
             * @static
             * @param {wm5.protobuf.RegisterOpponentGhostResponse} message RegisterOpponentGhostResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RegisterOpponentGhostResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this RegisterOpponentGhostResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.RegisterOpponentGhostResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RegisterOpponentGhostResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for RegisterOpponentGhostResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.RegisterOpponentGhostResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RegisterOpponentGhostResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.RegisterOpponentGhostResponse";
            };

            return RegisterOpponentGhostResponse;
        })();

        protobuf.CheckTeamNameRequest = (function() {

            /**
             * Properties of a CheckTeamNameRequest.
             * @memberof wm5.protobuf
             * @interface ICheckTeamNameRequest
             * @property {string} teamName CheckTeamNameRequest teamName
             */

            /**
             * Constructs a new CheckTeamNameRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a CheckTeamNameRequest.
             * @implements ICheckTeamNameRequest
             * @constructor
             * @param {wm5.protobuf.ICheckTeamNameRequest=} [properties] Properties to set
             */
            function CheckTeamNameRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CheckTeamNameRequest teamName.
             * @member {string} teamName
             * @memberof wm5.protobuf.CheckTeamNameRequest
             * @instance
             */
            CheckTeamNameRequest.prototype.teamName = "";

            /**
             * Creates a new CheckTeamNameRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CheckTeamNameRequest
             * @static
             * @param {wm5.protobuf.ICheckTeamNameRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.CheckTeamNameRequest} CheckTeamNameRequest instance
             */
            CheckTeamNameRequest.create = function create(properties) {
                return new CheckTeamNameRequest(properties);
            };

            /**
             * Encodes the specified CheckTeamNameRequest message. Does not implicitly {@link wm5.protobuf.CheckTeamNameRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CheckTeamNameRequest
             * @static
             * @param {wm5.protobuf.ICheckTeamNameRequest} message CheckTeamNameRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CheckTeamNameRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.teamName);
                return writer;
            };

            /**
             * Encodes the specified CheckTeamNameRequest message, length delimited. Does not implicitly {@link wm5.protobuf.CheckTeamNameRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CheckTeamNameRequest
             * @static
             * @param {wm5.protobuf.ICheckTeamNameRequest} message CheckTeamNameRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CheckTeamNameRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CheckTeamNameRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CheckTeamNameRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CheckTeamNameRequest} CheckTeamNameRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CheckTeamNameRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CheckTeamNameRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.teamName = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("teamName"))
                    throw $util.ProtocolError("missing required 'teamName'", { instance: message });
                return message;
            };

            /**
             * Decodes a CheckTeamNameRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CheckTeamNameRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CheckTeamNameRequest} CheckTeamNameRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CheckTeamNameRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CheckTeamNameRequest message.
             * @function verify
             * @memberof wm5.protobuf.CheckTeamNameRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CheckTeamNameRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isString(message.teamName))
                    return "teamName: string expected";
                return null;
            };

            /**
             * Creates a CheckTeamNameRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CheckTeamNameRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CheckTeamNameRequest} CheckTeamNameRequest
             */
            CheckTeamNameRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CheckTeamNameRequest)
                    return object;
                let message = new $root.wm5.protobuf.CheckTeamNameRequest();
                if (object.teamName != null)
                    message.teamName = String(object.teamName);
                return message;
            };

            /**
             * Creates a plain object from a CheckTeamNameRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CheckTeamNameRequest
             * @static
             * @param {wm5.protobuf.CheckTeamNameRequest} message CheckTeamNameRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CheckTeamNameRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.teamName = "";
                if (message.teamName != null && message.hasOwnProperty("teamName"))
                    object.teamName = message.teamName;
                return object;
            };

            /**
             * Converts this CheckTeamNameRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CheckTeamNameRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CheckTeamNameRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CheckTeamNameRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.CheckTeamNameRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CheckTeamNameRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CheckTeamNameRequest";
            };

            return CheckTeamNameRequest;
        })();

        protobuf.CheckTeamNameResponse = (function() {

            /**
             * Properties of a CheckTeamNameResponse.
             * @memberof wm5.protobuf
             * @interface ICheckTeamNameResponse
             * @property {wm5.protobuf.ErrorCode} error CheckTeamNameResponse error
             */

            /**
             * Constructs a new CheckTeamNameResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a CheckTeamNameResponse.
             * @implements ICheckTeamNameResponse
             * @constructor
             * @param {wm5.protobuf.ICheckTeamNameResponse=} [properties] Properties to set
             */
            function CheckTeamNameResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CheckTeamNameResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.CheckTeamNameResponse
             * @instance
             */
            CheckTeamNameResponse.prototype.error = 0;

            /**
             * Creates a new CheckTeamNameResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CheckTeamNameResponse
             * @static
             * @param {wm5.protobuf.ICheckTeamNameResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.CheckTeamNameResponse} CheckTeamNameResponse instance
             */
            CheckTeamNameResponse.create = function create(properties) {
                return new CheckTeamNameResponse(properties);
            };

            /**
             * Encodes the specified CheckTeamNameResponse message. Does not implicitly {@link wm5.protobuf.CheckTeamNameResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CheckTeamNameResponse
             * @static
             * @param {wm5.protobuf.ICheckTeamNameResponse} message CheckTeamNameResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CheckTeamNameResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified CheckTeamNameResponse message, length delimited. Does not implicitly {@link wm5.protobuf.CheckTeamNameResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CheckTeamNameResponse
             * @static
             * @param {wm5.protobuf.ICheckTeamNameResponse} message CheckTeamNameResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CheckTeamNameResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CheckTeamNameResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CheckTeamNameResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CheckTeamNameResponse} CheckTeamNameResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CheckTeamNameResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CheckTeamNameResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a CheckTeamNameResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CheckTeamNameResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CheckTeamNameResponse} CheckTeamNameResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CheckTeamNameResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CheckTeamNameResponse message.
             * @function verify
             * @memberof wm5.protobuf.CheckTeamNameResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CheckTeamNameResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a CheckTeamNameResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CheckTeamNameResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CheckTeamNameResponse} CheckTeamNameResponse
             */
            CheckTeamNameResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CheckTeamNameResponse)
                    return object;
                let message = new $root.wm5.protobuf.CheckTeamNameResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a CheckTeamNameResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CheckTeamNameResponse
             * @static
             * @param {wm5.protobuf.CheckTeamNameResponse} message CheckTeamNameResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CheckTeamNameResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this CheckTeamNameResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CheckTeamNameResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CheckTeamNameResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CheckTeamNameResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.CheckTeamNameResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CheckTeamNameResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CheckTeamNameResponse";
            };

            return CheckTeamNameResponse;
        })();

        protobuf.CreateTeamRequest = (function() {

            /**
             * Properties of a CreateTeamRequest.
             * @memberof wm5.protobuf
             * @interface ICreateTeamRequest
             * @property {number} userId CreateTeamRequest userId
             * @property {string} teamName CreateTeamRequest teamName
             * @property {number} timestamp CreateTeamRequest timestamp
             */

            /**
             * Constructs a new CreateTeamRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a CreateTeamRequest.
             * @implements ICreateTeamRequest
             * @constructor
             * @param {wm5.protobuf.ICreateTeamRequest=} [properties] Properties to set
             */
            function CreateTeamRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateTeamRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.CreateTeamRequest
             * @instance
             */
            CreateTeamRequest.prototype.userId = 0;

            /**
             * CreateTeamRequest teamName.
             * @member {string} teamName
             * @memberof wm5.protobuf.CreateTeamRequest
             * @instance
             */
            CreateTeamRequest.prototype.teamName = "";

            /**
             * CreateTeamRequest timestamp.
             * @member {number} timestamp
             * @memberof wm5.protobuf.CreateTeamRequest
             * @instance
             */
            CreateTeamRequest.prototype.timestamp = 0;

            /**
             * Creates a new CreateTeamRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CreateTeamRequest
             * @static
             * @param {wm5.protobuf.ICreateTeamRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.CreateTeamRequest} CreateTeamRequest instance
             */
            CreateTeamRequest.create = function create(properties) {
                return new CreateTeamRequest(properties);
            };

            /**
             * Encodes the specified CreateTeamRequest message. Does not implicitly {@link wm5.protobuf.CreateTeamRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CreateTeamRequest
             * @static
             * @param {wm5.protobuf.ICreateTeamRequest} message CreateTeamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateTeamRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.teamName);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.timestamp);
                return writer;
            };

            /**
             * Encodes the specified CreateTeamRequest message, length delimited. Does not implicitly {@link wm5.protobuf.CreateTeamRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CreateTeamRequest
             * @static
             * @param {wm5.protobuf.ICreateTeamRequest} message CreateTeamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateTeamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateTeamRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CreateTeamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CreateTeamRequest} CreateTeamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateTeamRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CreateTeamRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.teamName = reader.string();
                            break;
                        }
                    case 3: {
                            message.timestamp = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                if (!message.hasOwnProperty("teamName"))
                    throw $util.ProtocolError("missing required 'teamName'", { instance: message });
                if (!message.hasOwnProperty("timestamp"))
                    throw $util.ProtocolError("missing required 'timestamp'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateTeamRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CreateTeamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CreateTeamRequest} CreateTeamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateTeamRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateTeamRequest message.
             * @function verify
             * @memberof wm5.protobuf.CreateTeamRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateTeamRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                if (!$util.isString(message.teamName))
                    return "teamName: string expected";
                if (!$util.isInteger(message.timestamp))
                    return "timestamp: integer expected";
                return null;
            };

            /**
             * Creates a CreateTeamRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CreateTeamRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CreateTeamRequest} CreateTeamRequest
             */
            CreateTeamRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CreateTeamRequest)
                    return object;
                let message = new $root.wm5.protobuf.CreateTeamRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.teamName != null)
                    message.teamName = String(object.teamName);
                if (object.timestamp != null)
                    message.timestamp = object.timestamp >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a CreateTeamRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CreateTeamRequest
             * @static
             * @param {wm5.protobuf.CreateTeamRequest} message CreateTeamRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateTeamRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.userId = 0;
                    object.teamName = "";
                    object.timestamp = 0;
                }
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.teamName != null && message.hasOwnProperty("teamName"))
                    object.teamName = message.teamName;
                if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                    object.timestamp = message.timestamp;
                return object;
            };

            /**
             * Converts this CreateTeamRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CreateTeamRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateTeamRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateTeamRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.CreateTeamRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateTeamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CreateTeamRequest";
            };

            return CreateTeamRequest;
        })();

        protobuf.CreateTeamResponse = (function() {

            /**
             * Properties of a CreateTeamResponse.
             * @memberof wm5.protobuf
             * @interface ICreateTeamResponse
             * @property {wm5.protobuf.ErrorCode} error CreateTeamResponse error
             * @property {wm5.protobuf.ITeam|null} [team] CreateTeamResponse team
             * @property {number|null} [teamCarId] CreateTeamResponse teamCarId
             */

            /**
             * Constructs a new CreateTeamResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a CreateTeamResponse.
             * @implements ICreateTeamResponse
             * @constructor
             * @param {wm5.protobuf.ICreateTeamResponse=} [properties] Properties to set
             */
            function CreateTeamResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateTeamResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.CreateTeamResponse
             * @instance
             */
            CreateTeamResponse.prototype.error = 0;

            /**
             * CreateTeamResponse team.
             * @member {wm5.protobuf.ITeam|null|undefined} team
             * @memberof wm5.protobuf.CreateTeamResponse
             * @instance
             */
            CreateTeamResponse.prototype.team = null;

            /**
             * CreateTeamResponse teamCarId.
             * @member {number} teamCarId
             * @memberof wm5.protobuf.CreateTeamResponse
             * @instance
             */
            CreateTeamResponse.prototype.teamCarId = 0;

            /**
             * Creates a new CreateTeamResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CreateTeamResponse
             * @static
             * @param {wm5.protobuf.ICreateTeamResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.CreateTeamResponse} CreateTeamResponse instance
             */
            CreateTeamResponse.create = function create(properties) {
                return new CreateTeamResponse(properties);
            };

            /**
             * Encodes the specified CreateTeamResponse message. Does not implicitly {@link wm5.protobuf.CreateTeamResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CreateTeamResponse
             * @static
             * @param {wm5.protobuf.ICreateTeamResponse} message CreateTeamResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateTeamResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.team != null && Object.hasOwnProperty.call(message, "team"))
                    $root.wm5.protobuf.Team.encode(message.team, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.teamCarId != null && Object.hasOwnProperty.call(message, "teamCarId"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.teamCarId);
                return writer;
            };

            /**
             * Encodes the specified CreateTeamResponse message, length delimited. Does not implicitly {@link wm5.protobuf.CreateTeamResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CreateTeamResponse
             * @static
             * @param {wm5.protobuf.ICreateTeamResponse} message CreateTeamResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateTeamResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateTeamResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CreateTeamResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CreateTeamResponse} CreateTeamResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateTeamResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CreateTeamResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.team = $root.wm5.protobuf.Team.decode(reader, reader.uint32());
                            break;
                        }
                    case 3: {
                            message.teamCarId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateTeamResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CreateTeamResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CreateTeamResponse} CreateTeamResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateTeamResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateTeamResponse message.
             * @function verify
             * @memberof wm5.protobuf.CreateTeamResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateTeamResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.team != null && message.hasOwnProperty("team")) {
                    let error = $root.wm5.protobuf.Team.verify(message.team);
                    if (error)
                        return "team." + error;
                }
                if (message.teamCarId != null && message.hasOwnProperty("teamCarId"))
                    if (!$util.isInteger(message.teamCarId))
                        return "teamCarId: integer expected";
                return null;
            };

            /**
             * Creates a CreateTeamResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CreateTeamResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CreateTeamResponse} CreateTeamResponse
             */
            CreateTeamResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CreateTeamResponse)
                    return object;
                let message = new $root.wm5.protobuf.CreateTeamResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.team != null) {
                    if (typeof object.team !== "object")
                        throw TypeError(".wm5.protobuf.CreateTeamResponse.team: object expected");
                    message.team = $root.wm5.protobuf.Team.fromObject(object.team);
                }
                if (object.teamCarId != null)
                    message.teamCarId = object.teamCarId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a CreateTeamResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CreateTeamResponse
             * @static
             * @param {wm5.protobuf.CreateTeamResponse} message CreateTeamResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateTeamResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.team = null;
                    object.teamCarId = 0;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.team != null && message.hasOwnProperty("team"))
                    object.team = $root.wm5.protobuf.Team.toObject(message.team, options);
                if (message.teamCarId != null && message.hasOwnProperty("teamCarId"))
                    object.teamCarId = message.teamCarId;
                return object;
            };

            /**
             * Converts this CreateTeamResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CreateTeamResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateTeamResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateTeamResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.CreateTeamResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateTeamResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CreateTeamResponse";
            };

            return CreateTeamResponse;
        })();

        protobuf.SearchTeamRequest = (function() {

            /**
             * Properties of a SearchTeamRequest.
             * @memberof wm5.protobuf
             * @interface ISearchTeamRequest
             * @property {string|null} [name] SearchTeamRequest name
             * @property {string|null} [placeId] SearchTeamRequest placeId
             */

            /**
             * Constructs a new SearchTeamRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a SearchTeamRequest.
             * @implements ISearchTeamRequest
             * @constructor
             * @param {wm5.protobuf.ISearchTeamRequest=} [properties] Properties to set
             */
            function SearchTeamRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SearchTeamRequest name.
             * @member {string} name
             * @memberof wm5.protobuf.SearchTeamRequest
             * @instance
             */
            SearchTeamRequest.prototype.name = "";

            /**
             * SearchTeamRequest placeId.
             * @member {string} placeId
             * @memberof wm5.protobuf.SearchTeamRequest
             * @instance
             */
            SearchTeamRequest.prototype.placeId = "";

            /**
             * Creates a new SearchTeamRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SearchTeamRequest
             * @static
             * @param {wm5.protobuf.ISearchTeamRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.SearchTeamRequest} SearchTeamRequest instance
             */
            SearchTeamRequest.create = function create(properties) {
                return new SearchTeamRequest(properties);
            };

            /**
             * Encodes the specified SearchTeamRequest message. Does not implicitly {@link wm5.protobuf.SearchTeamRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SearchTeamRequest
             * @static
             * @param {wm5.protobuf.ISearchTeamRequest} message SearchTeamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchTeamRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                if (message.placeId != null && Object.hasOwnProperty.call(message, "placeId"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.placeId);
                return writer;
            };

            /**
             * Encodes the specified SearchTeamRequest message, length delimited. Does not implicitly {@link wm5.protobuf.SearchTeamRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SearchTeamRequest
             * @static
             * @param {wm5.protobuf.ISearchTeamRequest} message SearchTeamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchTeamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SearchTeamRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SearchTeamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SearchTeamRequest} SearchTeamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchTeamRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SearchTeamRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.name = reader.string();
                            break;
                        }
                    case 2: {
                            message.placeId = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a SearchTeamRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SearchTeamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SearchTeamRequest} SearchTeamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchTeamRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SearchTeamRequest message.
             * @function verify
             * @memberof wm5.protobuf.SearchTeamRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SearchTeamRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.placeId != null && message.hasOwnProperty("placeId"))
                    if (!$util.isString(message.placeId))
                        return "placeId: string expected";
                return null;
            };

            /**
             * Creates a SearchTeamRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SearchTeamRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SearchTeamRequest} SearchTeamRequest
             */
            SearchTeamRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SearchTeamRequest)
                    return object;
                let message = new $root.wm5.protobuf.SearchTeamRequest();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.placeId != null)
                    message.placeId = String(object.placeId);
                return message;
            };

            /**
             * Creates a plain object from a SearchTeamRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SearchTeamRequest
             * @static
             * @param {wm5.protobuf.SearchTeamRequest} message SearchTeamRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SearchTeamRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.name = "";
                    object.placeId = "";
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.placeId != null && message.hasOwnProperty("placeId"))
                    object.placeId = message.placeId;
                return object;
            };

            /**
             * Converts this SearchTeamRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SearchTeamRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SearchTeamRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SearchTeamRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.SearchTeamRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SearchTeamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SearchTeamRequest";
            };

            return SearchTeamRequest;
        })();

        protobuf.SearchTeamResponse = (function() {

            /**
             * Properties of a SearchTeamResponse.
             * @memberof wm5.protobuf
             * @interface ISearchTeamResponse
             * @property {wm5.protobuf.ErrorCode} error SearchTeamResponse error
             * @property {Array.<wm5.protobuf.ITeam>|null} [teams] SearchTeamResponse teams
             * @property {wm5.protobuf.ITeam|null} [nameMatchedTeam] SearchTeamResponse nameMatchedTeam
             */

            /**
             * Constructs a new SearchTeamResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a SearchTeamResponse.
             * @implements ISearchTeamResponse
             * @constructor
             * @param {wm5.protobuf.ISearchTeamResponse=} [properties] Properties to set
             */
            function SearchTeamResponse(properties) {
                this.teams = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SearchTeamResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.SearchTeamResponse
             * @instance
             */
            SearchTeamResponse.prototype.error = 0;

            /**
             * SearchTeamResponse teams.
             * @member {Array.<wm5.protobuf.ITeam>} teams
             * @memberof wm5.protobuf.SearchTeamResponse
             * @instance
             */
            SearchTeamResponse.prototype.teams = $util.emptyArray;

            /**
             * SearchTeamResponse nameMatchedTeam.
             * @member {wm5.protobuf.ITeam|null|undefined} nameMatchedTeam
             * @memberof wm5.protobuf.SearchTeamResponse
             * @instance
             */
            SearchTeamResponse.prototype.nameMatchedTeam = null;

            /**
             * Creates a new SearchTeamResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SearchTeamResponse
             * @static
             * @param {wm5.protobuf.ISearchTeamResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.SearchTeamResponse} SearchTeamResponse instance
             */
            SearchTeamResponse.create = function create(properties) {
                return new SearchTeamResponse(properties);
            };

            /**
             * Encodes the specified SearchTeamResponse message. Does not implicitly {@link wm5.protobuf.SearchTeamResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SearchTeamResponse
             * @static
             * @param {wm5.protobuf.ISearchTeamResponse} message SearchTeamResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchTeamResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.teams != null && message.teams.length)
                    for (let i = 0; i < message.teams.length; ++i)
                        $root.wm5.protobuf.Team.encode(message.teams[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.nameMatchedTeam != null && Object.hasOwnProperty.call(message, "nameMatchedTeam"))
                    $root.wm5.protobuf.Team.encode(message.nameMatchedTeam, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified SearchTeamResponse message, length delimited. Does not implicitly {@link wm5.protobuf.SearchTeamResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SearchTeamResponse
             * @static
             * @param {wm5.protobuf.ISearchTeamResponse} message SearchTeamResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchTeamResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SearchTeamResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SearchTeamResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SearchTeamResponse} SearchTeamResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchTeamResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SearchTeamResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            if (!(message.teams && message.teams.length))
                                message.teams = [];
                            message.teams.push($root.wm5.protobuf.Team.decode(reader, reader.uint32()));
                            break;
                        }
                    case 3: {
                            message.nameMatchedTeam = $root.wm5.protobuf.Team.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a SearchTeamResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SearchTeamResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SearchTeamResponse} SearchTeamResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchTeamResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SearchTeamResponse message.
             * @function verify
             * @memberof wm5.protobuf.SearchTeamResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SearchTeamResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.teams != null && message.hasOwnProperty("teams")) {
                    if (!Array.isArray(message.teams))
                        return "teams: array expected";
                    for (let i = 0; i < message.teams.length; ++i) {
                        let error = $root.wm5.protobuf.Team.verify(message.teams[i]);
                        if (error)
                            return "teams." + error;
                    }
                }
                if (message.nameMatchedTeam != null && message.hasOwnProperty("nameMatchedTeam")) {
                    let error = $root.wm5.protobuf.Team.verify(message.nameMatchedTeam);
                    if (error)
                        return "nameMatchedTeam." + error;
                }
                return null;
            };

            /**
             * Creates a SearchTeamResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SearchTeamResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SearchTeamResponse} SearchTeamResponse
             */
            SearchTeamResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SearchTeamResponse)
                    return object;
                let message = new $root.wm5.protobuf.SearchTeamResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.teams) {
                    if (!Array.isArray(object.teams))
                        throw TypeError(".wm5.protobuf.SearchTeamResponse.teams: array expected");
                    message.teams = [];
                    for (let i = 0; i < object.teams.length; ++i) {
                        if (typeof object.teams[i] !== "object")
                            throw TypeError(".wm5.protobuf.SearchTeamResponse.teams: object expected");
                        message.teams[i] = $root.wm5.protobuf.Team.fromObject(object.teams[i]);
                    }
                }
                if (object.nameMatchedTeam != null) {
                    if (typeof object.nameMatchedTeam !== "object")
                        throw TypeError(".wm5.protobuf.SearchTeamResponse.nameMatchedTeam: object expected");
                    message.nameMatchedTeam = $root.wm5.protobuf.Team.fromObject(object.nameMatchedTeam);
                }
                return message;
            };

            /**
             * Creates a plain object from a SearchTeamResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SearchTeamResponse
             * @static
             * @param {wm5.protobuf.SearchTeamResponse} message SearchTeamResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SearchTeamResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.teams = [];
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.nameMatchedTeam = null;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.teams && message.teams.length) {
                    object.teams = [];
                    for (let j = 0; j < message.teams.length; ++j)
                        object.teams[j] = $root.wm5.protobuf.Team.toObject(message.teams[j], options);
                }
                if (message.nameMatchedTeam != null && message.hasOwnProperty("nameMatchedTeam"))
                    object.nameMatchedTeam = $root.wm5.protobuf.Team.toObject(message.nameMatchedTeam, options);
                return object;
            };

            /**
             * Converts this SearchTeamResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SearchTeamResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SearchTeamResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SearchTeamResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.SearchTeamResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SearchTeamResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SearchTeamResponse";
            };

            return SearchTeamResponse;
        })();

        protobuf.JoinTeamRequest = (function() {

            /**
             * Properties of a JoinTeamRequest.
             * @memberof wm5.protobuf
             * @interface IJoinTeamRequest
             * @property {number} userId JoinTeamRequest userId
             * @property {number} teamId JoinTeamRequest teamId
             */

            /**
             * Constructs a new JoinTeamRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a JoinTeamRequest.
             * @implements IJoinTeamRequest
             * @constructor
             * @param {wm5.protobuf.IJoinTeamRequest=} [properties] Properties to set
             */
            function JoinTeamRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * JoinTeamRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.JoinTeamRequest
             * @instance
             */
            JoinTeamRequest.prototype.userId = 0;

            /**
             * JoinTeamRequest teamId.
             * @member {number} teamId
             * @memberof wm5.protobuf.JoinTeamRequest
             * @instance
             */
            JoinTeamRequest.prototype.teamId = 0;

            /**
             * Creates a new JoinTeamRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.JoinTeamRequest
             * @static
             * @param {wm5.protobuf.IJoinTeamRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.JoinTeamRequest} JoinTeamRequest instance
             */
            JoinTeamRequest.create = function create(properties) {
                return new JoinTeamRequest(properties);
            };

            /**
             * Encodes the specified JoinTeamRequest message. Does not implicitly {@link wm5.protobuf.JoinTeamRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.JoinTeamRequest
             * @static
             * @param {wm5.protobuf.IJoinTeamRequest} message JoinTeamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            JoinTeamRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.teamId);
                return writer;
            };

            /**
             * Encodes the specified JoinTeamRequest message, length delimited. Does not implicitly {@link wm5.protobuf.JoinTeamRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.JoinTeamRequest
             * @static
             * @param {wm5.protobuf.IJoinTeamRequest} message JoinTeamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            JoinTeamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a JoinTeamRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.JoinTeamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.JoinTeamRequest} JoinTeamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            JoinTeamRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.JoinTeamRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.teamId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                if (!message.hasOwnProperty("teamId"))
                    throw $util.ProtocolError("missing required 'teamId'", { instance: message });
                return message;
            };

            /**
             * Decodes a JoinTeamRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.JoinTeamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.JoinTeamRequest} JoinTeamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            JoinTeamRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a JoinTeamRequest message.
             * @function verify
             * @memberof wm5.protobuf.JoinTeamRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            JoinTeamRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                if (!$util.isInteger(message.teamId))
                    return "teamId: integer expected";
                return null;
            };

            /**
             * Creates a JoinTeamRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.JoinTeamRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.JoinTeamRequest} JoinTeamRequest
             */
            JoinTeamRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.JoinTeamRequest)
                    return object;
                let message = new $root.wm5.protobuf.JoinTeamRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.teamId != null)
                    message.teamId = object.teamId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a JoinTeamRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.JoinTeamRequest
             * @static
             * @param {wm5.protobuf.JoinTeamRequest} message JoinTeamRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            JoinTeamRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.userId = 0;
                    object.teamId = 0;
                }
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.teamId != null && message.hasOwnProperty("teamId"))
                    object.teamId = message.teamId;
                return object;
            };

            /**
             * Converts this JoinTeamRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.JoinTeamRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            JoinTeamRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for JoinTeamRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.JoinTeamRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            JoinTeamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.JoinTeamRequest";
            };

            return JoinTeamRequest;
        })();

        protobuf.JoinTeamResponse = (function() {

            /**
             * Properties of a JoinTeamResponse.
             * @memberof wm5.protobuf
             * @interface IJoinTeamResponse
             * @property {wm5.protobuf.ErrorCode} error JoinTeamResponse error
             */

            /**
             * Constructs a new JoinTeamResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a JoinTeamResponse.
             * @implements IJoinTeamResponse
             * @constructor
             * @param {wm5.protobuf.IJoinTeamResponse=} [properties] Properties to set
             */
            function JoinTeamResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * JoinTeamResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.JoinTeamResponse
             * @instance
             */
            JoinTeamResponse.prototype.error = 0;

            /**
             * Creates a new JoinTeamResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.JoinTeamResponse
             * @static
             * @param {wm5.protobuf.IJoinTeamResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.JoinTeamResponse} JoinTeamResponse instance
             */
            JoinTeamResponse.create = function create(properties) {
                return new JoinTeamResponse(properties);
            };

            /**
             * Encodes the specified JoinTeamResponse message. Does not implicitly {@link wm5.protobuf.JoinTeamResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.JoinTeamResponse
             * @static
             * @param {wm5.protobuf.IJoinTeamResponse} message JoinTeamResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            JoinTeamResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified JoinTeamResponse message, length delimited. Does not implicitly {@link wm5.protobuf.JoinTeamResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.JoinTeamResponse
             * @static
             * @param {wm5.protobuf.IJoinTeamResponse} message JoinTeamResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            JoinTeamResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a JoinTeamResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.JoinTeamResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.JoinTeamResponse} JoinTeamResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            JoinTeamResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.JoinTeamResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a JoinTeamResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.JoinTeamResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.JoinTeamResponse} JoinTeamResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            JoinTeamResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a JoinTeamResponse message.
             * @function verify
             * @memberof wm5.protobuf.JoinTeamResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            JoinTeamResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a JoinTeamResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.JoinTeamResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.JoinTeamResponse} JoinTeamResponse
             */
            JoinTeamResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.JoinTeamResponse)
                    return object;
                let message = new $root.wm5.protobuf.JoinTeamResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a JoinTeamResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.JoinTeamResponse
             * @static
             * @param {wm5.protobuf.JoinTeamResponse} message JoinTeamResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            JoinTeamResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this JoinTeamResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.JoinTeamResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            JoinTeamResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for JoinTeamResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.JoinTeamResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            JoinTeamResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.JoinTeamResponse";
            };

            return JoinTeamResponse;
        })();

        protobuf.ApproveTeamApplicantsRequest = (function() {

            /**
             * Properties of an ApproveTeamApplicantsRequest.
             * @memberof wm5.protobuf
             * @interface IApproveTeamApplicantsRequest
             * @property {number} userId ApproveTeamApplicantsRequest userId
             * @property {Array.<number>|null} [approvedUsers] ApproveTeamApplicantsRequest approvedUsers
             * @property {Array.<number>|null} [rejectedUsers] ApproveTeamApplicantsRequest rejectedUsers
             */

            /**
             * Constructs a new ApproveTeamApplicantsRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents an ApproveTeamApplicantsRequest.
             * @implements IApproveTeamApplicantsRequest
             * @constructor
             * @param {wm5.protobuf.IApproveTeamApplicantsRequest=} [properties] Properties to set
             */
            function ApproveTeamApplicantsRequest(properties) {
                this.approvedUsers = [];
                this.rejectedUsers = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ApproveTeamApplicantsRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.ApproveTeamApplicantsRequest
             * @instance
             */
            ApproveTeamApplicantsRequest.prototype.userId = 0;

            /**
             * ApproveTeamApplicantsRequest approvedUsers.
             * @member {Array.<number>} approvedUsers
             * @memberof wm5.protobuf.ApproveTeamApplicantsRequest
             * @instance
             */
            ApproveTeamApplicantsRequest.prototype.approvedUsers = $util.emptyArray;

            /**
             * ApproveTeamApplicantsRequest rejectedUsers.
             * @member {Array.<number>} rejectedUsers
             * @memberof wm5.protobuf.ApproveTeamApplicantsRequest
             * @instance
             */
            ApproveTeamApplicantsRequest.prototype.rejectedUsers = $util.emptyArray;

            /**
             * Creates a new ApproveTeamApplicantsRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.ApproveTeamApplicantsRequest
             * @static
             * @param {wm5.protobuf.IApproveTeamApplicantsRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.ApproveTeamApplicantsRequest} ApproveTeamApplicantsRequest instance
             */
            ApproveTeamApplicantsRequest.create = function create(properties) {
                return new ApproveTeamApplicantsRequest(properties);
            };

            /**
             * Encodes the specified ApproveTeamApplicantsRequest message. Does not implicitly {@link wm5.protobuf.ApproveTeamApplicantsRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.ApproveTeamApplicantsRequest
             * @static
             * @param {wm5.protobuf.IApproveTeamApplicantsRequest} message ApproveTeamApplicantsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ApproveTeamApplicantsRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                if (message.approvedUsers != null && message.approvedUsers.length)
                    for (let i = 0; i < message.approvedUsers.length; ++i)
                        writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.approvedUsers[i]);
                if (message.rejectedUsers != null && message.rejectedUsers.length)
                    for (let i = 0; i < message.rejectedUsers.length; ++i)
                        writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.rejectedUsers[i]);
                return writer;
            };

            /**
             * Encodes the specified ApproveTeamApplicantsRequest message, length delimited. Does not implicitly {@link wm5.protobuf.ApproveTeamApplicantsRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.ApproveTeamApplicantsRequest
             * @static
             * @param {wm5.protobuf.IApproveTeamApplicantsRequest} message ApproveTeamApplicantsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ApproveTeamApplicantsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an ApproveTeamApplicantsRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.ApproveTeamApplicantsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.ApproveTeamApplicantsRequest} ApproveTeamApplicantsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ApproveTeamApplicantsRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.ApproveTeamApplicantsRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 2: {
                            if (!(message.approvedUsers && message.approvedUsers.length))
                                message.approvedUsers = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.approvedUsers.push(reader.uint32());
                            } else
                                message.approvedUsers.push(reader.uint32());
                            break;
                        }
                    case 3: {
                            if (!(message.rejectedUsers && message.rejectedUsers.length))
                                message.rejectedUsers = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.rejectedUsers.push(reader.uint32());
                            } else
                                message.rejectedUsers.push(reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                return message;
            };

            /**
             * Decodes an ApproveTeamApplicantsRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.ApproveTeamApplicantsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.ApproveTeamApplicantsRequest} ApproveTeamApplicantsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ApproveTeamApplicantsRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an ApproveTeamApplicantsRequest message.
             * @function verify
             * @memberof wm5.protobuf.ApproveTeamApplicantsRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ApproveTeamApplicantsRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                if (message.approvedUsers != null && message.hasOwnProperty("approvedUsers")) {
                    if (!Array.isArray(message.approvedUsers))
                        return "approvedUsers: array expected";
                    for (let i = 0; i < message.approvedUsers.length; ++i)
                        if (!$util.isInteger(message.approvedUsers[i]))
                            return "approvedUsers: integer[] expected";
                }
                if (message.rejectedUsers != null && message.hasOwnProperty("rejectedUsers")) {
                    if (!Array.isArray(message.rejectedUsers))
                        return "rejectedUsers: array expected";
                    for (let i = 0; i < message.rejectedUsers.length; ++i)
                        if (!$util.isInteger(message.rejectedUsers[i]))
                            return "rejectedUsers: integer[] expected";
                }
                return null;
            };

            /**
             * Creates an ApproveTeamApplicantsRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.ApproveTeamApplicantsRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.ApproveTeamApplicantsRequest} ApproveTeamApplicantsRequest
             */
            ApproveTeamApplicantsRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.ApproveTeamApplicantsRequest)
                    return object;
                let message = new $root.wm5.protobuf.ApproveTeamApplicantsRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.approvedUsers) {
                    if (!Array.isArray(object.approvedUsers))
                        throw TypeError(".wm5.protobuf.ApproveTeamApplicantsRequest.approvedUsers: array expected");
                    message.approvedUsers = [];
                    for (let i = 0; i < object.approvedUsers.length; ++i)
                        message.approvedUsers[i] = object.approvedUsers[i] >>> 0;
                }
                if (object.rejectedUsers) {
                    if (!Array.isArray(object.rejectedUsers))
                        throw TypeError(".wm5.protobuf.ApproveTeamApplicantsRequest.rejectedUsers: array expected");
                    message.rejectedUsers = [];
                    for (let i = 0; i < object.rejectedUsers.length; ++i)
                        message.rejectedUsers[i] = object.rejectedUsers[i] >>> 0;
                }
                return message;
            };

            /**
             * Creates a plain object from an ApproveTeamApplicantsRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.ApproveTeamApplicantsRequest
             * @static
             * @param {wm5.protobuf.ApproveTeamApplicantsRequest} message ApproveTeamApplicantsRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ApproveTeamApplicantsRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.approvedUsers = [];
                    object.rejectedUsers = [];
                }
                if (options.defaults)
                    object.userId = 0;
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.approvedUsers && message.approvedUsers.length) {
                    object.approvedUsers = [];
                    for (let j = 0; j < message.approvedUsers.length; ++j)
                        object.approvedUsers[j] = message.approvedUsers[j];
                }
                if (message.rejectedUsers && message.rejectedUsers.length) {
                    object.rejectedUsers = [];
                    for (let j = 0; j < message.rejectedUsers.length; ++j)
                        object.rejectedUsers[j] = message.rejectedUsers[j];
                }
                return object;
            };

            /**
             * Converts this ApproveTeamApplicantsRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.ApproveTeamApplicantsRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ApproveTeamApplicantsRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ApproveTeamApplicantsRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.ApproveTeamApplicantsRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ApproveTeamApplicantsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.ApproveTeamApplicantsRequest";
            };

            return ApproveTeamApplicantsRequest;
        })();

        protobuf.ApproveTeamApplicantsResponse = (function() {

            /**
             * Properties of an ApproveTeamApplicantsResponse.
             * @memberof wm5.protobuf
             * @interface IApproveTeamApplicantsResponse
             * @property {wm5.protobuf.ErrorCode} error ApproveTeamApplicantsResponse error
             * @property {number} numOfMembers ApproveTeamApplicantsResponse numOfMembers
             * @property {number} numOfMemberCars ApproveTeamApplicantsResponse numOfMemberCars
             * @property {number} numOfApplicants ApproveTeamApplicantsResponse numOfApplicants
             */

            /**
             * Constructs a new ApproveTeamApplicantsResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents an ApproveTeamApplicantsResponse.
             * @implements IApproveTeamApplicantsResponse
             * @constructor
             * @param {wm5.protobuf.IApproveTeamApplicantsResponse=} [properties] Properties to set
             */
            function ApproveTeamApplicantsResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ApproveTeamApplicantsResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.ApproveTeamApplicantsResponse
             * @instance
             */
            ApproveTeamApplicantsResponse.prototype.error = 0;

            /**
             * ApproveTeamApplicantsResponse numOfMembers.
             * @member {number} numOfMembers
             * @memberof wm5.protobuf.ApproveTeamApplicantsResponse
             * @instance
             */
            ApproveTeamApplicantsResponse.prototype.numOfMembers = 0;

            /**
             * ApproveTeamApplicantsResponse numOfMemberCars.
             * @member {number} numOfMemberCars
             * @memberof wm5.protobuf.ApproveTeamApplicantsResponse
             * @instance
             */
            ApproveTeamApplicantsResponse.prototype.numOfMemberCars = 0;

            /**
             * ApproveTeamApplicantsResponse numOfApplicants.
             * @member {number} numOfApplicants
             * @memberof wm5.protobuf.ApproveTeamApplicantsResponse
             * @instance
             */
            ApproveTeamApplicantsResponse.prototype.numOfApplicants = 0;

            /**
             * Creates a new ApproveTeamApplicantsResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.ApproveTeamApplicantsResponse
             * @static
             * @param {wm5.protobuf.IApproveTeamApplicantsResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.ApproveTeamApplicantsResponse} ApproveTeamApplicantsResponse instance
             */
            ApproveTeamApplicantsResponse.create = function create(properties) {
                return new ApproveTeamApplicantsResponse(properties);
            };

            /**
             * Encodes the specified ApproveTeamApplicantsResponse message. Does not implicitly {@link wm5.protobuf.ApproveTeamApplicantsResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.ApproveTeamApplicantsResponse
             * @static
             * @param {wm5.protobuf.IApproveTeamApplicantsResponse} message ApproveTeamApplicantsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ApproveTeamApplicantsResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.numOfMembers);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.numOfMemberCars);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.numOfApplicants);
                return writer;
            };

            /**
             * Encodes the specified ApproveTeamApplicantsResponse message, length delimited. Does not implicitly {@link wm5.protobuf.ApproveTeamApplicantsResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.ApproveTeamApplicantsResponse
             * @static
             * @param {wm5.protobuf.IApproveTeamApplicantsResponse} message ApproveTeamApplicantsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ApproveTeamApplicantsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an ApproveTeamApplicantsResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.ApproveTeamApplicantsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.ApproveTeamApplicantsResponse} ApproveTeamApplicantsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ApproveTeamApplicantsResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.ApproveTeamApplicantsResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.numOfMembers = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.numOfMemberCars = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.numOfApplicants = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("numOfMembers"))
                    throw $util.ProtocolError("missing required 'numOfMembers'", { instance: message });
                if (!message.hasOwnProperty("numOfMemberCars"))
                    throw $util.ProtocolError("missing required 'numOfMemberCars'", { instance: message });
                if (!message.hasOwnProperty("numOfApplicants"))
                    throw $util.ProtocolError("missing required 'numOfApplicants'", { instance: message });
                return message;
            };

            /**
             * Decodes an ApproveTeamApplicantsResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.ApproveTeamApplicantsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.ApproveTeamApplicantsResponse} ApproveTeamApplicantsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ApproveTeamApplicantsResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an ApproveTeamApplicantsResponse message.
             * @function verify
             * @memberof wm5.protobuf.ApproveTeamApplicantsResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ApproveTeamApplicantsResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (!$util.isInteger(message.numOfMembers))
                    return "numOfMembers: integer expected";
                if (!$util.isInteger(message.numOfMemberCars))
                    return "numOfMemberCars: integer expected";
                if (!$util.isInteger(message.numOfApplicants))
                    return "numOfApplicants: integer expected";
                return null;
            };

            /**
             * Creates an ApproveTeamApplicantsResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.ApproveTeamApplicantsResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.ApproveTeamApplicantsResponse} ApproveTeamApplicantsResponse
             */
            ApproveTeamApplicantsResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.ApproveTeamApplicantsResponse)
                    return object;
                let message = new $root.wm5.protobuf.ApproveTeamApplicantsResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.numOfMembers != null)
                    message.numOfMembers = object.numOfMembers >>> 0;
                if (object.numOfMemberCars != null)
                    message.numOfMemberCars = object.numOfMemberCars >>> 0;
                if (object.numOfApplicants != null)
                    message.numOfApplicants = object.numOfApplicants >>> 0;
                return message;
            };

            /**
             * Creates a plain object from an ApproveTeamApplicantsResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.ApproveTeamApplicantsResponse
             * @static
             * @param {wm5.protobuf.ApproveTeamApplicantsResponse} message ApproveTeamApplicantsResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ApproveTeamApplicantsResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.numOfMembers = 0;
                    object.numOfMemberCars = 0;
                    object.numOfApplicants = 0;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.numOfMembers != null && message.hasOwnProperty("numOfMembers"))
                    object.numOfMembers = message.numOfMembers;
                if (message.numOfMemberCars != null && message.hasOwnProperty("numOfMemberCars"))
                    object.numOfMemberCars = message.numOfMemberCars;
                if (message.numOfApplicants != null && message.hasOwnProperty("numOfApplicants"))
                    object.numOfApplicants = message.numOfApplicants;
                return object;
            };

            /**
             * Converts this ApproveTeamApplicantsResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.ApproveTeamApplicantsResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ApproveTeamApplicantsResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ApproveTeamApplicantsResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.ApproveTeamApplicantsResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ApproveTeamApplicantsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.ApproveTeamApplicantsResponse";
            };

            return ApproveTeamApplicantsResponse;
        })();

        protobuf.LeaveTeamRequest = (function() {

            /**
             * Properties of a LeaveTeamRequest.
             * @memberof wm5.protobuf
             * @interface ILeaveTeamRequest
             * @property {number} userId LeaveTeamRequest userId
             */

            /**
             * Constructs a new LeaveTeamRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LeaveTeamRequest.
             * @implements ILeaveTeamRequest
             * @constructor
             * @param {wm5.protobuf.ILeaveTeamRequest=} [properties] Properties to set
             */
            function LeaveTeamRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LeaveTeamRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.LeaveTeamRequest
             * @instance
             */
            LeaveTeamRequest.prototype.userId = 0;

            /**
             * Creates a new LeaveTeamRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LeaveTeamRequest
             * @static
             * @param {wm5.protobuf.ILeaveTeamRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LeaveTeamRequest} LeaveTeamRequest instance
             */
            LeaveTeamRequest.create = function create(properties) {
                return new LeaveTeamRequest(properties);
            };

            /**
             * Encodes the specified LeaveTeamRequest message. Does not implicitly {@link wm5.protobuf.LeaveTeamRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LeaveTeamRequest
             * @static
             * @param {wm5.protobuf.ILeaveTeamRequest} message LeaveTeamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LeaveTeamRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                return writer;
            };

            /**
             * Encodes the specified LeaveTeamRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LeaveTeamRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LeaveTeamRequest
             * @static
             * @param {wm5.protobuf.ILeaveTeamRequest} message LeaveTeamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LeaveTeamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LeaveTeamRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LeaveTeamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LeaveTeamRequest} LeaveTeamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LeaveTeamRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LeaveTeamRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                return message;
            };

            /**
             * Decodes a LeaveTeamRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LeaveTeamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LeaveTeamRequest} LeaveTeamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LeaveTeamRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LeaveTeamRequest message.
             * @function verify
             * @memberof wm5.protobuf.LeaveTeamRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LeaveTeamRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                return null;
            };

            /**
             * Creates a LeaveTeamRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LeaveTeamRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LeaveTeamRequest} LeaveTeamRequest
             */
            LeaveTeamRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LeaveTeamRequest)
                    return object;
                let message = new $root.wm5.protobuf.LeaveTeamRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LeaveTeamRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LeaveTeamRequest
             * @static
             * @param {wm5.protobuf.LeaveTeamRequest} message LeaveTeamRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LeaveTeamRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.userId = 0;
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                return object;
            };

            /**
             * Converts this LeaveTeamRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LeaveTeamRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LeaveTeamRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LeaveTeamRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LeaveTeamRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LeaveTeamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LeaveTeamRequest";
            };

            return LeaveTeamRequest;
        })();

        protobuf.LeaveTeamResponse = (function() {

            /**
             * Properties of a LeaveTeamResponse.
             * @memberof wm5.protobuf
             * @interface ILeaveTeamResponse
             * @property {wm5.protobuf.ErrorCode} error LeaveTeamResponse error
             */

            /**
             * Constructs a new LeaveTeamResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LeaveTeamResponse.
             * @implements ILeaveTeamResponse
             * @constructor
             * @param {wm5.protobuf.ILeaveTeamResponse=} [properties] Properties to set
             */
            function LeaveTeamResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LeaveTeamResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LeaveTeamResponse
             * @instance
             */
            LeaveTeamResponse.prototype.error = 0;

            /**
             * Creates a new LeaveTeamResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LeaveTeamResponse
             * @static
             * @param {wm5.protobuf.ILeaveTeamResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LeaveTeamResponse} LeaveTeamResponse instance
             */
            LeaveTeamResponse.create = function create(properties) {
                return new LeaveTeamResponse(properties);
            };

            /**
             * Encodes the specified LeaveTeamResponse message. Does not implicitly {@link wm5.protobuf.LeaveTeamResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LeaveTeamResponse
             * @static
             * @param {wm5.protobuf.ILeaveTeamResponse} message LeaveTeamResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LeaveTeamResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified LeaveTeamResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LeaveTeamResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LeaveTeamResponse
             * @static
             * @param {wm5.protobuf.ILeaveTeamResponse} message LeaveTeamResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LeaveTeamResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LeaveTeamResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LeaveTeamResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LeaveTeamResponse} LeaveTeamResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LeaveTeamResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LeaveTeamResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a LeaveTeamResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LeaveTeamResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LeaveTeamResponse} LeaveTeamResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LeaveTeamResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LeaveTeamResponse message.
             * @function verify
             * @memberof wm5.protobuf.LeaveTeamResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LeaveTeamResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a LeaveTeamResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LeaveTeamResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LeaveTeamResponse} LeaveTeamResponse
             */
            LeaveTeamResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LeaveTeamResponse)
                    return object;
                let message = new $root.wm5.protobuf.LeaveTeamResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a LeaveTeamResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LeaveTeamResponse
             * @static
             * @param {wm5.protobuf.LeaveTeamResponse} message LeaveTeamResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LeaveTeamResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this LeaveTeamResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LeaveTeamResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LeaveTeamResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LeaveTeamResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LeaveTeamResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LeaveTeamResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LeaveTeamResponse";
            };

            return LeaveTeamResponse;
        })();

        protobuf.DissolveTeamRequest = (function() {

            /**
             * Properties of a DissolveTeamRequest.
             * @memberof wm5.protobuf
             * @interface IDissolveTeamRequest
             * @property {number} userId DissolveTeamRequest userId
             */

            /**
             * Constructs a new DissolveTeamRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a DissolveTeamRequest.
             * @implements IDissolveTeamRequest
             * @constructor
             * @param {wm5.protobuf.IDissolveTeamRequest=} [properties] Properties to set
             */
            function DissolveTeamRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * DissolveTeamRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.DissolveTeamRequest
             * @instance
             */
            DissolveTeamRequest.prototype.userId = 0;

            /**
             * Creates a new DissolveTeamRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.DissolveTeamRequest
             * @static
             * @param {wm5.protobuf.IDissolveTeamRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.DissolveTeamRequest} DissolveTeamRequest instance
             */
            DissolveTeamRequest.create = function create(properties) {
                return new DissolveTeamRequest(properties);
            };

            /**
             * Encodes the specified DissolveTeamRequest message. Does not implicitly {@link wm5.protobuf.DissolveTeamRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.DissolveTeamRequest
             * @static
             * @param {wm5.protobuf.IDissolveTeamRequest} message DissolveTeamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DissolveTeamRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                return writer;
            };

            /**
             * Encodes the specified DissolveTeamRequest message, length delimited. Does not implicitly {@link wm5.protobuf.DissolveTeamRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.DissolveTeamRequest
             * @static
             * @param {wm5.protobuf.IDissolveTeamRequest} message DissolveTeamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DissolveTeamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a DissolveTeamRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.DissolveTeamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.DissolveTeamRequest} DissolveTeamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DissolveTeamRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.DissolveTeamRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                return message;
            };

            /**
             * Decodes a DissolveTeamRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.DissolveTeamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.DissolveTeamRequest} DissolveTeamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DissolveTeamRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a DissolveTeamRequest message.
             * @function verify
             * @memberof wm5.protobuf.DissolveTeamRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DissolveTeamRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                return null;
            };

            /**
             * Creates a DissolveTeamRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.DissolveTeamRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.DissolveTeamRequest} DissolveTeamRequest
             */
            DissolveTeamRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.DissolveTeamRequest)
                    return object;
                let message = new $root.wm5.protobuf.DissolveTeamRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a DissolveTeamRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.DissolveTeamRequest
             * @static
             * @param {wm5.protobuf.DissolveTeamRequest} message DissolveTeamRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DissolveTeamRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.userId = 0;
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                return object;
            };

            /**
             * Converts this DissolveTeamRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.DissolveTeamRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DissolveTeamRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for DissolveTeamRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.DissolveTeamRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            DissolveTeamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.DissolveTeamRequest";
            };

            return DissolveTeamRequest;
        })();

        protobuf.DissolveTeamResponse = (function() {

            /**
             * Properties of a DissolveTeamResponse.
             * @memberof wm5.protobuf
             * @interface IDissolveTeamResponse
             * @property {wm5.protobuf.ErrorCode} error DissolveTeamResponse error
             */

            /**
             * Constructs a new DissolveTeamResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a DissolveTeamResponse.
             * @implements IDissolveTeamResponse
             * @constructor
             * @param {wm5.protobuf.IDissolveTeamResponse=} [properties] Properties to set
             */
            function DissolveTeamResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * DissolveTeamResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.DissolveTeamResponse
             * @instance
             */
            DissolveTeamResponse.prototype.error = 0;

            /**
             * Creates a new DissolveTeamResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.DissolveTeamResponse
             * @static
             * @param {wm5.protobuf.IDissolveTeamResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.DissolveTeamResponse} DissolveTeamResponse instance
             */
            DissolveTeamResponse.create = function create(properties) {
                return new DissolveTeamResponse(properties);
            };

            /**
             * Encodes the specified DissolveTeamResponse message. Does not implicitly {@link wm5.protobuf.DissolveTeamResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.DissolveTeamResponse
             * @static
             * @param {wm5.protobuf.IDissolveTeamResponse} message DissolveTeamResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DissolveTeamResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified DissolveTeamResponse message, length delimited. Does not implicitly {@link wm5.protobuf.DissolveTeamResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.DissolveTeamResponse
             * @static
             * @param {wm5.protobuf.IDissolveTeamResponse} message DissolveTeamResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DissolveTeamResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a DissolveTeamResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.DissolveTeamResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.DissolveTeamResponse} DissolveTeamResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DissolveTeamResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.DissolveTeamResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a DissolveTeamResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.DissolveTeamResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.DissolveTeamResponse} DissolveTeamResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DissolveTeamResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a DissolveTeamResponse message.
             * @function verify
             * @memberof wm5.protobuf.DissolveTeamResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DissolveTeamResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a DissolveTeamResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.DissolveTeamResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.DissolveTeamResponse} DissolveTeamResponse
             */
            DissolveTeamResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.DissolveTeamResponse)
                    return object;
                let message = new $root.wm5.protobuf.DissolveTeamResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a DissolveTeamResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.DissolveTeamResponse
             * @static
             * @param {wm5.protobuf.DissolveTeamResponse} message DissolveTeamResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DissolveTeamResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this DissolveTeamResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.DissolveTeamResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DissolveTeamResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for DissolveTeamResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.DissolveTeamResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            DissolveTeamResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.DissolveTeamResponse";
            };

            return DissolveTeamResponse;
        })();

        protobuf.LoadTeamMembersRequest = (function() {

            /**
             * Properties of a LoadTeamMembersRequest.
             * @memberof wm5.protobuf
             * @interface ILoadTeamMembersRequest
             * @property {number} teamId LoadTeamMembersRequest teamId
             */

            /**
             * Constructs a new LoadTeamMembersRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadTeamMembersRequest.
             * @implements ILoadTeamMembersRequest
             * @constructor
             * @param {wm5.protobuf.ILoadTeamMembersRequest=} [properties] Properties to set
             */
            function LoadTeamMembersRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadTeamMembersRequest teamId.
             * @member {number} teamId
             * @memberof wm5.protobuf.LoadTeamMembersRequest
             * @instance
             */
            LoadTeamMembersRequest.prototype.teamId = 0;

            /**
             * Creates a new LoadTeamMembersRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadTeamMembersRequest
             * @static
             * @param {wm5.protobuf.ILoadTeamMembersRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadTeamMembersRequest} LoadTeamMembersRequest instance
             */
            LoadTeamMembersRequest.create = function create(properties) {
                return new LoadTeamMembersRequest(properties);
            };

            /**
             * Encodes the specified LoadTeamMembersRequest message. Does not implicitly {@link wm5.protobuf.LoadTeamMembersRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadTeamMembersRequest
             * @static
             * @param {wm5.protobuf.ILoadTeamMembersRequest} message LoadTeamMembersRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadTeamMembersRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.teamId);
                return writer;
            };

            /**
             * Encodes the specified LoadTeamMembersRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadTeamMembersRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadTeamMembersRequest
             * @static
             * @param {wm5.protobuf.ILoadTeamMembersRequest} message LoadTeamMembersRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadTeamMembersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadTeamMembersRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadTeamMembersRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadTeamMembersRequest} LoadTeamMembersRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadTeamMembersRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadTeamMembersRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.teamId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("teamId"))
                    throw $util.ProtocolError("missing required 'teamId'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadTeamMembersRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadTeamMembersRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadTeamMembersRequest} LoadTeamMembersRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadTeamMembersRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadTeamMembersRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadTeamMembersRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadTeamMembersRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.teamId))
                    return "teamId: integer expected";
                return null;
            };

            /**
             * Creates a LoadTeamMembersRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadTeamMembersRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadTeamMembersRequest} LoadTeamMembersRequest
             */
            LoadTeamMembersRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadTeamMembersRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadTeamMembersRequest();
                if (object.teamId != null)
                    message.teamId = object.teamId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadTeamMembersRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadTeamMembersRequest
             * @static
             * @param {wm5.protobuf.LoadTeamMembersRequest} message LoadTeamMembersRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadTeamMembersRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.teamId = 0;
                if (message.teamId != null && message.hasOwnProperty("teamId"))
                    object.teamId = message.teamId;
                return object;
            };

            /**
             * Converts this LoadTeamMembersRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadTeamMembersRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadTeamMembersRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadTeamMembersRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadTeamMembersRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadTeamMembersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadTeamMembersRequest";
            };

            return LoadTeamMembersRequest;
        })();

        protobuf.LoadTeamMembersResponse = (function() {

            /**
             * Properties of a LoadTeamMembersResponse.
             * @memberof wm5.protobuf
             * @interface ILoadTeamMembersResponse
             * @property {wm5.protobuf.ErrorCode} error LoadTeamMembersResponse error
             * @property {wm5.protobuf.ITeam|null} [team] LoadTeamMembersResponse team
             * @property {Array.<wm5.protobuf.ITeamMember>|null} [members] LoadTeamMembersResponse members
             */

            /**
             * Constructs a new LoadTeamMembersResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadTeamMembersResponse.
             * @implements ILoadTeamMembersResponse
             * @constructor
             * @param {wm5.protobuf.ILoadTeamMembersResponse=} [properties] Properties to set
             */
            function LoadTeamMembersResponse(properties) {
                this.members = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadTeamMembersResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadTeamMembersResponse
             * @instance
             */
            LoadTeamMembersResponse.prototype.error = 0;

            /**
             * LoadTeamMembersResponse team.
             * @member {wm5.protobuf.ITeam|null|undefined} team
             * @memberof wm5.protobuf.LoadTeamMembersResponse
             * @instance
             */
            LoadTeamMembersResponse.prototype.team = null;

            /**
             * LoadTeamMembersResponse members.
             * @member {Array.<wm5.protobuf.ITeamMember>} members
             * @memberof wm5.protobuf.LoadTeamMembersResponse
             * @instance
             */
            LoadTeamMembersResponse.prototype.members = $util.emptyArray;

            /**
             * Creates a new LoadTeamMembersResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadTeamMembersResponse
             * @static
             * @param {wm5.protobuf.ILoadTeamMembersResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadTeamMembersResponse} LoadTeamMembersResponse instance
             */
            LoadTeamMembersResponse.create = function create(properties) {
                return new LoadTeamMembersResponse(properties);
            };

            /**
             * Encodes the specified LoadTeamMembersResponse message. Does not implicitly {@link wm5.protobuf.LoadTeamMembersResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadTeamMembersResponse
             * @static
             * @param {wm5.protobuf.ILoadTeamMembersResponse} message LoadTeamMembersResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadTeamMembersResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.team != null && Object.hasOwnProperty.call(message, "team"))
                    $root.wm5.protobuf.Team.encode(message.team, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.members != null && message.members.length)
                    for (let i = 0; i < message.members.length; ++i)
                        $root.wm5.protobuf.TeamMember.encode(message.members[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified LoadTeamMembersResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadTeamMembersResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadTeamMembersResponse
             * @static
             * @param {wm5.protobuf.ILoadTeamMembersResponse} message LoadTeamMembersResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadTeamMembersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadTeamMembersResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadTeamMembersResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadTeamMembersResponse} LoadTeamMembersResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadTeamMembersResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadTeamMembersResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.team = $root.wm5.protobuf.Team.decode(reader, reader.uint32());
                            break;
                        }
                    case 3: {
                            if (!(message.members && message.members.length))
                                message.members = [];
                            message.members.push($root.wm5.protobuf.TeamMember.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadTeamMembersResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadTeamMembersResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadTeamMembersResponse} LoadTeamMembersResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadTeamMembersResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadTeamMembersResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadTeamMembersResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadTeamMembersResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.team != null && message.hasOwnProperty("team")) {
                    let error = $root.wm5.protobuf.Team.verify(message.team);
                    if (error)
                        return "team." + error;
                }
                if (message.members != null && message.hasOwnProperty("members")) {
                    if (!Array.isArray(message.members))
                        return "members: array expected";
                    for (let i = 0; i < message.members.length; ++i) {
                        let error = $root.wm5.protobuf.TeamMember.verify(message.members[i]);
                        if (error)
                            return "members." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a LoadTeamMembersResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadTeamMembersResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadTeamMembersResponse} LoadTeamMembersResponse
             */
            LoadTeamMembersResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadTeamMembersResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadTeamMembersResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.team != null) {
                    if (typeof object.team !== "object")
                        throw TypeError(".wm5.protobuf.LoadTeamMembersResponse.team: object expected");
                    message.team = $root.wm5.protobuf.Team.fromObject(object.team);
                }
                if (object.members) {
                    if (!Array.isArray(object.members))
                        throw TypeError(".wm5.protobuf.LoadTeamMembersResponse.members: array expected");
                    message.members = [];
                    for (let i = 0; i < object.members.length; ++i) {
                        if (typeof object.members[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadTeamMembersResponse.members: object expected");
                        message.members[i] = $root.wm5.protobuf.TeamMember.fromObject(object.members[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a LoadTeamMembersResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadTeamMembersResponse
             * @static
             * @param {wm5.protobuf.LoadTeamMembersResponse} message LoadTeamMembersResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadTeamMembersResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.members = [];
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.team = null;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.team != null && message.hasOwnProperty("team"))
                    object.team = $root.wm5.protobuf.Team.toObject(message.team, options);
                if (message.members && message.members.length) {
                    object.members = [];
                    for (let j = 0; j < message.members.length; ++j)
                        object.members[j] = $root.wm5.protobuf.TeamMember.toObject(message.members[j], options);
                }
                return object;
            };

            /**
             * Converts this LoadTeamMembersResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadTeamMembersResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadTeamMembersResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadTeamMembersResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadTeamMembersResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadTeamMembersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadTeamMembersResponse";
            };

            return LoadTeamMembersResponse;
        })();

        protobuf.LoadTeamApplicantsRequest = (function() {

            /**
             * Properties of a LoadTeamApplicantsRequest.
             * @memberof wm5.protobuf
             * @interface ILoadTeamApplicantsRequest
             * @property {number} teamId LoadTeamApplicantsRequest teamId
             */

            /**
             * Constructs a new LoadTeamApplicantsRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadTeamApplicantsRequest.
             * @implements ILoadTeamApplicantsRequest
             * @constructor
             * @param {wm5.protobuf.ILoadTeamApplicantsRequest=} [properties] Properties to set
             */
            function LoadTeamApplicantsRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadTeamApplicantsRequest teamId.
             * @member {number} teamId
             * @memberof wm5.protobuf.LoadTeamApplicantsRequest
             * @instance
             */
            LoadTeamApplicantsRequest.prototype.teamId = 0;

            /**
             * Creates a new LoadTeamApplicantsRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadTeamApplicantsRequest
             * @static
             * @param {wm5.protobuf.ILoadTeamApplicantsRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadTeamApplicantsRequest} LoadTeamApplicantsRequest instance
             */
            LoadTeamApplicantsRequest.create = function create(properties) {
                return new LoadTeamApplicantsRequest(properties);
            };

            /**
             * Encodes the specified LoadTeamApplicantsRequest message. Does not implicitly {@link wm5.protobuf.LoadTeamApplicantsRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadTeamApplicantsRequest
             * @static
             * @param {wm5.protobuf.ILoadTeamApplicantsRequest} message LoadTeamApplicantsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadTeamApplicantsRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.teamId);
                return writer;
            };

            /**
             * Encodes the specified LoadTeamApplicantsRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadTeamApplicantsRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadTeamApplicantsRequest
             * @static
             * @param {wm5.protobuf.ILoadTeamApplicantsRequest} message LoadTeamApplicantsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadTeamApplicantsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadTeamApplicantsRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadTeamApplicantsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadTeamApplicantsRequest} LoadTeamApplicantsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadTeamApplicantsRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadTeamApplicantsRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.teamId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("teamId"))
                    throw $util.ProtocolError("missing required 'teamId'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadTeamApplicantsRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadTeamApplicantsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadTeamApplicantsRequest} LoadTeamApplicantsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadTeamApplicantsRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadTeamApplicantsRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadTeamApplicantsRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadTeamApplicantsRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.teamId))
                    return "teamId: integer expected";
                return null;
            };

            /**
             * Creates a LoadTeamApplicantsRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadTeamApplicantsRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadTeamApplicantsRequest} LoadTeamApplicantsRequest
             */
            LoadTeamApplicantsRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadTeamApplicantsRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadTeamApplicantsRequest();
                if (object.teamId != null)
                    message.teamId = object.teamId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadTeamApplicantsRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadTeamApplicantsRequest
             * @static
             * @param {wm5.protobuf.LoadTeamApplicantsRequest} message LoadTeamApplicantsRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadTeamApplicantsRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.teamId = 0;
                if (message.teamId != null && message.hasOwnProperty("teamId"))
                    object.teamId = message.teamId;
                return object;
            };

            /**
             * Converts this LoadTeamApplicantsRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadTeamApplicantsRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadTeamApplicantsRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadTeamApplicantsRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadTeamApplicantsRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadTeamApplicantsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadTeamApplicantsRequest";
            };

            return LoadTeamApplicantsRequest;
        })();

        protobuf.LoadTeamApplicantsResponse = (function() {

            /**
             * Properties of a LoadTeamApplicantsResponse.
             * @memberof wm5.protobuf
             * @interface ILoadTeamApplicantsResponse
             * @property {wm5.protobuf.ErrorCode} error LoadTeamApplicantsResponse error
             * @property {Array.<wm5.protobuf.ITeamApplicant>|null} [applicants] LoadTeamApplicantsResponse applicants
             */

            /**
             * Constructs a new LoadTeamApplicantsResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadTeamApplicantsResponse.
             * @implements ILoadTeamApplicantsResponse
             * @constructor
             * @param {wm5.protobuf.ILoadTeamApplicantsResponse=} [properties] Properties to set
             */
            function LoadTeamApplicantsResponse(properties) {
                this.applicants = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadTeamApplicantsResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadTeamApplicantsResponse
             * @instance
             */
            LoadTeamApplicantsResponse.prototype.error = 0;

            /**
             * LoadTeamApplicantsResponse applicants.
             * @member {Array.<wm5.protobuf.ITeamApplicant>} applicants
             * @memberof wm5.protobuf.LoadTeamApplicantsResponse
             * @instance
             */
            LoadTeamApplicantsResponse.prototype.applicants = $util.emptyArray;

            /**
             * Creates a new LoadTeamApplicantsResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadTeamApplicantsResponse
             * @static
             * @param {wm5.protobuf.ILoadTeamApplicantsResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadTeamApplicantsResponse} LoadTeamApplicantsResponse instance
             */
            LoadTeamApplicantsResponse.create = function create(properties) {
                return new LoadTeamApplicantsResponse(properties);
            };

            /**
             * Encodes the specified LoadTeamApplicantsResponse message. Does not implicitly {@link wm5.protobuf.LoadTeamApplicantsResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadTeamApplicantsResponse
             * @static
             * @param {wm5.protobuf.ILoadTeamApplicantsResponse} message LoadTeamApplicantsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadTeamApplicantsResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.applicants != null && message.applicants.length)
                    for (let i = 0; i < message.applicants.length; ++i)
                        $root.wm5.protobuf.TeamApplicant.encode(message.applicants[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified LoadTeamApplicantsResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadTeamApplicantsResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadTeamApplicantsResponse
             * @static
             * @param {wm5.protobuf.ILoadTeamApplicantsResponse} message LoadTeamApplicantsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadTeamApplicantsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadTeamApplicantsResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadTeamApplicantsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadTeamApplicantsResponse} LoadTeamApplicantsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadTeamApplicantsResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadTeamApplicantsResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            if (!(message.applicants && message.applicants.length))
                                message.applicants = [];
                            message.applicants.push($root.wm5.protobuf.TeamApplicant.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadTeamApplicantsResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadTeamApplicantsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadTeamApplicantsResponse} LoadTeamApplicantsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadTeamApplicantsResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadTeamApplicantsResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadTeamApplicantsResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadTeamApplicantsResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.applicants != null && message.hasOwnProperty("applicants")) {
                    if (!Array.isArray(message.applicants))
                        return "applicants: array expected";
                    for (let i = 0; i < message.applicants.length; ++i) {
                        let error = $root.wm5.protobuf.TeamApplicant.verify(message.applicants[i]);
                        if (error)
                            return "applicants." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a LoadTeamApplicantsResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadTeamApplicantsResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadTeamApplicantsResponse} LoadTeamApplicantsResponse
             */
            LoadTeamApplicantsResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadTeamApplicantsResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadTeamApplicantsResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.applicants) {
                    if (!Array.isArray(object.applicants))
                        throw TypeError(".wm5.protobuf.LoadTeamApplicantsResponse.applicants: array expected");
                    message.applicants = [];
                    for (let i = 0; i < object.applicants.length; ++i) {
                        if (typeof object.applicants[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadTeamApplicantsResponse.applicants: object expected");
                        message.applicants[i] = $root.wm5.protobuf.TeamApplicant.fromObject(object.applicants[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a LoadTeamApplicantsResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadTeamApplicantsResponse
             * @static
             * @param {wm5.protobuf.LoadTeamApplicantsResponse} message LoadTeamApplicantsResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadTeamApplicantsResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.applicants = [];
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.applicants && message.applicants.length) {
                    object.applicants = [];
                    for (let j = 0; j < message.applicants.length; ++j)
                        object.applicants[j] = $root.wm5.protobuf.TeamApplicant.toObject(message.applicants[j], options);
                }
                return object;
            };

            /**
             * Converts this LoadTeamApplicantsResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadTeamApplicantsResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadTeamApplicantsResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadTeamApplicantsResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadTeamApplicantsResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadTeamApplicantsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadTeamApplicantsResponse";
            };

            return LoadTeamApplicantsResponse;
        })();

        protobuf.UpdateTeamRequest = (function() {

            /**
             * Properties of an UpdateTeamRequest.
             * @memberof wm5.protobuf
             * @interface IUpdateTeamRequest
             * @property {number} userId UpdateTeamRequest userId
             * @property {number|null} [teamStickerFont] UpdateTeamRequest teamStickerFont
             * @property {boolean|null} [closed] UpdateTeamRequest closed
             * @property {number} timestamp UpdateTeamRequest timestamp
             */

            /**
             * Constructs a new UpdateTeamRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents an UpdateTeamRequest.
             * @implements IUpdateTeamRequest
             * @constructor
             * @param {wm5.protobuf.IUpdateTeamRequest=} [properties] Properties to set
             */
            function UpdateTeamRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * UpdateTeamRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.UpdateTeamRequest
             * @instance
             */
            UpdateTeamRequest.prototype.userId = 0;

            /**
             * UpdateTeamRequest teamStickerFont.
             * @member {number} teamStickerFont
             * @memberof wm5.protobuf.UpdateTeamRequest
             * @instance
             */
            UpdateTeamRequest.prototype.teamStickerFont = 0;

            /**
             * UpdateTeamRequest closed.
             * @member {boolean} closed
             * @memberof wm5.protobuf.UpdateTeamRequest
             * @instance
             */
            UpdateTeamRequest.prototype.closed = false;

            /**
             * UpdateTeamRequest timestamp.
             * @member {number} timestamp
             * @memberof wm5.protobuf.UpdateTeamRequest
             * @instance
             */
            UpdateTeamRequest.prototype.timestamp = 0;

            /**
             * Creates a new UpdateTeamRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.UpdateTeamRequest
             * @static
             * @param {wm5.protobuf.IUpdateTeamRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.UpdateTeamRequest} UpdateTeamRequest instance
             */
            UpdateTeamRequest.create = function create(properties) {
                return new UpdateTeamRequest(properties);
            };

            /**
             * Encodes the specified UpdateTeamRequest message. Does not implicitly {@link wm5.protobuf.UpdateTeamRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.UpdateTeamRequest
             * @static
             * @param {wm5.protobuf.IUpdateTeamRequest} message UpdateTeamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateTeamRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                if (message.teamStickerFont != null && Object.hasOwnProperty.call(message, "teamStickerFont"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.teamStickerFont);
                if (message.closed != null && Object.hasOwnProperty.call(message, "closed"))
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.closed);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.timestamp);
                return writer;
            };

            /**
             * Encodes the specified UpdateTeamRequest message, length delimited. Does not implicitly {@link wm5.protobuf.UpdateTeamRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.UpdateTeamRequest
             * @static
             * @param {wm5.protobuf.IUpdateTeamRequest} message UpdateTeamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateTeamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an UpdateTeamRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.UpdateTeamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.UpdateTeamRequest} UpdateTeamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateTeamRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.UpdateTeamRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.teamStickerFont = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.closed = reader.bool();
                            break;
                        }
                    case 4: {
                            message.timestamp = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                if (!message.hasOwnProperty("timestamp"))
                    throw $util.ProtocolError("missing required 'timestamp'", { instance: message });
                return message;
            };

            /**
             * Decodes an UpdateTeamRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.UpdateTeamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.UpdateTeamRequest} UpdateTeamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateTeamRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an UpdateTeamRequest message.
             * @function verify
             * @memberof wm5.protobuf.UpdateTeamRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UpdateTeamRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                if (message.teamStickerFont != null && message.hasOwnProperty("teamStickerFont"))
                    if (!$util.isInteger(message.teamStickerFont))
                        return "teamStickerFont: integer expected";
                if (message.closed != null && message.hasOwnProperty("closed"))
                    if (typeof message.closed !== "boolean")
                        return "closed: boolean expected";
                if (!$util.isInteger(message.timestamp))
                    return "timestamp: integer expected";
                return null;
            };

            /**
             * Creates an UpdateTeamRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.UpdateTeamRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.UpdateTeamRequest} UpdateTeamRequest
             */
            UpdateTeamRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.UpdateTeamRequest)
                    return object;
                let message = new $root.wm5.protobuf.UpdateTeamRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.teamStickerFont != null)
                    message.teamStickerFont = object.teamStickerFont >>> 0;
                if (object.closed != null)
                    message.closed = Boolean(object.closed);
                if (object.timestamp != null)
                    message.timestamp = object.timestamp >>> 0;
                return message;
            };

            /**
             * Creates a plain object from an UpdateTeamRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.UpdateTeamRequest
             * @static
             * @param {wm5.protobuf.UpdateTeamRequest} message UpdateTeamRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UpdateTeamRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.userId = 0;
                    object.teamStickerFont = 0;
                    object.closed = false;
                    object.timestamp = 0;
                }
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.teamStickerFont != null && message.hasOwnProperty("teamStickerFont"))
                    object.teamStickerFont = message.teamStickerFont;
                if (message.closed != null && message.hasOwnProperty("closed"))
                    object.closed = message.closed;
                if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                    object.timestamp = message.timestamp;
                return object;
            };

            /**
             * Converts this UpdateTeamRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.UpdateTeamRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UpdateTeamRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for UpdateTeamRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.UpdateTeamRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UpdateTeamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.UpdateTeamRequest";
            };

            return UpdateTeamRequest;
        })();

        protobuf.UpdateTeamResponse = (function() {

            /**
             * Properties of an UpdateTeamResponse.
             * @memberof wm5.protobuf
             * @interface IUpdateTeamResponse
             * @property {wm5.protobuf.ErrorCode} error UpdateTeamResponse error
             */

            /**
             * Constructs a new UpdateTeamResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents an UpdateTeamResponse.
             * @implements IUpdateTeamResponse
             * @constructor
             * @param {wm5.protobuf.IUpdateTeamResponse=} [properties] Properties to set
             */
            function UpdateTeamResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * UpdateTeamResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.UpdateTeamResponse
             * @instance
             */
            UpdateTeamResponse.prototype.error = 0;

            /**
             * Creates a new UpdateTeamResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.UpdateTeamResponse
             * @static
             * @param {wm5.protobuf.IUpdateTeamResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.UpdateTeamResponse} UpdateTeamResponse instance
             */
            UpdateTeamResponse.create = function create(properties) {
                return new UpdateTeamResponse(properties);
            };

            /**
             * Encodes the specified UpdateTeamResponse message. Does not implicitly {@link wm5.protobuf.UpdateTeamResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.UpdateTeamResponse
             * @static
             * @param {wm5.protobuf.IUpdateTeamResponse} message UpdateTeamResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateTeamResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified UpdateTeamResponse message, length delimited. Does not implicitly {@link wm5.protobuf.UpdateTeamResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.UpdateTeamResponse
             * @static
             * @param {wm5.protobuf.IUpdateTeamResponse} message UpdateTeamResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateTeamResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an UpdateTeamResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.UpdateTeamResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.UpdateTeamResponse} UpdateTeamResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateTeamResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.UpdateTeamResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes an UpdateTeamResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.UpdateTeamResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.UpdateTeamResponse} UpdateTeamResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateTeamResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an UpdateTeamResponse message.
             * @function verify
             * @memberof wm5.protobuf.UpdateTeamResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UpdateTeamResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates an UpdateTeamResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.UpdateTeamResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.UpdateTeamResponse} UpdateTeamResponse
             */
            UpdateTeamResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.UpdateTeamResponse)
                    return object;
                let message = new $root.wm5.protobuf.UpdateTeamResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from an UpdateTeamResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.UpdateTeamResponse
             * @static
             * @param {wm5.protobuf.UpdateTeamResponse} message UpdateTeamResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UpdateTeamResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this UpdateTeamResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.UpdateTeamResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UpdateTeamResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for UpdateTeamResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.UpdateTeamResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UpdateTeamResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.UpdateTeamResponse";
            };

            return UpdateTeamResponse;
        })();

        protobuf.GrantCarRightRequest = (function() {

            /**
             * Properties of a GrantCarRightRequest.
             * @memberof wm5.protobuf
             * @interface IGrantCarRightRequest
             * @property {number} userId GrantCarRightRequest userId
             * @property {number} targetUserId GrantCarRightRequest targetUserId
             * @property {number} timestamp GrantCarRightRequest timestamp
             */

            /**
             * Constructs a new GrantCarRightRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a GrantCarRightRequest.
             * @implements IGrantCarRightRequest
             * @constructor
             * @param {wm5.protobuf.IGrantCarRightRequest=} [properties] Properties to set
             */
            function GrantCarRightRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GrantCarRightRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.GrantCarRightRequest
             * @instance
             */
            GrantCarRightRequest.prototype.userId = 0;

            /**
             * GrantCarRightRequest targetUserId.
             * @member {number} targetUserId
             * @memberof wm5.protobuf.GrantCarRightRequest
             * @instance
             */
            GrantCarRightRequest.prototype.targetUserId = 0;

            /**
             * GrantCarRightRequest timestamp.
             * @member {number} timestamp
             * @memberof wm5.protobuf.GrantCarRightRequest
             * @instance
             */
            GrantCarRightRequest.prototype.timestamp = 0;

            /**
             * Creates a new GrantCarRightRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.GrantCarRightRequest
             * @static
             * @param {wm5.protobuf.IGrantCarRightRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.GrantCarRightRequest} GrantCarRightRequest instance
             */
            GrantCarRightRequest.create = function create(properties) {
                return new GrantCarRightRequest(properties);
            };

            /**
             * Encodes the specified GrantCarRightRequest message. Does not implicitly {@link wm5.protobuf.GrantCarRightRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.GrantCarRightRequest
             * @static
             * @param {wm5.protobuf.IGrantCarRightRequest} message GrantCarRightRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GrantCarRightRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetUserId);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.timestamp);
                return writer;
            };

            /**
             * Encodes the specified GrantCarRightRequest message, length delimited. Does not implicitly {@link wm5.protobuf.GrantCarRightRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.GrantCarRightRequest
             * @static
             * @param {wm5.protobuf.IGrantCarRightRequest} message GrantCarRightRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GrantCarRightRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GrantCarRightRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.GrantCarRightRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.GrantCarRightRequest} GrantCarRightRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GrantCarRightRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.GrantCarRightRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.targetUserId = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.timestamp = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                if (!message.hasOwnProperty("targetUserId"))
                    throw $util.ProtocolError("missing required 'targetUserId'", { instance: message });
                if (!message.hasOwnProperty("timestamp"))
                    throw $util.ProtocolError("missing required 'timestamp'", { instance: message });
                return message;
            };

            /**
             * Decodes a GrantCarRightRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.GrantCarRightRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.GrantCarRightRequest} GrantCarRightRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GrantCarRightRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GrantCarRightRequest message.
             * @function verify
             * @memberof wm5.protobuf.GrantCarRightRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GrantCarRightRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                if (!$util.isInteger(message.targetUserId))
                    return "targetUserId: integer expected";
                if (!$util.isInteger(message.timestamp))
                    return "timestamp: integer expected";
                return null;
            };

            /**
             * Creates a GrantCarRightRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.GrantCarRightRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.GrantCarRightRequest} GrantCarRightRequest
             */
            GrantCarRightRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.GrantCarRightRequest)
                    return object;
                let message = new $root.wm5.protobuf.GrantCarRightRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.targetUserId != null)
                    message.targetUserId = object.targetUserId >>> 0;
                if (object.timestamp != null)
                    message.timestamp = object.timestamp >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a GrantCarRightRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.GrantCarRightRequest
             * @static
             * @param {wm5.protobuf.GrantCarRightRequest} message GrantCarRightRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GrantCarRightRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.userId = 0;
                    object.targetUserId = 0;
                    object.timestamp = 0;
                }
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.targetUserId != null && message.hasOwnProperty("targetUserId"))
                    object.targetUserId = message.targetUserId;
                if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                    object.timestamp = message.timestamp;
                return object;
            };

            /**
             * Converts this GrantCarRightRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.GrantCarRightRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GrantCarRightRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GrantCarRightRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.GrantCarRightRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GrantCarRightRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.GrantCarRightRequest";
            };

            return GrantCarRightRequest;
        })();

        protobuf.GrantCarRightResponse = (function() {

            /**
             * Properties of a GrantCarRightResponse.
             * @memberof wm5.protobuf
             * @interface IGrantCarRightResponse
             * @property {wm5.protobuf.ErrorCode} error GrantCarRightResponse error
             */

            /**
             * Constructs a new GrantCarRightResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a GrantCarRightResponse.
             * @implements IGrantCarRightResponse
             * @constructor
             * @param {wm5.protobuf.IGrantCarRightResponse=} [properties] Properties to set
             */
            function GrantCarRightResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GrantCarRightResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.GrantCarRightResponse
             * @instance
             */
            GrantCarRightResponse.prototype.error = 0;

            /**
             * Creates a new GrantCarRightResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.GrantCarRightResponse
             * @static
             * @param {wm5.protobuf.IGrantCarRightResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.GrantCarRightResponse} GrantCarRightResponse instance
             */
            GrantCarRightResponse.create = function create(properties) {
                return new GrantCarRightResponse(properties);
            };

            /**
             * Encodes the specified GrantCarRightResponse message. Does not implicitly {@link wm5.protobuf.GrantCarRightResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.GrantCarRightResponse
             * @static
             * @param {wm5.protobuf.IGrantCarRightResponse} message GrantCarRightResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GrantCarRightResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified GrantCarRightResponse message, length delimited. Does not implicitly {@link wm5.protobuf.GrantCarRightResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.GrantCarRightResponse
             * @static
             * @param {wm5.protobuf.IGrantCarRightResponse} message GrantCarRightResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GrantCarRightResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GrantCarRightResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.GrantCarRightResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.GrantCarRightResponse} GrantCarRightResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GrantCarRightResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.GrantCarRightResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a GrantCarRightResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.GrantCarRightResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.GrantCarRightResponse} GrantCarRightResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GrantCarRightResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GrantCarRightResponse message.
             * @function verify
             * @memberof wm5.protobuf.GrantCarRightResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GrantCarRightResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a GrantCarRightResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.GrantCarRightResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.GrantCarRightResponse} GrantCarRightResponse
             */
            GrantCarRightResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.GrantCarRightResponse)
                    return object;
                let message = new $root.wm5.protobuf.GrantCarRightResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a GrantCarRightResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.GrantCarRightResponse
             * @static
             * @param {wm5.protobuf.GrantCarRightResponse} message GrantCarRightResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GrantCarRightResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this GrantCarRightResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.GrantCarRightResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GrantCarRightResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GrantCarRightResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.GrantCarRightResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GrantCarRightResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.GrantCarRightResponse";
            };

            return GrantCarRightResponse;
        })();

        protobuf.LoadCarCampaignInfoRequest = (function() {

            /**
             * Properties of a LoadCarCampaignInfoRequest.
             * @memberof wm5.protobuf
             * @interface ILoadCarCampaignInfoRequest
             * @property {number} userId LoadCarCampaignInfoRequest userId
             */

            /**
             * Constructs a new LoadCarCampaignInfoRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadCarCampaignInfoRequest.
             * @implements ILoadCarCampaignInfoRequest
             * @constructor
             * @param {wm5.protobuf.ILoadCarCampaignInfoRequest=} [properties] Properties to set
             */
            function LoadCarCampaignInfoRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadCarCampaignInfoRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.LoadCarCampaignInfoRequest
             * @instance
             */
            LoadCarCampaignInfoRequest.prototype.userId = 0;

            /**
             * Creates a new LoadCarCampaignInfoRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadCarCampaignInfoRequest
             * @static
             * @param {wm5.protobuf.ILoadCarCampaignInfoRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadCarCampaignInfoRequest} LoadCarCampaignInfoRequest instance
             */
            LoadCarCampaignInfoRequest.create = function create(properties) {
                return new LoadCarCampaignInfoRequest(properties);
            };

            /**
             * Encodes the specified LoadCarCampaignInfoRequest message. Does not implicitly {@link wm5.protobuf.LoadCarCampaignInfoRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadCarCampaignInfoRequest
             * @static
             * @param {wm5.protobuf.ILoadCarCampaignInfoRequest} message LoadCarCampaignInfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadCarCampaignInfoRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                return writer;
            };

            /**
             * Encodes the specified LoadCarCampaignInfoRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadCarCampaignInfoRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadCarCampaignInfoRequest
             * @static
             * @param {wm5.protobuf.ILoadCarCampaignInfoRequest} message LoadCarCampaignInfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadCarCampaignInfoRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadCarCampaignInfoRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadCarCampaignInfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadCarCampaignInfoRequest} LoadCarCampaignInfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadCarCampaignInfoRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadCarCampaignInfoRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadCarCampaignInfoRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadCarCampaignInfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadCarCampaignInfoRequest} LoadCarCampaignInfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadCarCampaignInfoRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadCarCampaignInfoRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadCarCampaignInfoRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadCarCampaignInfoRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                return null;
            };

            /**
             * Creates a LoadCarCampaignInfoRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadCarCampaignInfoRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadCarCampaignInfoRequest} LoadCarCampaignInfoRequest
             */
            LoadCarCampaignInfoRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadCarCampaignInfoRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadCarCampaignInfoRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadCarCampaignInfoRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadCarCampaignInfoRequest
             * @static
             * @param {wm5.protobuf.LoadCarCampaignInfoRequest} message LoadCarCampaignInfoRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadCarCampaignInfoRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.userId = 0;
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                return object;
            };

            /**
             * Converts this LoadCarCampaignInfoRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadCarCampaignInfoRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadCarCampaignInfoRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadCarCampaignInfoRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadCarCampaignInfoRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadCarCampaignInfoRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadCarCampaignInfoRequest";
            };

            return LoadCarCampaignInfoRequest;
        })();

        protobuf.LoadCarCampaignInfoResponse = (function() {

            /**
             * Properties of a LoadCarCampaignInfoResponse.
             * @memberof wm5.protobuf
             * @interface ILoadCarCampaignInfoResponse
             * @property {wm5.protobuf.ErrorCode} error LoadCarCampaignInfoResponse error
             * @property {wm5.protobuf.CarCampaignUserState} carCampaignUserState LoadCarCampaignInfoResponse carCampaignUserState
             * @property {number} numOfPieces LoadCarCampaignInfoResponse numOfPieces
             * @property {number} numOfRemainingLotteries LoadCarCampaignInfoResponse numOfRemainingLotteries
             * @property {number} lotteryOpenBits LoadCarCampaignInfoResponse lotteryOpenBits
             */

            /**
             * Constructs a new LoadCarCampaignInfoResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadCarCampaignInfoResponse.
             * @implements ILoadCarCampaignInfoResponse
             * @constructor
             * @param {wm5.protobuf.ILoadCarCampaignInfoResponse=} [properties] Properties to set
             */
            function LoadCarCampaignInfoResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadCarCampaignInfoResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadCarCampaignInfoResponse
             * @instance
             */
            LoadCarCampaignInfoResponse.prototype.error = 0;

            /**
             * LoadCarCampaignInfoResponse carCampaignUserState.
             * @member {wm5.protobuf.CarCampaignUserState} carCampaignUserState
             * @memberof wm5.protobuf.LoadCarCampaignInfoResponse
             * @instance
             */
            LoadCarCampaignInfoResponse.prototype.carCampaignUserState = 1;

            /**
             * LoadCarCampaignInfoResponse numOfPieces.
             * @member {number} numOfPieces
             * @memberof wm5.protobuf.LoadCarCampaignInfoResponse
             * @instance
             */
            LoadCarCampaignInfoResponse.prototype.numOfPieces = 0;

            /**
             * LoadCarCampaignInfoResponse numOfRemainingLotteries.
             * @member {number} numOfRemainingLotteries
             * @memberof wm5.protobuf.LoadCarCampaignInfoResponse
             * @instance
             */
            LoadCarCampaignInfoResponse.prototype.numOfRemainingLotteries = 0;

            /**
             * LoadCarCampaignInfoResponse lotteryOpenBits.
             * @member {number} lotteryOpenBits
             * @memberof wm5.protobuf.LoadCarCampaignInfoResponse
             * @instance
             */
            LoadCarCampaignInfoResponse.prototype.lotteryOpenBits = 0;

            /**
             * Creates a new LoadCarCampaignInfoResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadCarCampaignInfoResponse
             * @static
             * @param {wm5.protobuf.ILoadCarCampaignInfoResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadCarCampaignInfoResponse} LoadCarCampaignInfoResponse instance
             */
            LoadCarCampaignInfoResponse.create = function create(properties) {
                return new LoadCarCampaignInfoResponse(properties);
            };

            /**
             * Encodes the specified LoadCarCampaignInfoResponse message. Does not implicitly {@link wm5.protobuf.LoadCarCampaignInfoResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadCarCampaignInfoResponse
             * @static
             * @param {wm5.protobuf.ILoadCarCampaignInfoResponse} message LoadCarCampaignInfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadCarCampaignInfoResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.carCampaignUserState);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.numOfPieces);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.numOfRemainingLotteries);
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.lotteryOpenBits);
                return writer;
            };

            /**
             * Encodes the specified LoadCarCampaignInfoResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadCarCampaignInfoResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadCarCampaignInfoResponse
             * @static
             * @param {wm5.protobuf.ILoadCarCampaignInfoResponse} message LoadCarCampaignInfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadCarCampaignInfoResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadCarCampaignInfoResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadCarCampaignInfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadCarCampaignInfoResponse} LoadCarCampaignInfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadCarCampaignInfoResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadCarCampaignInfoResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.carCampaignUserState = reader.int32();
                            break;
                        }
                    case 3: {
                            message.numOfPieces = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.numOfRemainingLotteries = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.lotteryOpenBits = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("carCampaignUserState"))
                    throw $util.ProtocolError("missing required 'carCampaignUserState'", { instance: message });
                if (!message.hasOwnProperty("numOfPieces"))
                    throw $util.ProtocolError("missing required 'numOfPieces'", { instance: message });
                if (!message.hasOwnProperty("numOfRemainingLotteries"))
                    throw $util.ProtocolError("missing required 'numOfRemainingLotteries'", { instance: message });
                if (!message.hasOwnProperty("lotteryOpenBits"))
                    throw $util.ProtocolError("missing required 'lotteryOpenBits'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadCarCampaignInfoResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadCarCampaignInfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadCarCampaignInfoResponse} LoadCarCampaignInfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadCarCampaignInfoResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadCarCampaignInfoResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadCarCampaignInfoResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadCarCampaignInfoResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                switch (message.carCampaignUserState) {
                default:
                    return "carCampaignUserState: enum value expected";
                case 1:
                case 2:
                case 3:
                    break;
                }
                if (!$util.isInteger(message.numOfPieces))
                    return "numOfPieces: integer expected";
                if (!$util.isInteger(message.numOfRemainingLotteries))
                    return "numOfRemainingLotteries: integer expected";
                if (!$util.isInteger(message.lotteryOpenBits))
                    return "lotteryOpenBits: integer expected";
                return null;
            };

            /**
             * Creates a LoadCarCampaignInfoResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadCarCampaignInfoResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadCarCampaignInfoResponse} LoadCarCampaignInfoResponse
             */
            LoadCarCampaignInfoResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadCarCampaignInfoResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadCarCampaignInfoResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                switch (object.carCampaignUserState) {
                default:
                    if (typeof object.carCampaignUserState === "number") {
                        message.carCampaignUserState = object.carCampaignUserState;
                        break;
                    }
                    break;
                case "CAR_CAMPAIGN_NOT_ACCEPTED":
                case 1:
                    message.carCampaignUserState = 1;
                    break;
                case "CAR_CAMPAIGN_ACCEPTED":
                case 2:
                    message.carCampaignUserState = 2;
                    break;
                case "CAR_CAMPAIGN_FINISHED":
                case 3:
                    message.carCampaignUserState = 3;
                    break;
                }
                if (object.numOfPieces != null)
                    message.numOfPieces = object.numOfPieces >>> 0;
                if (object.numOfRemainingLotteries != null)
                    message.numOfRemainingLotteries = object.numOfRemainingLotteries >>> 0;
                if (object.lotteryOpenBits != null)
                    message.lotteryOpenBits = object.lotteryOpenBits >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadCarCampaignInfoResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadCarCampaignInfoResponse
             * @static
             * @param {wm5.protobuf.LoadCarCampaignInfoResponse} message LoadCarCampaignInfoResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadCarCampaignInfoResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.carCampaignUserState = options.enums === String ? "CAR_CAMPAIGN_NOT_ACCEPTED" : 1;
                    object.numOfPieces = 0;
                    object.numOfRemainingLotteries = 0;
                    object.lotteryOpenBits = 0;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.carCampaignUserState != null && message.hasOwnProperty("carCampaignUserState"))
                    object.carCampaignUserState = options.enums === String ? $root.wm5.protobuf.CarCampaignUserState[message.carCampaignUserState] === undefined ? message.carCampaignUserState : $root.wm5.protobuf.CarCampaignUserState[message.carCampaignUserState] : message.carCampaignUserState;
                if (message.numOfPieces != null && message.hasOwnProperty("numOfPieces"))
                    object.numOfPieces = message.numOfPieces;
                if (message.numOfRemainingLotteries != null && message.hasOwnProperty("numOfRemainingLotteries"))
                    object.numOfRemainingLotteries = message.numOfRemainingLotteries;
                if (message.lotteryOpenBits != null && message.hasOwnProperty("lotteryOpenBits"))
                    object.lotteryOpenBits = message.lotteryOpenBits;
                return object;
            };

            /**
             * Converts this LoadCarCampaignInfoResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadCarCampaignInfoResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadCarCampaignInfoResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadCarCampaignInfoResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadCarCampaignInfoResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadCarCampaignInfoResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadCarCampaignInfoResponse";
            };

            return LoadCarCampaignInfoResponse;
        })();

        protobuf.SaveCarCampaignInfoRequest = (function() {

            /**
             * Properties of a SaveCarCampaignInfoRequest.
             * @memberof wm5.protobuf
             * @interface ISaveCarCampaignInfoRequest
             * @property {number} userId SaveCarCampaignInfoRequest userId
             * @property {number} lotteryOpenBits SaveCarCampaignInfoRequest lotteryOpenBits
             * @property {number} timestamp SaveCarCampaignInfoRequest timestamp
             */

            /**
             * Constructs a new SaveCarCampaignInfoRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a SaveCarCampaignInfoRequest.
             * @implements ISaveCarCampaignInfoRequest
             * @constructor
             * @param {wm5.protobuf.ISaveCarCampaignInfoRequest=} [properties] Properties to set
             */
            function SaveCarCampaignInfoRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SaveCarCampaignInfoRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.SaveCarCampaignInfoRequest
             * @instance
             */
            SaveCarCampaignInfoRequest.prototype.userId = 0;

            /**
             * SaveCarCampaignInfoRequest lotteryOpenBits.
             * @member {number} lotteryOpenBits
             * @memberof wm5.protobuf.SaveCarCampaignInfoRequest
             * @instance
             */
            SaveCarCampaignInfoRequest.prototype.lotteryOpenBits = 0;

            /**
             * SaveCarCampaignInfoRequest timestamp.
             * @member {number} timestamp
             * @memberof wm5.protobuf.SaveCarCampaignInfoRequest
             * @instance
             */
            SaveCarCampaignInfoRequest.prototype.timestamp = 0;

            /**
             * Creates a new SaveCarCampaignInfoRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SaveCarCampaignInfoRequest
             * @static
             * @param {wm5.protobuf.ISaveCarCampaignInfoRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.SaveCarCampaignInfoRequest} SaveCarCampaignInfoRequest instance
             */
            SaveCarCampaignInfoRequest.create = function create(properties) {
                return new SaveCarCampaignInfoRequest(properties);
            };

            /**
             * Encodes the specified SaveCarCampaignInfoRequest message. Does not implicitly {@link wm5.protobuf.SaveCarCampaignInfoRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SaveCarCampaignInfoRequest
             * @static
             * @param {wm5.protobuf.ISaveCarCampaignInfoRequest} message SaveCarCampaignInfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveCarCampaignInfoRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.lotteryOpenBits);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.timestamp);
                return writer;
            };

            /**
             * Encodes the specified SaveCarCampaignInfoRequest message, length delimited. Does not implicitly {@link wm5.protobuf.SaveCarCampaignInfoRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SaveCarCampaignInfoRequest
             * @static
             * @param {wm5.protobuf.ISaveCarCampaignInfoRequest} message SaveCarCampaignInfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveCarCampaignInfoRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SaveCarCampaignInfoRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SaveCarCampaignInfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SaveCarCampaignInfoRequest} SaveCarCampaignInfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveCarCampaignInfoRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveCarCampaignInfoRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.lotteryOpenBits = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.timestamp = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                if (!message.hasOwnProperty("lotteryOpenBits"))
                    throw $util.ProtocolError("missing required 'lotteryOpenBits'", { instance: message });
                if (!message.hasOwnProperty("timestamp"))
                    throw $util.ProtocolError("missing required 'timestamp'", { instance: message });
                return message;
            };

            /**
             * Decodes a SaveCarCampaignInfoRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SaveCarCampaignInfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SaveCarCampaignInfoRequest} SaveCarCampaignInfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveCarCampaignInfoRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SaveCarCampaignInfoRequest message.
             * @function verify
             * @memberof wm5.protobuf.SaveCarCampaignInfoRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SaveCarCampaignInfoRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                if (!$util.isInteger(message.lotteryOpenBits))
                    return "lotteryOpenBits: integer expected";
                if (!$util.isInteger(message.timestamp))
                    return "timestamp: integer expected";
                return null;
            };

            /**
             * Creates a SaveCarCampaignInfoRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SaveCarCampaignInfoRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SaveCarCampaignInfoRequest} SaveCarCampaignInfoRequest
             */
            SaveCarCampaignInfoRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SaveCarCampaignInfoRequest)
                    return object;
                let message = new $root.wm5.protobuf.SaveCarCampaignInfoRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.lotteryOpenBits != null)
                    message.lotteryOpenBits = object.lotteryOpenBits >>> 0;
                if (object.timestamp != null)
                    message.timestamp = object.timestamp >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a SaveCarCampaignInfoRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SaveCarCampaignInfoRequest
             * @static
             * @param {wm5.protobuf.SaveCarCampaignInfoRequest} message SaveCarCampaignInfoRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SaveCarCampaignInfoRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.userId = 0;
                    object.lotteryOpenBits = 0;
                    object.timestamp = 0;
                }
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.lotteryOpenBits != null && message.hasOwnProperty("lotteryOpenBits"))
                    object.lotteryOpenBits = message.lotteryOpenBits;
                if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                    object.timestamp = message.timestamp;
                return object;
            };

            /**
             * Converts this SaveCarCampaignInfoRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SaveCarCampaignInfoRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SaveCarCampaignInfoRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SaveCarCampaignInfoRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.SaveCarCampaignInfoRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SaveCarCampaignInfoRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SaveCarCampaignInfoRequest";
            };

            return SaveCarCampaignInfoRequest;
        })();

        protobuf.SaveCarCampaignInfoResponse = (function() {

            /**
             * Properties of a SaveCarCampaignInfoResponse.
             * @memberof wm5.protobuf
             * @interface ISaveCarCampaignInfoResponse
             * @property {wm5.protobuf.ErrorCode} error SaveCarCampaignInfoResponse error
             */

            /**
             * Constructs a new SaveCarCampaignInfoResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a SaveCarCampaignInfoResponse.
             * @implements ISaveCarCampaignInfoResponse
             * @constructor
             * @param {wm5.protobuf.ISaveCarCampaignInfoResponse=} [properties] Properties to set
             */
            function SaveCarCampaignInfoResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SaveCarCampaignInfoResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.SaveCarCampaignInfoResponse
             * @instance
             */
            SaveCarCampaignInfoResponse.prototype.error = 0;

            /**
             * Creates a new SaveCarCampaignInfoResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SaveCarCampaignInfoResponse
             * @static
             * @param {wm5.protobuf.ISaveCarCampaignInfoResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.SaveCarCampaignInfoResponse} SaveCarCampaignInfoResponse instance
             */
            SaveCarCampaignInfoResponse.create = function create(properties) {
                return new SaveCarCampaignInfoResponse(properties);
            };

            /**
             * Encodes the specified SaveCarCampaignInfoResponse message. Does not implicitly {@link wm5.protobuf.SaveCarCampaignInfoResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SaveCarCampaignInfoResponse
             * @static
             * @param {wm5.protobuf.ISaveCarCampaignInfoResponse} message SaveCarCampaignInfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveCarCampaignInfoResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified SaveCarCampaignInfoResponse message, length delimited. Does not implicitly {@link wm5.protobuf.SaveCarCampaignInfoResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SaveCarCampaignInfoResponse
             * @static
             * @param {wm5.protobuf.ISaveCarCampaignInfoResponse} message SaveCarCampaignInfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveCarCampaignInfoResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SaveCarCampaignInfoResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SaveCarCampaignInfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SaveCarCampaignInfoResponse} SaveCarCampaignInfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveCarCampaignInfoResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveCarCampaignInfoResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a SaveCarCampaignInfoResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SaveCarCampaignInfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SaveCarCampaignInfoResponse} SaveCarCampaignInfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveCarCampaignInfoResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SaveCarCampaignInfoResponse message.
             * @function verify
             * @memberof wm5.protobuf.SaveCarCampaignInfoResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SaveCarCampaignInfoResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a SaveCarCampaignInfoResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SaveCarCampaignInfoResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SaveCarCampaignInfoResponse} SaveCarCampaignInfoResponse
             */
            SaveCarCampaignInfoResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SaveCarCampaignInfoResponse)
                    return object;
                let message = new $root.wm5.protobuf.SaveCarCampaignInfoResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a SaveCarCampaignInfoResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SaveCarCampaignInfoResponse
             * @static
             * @param {wm5.protobuf.SaveCarCampaignInfoResponse} message SaveCarCampaignInfoResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SaveCarCampaignInfoResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this SaveCarCampaignInfoResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SaveCarCampaignInfoResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SaveCarCampaignInfoResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SaveCarCampaignInfoResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.SaveCarCampaignInfoResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SaveCarCampaignInfoResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SaveCarCampaignInfoResponse";
            };

            return SaveCarCampaignInfoResponse;
        })();

        protobuf.AcceptCarCampaignRequest = (function() {

            /**
             * Properties of an AcceptCarCampaignRequest.
             * @memberof wm5.protobuf
             * @interface IAcceptCarCampaignRequest
             * @property {number} userId AcceptCarCampaignRequest userId
             */

            /**
             * Constructs a new AcceptCarCampaignRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents an AcceptCarCampaignRequest.
             * @implements IAcceptCarCampaignRequest
             * @constructor
             * @param {wm5.protobuf.IAcceptCarCampaignRequest=} [properties] Properties to set
             */
            function AcceptCarCampaignRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * AcceptCarCampaignRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.AcceptCarCampaignRequest
             * @instance
             */
            AcceptCarCampaignRequest.prototype.userId = 0;

            /**
             * Creates a new AcceptCarCampaignRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.AcceptCarCampaignRequest
             * @static
             * @param {wm5.protobuf.IAcceptCarCampaignRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.AcceptCarCampaignRequest} AcceptCarCampaignRequest instance
             */
            AcceptCarCampaignRequest.create = function create(properties) {
                return new AcceptCarCampaignRequest(properties);
            };

            /**
             * Encodes the specified AcceptCarCampaignRequest message. Does not implicitly {@link wm5.protobuf.AcceptCarCampaignRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.AcceptCarCampaignRequest
             * @static
             * @param {wm5.protobuf.IAcceptCarCampaignRequest} message AcceptCarCampaignRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AcceptCarCampaignRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                return writer;
            };

            /**
             * Encodes the specified AcceptCarCampaignRequest message, length delimited. Does not implicitly {@link wm5.protobuf.AcceptCarCampaignRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.AcceptCarCampaignRequest
             * @static
             * @param {wm5.protobuf.IAcceptCarCampaignRequest} message AcceptCarCampaignRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AcceptCarCampaignRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an AcceptCarCampaignRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.AcceptCarCampaignRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.AcceptCarCampaignRequest} AcceptCarCampaignRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AcceptCarCampaignRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.AcceptCarCampaignRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                return message;
            };

            /**
             * Decodes an AcceptCarCampaignRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.AcceptCarCampaignRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.AcceptCarCampaignRequest} AcceptCarCampaignRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AcceptCarCampaignRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an AcceptCarCampaignRequest message.
             * @function verify
             * @memberof wm5.protobuf.AcceptCarCampaignRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AcceptCarCampaignRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                return null;
            };

            /**
             * Creates an AcceptCarCampaignRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.AcceptCarCampaignRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.AcceptCarCampaignRequest} AcceptCarCampaignRequest
             */
            AcceptCarCampaignRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.AcceptCarCampaignRequest)
                    return object;
                let message = new $root.wm5.protobuf.AcceptCarCampaignRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from an AcceptCarCampaignRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.AcceptCarCampaignRequest
             * @static
             * @param {wm5.protobuf.AcceptCarCampaignRequest} message AcceptCarCampaignRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AcceptCarCampaignRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.userId = 0;
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                return object;
            };

            /**
             * Converts this AcceptCarCampaignRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.AcceptCarCampaignRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AcceptCarCampaignRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for AcceptCarCampaignRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.AcceptCarCampaignRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            AcceptCarCampaignRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.AcceptCarCampaignRequest";
            };

            return AcceptCarCampaignRequest;
        })();

        protobuf.AcceptCarCampaignResponse = (function() {

            /**
             * Properties of an AcceptCarCampaignResponse.
             * @memberof wm5.protobuf
             * @interface IAcceptCarCampaignResponse
             * @property {wm5.protobuf.ErrorCode} error AcceptCarCampaignResponse error
             */

            /**
             * Constructs a new AcceptCarCampaignResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents an AcceptCarCampaignResponse.
             * @implements IAcceptCarCampaignResponse
             * @constructor
             * @param {wm5.protobuf.IAcceptCarCampaignResponse=} [properties] Properties to set
             */
            function AcceptCarCampaignResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * AcceptCarCampaignResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.AcceptCarCampaignResponse
             * @instance
             */
            AcceptCarCampaignResponse.prototype.error = 0;

            /**
             * Creates a new AcceptCarCampaignResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.AcceptCarCampaignResponse
             * @static
             * @param {wm5.protobuf.IAcceptCarCampaignResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.AcceptCarCampaignResponse} AcceptCarCampaignResponse instance
             */
            AcceptCarCampaignResponse.create = function create(properties) {
                return new AcceptCarCampaignResponse(properties);
            };

            /**
             * Encodes the specified AcceptCarCampaignResponse message. Does not implicitly {@link wm5.protobuf.AcceptCarCampaignResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.AcceptCarCampaignResponse
             * @static
             * @param {wm5.protobuf.IAcceptCarCampaignResponse} message AcceptCarCampaignResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AcceptCarCampaignResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified AcceptCarCampaignResponse message, length delimited. Does not implicitly {@link wm5.protobuf.AcceptCarCampaignResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.AcceptCarCampaignResponse
             * @static
             * @param {wm5.protobuf.IAcceptCarCampaignResponse} message AcceptCarCampaignResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AcceptCarCampaignResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an AcceptCarCampaignResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.AcceptCarCampaignResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.AcceptCarCampaignResponse} AcceptCarCampaignResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AcceptCarCampaignResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.AcceptCarCampaignResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes an AcceptCarCampaignResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.AcceptCarCampaignResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.AcceptCarCampaignResponse} AcceptCarCampaignResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AcceptCarCampaignResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an AcceptCarCampaignResponse message.
             * @function verify
             * @memberof wm5.protobuf.AcceptCarCampaignResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AcceptCarCampaignResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates an AcceptCarCampaignResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.AcceptCarCampaignResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.AcceptCarCampaignResponse} AcceptCarCampaignResponse
             */
            AcceptCarCampaignResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.AcceptCarCampaignResponse)
                    return object;
                let message = new $root.wm5.protobuf.AcceptCarCampaignResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from an AcceptCarCampaignResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.AcceptCarCampaignResponse
             * @static
             * @param {wm5.protobuf.AcceptCarCampaignResponse} message AcceptCarCampaignResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AcceptCarCampaignResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this AcceptCarCampaignResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.AcceptCarCampaignResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AcceptCarCampaignResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for AcceptCarCampaignResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.AcceptCarCampaignResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            AcceptCarCampaignResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.AcceptCarCampaignResponse";
            };

            return AcceptCarCampaignResponse;
        })();

        protobuf.LoadGhostCompetitionRankingRequest = (function() {

            /**
             * Properties of a LoadGhostCompetitionRankingRequest.
             * @memberof wm5.protobuf
             * @interface ILoadGhostCompetitionRankingRequest
             * @property {number} carId LoadGhostCompetitionRankingRequest carId
             * @property {number} competitionId LoadGhostCompetitionRankingRequest competitionId
             */

            /**
             * Constructs a new LoadGhostCompetitionRankingRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadGhostCompetitionRankingRequest.
             * @implements ILoadGhostCompetitionRankingRequest
             * @constructor
             * @param {wm5.protobuf.ILoadGhostCompetitionRankingRequest=} [properties] Properties to set
             */
            function LoadGhostCompetitionRankingRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadGhostCompetitionRankingRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingRequest
             * @instance
             */
            LoadGhostCompetitionRankingRequest.prototype.carId = 0;

            /**
             * LoadGhostCompetitionRankingRequest competitionId.
             * @member {number} competitionId
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingRequest
             * @instance
             */
            LoadGhostCompetitionRankingRequest.prototype.competitionId = 0;

            /**
             * Creates a new LoadGhostCompetitionRankingRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostCompetitionRankingRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadGhostCompetitionRankingRequest} LoadGhostCompetitionRankingRequest instance
             */
            LoadGhostCompetitionRankingRequest.create = function create(properties) {
                return new LoadGhostCompetitionRankingRequest(properties);
            };

            /**
             * Encodes the specified LoadGhostCompetitionRankingRequest message. Does not implicitly {@link wm5.protobuf.LoadGhostCompetitionRankingRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostCompetitionRankingRequest} message LoadGhostCompetitionRankingRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostCompetitionRankingRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.competitionId);
                return writer;
            };

            /**
             * Encodes the specified LoadGhostCompetitionRankingRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGhostCompetitionRankingRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostCompetitionRankingRequest} message LoadGhostCompetitionRankingRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostCompetitionRankingRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadGhostCompetitionRankingRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadGhostCompetitionRankingRequest} LoadGhostCompetitionRankingRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostCompetitionRankingRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGhostCompetitionRankingRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.competitionId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                if (!message.hasOwnProperty("competitionId"))
                    throw $util.ProtocolError("missing required 'competitionId'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadGhostCompetitionRankingRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadGhostCompetitionRankingRequest} LoadGhostCompetitionRankingRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostCompetitionRankingRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadGhostCompetitionRankingRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadGhostCompetitionRankingRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                if (!$util.isInteger(message.competitionId))
                    return "competitionId: integer expected";
                return null;
            };

            /**
             * Creates a LoadGhostCompetitionRankingRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadGhostCompetitionRankingRequest} LoadGhostCompetitionRankingRequest
             */
            LoadGhostCompetitionRankingRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadGhostCompetitionRankingRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadGhostCompetitionRankingRequest();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.competitionId != null)
                    message.competitionId = object.competitionId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadGhostCompetitionRankingRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingRequest
             * @static
             * @param {wm5.protobuf.LoadGhostCompetitionRankingRequest} message LoadGhostCompetitionRankingRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadGhostCompetitionRankingRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.carId = 0;
                    object.competitionId = 0;
                }
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.competitionId != null && message.hasOwnProperty("competitionId"))
                    object.competitionId = message.competitionId;
                return object;
            };

            /**
             * Converts this LoadGhostCompetitionRankingRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadGhostCompetitionRankingRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadGhostCompetitionRankingRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadGhostCompetitionRankingRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadGhostCompetitionRankingRequest";
            };

            return LoadGhostCompetitionRankingRequest;
        })();

        protobuf.LoadGhostCompetitionRankingResponse = (function() {

            /**
             * Properties of a LoadGhostCompetitionRankingResponse.
             * @memberof wm5.protobuf
             * @interface ILoadGhostCompetitionRankingResponse
             * @property {wm5.protobuf.ErrorCode} error LoadGhostCompetitionRankingResponse error
             * @property {number|null} [periodId] LoadGhostCompetitionRankingResponse periodId
             * @property {number} numOfParticipants LoadGhostCompetitionRankingResponse numOfParticipants
             * @property {wm5.protobuf.IGhostCompetitionSchedule|null} [competitionSchedule] LoadGhostCompetitionRankingResponse competitionSchedule
             * @property {wm5.protobuf.LoadGhostCompetitionRankingResponse.IEntry|null} [ownRecord] LoadGhostCompetitionRankingResponse ownRecord
             * @property {Array.<wm5.protobuf.LoadGhostCompetitionRankingResponse.IEntry>|null} [topRecords] LoadGhostCompetitionRankingResponse topRecords
             */

            /**
             * Constructs a new LoadGhostCompetitionRankingResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadGhostCompetitionRankingResponse.
             * @implements ILoadGhostCompetitionRankingResponse
             * @constructor
             * @param {wm5.protobuf.ILoadGhostCompetitionRankingResponse=} [properties] Properties to set
             */
            function LoadGhostCompetitionRankingResponse(properties) {
                this.topRecords = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadGhostCompetitionRankingResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
             * @instance
             */
            LoadGhostCompetitionRankingResponse.prototype.error = 0;

            /**
             * LoadGhostCompetitionRankingResponse periodId.
             * @member {number} periodId
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
             * @instance
             */
            LoadGhostCompetitionRankingResponse.prototype.periodId = 0;

            /**
             * LoadGhostCompetitionRankingResponse numOfParticipants.
             * @member {number} numOfParticipants
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
             * @instance
             */
            LoadGhostCompetitionRankingResponse.prototype.numOfParticipants = 0;

            /**
             * LoadGhostCompetitionRankingResponse competitionSchedule.
             * @member {wm5.protobuf.IGhostCompetitionSchedule|null|undefined} competitionSchedule
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
             * @instance
             */
            LoadGhostCompetitionRankingResponse.prototype.competitionSchedule = null;

            /**
             * LoadGhostCompetitionRankingResponse ownRecord.
             * @member {wm5.protobuf.LoadGhostCompetitionRankingResponse.IEntry|null|undefined} ownRecord
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
             * @instance
             */
            LoadGhostCompetitionRankingResponse.prototype.ownRecord = null;

            /**
             * LoadGhostCompetitionRankingResponse topRecords.
             * @member {Array.<wm5.protobuf.LoadGhostCompetitionRankingResponse.IEntry>} topRecords
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
             * @instance
             */
            LoadGhostCompetitionRankingResponse.prototype.topRecords = $util.emptyArray;

            /**
             * Creates a new LoadGhostCompetitionRankingResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostCompetitionRankingResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadGhostCompetitionRankingResponse} LoadGhostCompetitionRankingResponse instance
             */
            LoadGhostCompetitionRankingResponse.create = function create(properties) {
                return new LoadGhostCompetitionRankingResponse(properties);
            };

            /**
             * Encodes the specified LoadGhostCompetitionRankingResponse message. Does not implicitly {@link wm5.protobuf.LoadGhostCompetitionRankingResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostCompetitionRankingResponse} message LoadGhostCompetitionRankingResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostCompetitionRankingResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.periodId != null && Object.hasOwnProperty.call(message, "periodId"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.periodId);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.numOfParticipants);
                if (message.competitionSchedule != null && Object.hasOwnProperty.call(message, "competitionSchedule"))
                    $root.wm5.protobuf.GhostCompetitionSchedule.encode(message.competitionSchedule, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                if (message.ownRecord != null && Object.hasOwnProperty.call(message, "ownRecord"))
                    $root.wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry.encode(message.ownRecord, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                if (message.topRecords != null && message.topRecords.length)
                    for (let i = 0; i < message.topRecords.length; ++i)
                        $root.wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry.encode(message.topRecords[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified LoadGhostCompetitionRankingResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGhostCompetitionRankingResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostCompetitionRankingResponse} message LoadGhostCompetitionRankingResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostCompetitionRankingResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadGhostCompetitionRankingResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadGhostCompetitionRankingResponse} LoadGhostCompetitionRankingResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostCompetitionRankingResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGhostCompetitionRankingResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.periodId = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.numOfParticipants = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.competitionSchedule = $root.wm5.protobuf.GhostCompetitionSchedule.decode(reader, reader.uint32());
                            break;
                        }
                    case 5: {
                            message.ownRecord = $root.wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry.decode(reader, reader.uint32());
                            break;
                        }
                    case 6: {
                            if (!(message.topRecords && message.topRecords.length))
                                message.topRecords = [];
                            message.topRecords.push($root.wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("numOfParticipants"))
                    throw $util.ProtocolError("missing required 'numOfParticipants'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadGhostCompetitionRankingResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadGhostCompetitionRankingResponse} LoadGhostCompetitionRankingResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostCompetitionRankingResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadGhostCompetitionRankingResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadGhostCompetitionRankingResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.periodId != null && message.hasOwnProperty("periodId"))
                    if (!$util.isInteger(message.periodId))
                        return "periodId: integer expected";
                if (!$util.isInteger(message.numOfParticipants))
                    return "numOfParticipants: integer expected";
                if (message.competitionSchedule != null && message.hasOwnProperty("competitionSchedule")) {
                    let error = $root.wm5.protobuf.GhostCompetitionSchedule.verify(message.competitionSchedule);
                    if (error)
                        return "competitionSchedule." + error;
                }
                if (message.ownRecord != null && message.hasOwnProperty("ownRecord")) {
                    let error = $root.wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry.verify(message.ownRecord);
                    if (error)
                        return "ownRecord." + error;
                }
                if (message.topRecords != null && message.hasOwnProperty("topRecords")) {
                    if (!Array.isArray(message.topRecords))
                        return "topRecords: array expected";
                    for (let i = 0; i < message.topRecords.length; ++i) {
                        let error = $root.wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry.verify(message.topRecords[i]);
                        if (error)
                            return "topRecords." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a LoadGhostCompetitionRankingResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadGhostCompetitionRankingResponse} LoadGhostCompetitionRankingResponse
             */
            LoadGhostCompetitionRankingResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadGhostCompetitionRankingResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadGhostCompetitionRankingResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.periodId != null)
                    message.periodId = object.periodId >>> 0;
                if (object.numOfParticipants != null)
                    message.numOfParticipants = object.numOfParticipants >>> 0;
                if (object.competitionSchedule != null) {
                    if (typeof object.competitionSchedule !== "object")
                        throw TypeError(".wm5.protobuf.LoadGhostCompetitionRankingResponse.competitionSchedule: object expected");
                    message.competitionSchedule = $root.wm5.protobuf.GhostCompetitionSchedule.fromObject(object.competitionSchedule);
                }
                if (object.ownRecord != null) {
                    if (typeof object.ownRecord !== "object")
                        throw TypeError(".wm5.protobuf.LoadGhostCompetitionRankingResponse.ownRecord: object expected");
                    message.ownRecord = $root.wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry.fromObject(object.ownRecord);
                }
                if (object.topRecords) {
                    if (!Array.isArray(object.topRecords))
                        throw TypeError(".wm5.protobuf.LoadGhostCompetitionRankingResponse.topRecords: array expected");
                    message.topRecords = [];
                    for (let i = 0; i < object.topRecords.length; ++i) {
                        if (typeof object.topRecords[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadGhostCompetitionRankingResponse.topRecords: object expected");
                        message.topRecords[i] = $root.wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry.fromObject(object.topRecords[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a LoadGhostCompetitionRankingResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
             * @static
             * @param {wm5.protobuf.LoadGhostCompetitionRankingResponse} message LoadGhostCompetitionRankingResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadGhostCompetitionRankingResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.topRecords = [];
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.periodId = 0;
                    object.numOfParticipants = 0;
                    object.competitionSchedule = null;
                    object.ownRecord = null;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.periodId != null && message.hasOwnProperty("periodId"))
                    object.periodId = message.periodId;
                if (message.numOfParticipants != null && message.hasOwnProperty("numOfParticipants"))
                    object.numOfParticipants = message.numOfParticipants;
                if (message.competitionSchedule != null && message.hasOwnProperty("competitionSchedule"))
                    object.competitionSchedule = $root.wm5.protobuf.GhostCompetitionSchedule.toObject(message.competitionSchedule, options);
                if (message.ownRecord != null && message.hasOwnProperty("ownRecord"))
                    object.ownRecord = $root.wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry.toObject(message.ownRecord, options);
                if (message.topRecords && message.topRecords.length) {
                    object.topRecords = [];
                    for (let j = 0; j < message.topRecords.length; ++j)
                        object.topRecords[j] = $root.wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry.toObject(message.topRecords[j], options);
                }
                return object;
            };

            /**
             * Converts this LoadGhostCompetitionRankingResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadGhostCompetitionRankingResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadGhostCompetitionRankingResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadGhostCompetitionRankingResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadGhostCompetitionRankingResponse";
            };

            LoadGhostCompetitionRankingResponse.Entry = (function() {

                /**
                 * Properties of an Entry.
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
                 * @interface IEntry
                 * @property {number} rank Entry rank
                 * @property {number} result Entry result
                 * @property {number} carId Entry carId
                 * @property {string} name Entry name
                 * @property {number} regionId Entry regionId
                 * @property {number} model Entry model
                 * @property {number} visualModel Entry visualModel
                 * @property {number} defaultColor Entry defaultColor
                 * @property {string} title Entry title
                 * @property {number} level Entry level
                 * @property {string|null} [teamName] Entry teamName
                 * @property {string} playedShopName Entry playedShopName
                 * @property {number} playedAt Entry playedAt
                 */

                /**
                 * Constructs a new Entry.
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse
                 * @classdesc Represents an Entry.
                 * @implements IEntry
                 * @constructor
                 * @param {wm5.protobuf.LoadGhostCompetitionRankingResponse.IEntry=} [properties] Properties to set
                 */
                function Entry(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Entry rank.
                 * @member {number} rank
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @instance
                 */
                Entry.prototype.rank = 0;

                /**
                 * Entry result.
                 * @member {number} result
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @instance
                 */
                Entry.prototype.result = 0;

                /**
                 * Entry carId.
                 * @member {number} carId
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @instance
                 */
                Entry.prototype.carId = 0;

                /**
                 * Entry name.
                 * @member {string} name
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @instance
                 */
                Entry.prototype.name = "";

                /**
                 * Entry regionId.
                 * @member {number} regionId
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @instance
                 */
                Entry.prototype.regionId = 0;

                /**
                 * Entry model.
                 * @member {number} model
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @instance
                 */
                Entry.prototype.model = 0;

                /**
                 * Entry visualModel.
                 * @member {number} visualModel
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @instance
                 */
                Entry.prototype.visualModel = 0;

                /**
                 * Entry defaultColor.
                 * @member {number} defaultColor
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @instance
                 */
                Entry.prototype.defaultColor = 0;

                /**
                 * Entry title.
                 * @member {string} title
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @instance
                 */
                Entry.prototype.title = "";

                /**
                 * Entry level.
                 * @member {number} level
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @instance
                 */
                Entry.prototype.level = 0;

                /**
                 * Entry teamName.
                 * @member {string} teamName
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @instance
                 */
                Entry.prototype.teamName = "";

                /**
                 * Entry playedShopName.
                 * @member {string} playedShopName
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @instance
                 */
                Entry.prototype.playedShopName = "";

                /**
                 * Entry playedAt.
                 * @member {number} playedAt
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @instance
                 */
                Entry.prototype.playedAt = 0;

                /**
                 * Creates a new Entry instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @static
                 * @param {wm5.protobuf.LoadGhostCompetitionRankingResponse.IEntry=} [properties] Properties to set
                 * @returns {wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry} Entry instance
                 */
                Entry.create = function create(properties) {
                    return new Entry(properties);
                };

                /**
                 * Encodes the specified Entry message. Does not implicitly {@link wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @static
                 * @param {wm5.protobuf.LoadGhostCompetitionRankingResponse.IEntry} message Entry message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Entry.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.rank);
                    writer.uint32(/* id 2, wireType 0 =*/16).sint32(message.result);
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.carId);
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.regionId);
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.model);
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.visualModel);
                    writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.defaultColor);
                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.title);
                    writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.level);
                    if (message.teamName != null && Object.hasOwnProperty.call(message, "teamName"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.teamName);
                    writer.uint32(/* id 13, wireType 2 =*/106).string(message.playedShopName);
                    writer.uint32(/* id 14, wireType 0 =*/112).uint32(message.playedAt);
                    return writer;
                };

                /**
                 * Encodes the specified Entry message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @static
                 * @param {wm5.protobuf.LoadGhostCompetitionRankingResponse.IEntry} message Entry message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Entry.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an Entry message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry} Entry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Entry.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.rank = reader.uint32();
                                break;
                            }
                        case 2: {
                                message.result = reader.sint32();
                                break;
                            }
                        case 3: {
                                message.carId = reader.uint32();
                                break;
                            }
                        case 4: {
                                message.name = reader.string();
                                break;
                            }
                        case 5: {
                                message.regionId = reader.uint32();
                                break;
                            }
                        case 6: {
                                message.model = reader.uint32();
                                break;
                            }
                        case 7: {
                                message.visualModel = reader.uint32();
                                break;
                            }
                        case 8: {
                                message.defaultColor = reader.uint32();
                                break;
                            }
                        case 10: {
                                message.title = reader.string();
                                break;
                            }
                        case 11: {
                                message.level = reader.uint32();
                                break;
                            }
                        case 12: {
                                message.teamName = reader.string();
                                break;
                            }
                        case 13: {
                                message.playedShopName = reader.string();
                                break;
                            }
                        case 14: {
                                message.playedAt = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("rank"))
                        throw $util.ProtocolError("missing required 'rank'", { instance: message });
                    if (!message.hasOwnProperty("result"))
                        throw $util.ProtocolError("missing required 'result'", { instance: message });
                    if (!message.hasOwnProperty("carId"))
                        throw $util.ProtocolError("missing required 'carId'", { instance: message });
                    if (!message.hasOwnProperty("name"))
                        throw $util.ProtocolError("missing required 'name'", { instance: message });
                    if (!message.hasOwnProperty("regionId"))
                        throw $util.ProtocolError("missing required 'regionId'", { instance: message });
                    if (!message.hasOwnProperty("model"))
                        throw $util.ProtocolError("missing required 'model'", { instance: message });
                    if (!message.hasOwnProperty("visualModel"))
                        throw $util.ProtocolError("missing required 'visualModel'", { instance: message });
                    if (!message.hasOwnProperty("defaultColor"))
                        throw $util.ProtocolError("missing required 'defaultColor'", { instance: message });
                    if (!message.hasOwnProperty("title"))
                        throw $util.ProtocolError("missing required 'title'", { instance: message });
                    if (!message.hasOwnProperty("level"))
                        throw $util.ProtocolError("missing required 'level'", { instance: message });
                    if (!message.hasOwnProperty("playedShopName"))
                        throw $util.ProtocolError("missing required 'playedShopName'", { instance: message });
                    if (!message.hasOwnProperty("playedAt"))
                        throw $util.ProtocolError("missing required 'playedAt'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an Entry message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry} Entry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Entry.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an Entry message.
                 * @function verify
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Entry.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.rank))
                        return "rank: integer expected";
                    if (!$util.isInteger(message.result))
                        return "result: integer expected";
                    if (!$util.isInteger(message.carId))
                        return "carId: integer expected";
                    if (!$util.isString(message.name))
                        return "name: string expected";
                    if (!$util.isInteger(message.regionId))
                        return "regionId: integer expected";
                    if (!$util.isInteger(message.model))
                        return "model: integer expected";
                    if (!$util.isInteger(message.visualModel))
                        return "visualModel: integer expected";
                    if (!$util.isInteger(message.defaultColor))
                        return "defaultColor: integer expected";
                    if (!$util.isString(message.title))
                        return "title: string expected";
                    if (!$util.isInteger(message.level))
                        return "level: integer expected";
                    if (message.teamName != null && message.hasOwnProperty("teamName"))
                        if (!$util.isString(message.teamName))
                            return "teamName: string expected";
                    if (!$util.isString(message.playedShopName))
                        return "playedShopName: string expected";
                    if (!$util.isInteger(message.playedAt))
                        return "playedAt: integer expected";
                    return null;
                };

                /**
                 * Creates an Entry message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry} Entry
                 */
                Entry.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry)
                        return object;
                    let message = new $root.wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry();
                    if (object.rank != null)
                        message.rank = object.rank >>> 0;
                    if (object.result != null)
                        message.result = object.result | 0;
                    if (object.carId != null)
                        message.carId = object.carId >>> 0;
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.regionId != null)
                        message.regionId = object.regionId >>> 0;
                    if (object.model != null)
                        message.model = object.model >>> 0;
                    if (object.visualModel != null)
                        message.visualModel = object.visualModel >>> 0;
                    if (object.defaultColor != null)
                        message.defaultColor = object.defaultColor >>> 0;
                    if (object.title != null)
                        message.title = String(object.title);
                    if (object.level != null)
                        message.level = object.level >>> 0;
                    if (object.teamName != null)
                        message.teamName = String(object.teamName);
                    if (object.playedShopName != null)
                        message.playedShopName = String(object.playedShopName);
                    if (object.playedAt != null)
                        message.playedAt = object.playedAt >>> 0;
                    return message;
                };

                /**
                 * Creates a plain object from an Entry message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @static
                 * @param {wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry} message Entry
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Entry.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.rank = 0;
                        object.result = 0;
                        object.carId = 0;
                        object.name = "";
                        object.regionId = 0;
                        object.model = 0;
                        object.visualModel = 0;
                        object.defaultColor = 0;
                        object.title = "";
                        object.level = 0;
                        object.teamName = "";
                        object.playedShopName = "";
                        object.playedAt = 0;
                    }
                    if (message.rank != null && message.hasOwnProperty("rank"))
                        object.rank = message.rank;
                    if (message.result != null && message.hasOwnProperty("result"))
                        object.result = message.result;
                    if (message.carId != null && message.hasOwnProperty("carId"))
                        object.carId = message.carId;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.regionId != null && message.hasOwnProperty("regionId"))
                        object.regionId = message.regionId;
                    if (message.model != null && message.hasOwnProperty("model"))
                        object.model = message.model;
                    if (message.visualModel != null && message.hasOwnProperty("visualModel"))
                        object.visualModel = message.visualModel;
                    if (message.defaultColor != null && message.hasOwnProperty("defaultColor"))
                        object.defaultColor = message.defaultColor;
                    if (message.title != null && message.hasOwnProperty("title"))
                        object.title = message.title;
                    if (message.level != null && message.hasOwnProperty("level"))
                        object.level = message.level;
                    if (message.teamName != null && message.hasOwnProperty("teamName"))
                        object.teamName = message.teamName;
                    if (message.playedShopName != null && message.hasOwnProperty("playedShopName"))
                        object.playedShopName = message.playedShopName;
                    if (message.playedAt != null && message.hasOwnProperty("playedAt"))
                        object.playedAt = message.playedAt;
                    return object;
                };

                /**
                 * Converts this Entry to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Entry.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for Entry
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Entry.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.LoadGhostCompetitionRankingResponse.Entry";
                };

                return Entry;
            })();

            return LoadGhostCompetitionRankingResponse;
        })();

        protobuf.LoadShopInformationRequest = (function() {

            /**
             * Properties of a LoadShopInformationRequest.
             * @memberof wm5.protobuf
             * @interface ILoadShopInformationRequest
             * @property {number} userId LoadShopInformationRequest userId
             * @property {number} carId LoadShopInformationRequest carId
             * @property {number} model LoadShopInformationRequest model
             * @property {string} placeId LoadShopInformationRequest placeId
             */

            /**
             * Constructs a new LoadShopInformationRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadShopInformationRequest.
             * @implements ILoadShopInformationRequest
             * @constructor
             * @param {wm5.protobuf.ILoadShopInformationRequest=} [properties] Properties to set
             */
            function LoadShopInformationRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadShopInformationRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.LoadShopInformationRequest
             * @instance
             */
            LoadShopInformationRequest.prototype.userId = 0;

            /**
             * LoadShopInformationRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.LoadShopInformationRequest
             * @instance
             */
            LoadShopInformationRequest.prototype.carId = 0;

            /**
             * LoadShopInformationRequest model.
             * @member {number} model
             * @memberof wm5.protobuf.LoadShopInformationRequest
             * @instance
             */
            LoadShopInformationRequest.prototype.model = 0;

            /**
             * LoadShopInformationRequest placeId.
             * @member {string} placeId
             * @memberof wm5.protobuf.LoadShopInformationRequest
             * @instance
             */
            LoadShopInformationRequest.prototype.placeId = "";

            /**
             * Creates a new LoadShopInformationRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadShopInformationRequest
             * @static
             * @param {wm5.protobuf.ILoadShopInformationRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadShopInformationRequest} LoadShopInformationRequest instance
             */
            LoadShopInformationRequest.create = function create(properties) {
                return new LoadShopInformationRequest(properties);
            };

            /**
             * Encodes the specified LoadShopInformationRequest message. Does not implicitly {@link wm5.protobuf.LoadShopInformationRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadShopInformationRequest
             * @static
             * @param {wm5.protobuf.ILoadShopInformationRequest} message LoadShopInformationRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadShopInformationRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.carId);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.model);
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.placeId);
                return writer;
            };

            /**
             * Encodes the specified LoadShopInformationRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadShopInformationRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadShopInformationRequest
             * @static
             * @param {wm5.protobuf.ILoadShopInformationRequest} message LoadShopInformationRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadShopInformationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadShopInformationRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadShopInformationRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadShopInformationRequest} LoadShopInformationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadShopInformationRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadShopInformationRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.model = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.placeId = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                if (!message.hasOwnProperty("model"))
                    throw $util.ProtocolError("missing required 'model'", { instance: message });
                if (!message.hasOwnProperty("placeId"))
                    throw $util.ProtocolError("missing required 'placeId'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadShopInformationRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadShopInformationRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadShopInformationRequest} LoadShopInformationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadShopInformationRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadShopInformationRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadShopInformationRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadShopInformationRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                if (!$util.isInteger(message.model))
                    return "model: integer expected";
                if (!$util.isString(message.placeId))
                    return "placeId: string expected";
                return null;
            };

            /**
             * Creates a LoadShopInformationRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadShopInformationRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadShopInformationRequest} LoadShopInformationRequest
             */
            LoadShopInformationRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadShopInformationRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadShopInformationRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.model != null)
                    message.model = object.model >>> 0;
                if (object.placeId != null)
                    message.placeId = String(object.placeId);
                return message;
            };

            /**
             * Creates a plain object from a LoadShopInformationRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadShopInformationRequest
             * @static
             * @param {wm5.protobuf.LoadShopInformationRequest} message LoadShopInformationRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadShopInformationRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.userId = 0;
                    object.carId = 0;
                    object.model = 0;
                    object.placeId = "";
                }
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.model != null && message.hasOwnProperty("model"))
                    object.model = message.model;
                if (message.placeId != null && message.hasOwnProperty("placeId"))
                    object.placeId = message.placeId;
                return object;
            };

            /**
             * Converts this LoadShopInformationRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadShopInformationRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadShopInformationRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadShopInformationRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadShopInformationRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadShopInformationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadShopInformationRequest";
            };

            return LoadShopInformationRequest;
        })();

        protobuf.LoadShopInformationResponse = (function() {

            /**
             * Properties of a LoadShopInformationResponse.
             * @memberof wm5.protobuf
             * @interface ILoadShopInformationResponse
             * @property {wm5.protobuf.ErrorCode} error LoadShopInformationResponse error
             * @property {Array.<wm5.protobuf.LoadShopInformationResponse.IShopItem>|null} [items] LoadShopInformationResponse items
             * @property {wm5.protobuf.ShopState|null} [shopState] LoadShopInformationResponse shopState
             * @property {boolean} noticeUnlocked LoadShopInformationResponse noticeUnlocked
             * @property {wm5.protobuf.IRepayingCampaignSchedule|null} [repayingCampaign] LoadShopInformationResponse repayingCampaign
             * @property {number|null} [campaignExpendedMaxiGold] LoadShopInformationResponse campaignExpendedMaxiGold
             */

            /**
             * Constructs a new LoadShopInformationResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadShopInformationResponse.
             * @implements ILoadShopInformationResponse
             * @constructor
             * @param {wm5.protobuf.ILoadShopInformationResponse=} [properties] Properties to set
             */
            function LoadShopInformationResponse(properties) {
                this.items = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadShopInformationResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadShopInformationResponse
             * @instance
             */
            LoadShopInformationResponse.prototype.error = 0;

            /**
             * LoadShopInformationResponse items.
             * @member {Array.<wm5.protobuf.LoadShopInformationResponse.IShopItem>} items
             * @memberof wm5.protobuf.LoadShopInformationResponse
             * @instance
             */
            LoadShopInformationResponse.prototype.items = $util.emptyArray;

            /**
             * LoadShopInformationResponse shopState.
             * @member {wm5.protobuf.ShopState} shopState
             * @memberof wm5.protobuf.LoadShopInformationResponse
             * @instance
             */
            LoadShopInformationResponse.prototype.shopState = 1;

            /**
             * LoadShopInformationResponse noticeUnlocked.
             * @member {boolean} noticeUnlocked
             * @memberof wm5.protobuf.LoadShopInformationResponse
             * @instance
             */
            LoadShopInformationResponse.prototype.noticeUnlocked = false;

            /**
             * LoadShopInformationResponse repayingCampaign.
             * @member {wm5.protobuf.IRepayingCampaignSchedule|null|undefined} repayingCampaign
             * @memberof wm5.protobuf.LoadShopInformationResponse
             * @instance
             */
            LoadShopInformationResponse.prototype.repayingCampaign = null;

            /**
             * LoadShopInformationResponse campaignExpendedMaxiGold.
             * @member {number} campaignExpendedMaxiGold
             * @memberof wm5.protobuf.LoadShopInformationResponse
             * @instance
             */
            LoadShopInformationResponse.prototype.campaignExpendedMaxiGold = 0;

            /**
             * Creates a new LoadShopInformationResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadShopInformationResponse
             * @static
             * @param {wm5.protobuf.ILoadShopInformationResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadShopInformationResponse} LoadShopInformationResponse instance
             */
            LoadShopInformationResponse.create = function create(properties) {
                return new LoadShopInformationResponse(properties);
            };

            /**
             * Encodes the specified LoadShopInformationResponse message. Does not implicitly {@link wm5.protobuf.LoadShopInformationResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadShopInformationResponse
             * @static
             * @param {wm5.protobuf.ILoadShopInformationResponse} message LoadShopInformationResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadShopInformationResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.items != null && message.items.length)
                    for (let i = 0; i < message.items.length; ++i)
                        $root.wm5.protobuf.LoadShopInformationResponse.ShopItem.encode(message.items[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.shopState != null && Object.hasOwnProperty.call(message, "shopState"))
                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.shopState);
                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.noticeUnlocked);
                if (message.repayingCampaign != null && Object.hasOwnProperty.call(message, "repayingCampaign"))
                    $root.wm5.protobuf.RepayingCampaignSchedule.encode(message.repayingCampaign, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                if (message.campaignExpendedMaxiGold != null && Object.hasOwnProperty.call(message, "campaignExpendedMaxiGold"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.campaignExpendedMaxiGold);
                return writer;
            };

            /**
             * Encodes the specified LoadShopInformationResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadShopInformationResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadShopInformationResponse
             * @static
             * @param {wm5.protobuf.ILoadShopInformationResponse} message LoadShopInformationResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadShopInformationResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadShopInformationResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadShopInformationResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadShopInformationResponse} LoadShopInformationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadShopInformationResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadShopInformationResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 3: {
                            if (!(message.items && message.items.length))
                                message.items = [];
                            message.items.push($root.wm5.protobuf.LoadShopInformationResponse.ShopItem.decode(reader, reader.uint32()));
                            break;
                        }
                    case 4: {
                            message.shopState = reader.int32();
                            break;
                        }
                    case 5: {
                            message.noticeUnlocked = reader.bool();
                            break;
                        }
                    case 6: {
                            message.repayingCampaign = $root.wm5.protobuf.RepayingCampaignSchedule.decode(reader, reader.uint32());
                            break;
                        }
                    case 7: {
                            message.campaignExpendedMaxiGold = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("noticeUnlocked"))
                    throw $util.ProtocolError("missing required 'noticeUnlocked'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadShopInformationResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadShopInformationResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadShopInformationResponse} LoadShopInformationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadShopInformationResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadShopInformationResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadShopInformationResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadShopInformationResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.items != null && message.hasOwnProperty("items")) {
                    if (!Array.isArray(message.items))
                        return "items: array expected";
                    for (let i = 0; i < message.items.length; ++i) {
                        let error = $root.wm5.protobuf.LoadShopInformationResponse.ShopItem.verify(message.items[i]);
                        if (error)
                            return "items." + error;
                    }
                }
                if (message.shopState != null && message.hasOwnProperty("shopState"))
                    switch (message.shopState) {
                    default:
                        return "shopState: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    }
                if (typeof message.noticeUnlocked !== "boolean")
                    return "noticeUnlocked: boolean expected";
                if (message.repayingCampaign != null && message.hasOwnProperty("repayingCampaign")) {
                    let error = $root.wm5.protobuf.RepayingCampaignSchedule.verify(message.repayingCampaign);
                    if (error)
                        return "repayingCampaign." + error;
                }
                if (message.campaignExpendedMaxiGold != null && message.hasOwnProperty("campaignExpendedMaxiGold"))
                    if (!$util.isInteger(message.campaignExpendedMaxiGold))
                        return "campaignExpendedMaxiGold: integer expected";
                return null;
            };

            /**
             * Creates a LoadShopInformationResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadShopInformationResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadShopInformationResponse} LoadShopInformationResponse
             */
            LoadShopInformationResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadShopInformationResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadShopInformationResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.items) {
                    if (!Array.isArray(object.items))
                        throw TypeError(".wm5.protobuf.LoadShopInformationResponse.items: array expected");
                    message.items = [];
                    for (let i = 0; i < object.items.length; ++i) {
                        if (typeof object.items[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadShopInformationResponse.items: object expected");
                        message.items[i] = $root.wm5.protobuf.LoadShopInformationResponse.ShopItem.fromObject(object.items[i]);
                    }
                }
                switch (object.shopState) {
                default:
                    if (typeof object.shopState === "number") {
                        message.shopState = object.shopState;
                        break;
                    }
                    break;
                case "SHOP_DISCOUNT_SALE":
                case 1:
                    message.shopState = 1;
                    break;
                case "SHOP_DISCOUNT_SALE_FINISHED":
                case 2:
                    message.shopState = 2;
                    break;
                case "SHOP_REPAYING_CAMPAIGN":
                case 3:
                    message.shopState = 3;
                    break;
                case "SHOP_REPAYING_CAMPAIGN_FINISHED":
                case 4:
                    message.shopState = 4;
                    break;
                case "SHOP_NEW_ARRIVALS":
                case 5:
                    message.shopState = 5;
                    break;
                }
                if (object.noticeUnlocked != null)
                    message.noticeUnlocked = Boolean(object.noticeUnlocked);
                if (object.repayingCampaign != null) {
                    if (typeof object.repayingCampaign !== "object")
                        throw TypeError(".wm5.protobuf.LoadShopInformationResponse.repayingCampaign: object expected");
                    message.repayingCampaign = $root.wm5.protobuf.RepayingCampaignSchedule.fromObject(object.repayingCampaign);
                }
                if (object.campaignExpendedMaxiGold != null)
                    message.campaignExpendedMaxiGold = object.campaignExpendedMaxiGold >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadShopInformationResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadShopInformationResponse
             * @static
             * @param {wm5.protobuf.LoadShopInformationResponse} message LoadShopInformationResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadShopInformationResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.items = [];
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.shopState = options.enums === String ? "SHOP_DISCOUNT_SALE" : 1;
                    object.noticeUnlocked = false;
                    object.repayingCampaign = null;
                    object.campaignExpendedMaxiGold = 0;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.items && message.items.length) {
                    object.items = [];
                    for (let j = 0; j < message.items.length; ++j)
                        object.items[j] = $root.wm5.protobuf.LoadShopInformationResponse.ShopItem.toObject(message.items[j], options);
                }
                if (message.shopState != null && message.hasOwnProperty("shopState"))
                    object.shopState = options.enums === String ? $root.wm5.protobuf.ShopState[message.shopState] === undefined ? message.shopState : $root.wm5.protobuf.ShopState[message.shopState] : message.shopState;
                if (message.noticeUnlocked != null && message.hasOwnProperty("noticeUnlocked"))
                    object.noticeUnlocked = message.noticeUnlocked;
                if (message.repayingCampaign != null && message.hasOwnProperty("repayingCampaign"))
                    object.repayingCampaign = $root.wm5.protobuf.RepayingCampaignSchedule.toObject(message.repayingCampaign, options);
                if (message.campaignExpendedMaxiGold != null && message.hasOwnProperty("campaignExpendedMaxiGold"))
                    object.campaignExpendedMaxiGold = message.campaignExpendedMaxiGold;
                return object;
            };

            /**
             * Converts this LoadShopInformationResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadShopInformationResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadShopInformationResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadShopInformationResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadShopInformationResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadShopInformationResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadShopInformationResponse";
            };

            LoadShopInformationResponse.ShopItem = (function() {

                /**
                 * Properties of a ShopItem.
                 * @memberof wm5.protobuf.LoadShopInformationResponse
                 * @interface IShopItem
                 * @property {wm5.protobuf.ItemCategory} category ShopItem category
                 * @property {number} itemId ShopItem itemId
                 * @property {number} price ShopItem price
                 * @property {number|null} [discountPrice] ShopItem discountPrice
                 * @property {boolean} recommended ShopItem recommended
                 * @property {boolean} isNew ShopItem isNew
                 * @property {number|null} [saleUntil] ShopItem saleUntil
                 * @property {number} shopGrade ShopItem shopGrade
                 */

                /**
                 * Constructs a new ShopItem.
                 * @memberof wm5.protobuf.LoadShopInformationResponse
                 * @classdesc Represents a ShopItem.
                 * @implements IShopItem
                 * @constructor
                 * @param {wm5.protobuf.LoadShopInformationResponse.IShopItem=} [properties] Properties to set
                 */
                function ShopItem(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * ShopItem category.
                 * @member {wm5.protobuf.ItemCategory} category
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @instance
                 */
                ShopItem.prototype.category = 1;

                /**
                 * ShopItem itemId.
                 * @member {number} itemId
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @instance
                 */
                ShopItem.prototype.itemId = 0;

                /**
                 * ShopItem price.
                 * @member {number} price
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @instance
                 */
                ShopItem.prototype.price = 0;

                /**
                 * ShopItem discountPrice.
                 * @member {number} discountPrice
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @instance
                 */
                ShopItem.prototype.discountPrice = 0;

                /**
                 * ShopItem recommended.
                 * @member {boolean} recommended
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @instance
                 */
                ShopItem.prototype.recommended = false;

                /**
                 * ShopItem isNew.
                 * @member {boolean} isNew
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @instance
                 */
                ShopItem.prototype.isNew = false;

                /**
                 * ShopItem saleUntil.
                 * @member {number} saleUntil
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @instance
                 */
                ShopItem.prototype.saleUntil = 0;

                /**
                 * ShopItem shopGrade.
                 * @member {number} shopGrade
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @instance
                 */
                ShopItem.prototype.shopGrade = 0;

                /**
                 * Creates a new ShopItem instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @static
                 * @param {wm5.protobuf.LoadShopInformationResponse.IShopItem=} [properties] Properties to set
                 * @returns {wm5.protobuf.LoadShopInformationResponse.ShopItem} ShopItem instance
                 */
                ShopItem.create = function create(properties) {
                    return new ShopItem(properties);
                };

                /**
                 * Encodes the specified ShopItem message. Does not implicitly {@link wm5.protobuf.LoadShopInformationResponse.ShopItem.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @static
                 * @param {wm5.protobuf.LoadShopInformationResponse.IShopItem} message ShopItem message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ShopItem.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.category);
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.itemId);
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.price);
                    if (message.discountPrice != null && Object.hasOwnProperty.call(message, "discountPrice"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.discountPrice);
                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.recommended);
                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.isNew);
                    if (message.saleUntil != null && Object.hasOwnProperty.call(message, "saleUntil"))
                        writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.saleUntil);
                    writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.shopGrade);
                    return writer;
                };

                /**
                 * Encodes the specified ShopItem message, length delimited. Does not implicitly {@link wm5.protobuf.LoadShopInformationResponse.ShopItem.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @static
                 * @param {wm5.protobuf.LoadShopInformationResponse.IShopItem} message ShopItem message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ShopItem.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a ShopItem message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.LoadShopInformationResponse.ShopItem} ShopItem
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ShopItem.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadShopInformationResponse.ShopItem();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.category = reader.int32();
                                break;
                            }
                        case 2: {
                                message.itemId = reader.uint32();
                                break;
                            }
                        case 3: {
                                message.price = reader.uint32();
                                break;
                            }
                        case 4: {
                                message.discountPrice = reader.uint32();
                                break;
                            }
                        case 5: {
                                message.recommended = reader.bool();
                                break;
                            }
                        case 6: {
                                message.isNew = reader.bool();
                                break;
                            }
                        case 7: {
                                message.saleUntil = reader.uint32();
                                break;
                            }
                        case 8: {
                                message.shopGrade = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("category"))
                        throw $util.ProtocolError("missing required 'category'", { instance: message });
                    if (!message.hasOwnProperty("itemId"))
                        throw $util.ProtocolError("missing required 'itemId'", { instance: message });
                    if (!message.hasOwnProperty("price"))
                        throw $util.ProtocolError("missing required 'price'", { instance: message });
                    if (!message.hasOwnProperty("recommended"))
                        throw $util.ProtocolError("missing required 'recommended'", { instance: message });
                    if (!message.hasOwnProperty("isNew"))
                        throw $util.ProtocolError("missing required 'isNew'", { instance: message });
                    if (!message.hasOwnProperty("shopGrade"))
                        throw $util.ProtocolError("missing required 'shopGrade'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a ShopItem message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.LoadShopInformationResponse.ShopItem} ShopItem
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ShopItem.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a ShopItem message.
                 * @function verify
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ShopItem.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    switch (message.category) {
                    default:
                        return "category: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 201:
                    case 202:
                        break;
                    }
                    if (!$util.isInteger(message.itemId))
                        return "itemId: integer expected";
                    if (!$util.isInteger(message.price))
                        return "price: integer expected";
                    if (message.discountPrice != null && message.hasOwnProperty("discountPrice"))
                        if (!$util.isInteger(message.discountPrice))
                            return "discountPrice: integer expected";
                    if (typeof message.recommended !== "boolean")
                        return "recommended: boolean expected";
                    if (typeof message.isNew !== "boolean")
                        return "isNew: boolean expected";
                    if (message.saleUntil != null && message.hasOwnProperty("saleUntil"))
                        if (!$util.isInteger(message.saleUntil))
                            return "saleUntil: integer expected";
                    if (!$util.isInteger(message.shopGrade))
                        return "shopGrade: integer expected";
                    return null;
                };

                /**
                 * Creates a ShopItem message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.LoadShopInformationResponse.ShopItem} ShopItem
                 */
                ShopItem.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.LoadShopInformationResponse.ShopItem)
                        return object;
                    let message = new $root.wm5.protobuf.LoadShopInformationResponse.ShopItem();
                    switch (object.category) {
                    default:
                        if (typeof object.category === "number") {
                            message.category = object.category;
                            break;
                        }
                        break;
                    case "CAT_CUSTOM_COLOR":
                    case 1:
                        message.category = 1;
                        break;
                    case "CAT_WHEEL":
                    case 2:
                        message.category = 2;
                        break;
                    case "CAT_AERO":
                    case 3:
                        message.category = 3;
                        break;
                    case "CAT_BONNET":
                    case 4:
                        message.category = 4;
                        break;
                    case "CAT_WING":
                    case 5:
                        message.category = 5;
                        break;
                    case "CAT_MIRROR":
                    case 6:
                        message.category = 6;
                        break;
                    case "CAT_STICKER":
                    case 7:
                        message.category = 7;
                        break;
                    case "CAT_NEON":
                    case 8:
                        message.category = 8;
                        break;
                    case "CAT_TRUNK":
                    case 9:
                        message.category = 9;
                        break;
                    case "CAT_NUMBER_PLATE":
                    case 10:
                        message.category = 10;
                        break;
                    case "CAT_SPECIAL_STICKER":
                    case 11:
                        message.category = 11;
                        break;
                    case "CAT_GT_WING":
                    case 12:
                        message.category = 12;
                        break;
                    case "CAT_MINI_STICKER":
                    case 13:
                        message.category = 13;
                        break;
                    case "CAT_AURA_MOTIF":
                    case 14:
                        message.category = 14;
                        break;
                    case "CAT_METER":
                    case 15:
                        message.category = 15;
                        break;
                    case "CAT_BGM":
                    case 16:
                        message.category = 16;
                        break;
                    case "CAT_NAME_PLATE":
                    case 17:
                        message.category = 17;
                        break;
                    case "CAT_NAME_FRAME":
                    case 18:
                        message.category = 18;
                        break;
                    case "CAT_NUMBER":
                    case 19:
                        message.category = 19;
                        break;
                    case "CAT_CHAR_EFFECT":
                    case 20:
                        message.category = 20;
                        break;
                    case "CAT_MOTION_EFFECT":
                    case 21:
                        message.category = 21;
                        break;
                    case "CAT_BGM_TRACK":
                    case 22:
                        message.category = 22;
                        break;
                    case "CAT_SIDE_STICKER":
                    case 23:
                        message.category = 23;
                        break;
                    case "CAT_ROOF_STICKER":
                    case 24:
                        message.category = 24;
                        break;
                    case "CAT_TEAM_DECORATION":
                    case 25:
                        message.category = 25;
                        break;
                    case "CAT_RIVAL_MARKER":
                    case 26:
                        message.category = 26;
                        break;
                    case "CAT_STAMP":
                    case 27:
                        message.category = 27;
                        break;
                    case "CAT_TERMINAL_BACKGROUND":
                    case 28:
                        message.category = 28;
                        break;
                    case "CAT_CAR_TICKET":
                    case 201:
                        message.category = 201;
                        break;
                    case "CAT_CONSUMPTION_ITEM":
                    case 202:
                        message.category = 202;
                        break;
                    }
                    if (object.itemId != null)
                        message.itemId = object.itemId >>> 0;
                    if (object.price != null)
                        message.price = object.price >>> 0;
                    if (object.discountPrice != null)
                        message.discountPrice = object.discountPrice >>> 0;
                    if (object.recommended != null)
                        message.recommended = Boolean(object.recommended);
                    if (object.isNew != null)
                        message.isNew = Boolean(object.isNew);
                    if (object.saleUntil != null)
                        message.saleUntil = object.saleUntil >>> 0;
                    if (object.shopGrade != null)
                        message.shopGrade = object.shopGrade >>> 0;
                    return message;
                };

                /**
                 * Creates a plain object from a ShopItem message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @static
                 * @param {wm5.protobuf.LoadShopInformationResponse.ShopItem} message ShopItem
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ShopItem.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.category = options.enums === String ? "CAT_CUSTOM_COLOR" : 1;
                        object.itemId = 0;
                        object.price = 0;
                        object.discountPrice = 0;
                        object.recommended = false;
                        object.isNew = false;
                        object.saleUntil = 0;
                        object.shopGrade = 0;
                    }
                    if (message.category != null && message.hasOwnProperty("category"))
                        object.category = options.enums === String ? $root.wm5.protobuf.ItemCategory[message.category] === undefined ? message.category : $root.wm5.protobuf.ItemCategory[message.category] : message.category;
                    if (message.itemId != null && message.hasOwnProperty("itemId"))
                        object.itemId = message.itemId;
                    if (message.price != null && message.hasOwnProperty("price"))
                        object.price = message.price;
                    if (message.discountPrice != null && message.hasOwnProperty("discountPrice"))
                        object.discountPrice = message.discountPrice;
                    if (message.recommended != null && message.hasOwnProperty("recommended"))
                        object.recommended = message.recommended;
                    if (message.isNew != null && message.hasOwnProperty("isNew"))
                        object.isNew = message.isNew;
                    if (message.saleUntil != null && message.hasOwnProperty("saleUntil"))
                        object.saleUntil = message.saleUntil;
                    if (message.shopGrade != null && message.hasOwnProperty("shopGrade"))
                        object.shopGrade = message.shopGrade;
                    return object;
                };

                /**
                 * Converts this ShopItem to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ShopItem.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for ShopItem
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.LoadShopInformationResponse.ShopItem
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ShopItem.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.LoadShopInformationResponse.ShopItem";
                };

                return ShopItem;
            })();

            return LoadShopInformationResponse;
        })();

        protobuf.ReceiveMaxiGoldRequest = (function() {

            /**
             * Properties of a ReceiveMaxiGoldRequest.
             * @memberof wm5.protobuf
             * @interface IReceiveMaxiGoldRequest
             * @property {number} userId ReceiveMaxiGoldRequest userId
             */

            /**
             * Constructs a new ReceiveMaxiGoldRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a ReceiveMaxiGoldRequest.
             * @implements IReceiveMaxiGoldRequest
             * @constructor
             * @param {wm5.protobuf.IReceiveMaxiGoldRequest=} [properties] Properties to set
             */
            function ReceiveMaxiGoldRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ReceiveMaxiGoldRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.ReceiveMaxiGoldRequest
             * @instance
             */
            ReceiveMaxiGoldRequest.prototype.userId = 0;

            /**
             * Creates a new ReceiveMaxiGoldRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.ReceiveMaxiGoldRequest
             * @static
             * @param {wm5.protobuf.IReceiveMaxiGoldRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.ReceiveMaxiGoldRequest} ReceiveMaxiGoldRequest instance
             */
            ReceiveMaxiGoldRequest.create = function create(properties) {
                return new ReceiveMaxiGoldRequest(properties);
            };

            /**
             * Encodes the specified ReceiveMaxiGoldRequest message. Does not implicitly {@link wm5.protobuf.ReceiveMaxiGoldRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.ReceiveMaxiGoldRequest
             * @static
             * @param {wm5.protobuf.IReceiveMaxiGoldRequest} message ReceiveMaxiGoldRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReceiveMaxiGoldRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                return writer;
            };

            /**
             * Encodes the specified ReceiveMaxiGoldRequest message, length delimited. Does not implicitly {@link wm5.protobuf.ReceiveMaxiGoldRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.ReceiveMaxiGoldRequest
             * @static
             * @param {wm5.protobuf.IReceiveMaxiGoldRequest} message ReceiveMaxiGoldRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReceiveMaxiGoldRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a ReceiveMaxiGoldRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.ReceiveMaxiGoldRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.ReceiveMaxiGoldRequest} ReceiveMaxiGoldRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReceiveMaxiGoldRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.ReceiveMaxiGoldRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                return message;
            };

            /**
             * Decodes a ReceiveMaxiGoldRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.ReceiveMaxiGoldRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.ReceiveMaxiGoldRequest} ReceiveMaxiGoldRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReceiveMaxiGoldRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a ReceiveMaxiGoldRequest message.
             * @function verify
             * @memberof wm5.protobuf.ReceiveMaxiGoldRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ReceiveMaxiGoldRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                return null;
            };

            /**
             * Creates a ReceiveMaxiGoldRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.ReceiveMaxiGoldRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.ReceiveMaxiGoldRequest} ReceiveMaxiGoldRequest
             */
            ReceiveMaxiGoldRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.ReceiveMaxiGoldRequest)
                    return object;
                let message = new $root.wm5.protobuf.ReceiveMaxiGoldRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a ReceiveMaxiGoldRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.ReceiveMaxiGoldRequest
             * @static
             * @param {wm5.protobuf.ReceiveMaxiGoldRequest} message ReceiveMaxiGoldRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ReceiveMaxiGoldRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.userId = 0;
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                return object;
            };

            /**
             * Converts this ReceiveMaxiGoldRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.ReceiveMaxiGoldRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ReceiveMaxiGoldRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ReceiveMaxiGoldRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.ReceiveMaxiGoldRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ReceiveMaxiGoldRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.ReceiveMaxiGoldRequest";
            };

            return ReceiveMaxiGoldRequest;
        })();

        protobuf.ReceiveMaxiGoldResponse = (function() {

            /**
             * Properties of a ReceiveMaxiGoldResponse.
             * @memberof wm5.protobuf
             * @interface IReceiveMaxiGoldResponse
             * @property {wm5.protobuf.ErrorCode} error ReceiveMaxiGoldResponse error
             * @property {number} maxiGoldBefore ReceiveMaxiGoldResponse maxiGoldBefore
             * @property {number} maxiGoldAfter ReceiveMaxiGoldResponse maxiGoldAfter
             * @property {Array.<wm5.protobuf.ReceiveMaxiGoldResponse.IIncomeEntry>|null} [income] ReceiveMaxiGoldResponse income
             * @property {Array.<wm5.protobuf.IUserItem>|null} [ownedUserItems] ReceiveMaxiGoldResponse ownedUserItems
             */

            /**
             * Constructs a new ReceiveMaxiGoldResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a ReceiveMaxiGoldResponse.
             * @implements IReceiveMaxiGoldResponse
             * @constructor
             * @param {wm5.protobuf.IReceiveMaxiGoldResponse=} [properties] Properties to set
             */
            function ReceiveMaxiGoldResponse(properties) {
                this.income = [];
                this.ownedUserItems = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ReceiveMaxiGoldResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.ReceiveMaxiGoldResponse
             * @instance
             */
            ReceiveMaxiGoldResponse.prototype.error = 0;

            /**
             * ReceiveMaxiGoldResponse maxiGoldBefore.
             * @member {number} maxiGoldBefore
             * @memberof wm5.protobuf.ReceiveMaxiGoldResponse
             * @instance
             */
            ReceiveMaxiGoldResponse.prototype.maxiGoldBefore = 0;

            /**
             * ReceiveMaxiGoldResponse maxiGoldAfter.
             * @member {number} maxiGoldAfter
             * @memberof wm5.protobuf.ReceiveMaxiGoldResponse
             * @instance
             */
            ReceiveMaxiGoldResponse.prototype.maxiGoldAfter = 0;

            /**
             * ReceiveMaxiGoldResponse income.
             * @member {Array.<wm5.protobuf.ReceiveMaxiGoldResponse.IIncomeEntry>} income
             * @memberof wm5.protobuf.ReceiveMaxiGoldResponse
             * @instance
             */
            ReceiveMaxiGoldResponse.prototype.income = $util.emptyArray;

            /**
             * ReceiveMaxiGoldResponse ownedUserItems.
             * @member {Array.<wm5.protobuf.IUserItem>} ownedUserItems
             * @memberof wm5.protobuf.ReceiveMaxiGoldResponse
             * @instance
             */
            ReceiveMaxiGoldResponse.prototype.ownedUserItems = $util.emptyArray;

            /**
             * Creates a new ReceiveMaxiGoldResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.ReceiveMaxiGoldResponse
             * @static
             * @param {wm5.protobuf.IReceiveMaxiGoldResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.ReceiveMaxiGoldResponse} ReceiveMaxiGoldResponse instance
             */
            ReceiveMaxiGoldResponse.create = function create(properties) {
                return new ReceiveMaxiGoldResponse(properties);
            };

            /**
             * Encodes the specified ReceiveMaxiGoldResponse message. Does not implicitly {@link wm5.protobuf.ReceiveMaxiGoldResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.ReceiveMaxiGoldResponse
             * @static
             * @param {wm5.protobuf.IReceiveMaxiGoldResponse} message ReceiveMaxiGoldResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReceiveMaxiGoldResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.maxiGoldBefore);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.maxiGoldAfter);
                if (message.income != null && message.income.length)
                    for (let i = 0; i < message.income.length; ++i)
                        $root.wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry.encode(message.income[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                if (message.ownedUserItems != null && message.ownedUserItems.length)
                    for (let i = 0; i < message.ownedUserItems.length; ++i)
                        $root.wm5.protobuf.UserItem.encode(message.ownedUserItems[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified ReceiveMaxiGoldResponse message, length delimited. Does not implicitly {@link wm5.protobuf.ReceiveMaxiGoldResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.ReceiveMaxiGoldResponse
             * @static
             * @param {wm5.protobuf.IReceiveMaxiGoldResponse} message ReceiveMaxiGoldResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReceiveMaxiGoldResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a ReceiveMaxiGoldResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.ReceiveMaxiGoldResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.ReceiveMaxiGoldResponse} ReceiveMaxiGoldResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReceiveMaxiGoldResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.ReceiveMaxiGoldResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.maxiGoldBefore = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.maxiGoldAfter = reader.uint32();
                            break;
                        }
                    case 6: {
                            if (!(message.income && message.income.length))
                                message.income = [];
                            message.income.push($root.wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry.decode(reader, reader.uint32()));
                            break;
                        }
                    case 7: {
                            if (!(message.ownedUserItems && message.ownedUserItems.length))
                                message.ownedUserItems = [];
                            message.ownedUserItems.push($root.wm5.protobuf.UserItem.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("maxiGoldBefore"))
                    throw $util.ProtocolError("missing required 'maxiGoldBefore'", { instance: message });
                if (!message.hasOwnProperty("maxiGoldAfter"))
                    throw $util.ProtocolError("missing required 'maxiGoldAfter'", { instance: message });
                return message;
            };

            /**
             * Decodes a ReceiveMaxiGoldResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.ReceiveMaxiGoldResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.ReceiveMaxiGoldResponse} ReceiveMaxiGoldResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReceiveMaxiGoldResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a ReceiveMaxiGoldResponse message.
             * @function verify
             * @memberof wm5.protobuf.ReceiveMaxiGoldResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ReceiveMaxiGoldResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (!$util.isInteger(message.maxiGoldBefore))
                    return "maxiGoldBefore: integer expected";
                if (!$util.isInteger(message.maxiGoldAfter))
                    return "maxiGoldAfter: integer expected";
                if (message.income != null && message.hasOwnProperty("income")) {
                    if (!Array.isArray(message.income))
                        return "income: array expected";
                    for (let i = 0; i < message.income.length; ++i) {
                        let error = $root.wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry.verify(message.income[i]);
                        if (error)
                            return "income." + error;
                    }
                }
                if (message.ownedUserItems != null && message.hasOwnProperty("ownedUserItems")) {
                    if (!Array.isArray(message.ownedUserItems))
                        return "ownedUserItems: array expected";
                    for (let i = 0; i < message.ownedUserItems.length; ++i) {
                        let error = $root.wm5.protobuf.UserItem.verify(message.ownedUserItems[i]);
                        if (error)
                            return "ownedUserItems." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a ReceiveMaxiGoldResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.ReceiveMaxiGoldResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.ReceiveMaxiGoldResponse} ReceiveMaxiGoldResponse
             */
            ReceiveMaxiGoldResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.ReceiveMaxiGoldResponse)
                    return object;
                let message = new $root.wm5.protobuf.ReceiveMaxiGoldResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.maxiGoldBefore != null)
                    message.maxiGoldBefore = object.maxiGoldBefore >>> 0;
                if (object.maxiGoldAfter != null)
                    message.maxiGoldAfter = object.maxiGoldAfter >>> 0;
                if (object.income) {
                    if (!Array.isArray(object.income))
                        throw TypeError(".wm5.protobuf.ReceiveMaxiGoldResponse.income: array expected");
                    message.income = [];
                    for (let i = 0; i < object.income.length; ++i) {
                        if (typeof object.income[i] !== "object")
                            throw TypeError(".wm5.protobuf.ReceiveMaxiGoldResponse.income: object expected");
                        message.income[i] = $root.wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry.fromObject(object.income[i]);
                    }
                }
                if (object.ownedUserItems) {
                    if (!Array.isArray(object.ownedUserItems))
                        throw TypeError(".wm5.protobuf.ReceiveMaxiGoldResponse.ownedUserItems: array expected");
                    message.ownedUserItems = [];
                    for (let i = 0; i < object.ownedUserItems.length; ++i) {
                        if (typeof object.ownedUserItems[i] !== "object")
                            throw TypeError(".wm5.protobuf.ReceiveMaxiGoldResponse.ownedUserItems: object expected");
                        message.ownedUserItems[i] = $root.wm5.protobuf.UserItem.fromObject(object.ownedUserItems[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a ReceiveMaxiGoldResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.ReceiveMaxiGoldResponse
             * @static
             * @param {wm5.protobuf.ReceiveMaxiGoldResponse} message ReceiveMaxiGoldResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ReceiveMaxiGoldResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.income = [];
                    object.ownedUserItems = [];
                }
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.maxiGoldBefore = 0;
                    object.maxiGoldAfter = 0;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.maxiGoldBefore != null && message.hasOwnProperty("maxiGoldBefore"))
                    object.maxiGoldBefore = message.maxiGoldBefore;
                if (message.maxiGoldAfter != null && message.hasOwnProperty("maxiGoldAfter"))
                    object.maxiGoldAfter = message.maxiGoldAfter;
                if (message.income && message.income.length) {
                    object.income = [];
                    for (let j = 0; j < message.income.length; ++j)
                        object.income[j] = $root.wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry.toObject(message.income[j], options);
                }
                if (message.ownedUserItems && message.ownedUserItems.length) {
                    object.ownedUserItems = [];
                    for (let j = 0; j < message.ownedUserItems.length; ++j)
                        object.ownedUserItems[j] = $root.wm5.protobuf.UserItem.toObject(message.ownedUserItems[j], options);
                }
                return object;
            };

            /**
             * Converts this ReceiveMaxiGoldResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.ReceiveMaxiGoldResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ReceiveMaxiGoldResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ReceiveMaxiGoldResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.ReceiveMaxiGoldResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ReceiveMaxiGoldResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.ReceiveMaxiGoldResponse";
            };

            ReceiveMaxiGoldResponse.IncomeEntry = (function() {

                /**
                 * Properties of an IncomeEntry.
                 * @memberof wm5.protobuf.ReceiveMaxiGoldResponse
                 * @interface IIncomeEntry
                 * @property {number} datetime IncomeEntry datetime
                 * @property {boolean} isUtc IncomeEntry isUtc
                 * @property {wm5.protobuf.MaxiGoldIncomeType} incomeType IncomeEntry incomeType
                 * @property {number} amount IncomeEntry amount
                 */

                /**
                 * Constructs a new IncomeEntry.
                 * @memberof wm5.protobuf.ReceiveMaxiGoldResponse
                 * @classdesc Represents an IncomeEntry.
                 * @implements IIncomeEntry
                 * @constructor
                 * @param {wm5.protobuf.ReceiveMaxiGoldResponse.IIncomeEntry=} [properties] Properties to set
                 */
                function IncomeEntry(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * IncomeEntry datetime.
                 * @member {number} datetime
                 * @memberof wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry
                 * @instance
                 */
                IncomeEntry.prototype.datetime = 0;

                /**
                 * IncomeEntry isUtc.
                 * @member {boolean} isUtc
                 * @memberof wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry
                 * @instance
                 */
                IncomeEntry.prototype.isUtc = false;

                /**
                 * IncomeEntry incomeType.
                 * @member {wm5.protobuf.MaxiGoldIncomeType} incomeType
                 * @memberof wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry
                 * @instance
                 */
                IncomeEntry.prototype.incomeType = 1;

                /**
                 * IncomeEntry amount.
                 * @member {number} amount
                 * @memberof wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry
                 * @instance
                 */
                IncomeEntry.prototype.amount = 0;

                /**
                 * Creates a new IncomeEntry instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry
                 * @static
                 * @param {wm5.protobuf.ReceiveMaxiGoldResponse.IIncomeEntry=} [properties] Properties to set
                 * @returns {wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry} IncomeEntry instance
                 */
                IncomeEntry.create = function create(properties) {
                    return new IncomeEntry(properties);
                };

                /**
                 * Encodes the specified IncomeEntry message. Does not implicitly {@link wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry
                 * @static
                 * @param {wm5.protobuf.ReceiveMaxiGoldResponse.IIncomeEntry} message IncomeEntry message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                IncomeEntry.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.datetime);
                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isUtc);
                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.incomeType);
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.amount);
                    return writer;
                };

                /**
                 * Encodes the specified IncomeEntry message, length delimited. Does not implicitly {@link wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry
                 * @static
                 * @param {wm5.protobuf.ReceiveMaxiGoldResponse.IIncomeEntry} message IncomeEntry message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                IncomeEntry.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an IncomeEntry message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry} IncomeEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                IncomeEntry.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.datetime = reader.uint32();
                                break;
                            }
                        case 2: {
                                message.isUtc = reader.bool();
                                break;
                            }
                        case 3: {
                                message.incomeType = reader.int32();
                                break;
                            }
                        case 4: {
                                message.amount = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("datetime"))
                        throw $util.ProtocolError("missing required 'datetime'", { instance: message });
                    if (!message.hasOwnProperty("isUtc"))
                        throw $util.ProtocolError("missing required 'isUtc'", { instance: message });
                    if (!message.hasOwnProperty("incomeType"))
                        throw $util.ProtocolError("missing required 'incomeType'", { instance: message });
                    if (!message.hasOwnProperty("amount"))
                        throw $util.ProtocolError("missing required 'amount'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an IncomeEntry message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry} IncomeEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                IncomeEntry.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an IncomeEntry message.
                 * @function verify
                 * @memberof wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                IncomeEntry.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.datetime))
                        return "datetime: integer expected";
                    if (typeof message.isUtc !== "boolean")
                        return "isUtc: boolean expected";
                    switch (message.incomeType) {
                    default:
                        return "incomeType: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                        break;
                    }
                    if (!$util.isInteger(message.amount))
                        return "amount: integer expected";
                    return null;
                };

                /**
                 * Creates an IncomeEntry message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry} IncomeEntry
                 */
                IncomeEntry.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry)
                        return object;
                    let message = new $root.wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry();
                    if (object.datetime != null)
                        message.datetime = object.datetime >>> 0;
                    if (object.isUtc != null)
                        message.isUtc = Boolean(object.isUtc);
                    switch (object.incomeType) {
                    default:
                        if (typeof object.incomeType === "number") {
                            message.incomeType = object.incomeType;
                            break;
                        }
                        break;
                    case "INCOME_HP600_SENT":
                    case 1:
                        message.incomeType = 1;
                        break;
                    case "INCOME_HP600_RECEIVED":
                    case 2:
                        message.incomeType = 2;
                        break;
                    case "INCOME_GHOST_BATTLE":
                    case 3:
                        message.incomeType = 3;
                        break;
                    case "INCOME_REPAYING_CAMPAIGN":
                    case 4:
                        message.incomeType = 4;
                        break;
                    case "INCOME_WEBSITE":
                    case 5:
                        message.incomeType = 5;
                        break;
                    case "INCOME_TRANSFERRED":
                    case 6:
                        message.incomeType = 6;
                        break;
                    }
                    if (object.amount != null)
                        message.amount = object.amount >>> 0;
                    return message;
                };

                /**
                 * Creates a plain object from an IncomeEntry message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry
                 * @static
                 * @param {wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry} message IncomeEntry
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                IncomeEntry.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.datetime = 0;
                        object.isUtc = false;
                        object.incomeType = options.enums === String ? "INCOME_HP600_SENT" : 1;
                        object.amount = 0;
                    }
                    if (message.datetime != null && message.hasOwnProperty("datetime"))
                        object.datetime = message.datetime;
                    if (message.isUtc != null && message.hasOwnProperty("isUtc"))
                        object.isUtc = message.isUtc;
                    if (message.incomeType != null && message.hasOwnProperty("incomeType"))
                        object.incomeType = options.enums === String ? $root.wm5.protobuf.MaxiGoldIncomeType[message.incomeType] === undefined ? message.incomeType : $root.wm5.protobuf.MaxiGoldIncomeType[message.incomeType] : message.incomeType;
                    if (message.amount != null && message.hasOwnProperty("amount"))
                        object.amount = message.amount;
                    return object;
                };

                /**
                 * Converts this IncomeEntry to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                IncomeEntry.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for IncomeEntry
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                IncomeEntry.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.ReceiveMaxiGoldResponse.IncomeEntry";
                };

                return IncomeEntry;
            })();

            return ReceiveMaxiGoldResponse;
        })();

        protobuf.StartTransferRequest = (function() {

            /**
             * Properties of a StartTransferRequest.
             * @memberof wm5.protobuf
             * @interface IStartTransferRequest
             * @property {number} banapassportAmId StartTransferRequest banapassportAmId
             */

            /**
             * Constructs a new StartTransferRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a StartTransferRequest.
             * @implements IStartTransferRequest
             * @constructor
             * @param {wm5.protobuf.IStartTransferRequest=} [properties] Properties to set
             */
            function StartTransferRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * StartTransferRequest banapassportAmId.
             * @member {number} banapassportAmId
             * @memberof wm5.protobuf.StartTransferRequest
             * @instance
             */
            StartTransferRequest.prototype.banapassportAmId = 0;

            /**
             * Creates a new StartTransferRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.StartTransferRequest
             * @static
             * @param {wm5.protobuf.IStartTransferRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.StartTransferRequest} StartTransferRequest instance
             */
            StartTransferRequest.create = function create(properties) {
                return new StartTransferRequest(properties);
            };

            /**
             * Encodes the specified StartTransferRequest message. Does not implicitly {@link wm5.protobuf.StartTransferRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.StartTransferRequest
             * @static
             * @param {wm5.protobuf.IStartTransferRequest} message StartTransferRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StartTransferRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.banapassportAmId);
                return writer;
            };

            /**
             * Encodes the specified StartTransferRequest message, length delimited. Does not implicitly {@link wm5.protobuf.StartTransferRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.StartTransferRequest
             * @static
             * @param {wm5.protobuf.IStartTransferRequest} message StartTransferRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StartTransferRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a StartTransferRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.StartTransferRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.StartTransferRequest} StartTransferRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StartTransferRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.StartTransferRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.banapassportAmId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("banapassportAmId"))
                    throw $util.ProtocolError("missing required 'banapassportAmId'", { instance: message });
                return message;
            };

            /**
             * Decodes a StartTransferRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.StartTransferRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.StartTransferRequest} StartTransferRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StartTransferRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a StartTransferRequest message.
             * @function verify
             * @memberof wm5.protobuf.StartTransferRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StartTransferRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.banapassportAmId))
                    return "banapassportAmId: integer expected";
                return null;
            };

            /**
             * Creates a StartTransferRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.StartTransferRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.StartTransferRequest} StartTransferRequest
             */
            StartTransferRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.StartTransferRequest)
                    return object;
                let message = new $root.wm5.protobuf.StartTransferRequest();
                if (object.banapassportAmId != null)
                    message.banapassportAmId = object.banapassportAmId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a StartTransferRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.StartTransferRequest
             * @static
             * @param {wm5.protobuf.StartTransferRequest} message StartTransferRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StartTransferRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.banapassportAmId = 0;
                if (message.banapassportAmId != null && message.hasOwnProperty("banapassportAmId"))
                    object.banapassportAmId = message.banapassportAmId;
                return object;
            };

            /**
             * Converts this StartTransferRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.StartTransferRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StartTransferRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for StartTransferRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.StartTransferRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            StartTransferRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.StartTransferRequest";
            };

            return StartTransferRequest;
        })();

        protobuf.StartTransferResponse = (function() {

            /**
             * Properties of a StartTransferResponse.
             * @memberof wm5.protobuf
             * @interface IStartTransferResponse
             * @property {wm5.protobuf.ErrorCode} error StartTransferResponse error
             * @property {number} userId StartTransferResponse userId
             * @property {number|null} [pollingInterval] StartTransferResponse pollingInterval
             */

            /**
             * Constructs a new StartTransferResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a StartTransferResponse.
             * @implements IStartTransferResponse
             * @constructor
             * @param {wm5.protobuf.IStartTransferResponse=} [properties] Properties to set
             */
            function StartTransferResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * StartTransferResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.StartTransferResponse
             * @instance
             */
            StartTransferResponse.prototype.error = 0;

            /**
             * StartTransferResponse userId.
             * @member {number} userId
             * @memberof wm5.protobuf.StartTransferResponse
             * @instance
             */
            StartTransferResponse.prototype.userId = 0;

            /**
             * StartTransferResponse pollingInterval.
             * @member {number} pollingInterval
             * @memberof wm5.protobuf.StartTransferResponse
             * @instance
             */
            StartTransferResponse.prototype.pollingInterval = 0;

            /**
             * Creates a new StartTransferResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.StartTransferResponse
             * @static
             * @param {wm5.protobuf.IStartTransferResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.StartTransferResponse} StartTransferResponse instance
             */
            StartTransferResponse.create = function create(properties) {
                return new StartTransferResponse(properties);
            };

            /**
             * Encodes the specified StartTransferResponse message. Does not implicitly {@link wm5.protobuf.StartTransferResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.StartTransferResponse
             * @static
             * @param {wm5.protobuf.IStartTransferResponse} message StartTransferResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StartTransferResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.userId);
                if (message.pollingInterval != null && Object.hasOwnProperty.call(message, "pollingInterval"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.pollingInterval);
                return writer;
            };

            /**
             * Encodes the specified StartTransferResponse message, length delimited. Does not implicitly {@link wm5.protobuf.StartTransferResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.StartTransferResponse
             * @static
             * @param {wm5.protobuf.IStartTransferResponse} message StartTransferResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StartTransferResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a StartTransferResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.StartTransferResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.StartTransferResponse} StartTransferResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StartTransferResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.StartTransferResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.pollingInterval = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                return message;
            };

            /**
             * Decodes a StartTransferResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.StartTransferResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.StartTransferResponse} StartTransferResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StartTransferResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a StartTransferResponse message.
             * @function verify
             * @memberof wm5.protobuf.StartTransferResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StartTransferResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                if (message.pollingInterval != null && message.hasOwnProperty("pollingInterval"))
                    if (!$util.isInteger(message.pollingInterval))
                        return "pollingInterval: integer expected";
                return null;
            };

            /**
             * Creates a StartTransferResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.StartTransferResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.StartTransferResponse} StartTransferResponse
             */
            StartTransferResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.StartTransferResponse)
                    return object;
                let message = new $root.wm5.protobuf.StartTransferResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.pollingInterval != null)
                    message.pollingInterval = object.pollingInterval >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a StartTransferResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.StartTransferResponse
             * @static
             * @param {wm5.protobuf.StartTransferResponse} message StartTransferResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StartTransferResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.userId = 0;
                    object.pollingInterval = 0;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.pollingInterval != null && message.hasOwnProperty("pollingInterval"))
                    object.pollingInterval = message.pollingInterval;
                return object;
            };

            /**
             * Converts this StartTransferResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.StartTransferResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StartTransferResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for StartTransferResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.StartTransferResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            StartTransferResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.StartTransferResponse";
            };

            return StartTransferResponse;
        })();

        protobuf.RenameCarRequest = (function() {

            /**
             * Properties of a RenameCarRequest.
             * @memberof wm5.protobuf
             * @interface IRenameCarRequest
             * @property {number} carId RenameCarRequest carId
             * @property {string} name RenameCarRequest name
             */

            /**
             * Constructs a new RenameCarRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a RenameCarRequest.
             * @implements IRenameCarRequest
             * @constructor
             * @param {wm5.protobuf.IRenameCarRequest=} [properties] Properties to set
             */
            function RenameCarRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * RenameCarRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.RenameCarRequest
             * @instance
             */
            RenameCarRequest.prototype.carId = 0;

            /**
             * RenameCarRequest name.
             * @member {string} name
             * @memberof wm5.protobuf.RenameCarRequest
             * @instance
             */
            RenameCarRequest.prototype.name = "";

            /**
             * Creates a new RenameCarRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.RenameCarRequest
             * @static
             * @param {wm5.protobuf.IRenameCarRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.RenameCarRequest} RenameCarRequest instance
             */
            RenameCarRequest.create = function create(properties) {
                return new RenameCarRequest(properties);
            };

            /**
             * Encodes the specified RenameCarRequest message. Does not implicitly {@link wm5.protobuf.RenameCarRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.RenameCarRequest
             * @static
             * @param {wm5.protobuf.IRenameCarRequest} message RenameCarRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RenameCarRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                return writer;
            };

            /**
             * Encodes the specified RenameCarRequest message, length delimited. Does not implicitly {@link wm5.protobuf.RenameCarRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.RenameCarRequest
             * @static
             * @param {wm5.protobuf.IRenameCarRequest} message RenameCarRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RenameCarRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RenameCarRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.RenameCarRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.RenameCarRequest} RenameCarRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RenameCarRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.RenameCarRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.name = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                if (!message.hasOwnProperty("name"))
                    throw $util.ProtocolError("missing required 'name'", { instance: message });
                return message;
            };

            /**
             * Decodes a RenameCarRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.RenameCarRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.RenameCarRequest} RenameCarRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RenameCarRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RenameCarRequest message.
             * @function verify
             * @memberof wm5.protobuf.RenameCarRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RenameCarRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                if (!$util.isString(message.name))
                    return "name: string expected";
                return null;
            };

            /**
             * Creates a RenameCarRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.RenameCarRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.RenameCarRequest} RenameCarRequest
             */
            RenameCarRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.RenameCarRequest)
                    return object;
                let message = new $root.wm5.protobuf.RenameCarRequest();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.name != null)
                    message.name = String(object.name);
                return message;
            };

            /**
             * Creates a plain object from a RenameCarRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.RenameCarRequest
             * @static
             * @param {wm5.protobuf.RenameCarRequest} message RenameCarRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RenameCarRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.carId = 0;
                    object.name = "";
                }
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                return object;
            };

            /**
             * Converts this RenameCarRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.RenameCarRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RenameCarRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for RenameCarRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.RenameCarRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RenameCarRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.RenameCarRequest";
            };

            return RenameCarRequest;
        })();

        protobuf.RenameCarResponse = (function() {

            /**
             * Properties of a RenameCarResponse.
             * @memberof wm5.protobuf
             * @interface IRenameCarResponse
             * @property {wm5.protobuf.ErrorCode} error RenameCarResponse error
             */

            /**
             * Constructs a new RenameCarResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a RenameCarResponse.
             * @implements IRenameCarResponse
             * @constructor
             * @param {wm5.protobuf.IRenameCarResponse=} [properties] Properties to set
             */
            function RenameCarResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * RenameCarResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.RenameCarResponse
             * @instance
             */
            RenameCarResponse.prototype.error = 0;

            /**
             * Creates a new RenameCarResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.RenameCarResponse
             * @static
             * @param {wm5.protobuf.IRenameCarResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.RenameCarResponse} RenameCarResponse instance
             */
            RenameCarResponse.create = function create(properties) {
                return new RenameCarResponse(properties);
            };

            /**
             * Encodes the specified RenameCarResponse message. Does not implicitly {@link wm5.protobuf.RenameCarResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.RenameCarResponse
             * @static
             * @param {wm5.protobuf.IRenameCarResponse} message RenameCarResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RenameCarResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified RenameCarResponse message, length delimited. Does not implicitly {@link wm5.protobuf.RenameCarResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.RenameCarResponse
             * @static
             * @param {wm5.protobuf.IRenameCarResponse} message RenameCarResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RenameCarResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RenameCarResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.RenameCarResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.RenameCarResponse} RenameCarResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RenameCarResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.RenameCarResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a RenameCarResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.RenameCarResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.RenameCarResponse} RenameCarResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RenameCarResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RenameCarResponse message.
             * @function verify
             * @memberof wm5.protobuf.RenameCarResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RenameCarResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a RenameCarResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.RenameCarResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.RenameCarResponse} RenameCarResponse
             */
            RenameCarResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.RenameCarResponse)
                    return object;
                let message = new $root.wm5.protobuf.RenameCarResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a RenameCarResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.RenameCarResponse
             * @static
             * @param {wm5.protobuf.RenameCarResponse} message RenameCarResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RenameCarResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this RenameCarResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.RenameCarResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RenameCarResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for RenameCarResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.RenameCarResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RenameCarResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.RenameCarResponse";
            };

            return RenameCarResponse;
        })();

        protobuf.RenameTeamRequest = (function() {

            /**
             * Properties of a RenameTeamRequest.
             * @memberof wm5.protobuf
             * @interface IRenameTeamRequest
             * @property {number} userId RenameTeamRequest userId
             * @property {string} teamName RenameTeamRequest teamName
             */

            /**
             * Constructs a new RenameTeamRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a RenameTeamRequest.
             * @implements IRenameTeamRequest
             * @constructor
             * @param {wm5.protobuf.IRenameTeamRequest=} [properties] Properties to set
             */
            function RenameTeamRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * RenameTeamRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.RenameTeamRequest
             * @instance
             */
            RenameTeamRequest.prototype.userId = 0;

            /**
             * RenameTeamRequest teamName.
             * @member {string} teamName
             * @memberof wm5.protobuf.RenameTeamRequest
             * @instance
             */
            RenameTeamRequest.prototype.teamName = "";

            /**
             * Creates a new RenameTeamRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.RenameTeamRequest
             * @static
             * @param {wm5.protobuf.IRenameTeamRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.RenameTeamRequest} RenameTeamRequest instance
             */
            RenameTeamRequest.create = function create(properties) {
                return new RenameTeamRequest(properties);
            };

            /**
             * Encodes the specified RenameTeamRequest message. Does not implicitly {@link wm5.protobuf.RenameTeamRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.RenameTeamRequest
             * @static
             * @param {wm5.protobuf.IRenameTeamRequest} message RenameTeamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RenameTeamRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.teamName);
                return writer;
            };

            /**
             * Encodes the specified RenameTeamRequest message, length delimited. Does not implicitly {@link wm5.protobuf.RenameTeamRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.RenameTeamRequest
             * @static
             * @param {wm5.protobuf.IRenameTeamRequest} message RenameTeamRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RenameTeamRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RenameTeamRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.RenameTeamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.RenameTeamRequest} RenameTeamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RenameTeamRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.RenameTeamRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.teamName = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                if (!message.hasOwnProperty("teamName"))
                    throw $util.ProtocolError("missing required 'teamName'", { instance: message });
                return message;
            };

            /**
             * Decodes a RenameTeamRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.RenameTeamRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.RenameTeamRequest} RenameTeamRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RenameTeamRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RenameTeamRequest message.
             * @function verify
             * @memberof wm5.protobuf.RenameTeamRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RenameTeamRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                if (!$util.isString(message.teamName))
                    return "teamName: string expected";
                return null;
            };

            /**
             * Creates a RenameTeamRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.RenameTeamRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.RenameTeamRequest} RenameTeamRequest
             */
            RenameTeamRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.RenameTeamRequest)
                    return object;
                let message = new $root.wm5.protobuf.RenameTeamRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.teamName != null)
                    message.teamName = String(object.teamName);
                return message;
            };

            /**
             * Creates a plain object from a RenameTeamRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.RenameTeamRequest
             * @static
             * @param {wm5.protobuf.RenameTeamRequest} message RenameTeamRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RenameTeamRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.userId = 0;
                    object.teamName = "";
                }
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.teamName != null && message.hasOwnProperty("teamName"))
                    object.teamName = message.teamName;
                return object;
            };

            /**
             * Converts this RenameTeamRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.RenameTeamRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RenameTeamRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for RenameTeamRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.RenameTeamRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RenameTeamRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.RenameTeamRequest";
            };

            return RenameTeamRequest;
        })();

        protobuf.RenameTeamResponse = (function() {

            /**
             * Properties of a RenameTeamResponse.
             * @memberof wm5.protobuf
             * @interface IRenameTeamResponse
             * @property {wm5.protobuf.ErrorCode} error RenameTeamResponse error
             */

            /**
             * Constructs a new RenameTeamResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a RenameTeamResponse.
             * @implements IRenameTeamResponse
             * @constructor
             * @param {wm5.protobuf.IRenameTeamResponse=} [properties] Properties to set
             */
            function RenameTeamResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * RenameTeamResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.RenameTeamResponse
             * @instance
             */
            RenameTeamResponse.prototype.error = 0;

            /**
             * Creates a new RenameTeamResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.RenameTeamResponse
             * @static
             * @param {wm5.protobuf.IRenameTeamResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.RenameTeamResponse} RenameTeamResponse instance
             */
            RenameTeamResponse.create = function create(properties) {
                return new RenameTeamResponse(properties);
            };

            /**
             * Encodes the specified RenameTeamResponse message. Does not implicitly {@link wm5.protobuf.RenameTeamResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.RenameTeamResponse
             * @static
             * @param {wm5.protobuf.IRenameTeamResponse} message RenameTeamResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RenameTeamResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified RenameTeamResponse message, length delimited. Does not implicitly {@link wm5.protobuf.RenameTeamResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.RenameTeamResponse
             * @static
             * @param {wm5.protobuf.IRenameTeamResponse} message RenameTeamResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RenameTeamResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RenameTeamResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.RenameTeamResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.RenameTeamResponse} RenameTeamResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RenameTeamResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.RenameTeamResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a RenameTeamResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.RenameTeamResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.RenameTeamResponse} RenameTeamResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RenameTeamResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RenameTeamResponse message.
             * @function verify
             * @memberof wm5.protobuf.RenameTeamResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RenameTeamResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a RenameTeamResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.RenameTeamResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.RenameTeamResponse} RenameTeamResponse
             */
            RenameTeamResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.RenameTeamResponse)
                    return object;
                let message = new $root.wm5.protobuf.RenameTeamResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a RenameTeamResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.RenameTeamResponse
             * @static
             * @param {wm5.protobuf.RenameTeamResponse} message RenameTeamResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RenameTeamResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this RenameTeamResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.RenameTeamResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RenameTeamResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for RenameTeamResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.RenameTeamResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RenameTeamResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.RenameTeamResponse";
            };

            return RenameTeamResponse;
        })();

        protobuf.LoadBingoInformationRequest = (function() {

            /**
             * Properties of a LoadBingoInformationRequest.
             * @memberof wm5.protobuf
             * @interface ILoadBingoInformationRequest
             * @property {number} carId LoadBingoInformationRequest carId
             * @property {number} bingoEventId LoadBingoInformationRequest bingoEventId
             */

            /**
             * Constructs a new LoadBingoInformationRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadBingoInformationRequest.
             * @implements ILoadBingoInformationRequest
             * @constructor
             * @param {wm5.protobuf.ILoadBingoInformationRequest=} [properties] Properties to set
             */
            function LoadBingoInformationRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadBingoInformationRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.LoadBingoInformationRequest
             * @instance
             */
            LoadBingoInformationRequest.prototype.carId = 0;

            /**
             * LoadBingoInformationRequest bingoEventId.
             * @member {number} bingoEventId
             * @memberof wm5.protobuf.LoadBingoInformationRequest
             * @instance
             */
            LoadBingoInformationRequest.prototype.bingoEventId = 0;

            /**
             * Creates a new LoadBingoInformationRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadBingoInformationRequest
             * @static
             * @param {wm5.protobuf.ILoadBingoInformationRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadBingoInformationRequest} LoadBingoInformationRequest instance
             */
            LoadBingoInformationRequest.create = function create(properties) {
                return new LoadBingoInformationRequest(properties);
            };

            /**
             * Encodes the specified LoadBingoInformationRequest message. Does not implicitly {@link wm5.protobuf.LoadBingoInformationRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadBingoInformationRequest
             * @static
             * @param {wm5.protobuf.ILoadBingoInformationRequest} message LoadBingoInformationRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadBingoInformationRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.bingoEventId);
                return writer;
            };

            /**
             * Encodes the specified LoadBingoInformationRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadBingoInformationRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadBingoInformationRequest
             * @static
             * @param {wm5.protobuf.ILoadBingoInformationRequest} message LoadBingoInformationRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadBingoInformationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadBingoInformationRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadBingoInformationRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadBingoInformationRequest} LoadBingoInformationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadBingoInformationRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadBingoInformationRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.bingoEventId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                if (!message.hasOwnProperty("bingoEventId"))
                    throw $util.ProtocolError("missing required 'bingoEventId'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadBingoInformationRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadBingoInformationRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadBingoInformationRequest} LoadBingoInformationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadBingoInformationRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadBingoInformationRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadBingoInformationRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadBingoInformationRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                if (!$util.isInteger(message.bingoEventId))
                    return "bingoEventId: integer expected";
                return null;
            };

            /**
             * Creates a LoadBingoInformationRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadBingoInformationRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadBingoInformationRequest} LoadBingoInformationRequest
             */
            LoadBingoInformationRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadBingoInformationRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadBingoInformationRequest();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.bingoEventId != null)
                    message.bingoEventId = object.bingoEventId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadBingoInformationRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadBingoInformationRequest
             * @static
             * @param {wm5.protobuf.LoadBingoInformationRequest} message LoadBingoInformationRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadBingoInformationRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.carId = 0;
                    object.bingoEventId = 0;
                }
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.bingoEventId != null && message.hasOwnProperty("bingoEventId"))
                    object.bingoEventId = message.bingoEventId;
                return object;
            };

            /**
             * Converts this LoadBingoInformationRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadBingoInformationRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadBingoInformationRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadBingoInformationRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadBingoInformationRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadBingoInformationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadBingoInformationRequest";
            };

            return LoadBingoInformationRequest;
        })();

        protobuf.LoadBingoInformationResponse = (function() {

            /**
             * Properties of a LoadBingoInformationResponse.
             * @memberof wm5.protobuf
             * @interface ILoadBingoInformationResponse
             * @property {wm5.protobuf.ErrorCode} error LoadBingoInformationResponse error
             * @property {wm5.protobuf.IBingoSchedule} bingoSchedule LoadBingoInformationResponse bingoSchedule
             * @property {wm5.protobuf.IBingoCard|null} [bingoCard] LoadBingoInformationResponse bingoCard
             * @property {Array.<boolean>|null} [mark] LoadBingoInformationResponse mark
             * @property {number} numOfCompletions LoadBingoInformationResponse numOfCompletions
             * @property {Array.<string>|null} [stockedNames] LoadBingoInformationResponse stockedNames
             * @property {Array.<number>|null} [carIdsOfStockedName] LoadBingoInformationResponse carIdsOfStockedName
             * @property {number} numOfDeletions LoadBingoInformationResponse numOfDeletions
             * @property {boolean} announcedCompletion LoadBingoInformationResponse announcedCompletion
             */

            /**
             * Constructs a new LoadBingoInformationResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadBingoInformationResponse.
             * @implements ILoadBingoInformationResponse
             * @constructor
             * @param {wm5.protobuf.ILoadBingoInformationResponse=} [properties] Properties to set
             */
            function LoadBingoInformationResponse(properties) {
                this.mark = [];
                this.stockedNames = [];
                this.carIdsOfStockedName = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadBingoInformationResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @instance
             */
            LoadBingoInformationResponse.prototype.error = 0;

            /**
             * LoadBingoInformationResponse bingoSchedule.
             * @member {wm5.protobuf.IBingoSchedule} bingoSchedule
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @instance
             */
            LoadBingoInformationResponse.prototype.bingoSchedule = null;

            /**
             * LoadBingoInformationResponse bingoCard.
             * @member {wm5.protobuf.IBingoCard|null|undefined} bingoCard
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @instance
             */
            LoadBingoInformationResponse.prototype.bingoCard = null;

            /**
             * LoadBingoInformationResponse mark.
             * @member {Array.<boolean>} mark
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @instance
             */
            LoadBingoInformationResponse.prototype.mark = $util.emptyArray;

            /**
             * LoadBingoInformationResponse numOfCompletions.
             * @member {number} numOfCompletions
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @instance
             */
            LoadBingoInformationResponse.prototype.numOfCompletions = 0;

            /**
             * LoadBingoInformationResponse stockedNames.
             * @member {Array.<string>} stockedNames
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @instance
             */
            LoadBingoInformationResponse.prototype.stockedNames = $util.emptyArray;

            /**
             * LoadBingoInformationResponse carIdsOfStockedName.
             * @member {Array.<number>} carIdsOfStockedName
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @instance
             */
            LoadBingoInformationResponse.prototype.carIdsOfStockedName = $util.emptyArray;

            /**
             * LoadBingoInformationResponse numOfDeletions.
             * @member {number} numOfDeletions
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @instance
             */
            LoadBingoInformationResponse.prototype.numOfDeletions = 0;

            /**
             * LoadBingoInformationResponse announcedCompletion.
             * @member {boolean} announcedCompletion
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @instance
             */
            LoadBingoInformationResponse.prototype.announcedCompletion = false;

            /**
             * Creates a new LoadBingoInformationResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @static
             * @param {wm5.protobuf.ILoadBingoInformationResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadBingoInformationResponse} LoadBingoInformationResponse instance
             */
            LoadBingoInformationResponse.create = function create(properties) {
                return new LoadBingoInformationResponse(properties);
            };

            /**
             * Encodes the specified LoadBingoInformationResponse message. Does not implicitly {@link wm5.protobuf.LoadBingoInformationResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @static
             * @param {wm5.protobuf.ILoadBingoInformationResponse} message LoadBingoInformationResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadBingoInformationResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                $root.wm5.protobuf.BingoSchedule.encode(message.bingoSchedule, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.bingoCard != null && Object.hasOwnProperty.call(message, "bingoCard"))
                    $root.wm5.protobuf.BingoCard.encode(message.bingoCard, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.mark != null && message.mark.length)
                    for (let i = 0; i < message.mark.length; ++i)
                        writer.uint32(/* id 4, wireType 0 =*/32).bool(message.mark[i]);
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.numOfCompletions);
                if (message.stockedNames != null && message.stockedNames.length)
                    for (let i = 0; i < message.stockedNames.length; ++i)
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.stockedNames[i]);
                if (message.carIdsOfStockedName != null && message.carIdsOfStockedName.length)
                    for (let i = 0; i < message.carIdsOfStockedName.length; ++i)
                        writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.carIdsOfStockedName[i]);
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.numOfDeletions);
                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.announcedCompletion);
                return writer;
            };

            /**
             * Encodes the specified LoadBingoInformationResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadBingoInformationResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @static
             * @param {wm5.protobuf.ILoadBingoInformationResponse} message LoadBingoInformationResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadBingoInformationResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadBingoInformationResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadBingoInformationResponse} LoadBingoInformationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadBingoInformationResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadBingoInformationResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.bingoSchedule = $root.wm5.protobuf.BingoSchedule.decode(reader, reader.uint32());
                            break;
                        }
                    case 3: {
                            message.bingoCard = $root.wm5.protobuf.BingoCard.decode(reader, reader.uint32());
                            break;
                        }
                    case 4: {
                            if (!(message.mark && message.mark.length))
                                message.mark = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.mark.push(reader.bool());
                            } else
                                message.mark.push(reader.bool());
                            break;
                        }
                    case 5: {
                            message.numOfCompletions = reader.uint32();
                            break;
                        }
                    case 6: {
                            if (!(message.stockedNames && message.stockedNames.length))
                                message.stockedNames = [];
                            message.stockedNames.push(reader.string());
                            break;
                        }
                    case 7: {
                            if (!(message.carIdsOfStockedName && message.carIdsOfStockedName.length))
                                message.carIdsOfStockedName = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.carIdsOfStockedName.push(reader.uint32());
                            } else
                                message.carIdsOfStockedName.push(reader.uint32());
                            break;
                        }
                    case 8: {
                            message.numOfDeletions = reader.uint32();
                            break;
                        }
                    case 9: {
                            message.announcedCompletion = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("bingoSchedule"))
                    throw $util.ProtocolError("missing required 'bingoSchedule'", { instance: message });
                if (!message.hasOwnProperty("numOfCompletions"))
                    throw $util.ProtocolError("missing required 'numOfCompletions'", { instance: message });
                if (!message.hasOwnProperty("numOfDeletions"))
                    throw $util.ProtocolError("missing required 'numOfDeletions'", { instance: message });
                if (!message.hasOwnProperty("announcedCompletion"))
                    throw $util.ProtocolError("missing required 'announcedCompletion'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadBingoInformationResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadBingoInformationResponse} LoadBingoInformationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadBingoInformationResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadBingoInformationResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadBingoInformationResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                {
                    let error = $root.wm5.protobuf.BingoSchedule.verify(message.bingoSchedule);
                    if (error)
                        return "bingoSchedule." + error;
                }
                if (message.bingoCard != null && message.hasOwnProperty("bingoCard")) {
                    let error = $root.wm5.protobuf.BingoCard.verify(message.bingoCard);
                    if (error)
                        return "bingoCard." + error;
                }
                if (message.mark != null && message.hasOwnProperty("mark")) {
                    if (!Array.isArray(message.mark))
                        return "mark: array expected";
                    for (let i = 0; i < message.mark.length; ++i)
                        if (typeof message.mark[i] !== "boolean")
                            return "mark: boolean[] expected";
                }
                if (!$util.isInteger(message.numOfCompletions))
                    return "numOfCompletions: integer expected";
                if (message.stockedNames != null && message.hasOwnProperty("stockedNames")) {
                    if (!Array.isArray(message.stockedNames))
                        return "stockedNames: array expected";
                    for (let i = 0; i < message.stockedNames.length; ++i)
                        if (!$util.isString(message.stockedNames[i]))
                            return "stockedNames: string[] expected";
                }
                if (message.carIdsOfStockedName != null && message.hasOwnProperty("carIdsOfStockedName")) {
                    if (!Array.isArray(message.carIdsOfStockedName))
                        return "carIdsOfStockedName: array expected";
                    for (let i = 0; i < message.carIdsOfStockedName.length; ++i)
                        if (!$util.isInteger(message.carIdsOfStockedName[i]))
                            return "carIdsOfStockedName: integer[] expected";
                }
                if (!$util.isInteger(message.numOfDeletions))
                    return "numOfDeletions: integer expected";
                if (typeof message.announcedCompletion !== "boolean")
                    return "announcedCompletion: boolean expected";
                return null;
            };

            /**
             * Creates a LoadBingoInformationResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadBingoInformationResponse} LoadBingoInformationResponse
             */
            LoadBingoInformationResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadBingoInformationResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadBingoInformationResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.bingoSchedule != null) {
                    if (typeof object.bingoSchedule !== "object")
                        throw TypeError(".wm5.protobuf.LoadBingoInformationResponse.bingoSchedule: object expected");
                    message.bingoSchedule = $root.wm5.protobuf.BingoSchedule.fromObject(object.bingoSchedule);
                }
                if (object.bingoCard != null) {
                    if (typeof object.bingoCard !== "object")
                        throw TypeError(".wm5.protobuf.LoadBingoInformationResponse.bingoCard: object expected");
                    message.bingoCard = $root.wm5.protobuf.BingoCard.fromObject(object.bingoCard);
                }
                if (object.mark) {
                    if (!Array.isArray(object.mark))
                        throw TypeError(".wm5.protobuf.LoadBingoInformationResponse.mark: array expected");
                    message.mark = [];
                    for (let i = 0; i < object.mark.length; ++i)
                        message.mark[i] = Boolean(object.mark[i]);
                }
                if (object.numOfCompletions != null)
                    message.numOfCompletions = object.numOfCompletions >>> 0;
                if (object.stockedNames) {
                    if (!Array.isArray(object.stockedNames))
                        throw TypeError(".wm5.protobuf.LoadBingoInformationResponse.stockedNames: array expected");
                    message.stockedNames = [];
                    for (let i = 0; i < object.stockedNames.length; ++i)
                        message.stockedNames[i] = String(object.stockedNames[i]);
                }
                if (object.carIdsOfStockedName) {
                    if (!Array.isArray(object.carIdsOfStockedName))
                        throw TypeError(".wm5.protobuf.LoadBingoInformationResponse.carIdsOfStockedName: array expected");
                    message.carIdsOfStockedName = [];
                    for (let i = 0; i < object.carIdsOfStockedName.length; ++i)
                        message.carIdsOfStockedName[i] = object.carIdsOfStockedName[i] >>> 0;
                }
                if (object.numOfDeletions != null)
                    message.numOfDeletions = object.numOfDeletions >>> 0;
                if (object.announcedCompletion != null)
                    message.announcedCompletion = Boolean(object.announcedCompletion);
                return message;
            };

            /**
             * Creates a plain object from a LoadBingoInformationResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @static
             * @param {wm5.protobuf.LoadBingoInformationResponse} message LoadBingoInformationResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadBingoInformationResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.mark = [];
                    object.stockedNames = [];
                    object.carIdsOfStockedName = [];
                }
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.bingoSchedule = null;
                    object.bingoCard = null;
                    object.numOfCompletions = 0;
                    object.numOfDeletions = 0;
                    object.announcedCompletion = false;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.bingoSchedule != null && message.hasOwnProperty("bingoSchedule"))
                    object.bingoSchedule = $root.wm5.protobuf.BingoSchedule.toObject(message.bingoSchedule, options);
                if (message.bingoCard != null && message.hasOwnProperty("bingoCard"))
                    object.bingoCard = $root.wm5.protobuf.BingoCard.toObject(message.bingoCard, options);
                if (message.mark && message.mark.length) {
                    object.mark = [];
                    for (let j = 0; j < message.mark.length; ++j)
                        object.mark[j] = message.mark[j];
                }
                if (message.numOfCompletions != null && message.hasOwnProperty("numOfCompletions"))
                    object.numOfCompletions = message.numOfCompletions;
                if (message.stockedNames && message.stockedNames.length) {
                    object.stockedNames = [];
                    for (let j = 0; j < message.stockedNames.length; ++j)
                        object.stockedNames[j] = message.stockedNames[j];
                }
                if (message.carIdsOfStockedName && message.carIdsOfStockedName.length) {
                    object.carIdsOfStockedName = [];
                    for (let j = 0; j < message.carIdsOfStockedName.length; ++j)
                        object.carIdsOfStockedName[j] = message.carIdsOfStockedName[j];
                }
                if (message.numOfDeletions != null && message.hasOwnProperty("numOfDeletions"))
                    object.numOfDeletions = message.numOfDeletions;
                if (message.announcedCompletion != null && message.hasOwnProperty("announcedCompletion"))
                    object.announcedCompletion = message.announcedCompletion;
                return object;
            };

            /**
             * Converts this LoadBingoInformationResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadBingoInformationResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadBingoInformationResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadBingoInformationResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadBingoInformationResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadBingoInformationResponse";
            };

            return LoadBingoInformationResponse;
        })();

        protobuf.CreateBingoCardRequest = (function() {

            /**
             * Properties of a CreateBingoCardRequest.
             * @memberof wm5.protobuf
             * @interface ICreateBingoCardRequest
             * @property {number} carId CreateBingoCardRequest carId
             */

            /**
             * Constructs a new CreateBingoCardRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a CreateBingoCardRequest.
             * @implements ICreateBingoCardRequest
             * @constructor
             * @param {wm5.protobuf.ICreateBingoCardRequest=} [properties] Properties to set
             */
            function CreateBingoCardRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateBingoCardRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.CreateBingoCardRequest
             * @instance
             */
            CreateBingoCardRequest.prototype.carId = 0;

            /**
             * Creates a new CreateBingoCardRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CreateBingoCardRequest
             * @static
             * @param {wm5.protobuf.ICreateBingoCardRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.CreateBingoCardRequest} CreateBingoCardRequest instance
             */
            CreateBingoCardRequest.create = function create(properties) {
                return new CreateBingoCardRequest(properties);
            };

            /**
             * Encodes the specified CreateBingoCardRequest message. Does not implicitly {@link wm5.protobuf.CreateBingoCardRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CreateBingoCardRequest
             * @static
             * @param {wm5.protobuf.ICreateBingoCardRequest} message CreateBingoCardRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateBingoCardRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                return writer;
            };

            /**
             * Encodes the specified CreateBingoCardRequest message, length delimited. Does not implicitly {@link wm5.protobuf.CreateBingoCardRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CreateBingoCardRequest
             * @static
             * @param {wm5.protobuf.ICreateBingoCardRequest} message CreateBingoCardRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateBingoCardRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateBingoCardRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CreateBingoCardRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CreateBingoCardRequest} CreateBingoCardRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateBingoCardRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CreateBingoCardRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateBingoCardRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CreateBingoCardRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CreateBingoCardRequest} CreateBingoCardRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateBingoCardRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateBingoCardRequest message.
             * @function verify
             * @memberof wm5.protobuf.CreateBingoCardRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateBingoCardRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                return null;
            };

            /**
             * Creates a CreateBingoCardRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CreateBingoCardRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CreateBingoCardRequest} CreateBingoCardRequest
             */
            CreateBingoCardRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CreateBingoCardRequest)
                    return object;
                let message = new $root.wm5.protobuf.CreateBingoCardRequest();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a CreateBingoCardRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CreateBingoCardRequest
             * @static
             * @param {wm5.protobuf.CreateBingoCardRequest} message CreateBingoCardRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateBingoCardRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.carId = 0;
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                return object;
            };

            /**
             * Converts this CreateBingoCardRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CreateBingoCardRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateBingoCardRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateBingoCardRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.CreateBingoCardRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateBingoCardRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CreateBingoCardRequest";
            };

            return CreateBingoCardRequest;
        })();

        protobuf.CreateBingoCardResponse = (function() {

            /**
             * Properties of a CreateBingoCardResponse.
             * @memberof wm5.protobuf
             * @interface ICreateBingoCardResponse
             * @property {wm5.protobuf.ErrorCode} error CreateBingoCardResponse error
             * @property {wm5.protobuf.IBingoCard} bingoCard1 CreateBingoCardResponse bingoCard1
             * @property {wm5.protobuf.IBingoCard} bingoCard2 CreateBingoCardResponse bingoCard2
             * @property {wm5.protobuf.IBingoCard} bingoCard3 CreateBingoCardResponse bingoCard3
             */

            /**
             * Constructs a new CreateBingoCardResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a CreateBingoCardResponse.
             * @implements ICreateBingoCardResponse
             * @constructor
             * @param {wm5.protobuf.ICreateBingoCardResponse=} [properties] Properties to set
             */
            function CreateBingoCardResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateBingoCardResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.CreateBingoCardResponse
             * @instance
             */
            CreateBingoCardResponse.prototype.error = 0;

            /**
             * CreateBingoCardResponse bingoCard1.
             * @member {wm5.protobuf.IBingoCard} bingoCard1
             * @memberof wm5.protobuf.CreateBingoCardResponse
             * @instance
             */
            CreateBingoCardResponse.prototype.bingoCard1 = null;

            /**
             * CreateBingoCardResponse bingoCard2.
             * @member {wm5.protobuf.IBingoCard} bingoCard2
             * @memberof wm5.protobuf.CreateBingoCardResponse
             * @instance
             */
            CreateBingoCardResponse.prototype.bingoCard2 = null;

            /**
             * CreateBingoCardResponse bingoCard3.
             * @member {wm5.protobuf.IBingoCard} bingoCard3
             * @memberof wm5.protobuf.CreateBingoCardResponse
             * @instance
             */
            CreateBingoCardResponse.prototype.bingoCard3 = null;

            /**
             * Creates a new CreateBingoCardResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CreateBingoCardResponse
             * @static
             * @param {wm5.protobuf.ICreateBingoCardResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.CreateBingoCardResponse} CreateBingoCardResponse instance
             */
            CreateBingoCardResponse.create = function create(properties) {
                return new CreateBingoCardResponse(properties);
            };

            /**
             * Encodes the specified CreateBingoCardResponse message. Does not implicitly {@link wm5.protobuf.CreateBingoCardResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CreateBingoCardResponse
             * @static
             * @param {wm5.protobuf.ICreateBingoCardResponse} message CreateBingoCardResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateBingoCardResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                $root.wm5.protobuf.BingoCard.encode(message.bingoCard1, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                $root.wm5.protobuf.BingoCard.encode(message.bingoCard2, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                $root.wm5.protobuf.BingoCard.encode(message.bingoCard3, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified CreateBingoCardResponse message, length delimited. Does not implicitly {@link wm5.protobuf.CreateBingoCardResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CreateBingoCardResponse
             * @static
             * @param {wm5.protobuf.ICreateBingoCardResponse} message CreateBingoCardResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateBingoCardResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateBingoCardResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CreateBingoCardResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CreateBingoCardResponse} CreateBingoCardResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateBingoCardResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CreateBingoCardResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.bingoCard1 = $root.wm5.protobuf.BingoCard.decode(reader, reader.uint32());
                            break;
                        }
                    case 3: {
                            message.bingoCard2 = $root.wm5.protobuf.BingoCard.decode(reader, reader.uint32());
                            break;
                        }
                    case 4: {
                            message.bingoCard3 = $root.wm5.protobuf.BingoCard.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("bingoCard1"))
                    throw $util.ProtocolError("missing required 'bingoCard1'", { instance: message });
                if (!message.hasOwnProperty("bingoCard2"))
                    throw $util.ProtocolError("missing required 'bingoCard2'", { instance: message });
                if (!message.hasOwnProperty("bingoCard3"))
                    throw $util.ProtocolError("missing required 'bingoCard3'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateBingoCardResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CreateBingoCardResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CreateBingoCardResponse} CreateBingoCardResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateBingoCardResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateBingoCardResponse message.
             * @function verify
             * @memberof wm5.protobuf.CreateBingoCardResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateBingoCardResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                {
                    let error = $root.wm5.protobuf.BingoCard.verify(message.bingoCard1);
                    if (error)
                        return "bingoCard1." + error;
                }
                {
                    let error = $root.wm5.protobuf.BingoCard.verify(message.bingoCard2);
                    if (error)
                        return "bingoCard2." + error;
                }
                {
                    let error = $root.wm5.protobuf.BingoCard.verify(message.bingoCard3);
                    if (error)
                        return "bingoCard3." + error;
                }
                return null;
            };

            /**
             * Creates a CreateBingoCardResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CreateBingoCardResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CreateBingoCardResponse} CreateBingoCardResponse
             */
            CreateBingoCardResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CreateBingoCardResponse)
                    return object;
                let message = new $root.wm5.protobuf.CreateBingoCardResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.bingoCard1 != null) {
                    if (typeof object.bingoCard1 !== "object")
                        throw TypeError(".wm5.protobuf.CreateBingoCardResponse.bingoCard1: object expected");
                    message.bingoCard1 = $root.wm5.protobuf.BingoCard.fromObject(object.bingoCard1);
                }
                if (object.bingoCard2 != null) {
                    if (typeof object.bingoCard2 !== "object")
                        throw TypeError(".wm5.protobuf.CreateBingoCardResponse.bingoCard2: object expected");
                    message.bingoCard2 = $root.wm5.protobuf.BingoCard.fromObject(object.bingoCard2);
                }
                if (object.bingoCard3 != null) {
                    if (typeof object.bingoCard3 !== "object")
                        throw TypeError(".wm5.protobuf.CreateBingoCardResponse.bingoCard3: object expected");
                    message.bingoCard3 = $root.wm5.protobuf.BingoCard.fromObject(object.bingoCard3);
                }
                return message;
            };

            /**
             * Creates a plain object from a CreateBingoCardResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CreateBingoCardResponse
             * @static
             * @param {wm5.protobuf.CreateBingoCardResponse} message CreateBingoCardResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateBingoCardResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.bingoCard1 = null;
                    object.bingoCard2 = null;
                    object.bingoCard3 = null;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.bingoCard1 != null && message.hasOwnProperty("bingoCard1"))
                    object.bingoCard1 = $root.wm5.protobuf.BingoCard.toObject(message.bingoCard1, options);
                if (message.bingoCard2 != null && message.hasOwnProperty("bingoCard2"))
                    object.bingoCard2 = $root.wm5.protobuf.BingoCard.toObject(message.bingoCard2, options);
                if (message.bingoCard3 != null && message.hasOwnProperty("bingoCard3"))
                    object.bingoCard3 = $root.wm5.protobuf.BingoCard.toObject(message.bingoCard3, options);
                return object;
            };

            /**
             * Converts this CreateBingoCardResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CreateBingoCardResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateBingoCardResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateBingoCardResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.CreateBingoCardResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateBingoCardResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CreateBingoCardResponse";
            };

            return CreateBingoCardResponse;
        })();

        protobuf.SaveBingoResultRequest = (function() {

            /**
             * Properties of a SaveBingoResultRequest.
             * @memberof wm5.protobuf
             * @interface ISaveBingoResultRequest
             * @property {number} carId SaveBingoResultRequest carId
             * @property {number} numOfDeletions SaveBingoResultRequest numOfDeletions
             * @property {Array.<number>|null} [carIdsOfConsumedName] SaveBingoResultRequest carIdsOfConsumedName
             * @property {Array.<boolean>|null} [mark] SaveBingoResultRequest mark
             * @property {boolean|null} [completed] SaveBingoResultRequest completed
             */

            /**
             * Constructs a new SaveBingoResultRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a SaveBingoResultRequest.
             * @implements ISaveBingoResultRequest
             * @constructor
             * @param {wm5.protobuf.ISaveBingoResultRequest=} [properties] Properties to set
             */
            function SaveBingoResultRequest(properties) {
                this.carIdsOfConsumedName = [];
                this.mark = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SaveBingoResultRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.SaveBingoResultRequest
             * @instance
             */
            SaveBingoResultRequest.prototype.carId = 0;

            /**
             * SaveBingoResultRequest numOfDeletions.
             * @member {number} numOfDeletions
             * @memberof wm5.protobuf.SaveBingoResultRequest
             * @instance
             */
            SaveBingoResultRequest.prototype.numOfDeletions = 0;

            /**
             * SaveBingoResultRequest carIdsOfConsumedName.
             * @member {Array.<number>} carIdsOfConsumedName
             * @memberof wm5.protobuf.SaveBingoResultRequest
             * @instance
             */
            SaveBingoResultRequest.prototype.carIdsOfConsumedName = $util.emptyArray;

            /**
             * SaveBingoResultRequest mark.
             * @member {Array.<boolean>} mark
             * @memberof wm5.protobuf.SaveBingoResultRequest
             * @instance
             */
            SaveBingoResultRequest.prototype.mark = $util.emptyArray;

            /**
             * SaveBingoResultRequest completed.
             * @member {boolean} completed
             * @memberof wm5.protobuf.SaveBingoResultRequest
             * @instance
             */
            SaveBingoResultRequest.prototype.completed = false;

            /**
             * Creates a new SaveBingoResultRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SaveBingoResultRequest
             * @static
             * @param {wm5.protobuf.ISaveBingoResultRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.SaveBingoResultRequest} SaveBingoResultRequest instance
             */
            SaveBingoResultRequest.create = function create(properties) {
                return new SaveBingoResultRequest(properties);
            };

            /**
             * Encodes the specified SaveBingoResultRequest message. Does not implicitly {@link wm5.protobuf.SaveBingoResultRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SaveBingoResultRequest
             * @static
             * @param {wm5.protobuf.ISaveBingoResultRequest} message SaveBingoResultRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveBingoResultRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.numOfDeletions);
                if (message.carIdsOfConsumedName != null && message.carIdsOfConsumedName.length)
                    for (let i = 0; i < message.carIdsOfConsumedName.length; ++i)
                        writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.carIdsOfConsumedName[i]);
                if (message.mark != null && message.mark.length)
                    for (let i = 0; i < message.mark.length; ++i)
                        writer.uint32(/* id 4, wireType 0 =*/32).bool(message.mark[i]);
                if (message.completed != null && Object.hasOwnProperty.call(message, "completed"))
                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.completed);
                return writer;
            };

            /**
             * Encodes the specified SaveBingoResultRequest message, length delimited. Does not implicitly {@link wm5.protobuf.SaveBingoResultRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SaveBingoResultRequest
             * @static
             * @param {wm5.protobuf.ISaveBingoResultRequest} message SaveBingoResultRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveBingoResultRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SaveBingoResultRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SaveBingoResultRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SaveBingoResultRequest} SaveBingoResultRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveBingoResultRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveBingoResultRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.numOfDeletions = reader.uint32();
                            break;
                        }
                    case 3: {
                            if (!(message.carIdsOfConsumedName && message.carIdsOfConsumedName.length))
                                message.carIdsOfConsumedName = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.carIdsOfConsumedName.push(reader.uint32());
                            } else
                                message.carIdsOfConsumedName.push(reader.uint32());
                            break;
                        }
                    case 4: {
                            if (!(message.mark && message.mark.length))
                                message.mark = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.mark.push(reader.bool());
                            } else
                                message.mark.push(reader.bool());
                            break;
                        }
                    case 5: {
                            message.completed = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                if (!message.hasOwnProperty("numOfDeletions"))
                    throw $util.ProtocolError("missing required 'numOfDeletions'", { instance: message });
                return message;
            };

            /**
             * Decodes a SaveBingoResultRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SaveBingoResultRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SaveBingoResultRequest} SaveBingoResultRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveBingoResultRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SaveBingoResultRequest message.
             * @function verify
             * @memberof wm5.protobuf.SaveBingoResultRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SaveBingoResultRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                if (!$util.isInteger(message.numOfDeletions))
                    return "numOfDeletions: integer expected";
                if (message.carIdsOfConsumedName != null && message.hasOwnProperty("carIdsOfConsumedName")) {
                    if (!Array.isArray(message.carIdsOfConsumedName))
                        return "carIdsOfConsumedName: array expected";
                    for (let i = 0; i < message.carIdsOfConsumedName.length; ++i)
                        if (!$util.isInteger(message.carIdsOfConsumedName[i]))
                            return "carIdsOfConsumedName: integer[] expected";
                }
                if (message.mark != null && message.hasOwnProperty("mark")) {
                    if (!Array.isArray(message.mark))
                        return "mark: array expected";
                    for (let i = 0; i < message.mark.length; ++i)
                        if (typeof message.mark[i] !== "boolean")
                            return "mark: boolean[] expected";
                }
                if (message.completed != null && message.hasOwnProperty("completed"))
                    if (typeof message.completed !== "boolean")
                        return "completed: boolean expected";
                return null;
            };

            /**
             * Creates a SaveBingoResultRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SaveBingoResultRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SaveBingoResultRequest} SaveBingoResultRequest
             */
            SaveBingoResultRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SaveBingoResultRequest)
                    return object;
                let message = new $root.wm5.protobuf.SaveBingoResultRequest();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.numOfDeletions != null)
                    message.numOfDeletions = object.numOfDeletions >>> 0;
                if (object.carIdsOfConsumedName) {
                    if (!Array.isArray(object.carIdsOfConsumedName))
                        throw TypeError(".wm5.protobuf.SaveBingoResultRequest.carIdsOfConsumedName: array expected");
                    message.carIdsOfConsumedName = [];
                    for (let i = 0; i < object.carIdsOfConsumedName.length; ++i)
                        message.carIdsOfConsumedName[i] = object.carIdsOfConsumedName[i] >>> 0;
                }
                if (object.mark) {
                    if (!Array.isArray(object.mark))
                        throw TypeError(".wm5.protobuf.SaveBingoResultRequest.mark: array expected");
                    message.mark = [];
                    for (let i = 0; i < object.mark.length; ++i)
                        message.mark[i] = Boolean(object.mark[i]);
                }
                if (object.completed != null)
                    message.completed = Boolean(object.completed);
                return message;
            };

            /**
             * Creates a plain object from a SaveBingoResultRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SaveBingoResultRequest
             * @static
             * @param {wm5.protobuf.SaveBingoResultRequest} message SaveBingoResultRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SaveBingoResultRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.carIdsOfConsumedName = [];
                    object.mark = [];
                }
                if (options.defaults) {
                    object.carId = 0;
                    object.numOfDeletions = 0;
                    object.completed = false;
                }
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.numOfDeletions != null && message.hasOwnProperty("numOfDeletions"))
                    object.numOfDeletions = message.numOfDeletions;
                if (message.carIdsOfConsumedName && message.carIdsOfConsumedName.length) {
                    object.carIdsOfConsumedName = [];
                    for (let j = 0; j < message.carIdsOfConsumedName.length; ++j)
                        object.carIdsOfConsumedName[j] = message.carIdsOfConsumedName[j];
                }
                if (message.mark && message.mark.length) {
                    object.mark = [];
                    for (let j = 0; j < message.mark.length; ++j)
                        object.mark[j] = message.mark[j];
                }
                if (message.completed != null && message.hasOwnProperty("completed"))
                    object.completed = message.completed;
                return object;
            };

            /**
             * Converts this SaveBingoResultRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SaveBingoResultRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SaveBingoResultRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SaveBingoResultRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.SaveBingoResultRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SaveBingoResultRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SaveBingoResultRequest";
            };

            return SaveBingoResultRequest;
        })();

        protobuf.SaveBingoResultResponse = (function() {

            /**
             * Properties of a SaveBingoResultResponse.
             * @memberof wm5.protobuf
             * @interface ISaveBingoResultResponse
             * @property {wm5.protobuf.ErrorCode} error SaveBingoResultResponse error
             */

            /**
             * Constructs a new SaveBingoResultResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a SaveBingoResultResponse.
             * @implements ISaveBingoResultResponse
             * @constructor
             * @param {wm5.protobuf.ISaveBingoResultResponse=} [properties] Properties to set
             */
            function SaveBingoResultResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SaveBingoResultResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.SaveBingoResultResponse
             * @instance
             */
            SaveBingoResultResponse.prototype.error = 0;

            /**
             * Creates a new SaveBingoResultResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SaveBingoResultResponse
             * @static
             * @param {wm5.protobuf.ISaveBingoResultResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.SaveBingoResultResponse} SaveBingoResultResponse instance
             */
            SaveBingoResultResponse.create = function create(properties) {
                return new SaveBingoResultResponse(properties);
            };

            /**
             * Encodes the specified SaveBingoResultResponse message. Does not implicitly {@link wm5.protobuf.SaveBingoResultResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SaveBingoResultResponse
             * @static
             * @param {wm5.protobuf.ISaveBingoResultResponse} message SaveBingoResultResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveBingoResultResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified SaveBingoResultResponse message, length delimited. Does not implicitly {@link wm5.protobuf.SaveBingoResultResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SaveBingoResultResponse
             * @static
             * @param {wm5.protobuf.ISaveBingoResultResponse} message SaveBingoResultResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveBingoResultResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SaveBingoResultResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SaveBingoResultResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SaveBingoResultResponse} SaveBingoResultResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveBingoResultResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveBingoResultResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a SaveBingoResultResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SaveBingoResultResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SaveBingoResultResponse} SaveBingoResultResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveBingoResultResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SaveBingoResultResponse message.
             * @function verify
             * @memberof wm5.protobuf.SaveBingoResultResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SaveBingoResultResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a SaveBingoResultResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SaveBingoResultResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SaveBingoResultResponse} SaveBingoResultResponse
             */
            SaveBingoResultResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SaveBingoResultResponse)
                    return object;
                let message = new $root.wm5.protobuf.SaveBingoResultResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a SaveBingoResultResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SaveBingoResultResponse
             * @static
             * @param {wm5.protobuf.SaveBingoResultResponse} message SaveBingoResultResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SaveBingoResultResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this SaveBingoResultResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SaveBingoResultResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SaveBingoResultResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SaveBingoResultResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.SaveBingoResultResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SaveBingoResultResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SaveBingoResultResponse";
            };

            return SaveBingoResultResponse;
        })();

        protobuf.SaveScreenshotRequest = (function() {

            /**
             * Properties of a SaveScreenshotRequest.
             * @memberof wm5.protobuf
             * @interface ISaveScreenshotRequest
             * @property {number} carId SaveScreenshotRequest carId
             * @property {number} timestamp SaveScreenshotRequest timestamp
             * @property {wm5.protobuf.ScreenshotType} imageType SaveScreenshotRequest imageType
             * @property {Uint8Array} image SaveScreenshotRequest image
             * @property {wm5.protobuf.SaveScreenshotRequest.IGhostBattleImage|null} [ghostMetadata] SaveScreenshotRequest ghostMetadata
             * @property {wm5.protobuf.SaveScreenshotRequest.IVersusBattleImage|null} [versusMetadata] SaveScreenshotRequest versusMetadata
             * @property {wm5.protobuf.SaveScreenshotRequest.ITerminalImage|null} [terminalMetadata] SaveScreenshotRequest terminalMetadata
             */

            /**
             * Constructs a new SaveScreenshotRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a SaveScreenshotRequest.
             * @implements ISaveScreenshotRequest
             * @constructor
             * @param {wm5.protobuf.ISaveScreenshotRequest=} [properties] Properties to set
             */
            function SaveScreenshotRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SaveScreenshotRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.SaveScreenshotRequest
             * @instance
             */
            SaveScreenshotRequest.prototype.carId = 0;

            /**
             * SaveScreenshotRequest timestamp.
             * @member {number} timestamp
             * @memberof wm5.protobuf.SaveScreenshotRequest
             * @instance
             */
            SaveScreenshotRequest.prototype.timestamp = 0;

            /**
             * SaveScreenshotRequest imageType.
             * @member {wm5.protobuf.ScreenshotType} imageType
             * @memberof wm5.protobuf.SaveScreenshotRequest
             * @instance
             */
            SaveScreenshotRequest.prototype.imageType = 1;

            /**
             * SaveScreenshotRequest image.
             * @member {Uint8Array} image
             * @memberof wm5.protobuf.SaveScreenshotRequest
             * @instance
             */
            SaveScreenshotRequest.prototype.image = $util.newBuffer([]);

            /**
             * SaveScreenshotRequest ghostMetadata.
             * @member {wm5.protobuf.SaveScreenshotRequest.IGhostBattleImage|null|undefined} ghostMetadata
             * @memberof wm5.protobuf.SaveScreenshotRequest
             * @instance
             */
            SaveScreenshotRequest.prototype.ghostMetadata = null;

            /**
             * SaveScreenshotRequest versusMetadata.
             * @member {wm5.protobuf.SaveScreenshotRequest.IVersusBattleImage|null|undefined} versusMetadata
             * @memberof wm5.protobuf.SaveScreenshotRequest
             * @instance
             */
            SaveScreenshotRequest.prototype.versusMetadata = null;

            /**
             * SaveScreenshotRequest terminalMetadata.
             * @member {wm5.protobuf.SaveScreenshotRequest.ITerminalImage|null|undefined} terminalMetadata
             * @memberof wm5.protobuf.SaveScreenshotRequest
             * @instance
             */
            SaveScreenshotRequest.prototype.terminalMetadata = null;

            /**
             * Creates a new SaveScreenshotRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SaveScreenshotRequest
             * @static
             * @param {wm5.protobuf.ISaveScreenshotRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.SaveScreenshotRequest} SaveScreenshotRequest instance
             */
            SaveScreenshotRequest.create = function create(properties) {
                return new SaveScreenshotRequest(properties);
            };

            /**
             * Encodes the specified SaveScreenshotRequest message. Does not implicitly {@link wm5.protobuf.SaveScreenshotRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SaveScreenshotRequest
             * @static
             * @param {wm5.protobuf.ISaveScreenshotRequest} message SaveScreenshotRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveScreenshotRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.timestamp);
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.imageType);
                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.image);
                if (message.ghostMetadata != null && Object.hasOwnProperty.call(message, "ghostMetadata"))
                    $root.wm5.protobuf.SaveScreenshotRequest.GhostBattleImage.encode(message.ghostMetadata, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                if (message.versusMetadata != null && Object.hasOwnProperty.call(message, "versusMetadata"))
                    $root.wm5.protobuf.SaveScreenshotRequest.VersusBattleImage.encode(message.versusMetadata, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                if (message.terminalMetadata != null && Object.hasOwnProperty.call(message, "terminalMetadata"))
                    $root.wm5.protobuf.SaveScreenshotRequest.TerminalImage.encode(message.terminalMetadata, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified SaveScreenshotRequest message, length delimited. Does not implicitly {@link wm5.protobuf.SaveScreenshotRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SaveScreenshotRequest
             * @static
             * @param {wm5.protobuf.ISaveScreenshotRequest} message SaveScreenshotRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveScreenshotRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SaveScreenshotRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SaveScreenshotRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SaveScreenshotRequest} SaveScreenshotRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveScreenshotRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveScreenshotRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.timestamp = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.imageType = reader.int32();
                            break;
                        }
                    case 4: {
                            message.image = reader.bytes();
                            break;
                        }
                    case 5: {
                            message.ghostMetadata = $root.wm5.protobuf.SaveScreenshotRequest.GhostBattleImage.decode(reader, reader.uint32());
                            break;
                        }
                    case 6: {
                            message.versusMetadata = $root.wm5.protobuf.SaveScreenshotRequest.VersusBattleImage.decode(reader, reader.uint32());
                            break;
                        }
                    case 7: {
                            message.terminalMetadata = $root.wm5.protobuf.SaveScreenshotRequest.TerminalImage.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                if (!message.hasOwnProperty("timestamp"))
                    throw $util.ProtocolError("missing required 'timestamp'", { instance: message });
                if (!message.hasOwnProperty("imageType"))
                    throw $util.ProtocolError("missing required 'imageType'", { instance: message });
                if (!message.hasOwnProperty("image"))
                    throw $util.ProtocolError("missing required 'image'", { instance: message });
                return message;
            };

            /**
             * Decodes a SaveScreenshotRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SaveScreenshotRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SaveScreenshotRequest} SaveScreenshotRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveScreenshotRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SaveScreenshotRequest message.
             * @function verify
             * @memberof wm5.protobuf.SaveScreenshotRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SaveScreenshotRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                if (!$util.isInteger(message.timestamp))
                    return "timestamp: integer expected";
                switch (message.imageType) {
                default:
                    return "imageType: enum value expected";
                case 1:
                case 2:
                case 3:
                    break;
                }
                if (!(message.image && typeof message.image.length === "number" || $util.isString(message.image)))
                    return "image: buffer expected";
                if (message.ghostMetadata != null && message.hasOwnProperty("ghostMetadata")) {
                    let error = $root.wm5.protobuf.SaveScreenshotRequest.GhostBattleImage.verify(message.ghostMetadata);
                    if (error)
                        return "ghostMetadata." + error;
                }
                if (message.versusMetadata != null && message.hasOwnProperty("versusMetadata")) {
                    let error = $root.wm5.protobuf.SaveScreenshotRequest.VersusBattleImage.verify(message.versusMetadata);
                    if (error)
                        return "versusMetadata." + error;
                }
                if (message.terminalMetadata != null && message.hasOwnProperty("terminalMetadata")) {
                    let error = $root.wm5.protobuf.SaveScreenshotRequest.TerminalImage.verify(message.terminalMetadata);
                    if (error)
                        return "terminalMetadata." + error;
                }
                return null;
            };

            /**
             * Creates a SaveScreenshotRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SaveScreenshotRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SaveScreenshotRequest} SaveScreenshotRequest
             */
            SaveScreenshotRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SaveScreenshotRequest)
                    return object;
                let message = new $root.wm5.protobuf.SaveScreenshotRequest();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.timestamp != null)
                    message.timestamp = object.timestamp >>> 0;
                switch (object.imageType) {
                default:
                    if (typeof object.imageType === "number") {
                        message.imageType = object.imageType;
                        break;
                    }
                    break;
                case "SS_GHOST_BATTLE":
                case 1:
                    message.imageType = 1;
                    break;
                case "SS_VERSUS_BATTLE":
                case 2:
                    message.imageType = 2;
                    break;
                case "SS_TERMINAL":
                case 3:
                    message.imageType = 3;
                    break;
                }
                if (object.image != null)
                    if (typeof object.image === "string")
                        $util.base64.decode(object.image, message.image = $util.newBuffer($util.base64.length(object.image)), 0);
                    else if (object.image.length >= 0)
                        message.image = object.image;
                if (object.ghostMetadata != null) {
                    if (typeof object.ghostMetadata !== "object")
                        throw TypeError(".wm5.protobuf.SaveScreenshotRequest.ghostMetadata: object expected");
                    message.ghostMetadata = $root.wm5.protobuf.SaveScreenshotRequest.GhostBattleImage.fromObject(object.ghostMetadata);
                }
                if (object.versusMetadata != null) {
                    if (typeof object.versusMetadata !== "object")
                        throw TypeError(".wm5.protobuf.SaveScreenshotRequest.versusMetadata: object expected");
                    message.versusMetadata = $root.wm5.protobuf.SaveScreenshotRequest.VersusBattleImage.fromObject(object.versusMetadata);
                }
                if (object.terminalMetadata != null) {
                    if (typeof object.terminalMetadata !== "object")
                        throw TypeError(".wm5.protobuf.SaveScreenshotRequest.terminalMetadata: object expected");
                    message.terminalMetadata = $root.wm5.protobuf.SaveScreenshotRequest.TerminalImage.fromObject(object.terminalMetadata);
                }
                return message;
            };

            /**
             * Creates a plain object from a SaveScreenshotRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SaveScreenshotRequest
             * @static
             * @param {wm5.protobuf.SaveScreenshotRequest} message SaveScreenshotRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SaveScreenshotRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.carId = 0;
                    object.timestamp = 0;
                    object.imageType = options.enums === String ? "SS_GHOST_BATTLE" : 1;
                    if (options.bytes === String)
                        object.image = "";
                    else {
                        object.image = [];
                        if (options.bytes !== Array)
                            object.image = $util.newBuffer(object.image);
                    }
                    object.ghostMetadata = null;
                    object.versusMetadata = null;
                    object.terminalMetadata = null;
                }
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                    object.timestamp = message.timestamp;
                if (message.imageType != null && message.hasOwnProperty("imageType"))
                    object.imageType = options.enums === String ? $root.wm5.protobuf.ScreenshotType[message.imageType] === undefined ? message.imageType : $root.wm5.protobuf.ScreenshotType[message.imageType] : message.imageType;
                if (message.image != null && message.hasOwnProperty("image"))
                    object.image = options.bytes === String ? $util.base64.encode(message.image, 0, message.image.length) : options.bytes === Array ? Array.prototype.slice.call(message.image) : message.image;
                if (message.ghostMetadata != null && message.hasOwnProperty("ghostMetadata"))
                    object.ghostMetadata = $root.wm5.protobuf.SaveScreenshotRequest.GhostBattleImage.toObject(message.ghostMetadata, options);
                if (message.versusMetadata != null && message.hasOwnProperty("versusMetadata"))
                    object.versusMetadata = $root.wm5.protobuf.SaveScreenshotRequest.VersusBattleImage.toObject(message.versusMetadata, options);
                if (message.terminalMetadata != null && message.hasOwnProperty("terminalMetadata"))
                    object.terminalMetadata = $root.wm5.protobuf.SaveScreenshotRequest.TerminalImage.toObject(message.terminalMetadata, options);
                return object;
            };

            /**
             * Converts this SaveScreenshotRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SaveScreenshotRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SaveScreenshotRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SaveScreenshotRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.SaveScreenshotRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SaveScreenshotRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SaveScreenshotRequest";
            };

            SaveScreenshotRequest.GhostBattleImage = (function() {

                /**
                 * Properties of a GhostBattleImage.
                 * @memberof wm5.protobuf.SaveScreenshotRequest
                 * @interface IGhostBattleImage
                 * @property {number} tunePower GhostBattleImage tunePower
                 * @property {number} tuneHandling GhostBattleImage tuneHandling
                 * @property {number} area GhostBattleImage area
                 * @property {number} stampReturnCount GhostBattleImage stampReturnCount
                 * @property {wm5.protobuf.SaveScreenshotRequest.IOpponentCar} opponent GhostBattleImage opponent
                 */

                /**
                 * Constructs a new GhostBattleImage.
                 * @memberof wm5.protobuf.SaveScreenshotRequest
                 * @classdesc Represents a GhostBattleImage.
                 * @implements IGhostBattleImage
                 * @constructor
                 * @param {wm5.protobuf.SaveScreenshotRequest.IGhostBattleImage=} [properties] Properties to set
                 */
                function GhostBattleImage(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * GhostBattleImage tunePower.
                 * @member {number} tunePower
                 * @memberof wm5.protobuf.SaveScreenshotRequest.GhostBattleImage
                 * @instance
                 */
                GhostBattleImage.prototype.tunePower = 0;

                /**
                 * GhostBattleImage tuneHandling.
                 * @member {number} tuneHandling
                 * @memberof wm5.protobuf.SaveScreenshotRequest.GhostBattleImage
                 * @instance
                 */
                GhostBattleImage.prototype.tuneHandling = 0;

                /**
                 * GhostBattleImage area.
                 * @member {number} area
                 * @memberof wm5.protobuf.SaveScreenshotRequest.GhostBattleImage
                 * @instance
                 */
                GhostBattleImage.prototype.area = 0;

                /**
                 * GhostBattleImage stampReturnCount.
                 * @member {number} stampReturnCount
                 * @memberof wm5.protobuf.SaveScreenshotRequest.GhostBattleImage
                 * @instance
                 */
                GhostBattleImage.prototype.stampReturnCount = 0;

                /**
                 * GhostBattleImage opponent.
                 * @member {wm5.protobuf.SaveScreenshotRequest.IOpponentCar} opponent
                 * @memberof wm5.protobuf.SaveScreenshotRequest.GhostBattleImage
                 * @instance
                 */
                GhostBattleImage.prototype.opponent = null;

                /**
                 * Creates a new GhostBattleImage instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.SaveScreenshotRequest.GhostBattleImage
                 * @static
                 * @param {wm5.protobuf.SaveScreenshotRequest.IGhostBattleImage=} [properties] Properties to set
                 * @returns {wm5.protobuf.SaveScreenshotRequest.GhostBattleImage} GhostBattleImage instance
                 */
                GhostBattleImage.create = function create(properties) {
                    return new GhostBattleImage(properties);
                };

                /**
                 * Encodes the specified GhostBattleImage message. Does not implicitly {@link wm5.protobuf.SaveScreenshotRequest.GhostBattleImage.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.SaveScreenshotRequest.GhostBattleImage
                 * @static
                 * @param {wm5.protobuf.SaveScreenshotRequest.IGhostBattleImage} message GhostBattleImage message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GhostBattleImage.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.tunePower);
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.tuneHandling);
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.area);
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.stampReturnCount);
                    $root.wm5.protobuf.SaveScreenshotRequest.OpponentCar.encode(message.opponent, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified GhostBattleImage message, length delimited. Does not implicitly {@link wm5.protobuf.SaveScreenshotRequest.GhostBattleImage.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.SaveScreenshotRequest.GhostBattleImage
                 * @static
                 * @param {wm5.protobuf.SaveScreenshotRequest.IGhostBattleImage} message GhostBattleImage message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GhostBattleImage.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a GhostBattleImage message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.SaveScreenshotRequest.GhostBattleImage
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.SaveScreenshotRequest.GhostBattleImage} GhostBattleImage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GhostBattleImage.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveScreenshotRequest.GhostBattleImage();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.tunePower = reader.uint32();
                                break;
                            }
                        case 2: {
                                message.tuneHandling = reader.uint32();
                                break;
                            }
                        case 3: {
                                message.area = reader.uint32();
                                break;
                            }
                        case 4: {
                                message.stampReturnCount = reader.uint32();
                                break;
                            }
                        case 5: {
                                message.opponent = $root.wm5.protobuf.SaveScreenshotRequest.OpponentCar.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("tunePower"))
                        throw $util.ProtocolError("missing required 'tunePower'", { instance: message });
                    if (!message.hasOwnProperty("tuneHandling"))
                        throw $util.ProtocolError("missing required 'tuneHandling'", { instance: message });
                    if (!message.hasOwnProperty("area"))
                        throw $util.ProtocolError("missing required 'area'", { instance: message });
                    if (!message.hasOwnProperty("stampReturnCount"))
                        throw $util.ProtocolError("missing required 'stampReturnCount'", { instance: message });
                    if (!message.hasOwnProperty("opponent"))
                        throw $util.ProtocolError("missing required 'opponent'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a GhostBattleImage message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.SaveScreenshotRequest.GhostBattleImage
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.SaveScreenshotRequest.GhostBattleImage} GhostBattleImage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GhostBattleImage.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a GhostBattleImage message.
                 * @function verify
                 * @memberof wm5.protobuf.SaveScreenshotRequest.GhostBattleImage
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GhostBattleImage.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.tunePower))
                        return "tunePower: integer expected";
                    if (!$util.isInteger(message.tuneHandling))
                        return "tuneHandling: integer expected";
                    if (!$util.isInteger(message.area))
                        return "area: integer expected";
                    if (!$util.isInteger(message.stampReturnCount))
                        return "stampReturnCount: integer expected";
                    {
                        let error = $root.wm5.protobuf.SaveScreenshotRequest.OpponentCar.verify(message.opponent);
                        if (error)
                            return "opponent." + error;
                    }
                    return null;
                };

                /**
                 * Creates a GhostBattleImage message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.SaveScreenshotRequest.GhostBattleImage
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.SaveScreenshotRequest.GhostBattleImage} GhostBattleImage
                 */
                GhostBattleImage.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.SaveScreenshotRequest.GhostBattleImage)
                        return object;
                    let message = new $root.wm5.protobuf.SaveScreenshotRequest.GhostBattleImage();
                    if (object.tunePower != null)
                        message.tunePower = object.tunePower >>> 0;
                    if (object.tuneHandling != null)
                        message.tuneHandling = object.tuneHandling >>> 0;
                    if (object.area != null)
                        message.area = object.area >>> 0;
                    if (object.stampReturnCount != null)
                        message.stampReturnCount = object.stampReturnCount >>> 0;
                    if (object.opponent != null) {
                        if (typeof object.opponent !== "object")
                            throw TypeError(".wm5.protobuf.SaveScreenshotRequest.GhostBattleImage.opponent: object expected");
                        message.opponent = $root.wm5.protobuf.SaveScreenshotRequest.OpponentCar.fromObject(object.opponent);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a GhostBattleImage message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.SaveScreenshotRequest.GhostBattleImage
                 * @static
                 * @param {wm5.protobuf.SaveScreenshotRequest.GhostBattleImage} message GhostBattleImage
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GhostBattleImage.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.tunePower = 0;
                        object.tuneHandling = 0;
                        object.area = 0;
                        object.stampReturnCount = 0;
                        object.opponent = null;
                    }
                    if (message.tunePower != null && message.hasOwnProperty("tunePower"))
                        object.tunePower = message.tunePower;
                    if (message.tuneHandling != null && message.hasOwnProperty("tuneHandling"))
                        object.tuneHandling = message.tuneHandling;
                    if (message.area != null && message.hasOwnProperty("area"))
                        object.area = message.area;
                    if (message.stampReturnCount != null && message.hasOwnProperty("stampReturnCount"))
                        object.stampReturnCount = message.stampReturnCount;
                    if (message.opponent != null && message.hasOwnProperty("opponent"))
                        object.opponent = $root.wm5.protobuf.SaveScreenshotRequest.OpponentCar.toObject(message.opponent, options);
                    return object;
                };

                /**
                 * Converts this GhostBattleImage to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.SaveScreenshotRequest.GhostBattleImage
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GhostBattleImage.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for GhostBattleImage
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.SaveScreenshotRequest.GhostBattleImage
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GhostBattleImage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.SaveScreenshotRequest.GhostBattleImage";
                };

                return GhostBattleImage;
            })();

            SaveScreenshotRequest.VersusBattleImage = (function() {

                /**
                 * Properties of a VersusBattleImage.
                 * @memberof wm5.protobuf.SaveScreenshotRequest
                 * @interface IVersusBattleImage
                 * @property {number} tunePower VersusBattleImage tunePower
                 * @property {number} tuneHandling VersusBattleImage tuneHandling
                 * @property {number} area VersusBattleImage area
                 * @property {Array.<wm5.protobuf.SaveScreenshotRequest.IOpponentCar>|null} [opponents] VersusBattleImage opponents
                 */

                /**
                 * Constructs a new VersusBattleImage.
                 * @memberof wm5.protobuf.SaveScreenshotRequest
                 * @classdesc Represents a VersusBattleImage.
                 * @implements IVersusBattleImage
                 * @constructor
                 * @param {wm5.protobuf.SaveScreenshotRequest.IVersusBattleImage=} [properties] Properties to set
                 */
                function VersusBattleImage(properties) {
                    this.opponents = [];
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * VersusBattleImage tunePower.
                 * @member {number} tunePower
                 * @memberof wm5.protobuf.SaveScreenshotRequest.VersusBattleImage
                 * @instance
                 */
                VersusBattleImage.prototype.tunePower = 0;

                /**
                 * VersusBattleImage tuneHandling.
                 * @member {number} tuneHandling
                 * @memberof wm5.protobuf.SaveScreenshotRequest.VersusBattleImage
                 * @instance
                 */
                VersusBattleImage.prototype.tuneHandling = 0;

                /**
                 * VersusBattleImage area.
                 * @member {number} area
                 * @memberof wm5.protobuf.SaveScreenshotRequest.VersusBattleImage
                 * @instance
                 */
                VersusBattleImage.prototype.area = 0;

                /**
                 * VersusBattleImage opponents.
                 * @member {Array.<wm5.protobuf.SaveScreenshotRequest.IOpponentCar>} opponents
                 * @memberof wm5.protobuf.SaveScreenshotRequest.VersusBattleImage
                 * @instance
                 */
                VersusBattleImage.prototype.opponents = $util.emptyArray;

                /**
                 * Creates a new VersusBattleImage instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.SaveScreenshotRequest.VersusBattleImage
                 * @static
                 * @param {wm5.protobuf.SaveScreenshotRequest.IVersusBattleImage=} [properties] Properties to set
                 * @returns {wm5.protobuf.SaveScreenshotRequest.VersusBattleImage} VersusBattleImage instance
                 */
                VersusBattleImage.create = function create(properties) {
                    return new VersusBattleImage(properties);
                };

                /**
                 * Encodes the specified VersusBattleImage message. Does not implicitly {@link wm5.protobuf.SaveScreenshotRequest.VersusBattleImage.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.SaveScreenshotRequest.VersusBattleImage
                 * @static
                 * @param {wm5.protobuf.SaveScreenshotRequest.IVersusBattleImage} message VersusBattleImage message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                VersusBattleImage.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.tunePower);
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.tuneHandling);
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.area);
                    if (message.opponents != null && message.opponents.length)
                        for (let i = 0; i < message.opponents.length; ++i)
                            $root.wm5.protobuf.SaveScreenshotRequest.OpponentCar.encode(message.opponents[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified VersusBattleImage message, length delimited. Does not implicitly {@link wm5.protobuf.SaveScreenshotRequest.VersusBattleImage.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.SaveScreenshotRequest.VersusBattleImage
                 * @static
                 * @param {wm5.protobuf.SaveScreenshotRequest.IVersusBattleImage} message VersusBattleImage message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                VersusBattleImage.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a VersusBattleImage message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.SaveScreenshotRequest.VersusBattleImage
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.SaveScreenshotRequest.VersusBattleImage} VersusBattleImage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                VersusBattleImage.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveScreenshotRequest.VersusBattleImage();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.tunePower = reader.uint32();
                                break;
                            }
                        case 2: {
                                message.tuneHandling = reader.uint32();
                                break;
                            }
                        case 3: {
                                message.area = reader.uint32();
                                break;
                            }
                        case 4: {
                                if (!(message.opponents && message.opponents.length))
                                    message.opponents = [];
                                message.opponents.push($root.wm5.protobuf.SaveScreenshotRequest.OpponentCar.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("tunePower"))
                        throw $util.ProtocolError("missing required 'tunePower'", { instance: message });
                    if (!message.hasOwnProperty("tuneHandling"))
                        throw $util.ProtocolError("missing required 'tuneHandling'", { instance: message });
                    if (!message.hasOwnProperty("area"))
                        throw $util.ProtocolError("missing required 'area'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a VersusBattleImage message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.SaveScreenshotRequest.VersusBattleImage
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.SaveScreenshotRequest.VersusBattleImage} VersusBattleImage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                VersusBattleImage.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a VersusBattleImage message.
                 * @function verify
                 * @memberof wm5.protobuf.SaveScreenshotRequest.VersusBattleImage
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                VersusBattleImage.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.tunePower))
                        return "tunePower: integer expected";
                    if (!$util.isInteger(message.tuneHandling))
                        return "tuneHandling: integer expected";
                    if (!$util.isInteger(message.area))
                        return "area: integer expected";
                    if (message.opponents != null && message.hasOwnProperty("opponents")) {
                        if (!Array.isArray(message.opponents))
                            return "opponents: array expected";
                        for (let i = 0; i < message.opponents.length; ++i) {
                            let error = $root.wm5.protobuf.SaveScreenshotRequest.OpponentCar.verify(message.opponents[i]);
                            if (error)
                                return "opponents." + error;
                        }
                    }
                    return null;
                };

                /**
                 * Creates a VersusBattleImage message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.SaveScreenshotRequest.VersusBattleImage
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.SaveScreenshotRequest.VersusBattleImage} VersusBattleImage
                 */
                VersusBattleImage.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.SaveScreenshotRequest.VersusBattleImage)
                        return object;
                    let message = new $root.wm5.protobuf.SaveScreenshotRequest.VersusBattleImage();
                    if (object.tunePower != null)
                        message.tunePower = object.tunePower >>> 0;
                    if (object.tuneHandling != null)
                        message.tuneHandling = object.tuneHandling >>> 0;
                    if (object.area != null)
                        message.area = object.area >>> 0;
                    if (object.opponents) {
                        if (!Array.isArray(object.opponents))
                            throw TypeError(".wm5.protobuf.SaveScreenshotRequest.VersusBattleImage.opponents: array expected");
                        message.opponents = [];
                        for (let i = 0; i < object.opponents.length; ++i) {
                            if (typeof object.opponents[i] !== "object")
                                throw TypeError(".wm5.protobuf.SaveScreenshotRequest.VersusBattleImage.opponents: object expected");
                            message.opponents[i] = $root.wm5.protobuf.SaveScreenshotRequest.OpponentCar.fromObject(object.opponents[i]);
                        }
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a VersusBattleImage message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.SaveScreenshotRequest.VersusBattleImage
                 * @static
                 * @param {wm5.protobuf.SaveScreenshotRequest.VersusBattleImage} message VersusBattleImage
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                VersusBattleImage.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.arrays || options.defaults)
                        object.opponents = [];
                    if (options.defaults) {
                        object.tunePower = 0;
                        object.tuneHandling = 0;
                        object.area = 0;
                    }
                    if (message.tunePower != null && message.hasOwnProperty("tunePower"))
                        object.tunePower = message.tunePower;
                    if (message.tuneHandling != null && message.hasOwnProperty("tuneHandling"))
                        object.tuneHandling = message.tuneHandling;
                    if (message.area != null && message.hasOwnProperty("area"))
                        object.area = message.area;
                    if (message.opponents && message.opponents.length) {
                        object.opponents = [];
                        for (let j = 0; j < message.opponents.length; ++j)
                            object.opponents[j] = $root.wm5.protobuf.SaveScreenshotRequest.OpponentCar.toObject(message.opponents[j], options);
                    }
                    return object;
                };

                /**
                 * Converts this VersusBattleImage to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.SaveScreenshotRequest.VersusBattleImage
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                VersusBattleImage.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for VersusBattleImage
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.SaveScreenshotRequest.VersusBattleImage
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                VersusBattleImage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.SaveScreenshotRequest.VersusBattleImage";
                };

                return VersusBattleImage;
            })();

            SaveScreenshotRequest.TerminalImage = (function() {

                /**
                 * Properties of a TerminalImage.
                 * @memberof wm5.protobuf.SaveScreenshotRequest
                 * @interface ITerminalImage
                 */

                /**
                 * Constructs a new TerminalImage.
                 * @memberof wm5.protobuf.SaveScreenshotRequest
                 * @classdesc Represents a TerminalImage.
                 * @implements ITerminalImage
                 * @constructor
                 * @param {wm5.protobuf.SaveScreenshotRequest.ITerminalImage=} [properties] Properties to set
                 */
                function TerminalImage(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Creates a new TerminalImage instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.SaveScreenshotRequest.TerminalImage
                 * @static
                 * @param {wm5.protobuf.SaveScreenshotRequest.ITerminalImage=} [properties] Properties to set
                 * @returns {wm5.protobuf.SaveScreenshotRequest.TerminalImage} TerminalImage instance
                 */
                TerminalImage.create = function create(properties) {
                    return new TerminalImage(properties);
                };

                /**
                 * Encodes the specified TerminalImage message. Does not implicitly {@link wm5.protobuf.SaveScreenshotRequest.TerminalImage.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.SaveScreenshotRequest.TerminalImage
                 * @static
                 * @param {wm5.protobuf.SaveScreenshotRequest.ITerminalImage} message TerminalImage message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TerminalImage.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };

                /**
                 * Encodes the specified TerminalImage message, length delimited. Does not implicitly {@link wm5.protobuf.SaveScreenshotRequest.TerminalImage.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.SaveScreenshotRequest.TerminalImage
                 * @static
                 * @param {wm5.protobuf.SaveScreenshotRequest.ITerminalImage} message TerminalImage message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TerminalImage.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a TerminalImage message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.SaveScreenshotRequest.TerminalImage
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.SaveScreenshotRequest.TerminalImage} TerminalImage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TerminalImage.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveScreenshotRequest.TerminalImage();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a TerminalImage message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.SaveScreenshotRequest.TerminalImage
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.SaveScreenshotRequest.TerminalImage} TerminalImage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TerminalImage.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a TerminalImage message.
                 * @function verify
                 * @memberof wm5.protobuf.SaveScreenshotRequest.TerminalImage
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                TerminalImage.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };

                /**
                 * Creates a TerminalImage message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.SaveScreenshotRequest.TerminalImage
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.SaveScreenshotRequest.TerminalImage} TerminalImage
                 */
                TerminalImage.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.SaveScreenshotRequest.TerminalImage)
                        return object;
                    return new $root.wm5.protobuf.SaveScreenshotRequest.TerminalImage();
                };

                /**
                 * Creates a plain object from a TerminalImage message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.SaveScreenshotRequest.TerminalImage
                 * @static
                 * @param {wm5.protobuf.SaveScreenshotRequest.TerminalImage} message TerminalImage
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                TerminalImage.toObject = function toObject() {
                    return {};
                };

                /**
                 * Converts this TerminalImage to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.SaveScreenshotRequest.TerminalImage
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                TerminalImage.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for TerminalImage
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.SaveScreenshotRequest.TerminalImage
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                TerminalImage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.SaveScreenshotRequest.TerminalImage";
                };

                return TerminalImage;
            })();

            SaveScreenshotRequest.OpponentCar = (function() {

                /**
                 * Properties of an OpponentCar.
                 * @memberof wm5.protobuf.SaveScreenshotRequest
                 * @interface IOpponentCar
                 * @property {number|null} [carId] OpponentCar carId
                 * @property {number} tunePower OpponentCar tunePower
                 * @property {number} tuneHandling OpponentCar tuneHandling
                 */

                /**
                 * Constructs a new OpponentCar.
                 * @memberof wm5.protobuf.SaveScreenshotRequest
                 * @classdesc Represents an OpponentCar.
                 * @implements IOpponentCar
                 * @constructor
                 * @param {wm5.protobuf.SaveScreenshotRequest.IOpponentCar=} [properties] Properties to set
                 */
                function OpponentCar(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * OpponentCar carId.
                 * @member {number} carId
                 * @memberof wm5.protobuf.SaveScreenshotRequest.OpponentCar
                 * @instance
                 */
                OpponentCar.prototype.carId = 0;

                /**
                 * OpponentCar tunePower.
                 * @member {number} tunePower
                 * @memberof wm5.protobuf.SaveScreenshotRequest.OpponentCar
                 * @instance
                 */
                OpponentCar.prototype.tunePower = 0;

                /**
                 * OpponentCar tuneHandling.
                 * @member {number} tuneHandling
                 * @memberof wm5.protobuf.SaveScreenshotRequest.OpponentCar
                 * @instance
                 */
                OpponentCar.prototype.tuneHandling = 0;

                /**
                 * Creates a new OpponentCar instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.SaveScreenshotRequest.OpponentCar
                 * @static
                 * @param {wm5.protobuf.SaveScreenshotRequest.IOpponentCar=} [properties] Properties to set
                 * @returns {wm5.protobuf.SaveScreenshotRequest.OpponentCar} OpponentCar instance
                 */
                OpponentCar.create = function create(properties) {
                    return new OpponentCar(properties);
                };

                /**
                 * Encodes the specified OpponentCar message. Does not implicitly {@link wm5.protobuf.SaveScreenshotRequest.OpponentCar.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.SaveScreenshotRequest.OpponentCar
                 * @static
                 * @param {wm5.protobuf.SaveScreenshotRequest.IOpponentCar} message OpponentCar message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OpponentCar.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.carId != null && Object.hasOwnProperty.call(message, "carId"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.tunePower);
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.tuneHandling);
                    return writer;
                };

                /**
                 * Encodes the specified OpponentCar message, length delimited. Does not implicitly {@link wm5.protobuf.SaveScreenshotRequest.OpponentCar.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.SaveScreenshotRequest.OpponentCar
                 * @static
                 * @param {wm5.protobuf.SaveScreenshotRequest.IOpponentCar} message OpponentCar message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OpponentCar.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an OpponentCar message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.SaveScreenshotRequest.OpponentCar
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.SaveScreenshotRequest.OpponentCar} OpponentCar
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OpponentCar.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveScreenshotRequest.OpponentCar();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.carId = reader.uint32();
                                break;
                            }
                        case 2: {
                                message.tunePower = reader.uint32();
                                break;
                            }
                        case 3: {
                                message.tuneHandling = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("tunePower"))
                        throw $util.ProtocolError("missing required 'tunePower'", { instance: message });
                    if (!message.hasOwnProperty("tuneHandling"))
                        throw $util.ProtocolError("missing required 'tuneHandling'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an OpponentCar message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.SaveScreenshotRequest.OpponentCar
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.SaveScreenshotRequest.OpponentCar} OpponentCar
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OpponentCar.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an OpponentCar message.
                 * @function verify
                 * @memberof wm5.protobuf.SaveScreenshotRequest.OpponentCar
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OpponentCar.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.carId != null && message.hasOwnProperty("carId"))
                        if (!$util.isInteger(message.carId))
                            return "carId: integer expected";
                    if (!$util.isInteger(message.tunePower))
                        return "tunePower: integer expected";
                    if (!$util.isInteger(message.tuneHandling))
                        return "tuneHandling: integer expected";
                    return null;
                };

                /**
                 * Creates an OpponentCar message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.SaveScreenshotRequest.OpponentCar
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.SaveScreenshotRequest.OpponentCar} OpponentCar
                 */
                OpponentCar.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.SaveScreenshotRequest.OpponentCar)
                        return object;
                    let message = new $root.wm5.protobuf.SaveScreenshotRequest.OpponentCar();
                    if (object.carId != null)
                        message.carId = object.carId >>> 0;
                    if (object.tunePower != null)
                        message.tunePower = object.tunePower >>> 0;
                    if (object.tuneHandling != null)
                        message.tuneHandling = object.tuneHandling >>> 0;
                    return message;
                };

                /**
                 * Creates a plain object from an OpponentCar message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.SaveScreenshotRequest.OpponentCar
                 * @static
                 * @param {wm5.protobuf.SaveScreenshotRequest.OpponentCar} message OpponentCar
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OpponentCar.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.carId = 0;
                        object.tunePower = 0;
                        object.tuneHandling = 0;
                    }
                    if (message.carId != null && message.hasOwnProperty("carId"))
                        object.carId = message.carId;
                    if (message.tunePower != null && message.hasOwnProperty("tunePower"))
                        object.tunePower = message.tunePower;
                    if (message.tuneHandling != null && message.hasOwnProperty("tuneHandling"))
                        object.tuneHandling = message.tuneHandling;
                    return object;
                };

                /**
                 * Converts this OpponentCar to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.SaveScreenshotRequest.OpponentCar
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OpponentCar.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for OpponentCar
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.SaveScreenshotRequest.OpponentCar
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OpponentCar.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.SaveScreenshotRequest.OpponentCar";
                };

                return OpponentCar;
            })();

            return SaveScreenshotRequest;
        })();

        protobuf.SaveScreenshotResponse = (function() {

            /**
             * Properties of a SaveScreenshotResponse.
             * @memberof wm5.protobuf
             * @interface ISaveScreenshotResponse
             * @property {wm5.protobuf.ErrorCode} error SaveScreenshotResponse error
             */

            /**
             * Constructs a new SaveScreenshotResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a SaveScreenshotResponse.
             * @implements ISaveScreenshotResponse
             * @constructor
             * @param {wm5.protobuf.ISaveScreenshotResponse=} [properties] Properties to set
             */
            function SaveScreenshotResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SaveScreenshotResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.SaveScreenshotResponse
             * @instance
             */
            SaveScreenshotResponse.prototype.error = 0;

            /**
             * Creates a new SaveScreenshotResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SaveScreenshotResponse
             * @static
             * @param {wm5.protobuf.ISaveScreenshotResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.SaveScreenshotResponse} SaveScreenshotResponse instance
             */
            SaveScreenshotResponse.create = function create(properties) {
                return new SaveScreenshotResponse(properties);
            };

            /**
             * Encodes the specified SaveScreenshotResponse message. Does not implicitly {@link wm5.protobuf.SaveScreenshotResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SaveScreenshotResponse
             * @static
             * @param {wm5.protobuf.ISaveScreenshotResponse} message SaveScreenshotResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveScreenshotResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified SaveScreenshotResponse message, length delimited. Does not implicitly {@link wm5.protobuf.SaveScreenshotResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SaveScreenshotResponse
             * @static
             * @param {wm5.protobuf.ISaveScreenshotResponse} message SaveScreenshotResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveScreenshotResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SaveScreenshotResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SaveScreenshotResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SaveScreenshotResponse} SaveScreenshotResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveScreenshotResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveScreenshotResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a SaveScreenshotResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SaveScreenshotResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SaveScreenshotResponse} SaveScreenshotResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveScreenshotResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SaveScreenshotResponse message.
             * @function verify
             * @memberof wm5.protobuf.SaveScreenshotResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SaveScreenshotResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a SaveScreenshotResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SaveScreenshotResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SaveScreenshotResponse} SaveScreenshotResponse
             */
            SaveScreenshotResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SaveScreenshotResponse)
                    return object;
                let message = new $root.wm5.protobuf.SaveScreenshotResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a SaveScreenshotResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SaveScreenshotResponse
             * @static
             * @param {wm5.protobuf.SaveScreenshotResponse} message SaveScreenshotResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SaveScreenshotResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this SaveScreenshotResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SaveScreenshotResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SaveScreenshotResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SaveScreenshotResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.SaveScreenshotResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SaveScreenshotResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SaveScreenshotResponse";
            };

            return SaveScreenshotResponse;
        })();

        protobuf.SaveClientReportRequest = (function() {

            /**
             * Properties of a SaveClientReportRequest.
             * @memberof wm5.protobuf
             * @interface ISaveClientReportRequest
             * @property {Uint8Array} report SaveClientReportRequest report
             * @property {number} modifiedAt SaveClientReportRequest modifiedAt
             */

            /**
             * Constructs a new SaveClientReportRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a SaveClientReportRequest.
             * @implements ISaveClientReportRequest
             * @constructor
             * @param {wm5.protobuf.ISaveClientReportRequest=} [properties] Properties to set
             */
            function SaveClientReportRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SaveClientReportRequest report.
             * @member {Uint8Array} report
             * @memberof wm5.protobuf.SaveClientReportRequest
             * @instance
             */
            SaveClientReportRequest.prototype.report = $util.newBuffer([]);

            /**
             * SaveClientReportRequest modifiedAt.
             * @member {number} modifiedAt
             * @memberof wm5.protobuf.SaveClientReportRequest
             * @instance
             */
            SaveClientReportRequest.prototype.modifiedAt = 0;

            /**
             * Creates a new SaveClientReportRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SaveClientReportRequest
             * @static
             * @param {wm5.protobuf.ISaveClientReportRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.SaveClientReportRequest} SaveClientReportRequest instance
             */
            SaveClientReportRequest.create = function create(properties) {
                return new SaveClientReportRequest(properties);
            };

            /**
             * Encodes the specified SaveClientReportRequest message. Does not implicitly {@link wm5.protobuf.SaveClientReportRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SaveClientReportRequest
             * @static
             * @param {wm5.protobuf.ISaveClientReportRequest} message SaveClientReportRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveClientReportRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.report);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.modifiedAt);
                return writer;
            };

            /**
             * Encodes the specified SaveClientReportRequest message, length delimited. Does not implicitly {@link wm5.protobuf.SaveClientReportRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SaveClientReportRequest
             * @static
             * @param {wm5.protobuf.ISaveClientReportRequest} message SaveClientReportRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveClientReportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SaveClientReportRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SaveClientReportRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SaveClientReportRequest} SaveClientReportRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveClientReportRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveClientReportRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.report = reader.bytes();
                            break;
                        }
                    case 2: {
                            message.modifiedAt = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("report"))
                    throw $util.ProtocolError("missing required 'report'", { instance: message });
                if (!message.hasOwnProperty("modifiedAt"))
                    throw $util.ProtocolError("missing required 'modifiedAt'", { instance: message });
                return message;
            };

            /**
             * Decodes a SaveClientReportRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SaveClientReportRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SaveClientReportRequest} SaveClientReportRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveClientReportRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SaveClientReportRequest message.
             * @function verify
             * @memberof wm5.protobuf.SaveClientReportRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SaveClientReportRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!(message.report && typeof message.report.length === "number" || $util.isString(message.report)))
                    return "report: buffer expected";
                if (!$util.isInteger(message.modifiedAt))
                    return "modifiedAt: integer expected";
                return null;
            };

            /**
             * Creates a SaveClientReportRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SaveClientReportRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SaveClientReportRequest} SaveClientReportRequest
             */
            SaveClientReportRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SaveClientReportRequest)
                    return object;
                let message = new $root.wm5.protobuf.SaveClientReportRequest();
                if (object.report != null)
                    if (typeof object.report === "string")
                        $util.base64.decode(object.report, message.report = $util.newBuffer($util.base64.length(object.report)), 0);
                    else if (object.report.length >= 0)
                        message.report = object.report;
                if (object.modifiedAt != null)
                    message.modifiedAt = object.modifiedAt >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a SaveClientReportRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SaveClientReportRequest
             * @static
             * @param {wm5.protobuf.SaveClientReportRequest} message SaveClientReportRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SaveClientReportRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    if (options.bytes === String)
                        object.report = "";
                    else {
                        object.report = [];
                        if (options.bytes !== Array)
                            object.report = $util.newBuffer(object.report);
                    }
                    object.modifiedAt = 0;
                }
                if (message.report != null && message.hasOwnProperty("report"))
                    object.report = options.bytes === String ? $util.base64.encode(message.report, 0, message.report.length) : options.bytes === Array ? Array.prototype.slice.call(message.report) : message.report;
                if (message.modifiedAt != null && message.hasOwnProperty("modifiedAt"))
                    object.modifiedAt = message.modifiedAt;
                return object;
            };

            /**
             * Converts this SaveClientReportRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SaveClientReportRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SaveClientReportRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SaveClientReportRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.SaveClientReportRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SaveClientReportRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SaveClientReportRequest";
            };

            return SaveClientReportRequest;
        })();

        protobuf.SaveClientReportResponse = (function() {

            /**
             * Properties of a SaveClientReportResponse.
             * @memberof wm5.protobuf
             * @interface ISaveClientReportResponse
             * @property {wm5.protobuf.ErrorCode} error SaveClientReportResponse error
             */

            /**
             * Constructs a new SaveClientReportResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a SaveClientReportResponse.
             * @implements ISaveClientReportResponse
             * @constructor
             * @param {wm5.protobuf.ISaveClientReportResponse=} [properties] Properties to set
             */
            function SaveClientReportResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SaveClientReportResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.SaveClientReportResponse
             * @instance
             */
            SaveClientReportResponse.prototype.error = 0;

            /**
             * Creates a new SaveClientReportResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SaveClientReportResponse
             * @static
             * @param {wm5.protobuf.ISaveClientReportResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.SaveClientReportResponse} SaveClientReportResponse instance
             */
            SaveClientReportResponse.create = function create(properties) {
                return new SaveClientReportResponse(properties);
            };

            /**
             * Encodes the specified SaveClientReportResponse message. Does not implicitly {@link wm5.protobuf.SaveClientReportResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SaveClientReportResponse
             * @static
             * @param {wm5.protobuf.ISaveClientReportResponse} message SaveClientReportResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveClientReportResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified SaveClientReportResponse message, length delimited. Does not implicitly {@link wm5.protobuf.SaveClientReportResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SaveClientReportResponse
             * @static
             * @param {wm5.protobuf.ISaveClientReportResponse} message SaveClientReportResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveClientReportResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SaveClientReportResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SaveClientReportResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SaveClientReportResponse} SaveClientReportResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveClientReportResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveClientReportResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a SaveClientReportResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SaveClientReportResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SaveClientReportResponse} SaveClientReportResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveClientReportResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SaveClientReportResponse message.
             * @function verify
             * @memberof wm5.protobuf.SaveClientReportResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SaveClientReportResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a SaveClientReportResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SaveClientReportResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SaveClientReportResponse} SaveClientReportResponse
             */
            SaveClientReportResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SaveClientReportResponse)
                    return object;
                let message = new $root.wm5.protobuf.SaveClientReportResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a SaveClientReportResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SaveClientReportResponse
             * @static
             * @param {wm5.protobuf.SaveClientReportResponse} message SaveClientReportResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SaveClientReportResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this SaveClientReportResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SaveClientReportResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SaveClientReportResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SaveClientReportResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.SaveClientReportResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SaveClientReportResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SaveClientReportResponse";
            };

            return SaveClientReportResponse;
        })();

        protobuf.LoadScratchInformationRequest = (function() {

            /**
             * Properties of a LoadScratchInformationRequest.
             * @memberof wm5.protobuf
             * @interface ILoadScratchInformationRequest
             * @property {number} userId LoadScratchInformationRequest userId
             */

            /**
             * Constructs a new LoadScratchInformationRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadScratchInformationRequest.
             * @implements ILoadScratchInformationRequest
             * @constructor
             * @param {wm5.protobuf.ILoadScratchInformationRequest=} [properties] Properties to set
             */
            function LoadScratchInformationRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadScratchInformationRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.LoadScratchInformationRequest
             * @instance
             */
            LoadScratchInformationRequest.prototype.userId = 0;

            /**
             * Creates a new LoadScratchInformationRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadScratchInformationRequest
             * @static
             * @param {wm5.protobuf.ILoadScratchInformationRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadScratchInformationRequest} LoadScratchInformationRequest instance
             */
            LoadScratchInformationRequest.create = function create(properties) {
                return new LoadScratchInformationRequest(properties);
            };

            /**
             * Encodes the specified LoadScratchInformationRequest message. Does not implicitly {@link wm5.protobuf.LoadScratchInformationRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadScratchInformationRequest
             * @static
             * @param {wm5.protobuf.ILoadScratchInformationRequest} message LoadScratchInformationRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadScratchInformationRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                return writer;
            };

            /**
             * Encodes the specified LoadScratchInformationRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadScratchInformationRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadScratchInformationRequest
             * @static
             * @param {wm5.protobuf.ILoadScratchInformationRequest} message LoadScratchInformationRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadScratchInformationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadScratchInformationRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadScratchInformationRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadScratchInformationRequest} LoadScratchInformationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadScratchInformationRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadScratchInformationRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadScratchInformationRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadScratchInformationRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadScratchInformationRequest} LoadScratchInformationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadScratchInformationRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadScratchInformationRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadScratchInformationRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadScratchInformationRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                return null;
            };

            /**
             * Creates a LoadScratchInformationRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadScratchInformationRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadScratchInformationRequest} LoadScratchInformationRequest
             */
            LoadScratchInformationRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadScratchInformationRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadScratchInformationRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadScratchInformationRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadScratchInformationRequest
             * @static
             * @param {wm5.protobuf.LoadScratchInformationRequest} message LoadScratchInformationRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadScratchInformationRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.userId = 0;
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                return object;
            };

            /**
             * Converts this LoadScratchInformationRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadScratchInformationRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadScratchInformationRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadScratchInformationRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadScratchInformationRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadScratchInformationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadScratchInformationRequest";
            };

            return LoadScratchInformationRequest;
        })();

        protobuf.LoadScratchInformationResponse = (function() {

            /**
             * Properties of a LoadScratchInformationResponse.
             * @memberof wm5.protobuf
             * @interface ILoadScratchInformationResponse
             * @property {wm5.protobuf.ErrorCode} error LoadScratchInformationResponse error
             * @property {Array.<wm5.protobuf.IScratchSheet>|null} [scratchSheets] LoadScratchInformationResponse scratchSheets
             * @property {number} currentSheet LoadScratchInformationResponse currentSheet
             * @property {number} numOfScratched LoadScratchInformationResponse numOfScratched
             * @property {Array.<wm5.protobuf.IUserItem>|null} [ownedUserItems] LoadScratchInformationResponse ownedUserItems
             * @property {number|null} [banacoinsRemain] LoadScratchInformationResponse banacoinsRemain
             */

            /**
             * Constructs a new LoadScratchInformationResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadScratchInformationResponse.
             * @implements ILoadScratchInformationResponse
             * @constructor
             * @param {wm5.protobuf.ILoadScratchInformationResponse=} [properties] Properties to set
             */
            function LoadScratchInformationResponse(properties) {
                this.scratchSheets = [];
                this.ownedUserItems = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadScratchInformationResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadScratchInformationResponse
             * @instance
             */
            LoadScratchInformationResponse.prototype.error = 0;

            /**
             * LoadScratchInformationResponse scratchSheets.
             * @member {Array.<wm5.protobuf.IScratchSheet>} scratchSheets
             * @memberof wm5.protobuf.LoadScratchInformationResponse
             * @instance
             */
            LoadScratchInformationResponse.prototype.scratchSheets = $util.emptyArray;

            /**
             * LoadScratchInformationResponse currentSheet.
             * @member {number} currentSheet
             * @memberof wm5.protobuf.LoadScratchInformationResponse
             * @instance
             */
            LoadScratchInformationResponse.prototype.currentSheet = 0;

            /**
             * LoadScratchInformationResponse numOfScratched.
             * @member {number} numOfScratched
             * @memberof wm5.protobuf.LoadScratchInformationResponse
             * @instance
             */
            LoadScratchInformationResponse.prototype.numOfScratched = 0;

            /**
             * LoadScratchInformationResponse ownedUserItems.
             * @member {Array.<wm5.protobuf.IUserItem>} ownedUserItems
             * @memberof wm5.protobuf.LoadScratchInformationResponse
             * @instance
             */
            LoadScratchInformationResponse.prototype.ownedUserItems = $util.emptyArray;

            /**
             * LoadScratchInformationResponse banacoinsRemain.
             * @member {number} banacoinsRemain
             * @memberof wm5.protobuf.LoadScratchInformationResponse
             * @instance
             */
            LoadScratchInformationResponse.prototype.banacoinsRemain = 0;

            /**
             * Creates a new LoadScratchInformationResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadScratchInformationResponse
             * @static
             * @param {wm5.protobuf.ILoadScratchInformationResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadScratchInformationResponse} LoadScratchInformationResponse instance
             */
            LoadScratchInformationResponse.create = function create(properties) {
                return new LoadScratchInformationResponse(properties);
            };

            /**
             * Encodes the specified LoadScratchInformationResponse message. Does not implicitly {@link wm5.protobuf.LoadScratchInformationResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadScratchInformationResponse
             * @static
             * @param {wm5.protobuf.ILoadScratchInformationResponse} message LoadScratchInformationResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadScratchInformationResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.scratchSheets != null && message.scratchSheets.length)
                    for (let i = 0; i < message.scratchSheets.length; ++i)
                        $root.wm5.protobuf.ScratchSheet.encode(message.scratchSheets[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.currentSheet);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.numOfScratched);
                if (message.ownedUserItems != null && message.ownedUserItems.length)
                    for (let i = 0; i < message.ownedUserItems.length; ++i)
                        $root.wm5.protobuf.UserItem.encode(message.ownedUserItems[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                if (message.banacoinsRemain != null && Object.hasOwnProperty.call(message, "banacoinsRemain"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.banacoinsRemain);
                return writer;
            };

            /**
             * Encodes the specified LoadScratchInformationResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadScratchInformationResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadScratchInformationResponse
             * @static
             * @param {wm5.protobuf.ILoadScratchInformationResponse} message LoadScratchInformationResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadScratchInformationResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadScratchInformationResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadScratchInformationResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadScratchInformationResponse} LoadScratchInformationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadScratchInformationResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadScratchInformationResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            if (!(message.scratchSheets && message.scratchSheets.length))
                                message.scratchSheets = [];
                            message.scratchSheets.push($root.wm5.protobuf.ScratchSheet.decode(reader, reader.uint32()));
                            break;
                        }
                    case 3: {
                            message.currentSheet = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.numOfScratched = reader.uint32();
                            break;
                        }
                    case 5: {
                            if (!(message.ownedUserItems && message.ownedUserItems.length))
                                message.ownedUserItems = [];
                            message.ownedUserItems.push($root.wm5.protobuf.UserItem.decode(reader, reader.uint32()));
                            break;
                        }
                    case 6: {
                            message.banacoinsRemain = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("currentSheet"))
                    throw $util.ProtocolError("missing required 'currentSheet'", { instance: message });
                if (!message.hasOwnProperty("numOfScratched"))
                    throw $util.ProtocolError("missing required 'numOfScratched'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadScratchInformationResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadScratchInformationResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadScratchInformationResponse} LoadScratchInformationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadScratchInformationResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadScratchInformationResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadScratchInformationResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadScratchInformationResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.scratchSheets != null && message.hasOwnProperty("scratchSheets")) {
                    if (!Array.isArray(message.scratchSheets))
                        return "scratchSheets: array expected";
                    for (let i = 0; i < message.scratchSheets.length; ++i) {
                        let error = $root.wm5.protobuf.ScratchSheet.verify(message.scratchSheets[i]);
                        if (error)
                            return "scratchSheets." + error;
                    }
                }
                if (!$util.isInteger(message.currentSheet))
                    return "currentSheet: integer expected";
                if (!$util.isInteger(message.numOfScratched))
                    return "numOfScratched: integer expected";
                if (message.ownedUserItems != null && message.hasOwnProperty("ownedUserItems")) {
                    if (!Array.isArray(message.ownedUserItems))
                        return "ownedUserItems: array expected";
                    for (let i = 0; i < message.ownedUserItems.length; ++i) {
                        let error = $root.wm5.protobuf.UserItem.verify(message.ownedUserItems[i]);
                        if (error)
                            return "ownedUserItems." + error;
                    }
                }
                if (message.banacoinsRemain != null && message.hasOwnProperty("banacoinsRemain"))
                    if (!$util.isInteger(message.banacoinsRemain))
                        return "banacoinsRemain: integer expected";
                return null;
            };

            /**
             * Creates a LoadScratchInformationResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadScratchInformationResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadScratchInformationResponse} LoadScratchInformationResponse
             */
            LoadScratchInformationResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadScratchInformationResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadScratchInformationResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.scratchSheets) {
                    if (!Array.isArray(object.scratchSheets))
                        throw TypeError(".wm5.protobuf.LoadScratchInformationResponse.scratchSheets: array expected");
                    message.scratchSheets = [];
                    for (let i = 0; i < object.scratchSheets.length; ++i) {
                        if (typeof object.scratchSheets[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadScratchInformationResponse.scratchSheets: object expected");
                        message.scratchSheets[i] = $root.wm5.protobuf.ScratchSheet.fromObject(object.scratchSheets[i]);
                    }
                }
                if (object.currentSheet != null)
                    message.currentSheet = object.currentSheet >>> 0;
                if (object.numOfScratched != null)
                    message.numOfScratched = object.numOfScratched >>> 0;
                if (object.ownedUserItems) {
                    if (!Array.isArray(object.ownedUserItems))
                        throw TypeError(".wm5.protobuf.LoadScratchInformationResponse.ownedUserItems: array expected");
                    message.ownedUserItems = [];
                    for (let i = 0; i < object.ownedUserItems.length; ++i) {
                        if (typeof object.ownedUserItems[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadScratchInformationResponse.ownedUserItems: object expected");
                        message.ownedUserItems[i] = $root.wm5.protobuf.UserItem.fromObject(object.ownedUserItems[i]);
                    }
                }
                if (object.banacoinsRemain != null)
                    message.banacoinsRemain = object.banacoinsRemain >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadScratchInformationResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadScratchInformationResponse
             * @static
             * @param {wm5.protobuf.LoadScratchInformationResponse} message LoadScratchInformationResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadScratchInformationResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.scratchSheets = [];
                    object.ownedUserItems = [];
                }
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.currentSheet = 0;
                    object.numOfScratched = 0;
                    object.banacoinsRemain = 0;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.scratchSheets && message.scratchSheets.length) {
                    object.scratchSheets = [];
                    for (let j = 0; j < message.scratchSheets.length; ++j)
                        object.scratchSheets[j] = $root.wm5.protobuf.ScratchSheet.toObject(message.scratchSheets[j], options);
                }
                if (message.currentSheet != null && message.hasOwnProperty("currentSheet"))
                    object.currentSheet = message.currentSheet;
                if (message.numOfScratched != null && message.hasOwnProperty("numOfScratched"))
                    object.numOfScratched = message.numOfScratched;
                if (message.ownedUserItems && message.ownedUserItems.length) {
                    object.ownedUserItems = [];
                    for (let j = 0; j < message.ownedUserItems.length; ++j)
                        object.ownedUserItems[j] = $root.wm5.protobuf.UserItem.toObject(message.ownedUserItems[j], options);
                }
                if (message.banacoinsRemain != null && message.hasOwnProperty("banacoinsRemain"))
                    object.banacoinsRemain = message.banacoinsRemain;
                return object;
            };

            /**
             * Converts this LoadScratchInformationResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadScratchInformationResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadScratchInformationResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadScratchInformationResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadScratchInformationResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadScratchInformationResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadScratchInformationResponse";
            };

            return LoadScratchInformationResponse;
        })();

        protobuf.SaveScratchSheetRequest = (function() {

            /**
             * Properties of a SaveScratchSheetRequest.
             * @memberof wm5.protobuf
             * @interface ISaveScratchSheetRequest
             * @property {number} timestamp SaveScratchSheetRequest timestamp
             * @property {number} targetSheet SaveScratchSheetRequest targetSheet
             * @property {number} targetSquare SaveScratchSheetRequest targetSquare
             * @property {number|null} [userId] SaveScratchSheetRequest userId
             * @property {string|null} [sessionId] SaveScratchSheetRequest sessionId
             * @property {string|null} [personId] SaveScratchSheetRequest personId
             * @property {number|null} [price] SaveScratchSheetRequest price
             */

            /**
             * Constructs a new SaveScratchSheetRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a SaveScratchSheetRequest.
             * @implements ISaveScratchSheetRequest
             * @constructor
             * @param {wm5.protobuf.ISaveScratchSheetRequest=} [properties] Properties to set
             */
            function SaveScratchSheetRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SaveScratchSheetRequest timestamp.
             * @member {number} timestamp
             * @memberof wm5.protobuf.SaveScratchSheetRequest
             * @instance
             */
            SaveScratchSheetRequest.prototype.timestamp = 0;

            /**
             * SaveScratchSheetRequest targetSheet.
             * @member {number} targetSheet
             * @memberof wm5.protobuf.SaveScratchSheetRequest
             * @instance
             */
            SaveScratchSheetRequest.prototype.targetSheet = 0;

            /**
             * SaveScratchSheetRequest targetSquare.
             * @member {number} targetSquare
             * @memberof wm5.protobuf.SaveScratchSheetRequest
             * @instance
             */
            SaveScratchSheetRequest.prototype.targetSquare = 0;

            /**
             * SaveScratchSheetRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.SaveScratchSheetRequest
             * @instance
             */
            SaveScratchSheetRequest.prototype.userId = 0;

            /**
             * SaveScratchSheetRequest sessionId.
             * @member {string} sessionId
             * @memberof wm5.protobuf.SaveScratchSheetRequest
             * @instance
             */
            SaveScratchSheetRequest.prototype.sessionId = "";

            /**
             * SaveScratchSheetRequest personId.
             * @member {string} personId
             * @memberof wm5.protobuf.SaveScratchSheetRequest
             * @instance
             */
            SaveScratchSheetRequest.prototype.personId = "";

            /**
             * SaveScratchSheetRequest price.
             * @member {number} price
             * @memberof wm5.protobuf.SaveScratchSheetRequest
             * @instance
             */
            SaveScratchSheetRequest.prototype.price = 0;

            /**
             * Creates a new SaveScratchSheetRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SaveScratchSheetRequest
             * @static
             * @param {wm5.protobuf.ISaveScratchSheetRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.SaveScratchSheetRequest} SaveScratchSheetRequest instance
             */
            SaveScratchSheetRequest.create = function create(properties) {
                return new SaveScratchSheetRequest(properties);
            };

            /**
             * Encodes the specified SaveScratchSheetRequest message. Does not implicitly {@link wm5.protobuf.SaveScratchSheetRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SaveScratchSheetRequest
             * @static
             * @param {wm5.protobuf.ISaveScratchSheetRequest} message SaveScratchSheetRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveScratchSheetRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.targetSheet);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetSquare);
                if (message.userId != null && Object.hasOwnProperty.call(message, "userId"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.userId);
                if (message.sessionId != null && Object.hasOwnProperty.call(message, "sessionId"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.sessionId);
                if (message.personId != null && Object.hasOwnProperty.call(message, "personId"))
                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.personId);
                if (message.price != null && Object.hasOwnProperty.call(message, "price"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.price);
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.timestamp);
                return writer;
            };

            /**
             * Encodes the specified SaveScratchSheetRequest message, length delimited. Does not implicitly {@link wm5.protobuf.SaveScratchSheetRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SaveScratchSheetRequest
             * @static
             * @param {wm5.protobuf.ISaveScratchSheetRequest} message SaveScratchSheetRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveScratchSheetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SaveScratchSheetRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SaveScratchSheetRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SaveScratchSheetRequest} SaveScratchSheetRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveScratchSheetRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveScratchSheetRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 7: {
                            message.timestamp = reader.uint32();
                            break;
                        }
                    case 1: {
                            message.targetSheet = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.targetSquare = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.sessionId = reader.string();
                            break;
                        }
                    case 5: {
                            message.personId = reader.string();
                            break;
                        }
                    case 6: {
                            message.price = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("timestamp"))
                    throw $util.ProtocolError("missing required 'timestamp'", { instance: message });
                if (!message.hasOwnProperty("targetSheet"))
                    throw $util.ProtocolError("missing required 'targetSheet'", { instance: message });
                if (!message.hasOwnProperty("targetSquare"))
                    throw $util.ProtocolError("missing required 'targetSquare'", { instance: message });
                return message;
            };

            /**
             * Decodes a SaveScratchSheetRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SaveScratchSheetRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SaveScratchSheetRequest} SaveScratchSheetRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveScratchSheetRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SaveScratchSheetRequest message.
             * @function verify
             * @memberof wm5.protobuf.SaveScratchSheetRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SaveScratchSheetRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.timestamp))
                    return "timestamp: integer expected";
                if (!$util.isInteger(message.targetSheet))
                    return "targetSheet: integer expected";
                if (!$util.isInteger(message.targetSquare))
                    return "targetSquare: integer expected";
                if (message.userId != null && message.hasOwnProperty("userId"))
                    if (!$util.isInteger(message.userId))
                        return "userId: integer expected";
                if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                    if (!$util.isString(message.sessionId))
                        return "sessionId: string expected";
                if (message.personId != null && message.hasOwnProperty("personId"))
                    if (!$util.isString(message.personId))
                        return "personId: string expected";
                if (message.price != null && message.hasOwnProperty("price"))
                    if (!$util.isInteger(message.price))
                        return "price: integer expected";
                return null;
            };

            /**
             * Creates a SaveScratchSheetRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SaveScratchSheetRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SaveScratchSheetRequest} SaveScratchSheetRequest
             */
            SaveScratchSheetRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SaveScratchSheetRequest)
                    return object;
                let message = new $root.wm5.protobuf.SaveScratchSheetRequest();
                if (object.timestamp != null)
                    message.timestamp = object.timestamp >>> 0;
                if (object.targetSheet != null)
                    message.targetSheet = object.targetSheet >>> 0;
                if (object.targetSquare != null)
                    message.targetSquare = object.targetSquare >>> 0;
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.sessionId != null)
                    message.sessionId = String(object.sessionId);
                if (object.personId != null)
                    message.personId = String(object.personId);
                if (object.price != null)
                    message.price = object.price >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a SaveScratchSheetRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SaveScratchSheetRequest
             * @static
             * @param {wm5.protobuf.SaveScratchSheetRequest} message SaveScratchSheetRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SaveScratchSheetRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.targetSheet = 0;
                    object.targetSquare = 0;
                    object.userId = 0;
                    object.sessionId = "";
                    object.personId = "";
                    object.price = 0;
                    object.timestamp = 0;
                }
                if (message.targetSheet != null && message.hasOwnProperty("targetSheet"))
                    object.targetSheet = message.targetSheet;
                if (message.targetSquare != null && message.hasOwnProperty("targetSquare"))
                    object.targetSquare = message.targetSquare;
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                    object.sessionId = message.sessionId;
                if (message.personId != null && message.hasOwnProperty("personId"))
                    object.personId = message.personId;
                if (message.price != null && message.hasOwnProperty("price"))
                    object.price = message.price;
                if (message.timestamp != null && message.hasOwnProperty("timestamp"))
                    object.timestamp = message.timestamp;
                return object;
            };

            /**
             * Converts this SaveScratchSheetRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SaveScratchSheetRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SaveScratchSheetRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SaveScratchSheetRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.SaveScratchSheetRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SaveScratchSheetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SaveScratchSheetRequest";
            };

            return SaveScratchSheetRequest;
        })();

        protobuf.SaveScratchSheetResponse = (function() {

            /**
             * Properties of a SaveScratchSheetResponse.
             * @memberof wm5.protobuf
             * @interface ISaveScratchSheetResponse
             * @property {wm5.protobuf.ErrorCode} error SaveScratchSheetResponse error
             * @property {Array.<wm5.protobuf.IScratchSheet>|null} [scratchSheets] SaveScratchSheetResponse scratchSheets
             * @property {number} currentSheet SaveScratchSheetResponse currentSheet
             * @property {number} numOfScratched SaveScratchSheetResponse numOfScratched
             * @property {wm5.protobuf.IUserItem|null} [earnedItem] SaveScratchSheetResponse earnedItem
             * @property {wm5.protobuf.BanacoinErrorCode|null} [banacoinError] SaveScratchSheetResponse banacoinError
             * @property {string|null} [sessionId] SaveScratchSheetResponse sessionId
             * @property {string|null} [contactNumber] SaveScratchSheetResponse contactNumber
             * @property {number|null} [banacoinsRemain] SaveScratchSheetResponse banacoinsRemain
             */

            /**
             * Constructs a new SaveScratchSheetResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a SaveScratchSheetResponse.
             * @implements ISaveScratchSheetResponse
             * @constructor
             * @param {wm5.protobuf.ISaveScratchSheetResponse=} [properties] Properties to set
             */
            function SaveScratchSheetResponse(properties) {
                this.scratchSheets = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SaveScratchSheetResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @instance
             */
            SaveScratchSheetResponse.prototype.error = 0;

            /**
             * SaveScratchSheetResponse scratchSheets.
             * @member {Array.<wm5.protobuf.IScratchSheet>} scratchSheets
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @instance
             */
            SaveScratchSheetResponse.prototype.scratchSheets = $util.emptyArray;

            /**
             * SaveScratchSheetResponse currentSheet.
             * @member {number} currentSheet
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @instance
             */
            SaveScratchSheetResponse.prototype.currentSheet = 0;

            /**
             * SaveScratchSheetResponse numOfScratched.
             * @member {number} numOfScratched
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @instance
             */
            SaveScratchSheetResponse.prototype.numOfScratched = 0;

            /**
             * SaveScratchSheetResponse earnedItem.
             * @member {wm5.protobuf.IUserItem|null|undefined} earnedItem
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @instance
             */
            SaveScratchSheetResponse.prototype.earnedItem = null;

            /**
             * SaveScratchSheetResponse banacoinError.
             * @member {wm5.protobuf.BanacoinErrorCode} banacoinError
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @instance
             */
            SaveScratchSheetResponse.prototype.banacoinError = 0;

            /**
             * SaveScratchSheetResponse sessionId.
             * @member {string} sessionId
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @instance
             */
            SaveScratchSheetResponse.prototype.sessionId = "";

            /**
             * SaveScratchSheetResponse contactNumber.
             * @member {string} contactNumber
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @instance
             */
            SaveScratchSheetResponse.prototype.contactNumber = "";

            /**
             * SaveScratchSheetResponse banacoinsRemain.
             * @member {number} banacoinsRemain
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @instance
             */
            SaveScratchSheetResponse.prototype.banacoinsRemain = 0;

            /**
             * Creates a new SaveScratchSheetResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @static
             * @param {wm5.protobuf.ISaveScratchSheetResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.SaveScratchSheetResponse} SaveScratchSheetResponse instance
             */
            SaveScratchSheetResponse.create = function create(properties) {
                return new SaveScratchSheetResponse(properties);
            };

            /**
             * Encodes the specified SaveScratchSheetResponse message. Does not implicitly {@link wm5.protobuf.SaveScratchSheetResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @static
             * @param {wm5.protobuf.ISaveScratchSheetResponse} message SaveScratchSheetResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveScratchSheetResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.scratchSheets != null && message.scratchSheets.length)
                    for (let i = 0; i < message.scratchSheets.length; ++i)
                        $root.wm5.protobuf.ScratchSheet.encode(message.scratchSheets[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.currentSheet);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.numOfScratched);
                if (message.earnedItem != null && Object.hasOwnProperty.call(message, "earnedItem"))
                    $root.wm5.protobuf.UserItem.encode(message.earnedItem, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                if (message.banacoinError != null && Object.hasOwnProperty.call(message, "banacoinError"))
                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.banacoinError);
                if (message.sessionId != null && Object.hasOwnProperty.call(message, "sessionId"))
                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.sessionId);
                if (message.contactNumber != null && Object.hasOwnProperty.call(message, "contactNumber"))
                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.contactNumber);
                if (message.banacoinsRemain != null && Object.hasOwnProperty.call(message, "banacoinsRemain"))
                    writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.banacoinsRemain);
                return writer;
            };

            /**
             * Encodes the specified SaveScratchSheetResponse message, length delimited. Does not implicitly {@link wm5.protobuf.SaveScratchSheetResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @static
             * @param {wm5.protobuf.ISaveScratchSheetResponse} message SaveScratchSheetResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SaveScratchSheetResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SaveScratchSheetResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SaveScratchSheetResponse} SaveScratchSheetResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveScratchSheetResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SaveScratchSheetResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            if (!(message.scratchSheets && message.scratchSheets.length))
                                message.scratchSheets = [];
                            message.scratchSheets.push($root.wm5.protobuf.ScratchSheet.decode(reader, reader.uint32()));
                            break;
                        }
                    case 3: {
                            message.currentSheet = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.numOfScratched = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.earnedItem = $root.wm5.protobuf.UserItem.decode(reader, reader.uint32());
                            break;
                        }
                    case 6: {
                            message.banacoinError = reader.int32();
                            break;
                        }
                    case 7: {
                            message.sessionId = reader.string();
                            break;
                        }
                    case 8: {
                            message.contactNumber = reader.string();
                            break;
                        }
                    case 9: {
                            message.banacoinsRemain = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("currentSheet"))
                    throw $util.ProtocolError("missing required 'currentSheet'", { instance: message });
                if (!message.hasOwnProperty("numOfScratched"))
                    throw $util.ProtocolError("missing required 'numOfScratched'", { instance: message });
                return message;
            };

            /**
             * Decodes a SaveScratchSheetResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SaveScratchSheetResponse} SaveScratchSheetResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SaveScratchSheetResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SaveScratchSheetResponse message.
             * @function verify
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SaveScratchSheetResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.scratchSheets != null && message.hasOwnProperty("scratchSheets")) {
                    if (!Array.isArray(message.scratchSheets))
                        return "scratchSheets: array expected";
                    for (let i = 0; i < message.scratchSheets.length; ++i) {
                        let error = $root.wm5.protobuf.ScratchSheet.verify(message.scratchSheets[i]);
                        if (error)
                            return "scratchSheets." + error;
                    }
                }
                if (!$util.isInteger(message.currentSheet))
                    return "currentSheet: integer expected";
                if (!$util.isInteger(message.numOfScratched))
                    return "numOfScratched: integer expected";
                if (message.earnedItem != null && message.hasOwnProperty("earnedItem")) {
                    let error = $root.wm5.protobuf.UserItem.verify(message.earnedItem);
                    if (error)
                        return "earnedItem." + error;
                }
                if (message.banacoinError != null && message.hasOwnProperty("banacoinError"))
                    switch (message.banacoinError) {
                    default:
                        return "banacoinError: enum value expected";
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                        break;
                    }
                if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                    if (!$util.isString(message.sessionId))
                        return "sessionId: string expected";
                if (message.contactNumber != null && message.hasOwnProperty("contactNumber"))
                    if (!$util.isString(message.contactNumber))
                        return "contactNumber: string expected";
                if (message.banacoinsRemain != null && message.hasOwnProperty("banacoinsRemain"))
                    if (!$util.isInteger(message.banacoinsRemain))
                        return "banacoinsRemain: integer expected";
                return null;
            };

            /**
             * Creates a SaveScratchSheetResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SaveScratchSheetResponse} SaveScratchSheetResponse
             */
            SaveScratchSheetResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SaveScratchSheetResponse)
                    return object;
                let message = new $root.wm5.protobuf.SaveScratchSheetResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.scratchSheets) {
                    if (!Array.isArray(object.scratchSheets))
                        throw TypeError(".wm5.protobuf.SaveScratchSheetResponse.scratchSheets: array expected");
                    message.scratchSheets = [];
                    for (let i = 0; i < object.scratchSheets.length; ++i) {
                        if (typeof object.scratchSheets[i] !== "object")
                            throw TypeError(".wm5.protobuf.SaveScratchSheetResponse.scratchSheets: object expected");
                        message.scratchSheets[i] = $root.wm5.protobuf.ScratchSheet.fromObject(object.scratchSheets[i]);
                    }
                }
                if (object.currentSheet != null)
                    message.currentSheet = object.currentSheet >>> 0;
                if (object.numOfScratched != null)
                    message.numOfScratched = object.numOfScratched >>> 0;
                if (object.earnedItem != null) {
                    if (typeof object.earnedItem !== "object")
                        throw TypeError(".wm5.protobuf.SaveScratchSheetResponse.earnedItem: object expected");
                    message.earnedItem = $root.wm5.protobuf.UserItem.fromObject(object.earnedItem);
                }
                switch (object.banacoinError) {
                default:
                    if (typeof object.banacoinError === "number") {
                        message.banacoinError = object.banacoinError;
                        break;
                    }
                    break;
                case "BC_SUCCESS":
                case 0:
                    message.banacoinError = 0;
                    break;
                case "BC_SHORTAGE":
                case 1:
                    message.banacoinError = 1;
                    break;
                case "BC_BNID_MEMBER_ERROR":
                case 2:
                    message.banacoinError = 2;
                    break;
                case "BC_UNKNOWN_ERROR":
                case 3:
                    message.banacoinError = 3;
                    break;
                case "BC_BNID_SYSTEM_ERROR":
                case 4:
                    message.banacoinError = 4;
                    break;
                case "BC_BNID_VERIFY_ERROR":
                case 5:
                    message.banacoinError = 5;
                    break;
                case "BC_BNID_EXECUTE_ERROR":
                case 6:
                    message.banacoinError = 6;
                    break;
                }
                if (object.sessionId != null)
                    message.sessionId = String(object.sessionId);
                if (object.contactNumber != null)
                    message.contactNumber = String(object.contactNumber);
                if (object.banacoinsRemain != null)
                    message.banacoinsRemain = object.banacoinsRemain >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a SaveScratchSheetResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @static
             * @param {wm5.protobuf.SaveScratchSheetResponse} message SaveScratchSheetResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SaveScratchSheetResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.scratchSheets = [];
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.currentSheet = 0;
                    object.numOfScratched = 0;
                    object.earnedItem = null;
                    object.banacoinError = options.enums === String ? "BC_SUCCESS" : 0;
                    object.sessionId = "";
                    object.contactNumber = "";
                    object.banacoinsRemain = 0;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.scratchSheets && message.scratchSheets.length) {
                    object.scratchSheets = [];
                    for (let j = 0; j < message.scratchSheets.length; ++j)
                        object.scratchSheets[j] = $root.wm5.protobuf.ScratchSheet.toObject(message.scratchSheets[j], options);
                }
                if (message.currentSheet != null && message.hasOwnProperty("currentSheet"))
                    object.currentSheet = message.currentSheet;
                if (message.numOfScratched != null && message.hasOwnProperty("numOfScratched"))
                    object.numOfScratched = message.numOfScratched;
                if (message.earnedItem != null && message.hasOwnProperty("earnedItem"))
                    object.earnedItem = $root.wm5.protobuf.UserItem.toObject(message.earnedItem, options);
                if (message.banacoinError != null && message.hasOwnProperty("banacoinError"))
                    object.banacoinError = options.enums === String ? $root.wm5.protobuf.BanacoinErrorCode[message.banacoinError] === undefined ? message.banacoinError : $root.wm5.protobuf.BanacoinErrorCode[message.banacoinError] : message.banacoinError;
                if (message.sessionId != null && message.hasOwnProperty("sessionId"))
                    object.sessionId = message.sessionId;
                if (message.contactNumber != null && message.hasOwnProperty("contactNumber"))
                    object.contactNumber = message.contactNumber;
                if (message.banacoinsRemain != null && message.hasOwnProperty("banacoinsRemain"))
                    object.banacoinsRemain = message.banacoinsRemain;
                return object;
            };

            /**
             * Converts this SaveScratchSheetResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SaveScratchSheetResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SaveScratchSheetResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.SaveScratchSheetResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SaveScratchSheetResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SaveScratchSheetResponse";
            };

            return SaveScratchSheetResponse;
        })();

        protobuf.TurnScratchSheetRequest = (function() {

            /**
             * Properties of a TurnScratchSheetRequest.
             * @memberof wm5.protobuf
             * @interface ITurnScratchSheetRequest
             * @property {number} userId TurnScratchSheetRequest userId
             * @property {number} targetSheet TurnScratchSheetRequest targetSheet
             */

            /**
             * Constructs a new TurnScratchSheetRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a TurnScratchSheetRequest.
             * @implements ITurnScratchSheetRequest
             * @constructor
             * @param {wm5.protobuf.ITurnScratchSheetRequest=} [properties] Properties to set
             */
            function TurnScratchSheetRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * TurnScratchSheetRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.TurnScratchSheetRequest
             * @instance
             */
            TurnScratchSheetRequest.prototype.userId = 0;

            /**
             * TurnScratchSheetRequest targetSheet.
             * @member {number} targetSheet
             * @memberof wm5.protobuf.TurnScratchSheetRequest
             * @instance
             */
            TurnScratchSheetRequest.prototype.targetSheet = 0;

            /**
             * Creates a new TurnScratchSheetRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.TurnScratchSheetRequest
             * @static
             * @param {wm5.protobuf.ITurnScratchSheetRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.TurnScratchSheetRequest} TurnScratchSheetRequest instance
             */
            TurnScratchSheetRequest.create = function create(properties) {
                return new TurnScratchSheetRequest(properties);
            };

            /**
             * Encodes the specified TurnScratchSheetRequest message. Does not implicitly {@link wm5.protobuf.TurnScratchSheetRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.TurnScratchSheetRequest
             * @static
             * @param {wm5.protobuf.ITurnScratchSheetRequest} message TurnScratchSheetRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TurnScratchSheetRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetSheet);
                return writer;
            };

            /**
             * Encodes the specified TurnScratchSheetRequest message, length delimited. Does not implicitly {@link wm5.protobuf.TurnScratchSheetRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.TurnScratchSheetRequest
             * @static
             * @param {wm5.protobuf.ITurnScratchSheetRequest} message TurnScratchSheetRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TurnScratchSheetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a TurnScratchSheetRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.TurnScratchSheetRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.TurnScratchSheetRequest} TurnScratchSheetRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TurnScratchSheetRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.TurnScratchSheetRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.targetSheet = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                if (!message.hasOwnProperty("targetSheet"))
                    throw $util.ProtocolError("missing required 'targetSheet'", { instance: message });
                return message;
            };

            /**
             * Decodes a TurnScratchSheetRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.TurnScratchSheetRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.TurnScratchSheetRequest} TurnScratchSheetRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TurnScratchSheetRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a TurnScratchSheetRequest message.
             * @function verify
             * @memberof wm5.protobuf.TurnScratchSheetRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TurnScratchSheetRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                if (!$util.isInteger(message.targetSheet))
                    return "targetSheet: integer expected";
                return null;
            };

            /**
             * Creates a TurnScratchSheetRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.TurnScratchSheetRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.TurnScratchSheetRequest} TurnScratchSheetRequest
             */
            TurnScratchSheetRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.TurnScratchSheetRequest)
                    return object;
                let message = new $root.wm5.protobuf.TurnScratchSheetRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.targetSheet != null)
                    message.targetSheet = object.targetSheet >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a TurnScratchSheetRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.TurnScratchSheetRequest
             * @static
             * @param {wm5.protobuf.TurnScratchSheetRequest} message TurnScratchSheetRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TurnScratchSheetRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.userId = 0;
                    object.targetSheet = 0;
                }
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.targetSheet != null && message.hasOwnProperty("targetSheet"))
                    object.targetSheet = message.targetSheet;
                return object;
            };

            /**
             * Converts this TurnScratchSheetRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.TurnScratchSheetRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TurnScratchSheetRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for TurnScratchSheetRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.TurnScratchSheetRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TurnScratchSheetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.TurnScratchSheetRequest";
            };

            return TurnScratchSheetRequest;
        })();

        protobuf.TurnScratchSheetResponse = (function() {

            /**
             * Properties of a TurnScratchSheetResponse.
             * @memberof wm5.protobuf
             * @interface ITurnScratchSheetResponse
             * @property {wm5.protobuf.ErrorCode} error TurnScratchSheetResponse error
             */

            /**
             * Constructs a new TurnScratchSheetResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a TurnScratchSheetResponse.
             * @implements ITurnScratchSheetResponse
             * @constructor
             * @param {wm5.protobuf.ITurnScratchSheetResponse=} [properties] Properties to set
             */
            function TurnScratchSheetResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * TurnScratchSheetResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.TurnScratchSheetResponse
             * @instance
             */
            TurnScratchSheetResponse.prototype.error = 0;

            /**
             * Creates a new TurnScratchSheetResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.TurnScratchSheetResponse
             * @static
             * @param {wm5.protobuf.ITurnScratchSheetResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.TurnScratchSheetResponse} TurnScratchSheetResponse instance
             */
            TurnScratchSheetResponse.create = function create(properties) {
                return new TurnScratchSheetResponse(properties);
            };

            /**
             * Encodes the specified TurnScratchSheetResponse message. Does not implicitly {@link wm5.protobuf.TurnScratchSheetResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.TurnScratchSheetResponse
             * @static
             * @param {wm5.protobuf.ITurnScratchSheetResponse} message TurnScratchSheetResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TurnScratchSheetResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified TurnScratchSheetResponse message, length delimited. Does not implicitly {@link wm5.protobuf.TurnScratchSheetResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.TurnScratchSheetResponse
             * @static
             * @param {wm5.protobuf.ITurnScratchSheetResponse} message TurnScratchSheetResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TurnScratchSheetResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a TurnScratchSheetResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.TurnScratchSheetResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.TurnScratchSheetResponse} TurnScratchSheetResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TurnScratchSheetResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.TurnScratchSheetResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a TurnScratchSheetResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.TurnScratchSheetResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.TurnScratchSheetResponse} TurnScratchSheetResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TurnScratchSheetResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a TurnScratchSheetResponse message.
             * @function verify
             * @memberof wm5.protobuf.TurnScratchSheetResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TurnScratchSheetResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a TurnScratchSheetResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.TurnScratchSheetResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.TurnScratchSheetResponse} TurnScratchSheetResponse
             */
            TurnScratchSheetResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.TurnScratchSheetResponse)
                    return object;
                let message = new $root.wm5.protobuf.TurnScratchSheetResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a TurnScratchSheetResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.TurnScratchSheetResponse
             * @static
             * @param {wm5.protobuf.TurnScratchSheetResponse} message TurnScratchSheetResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TurnScratchSheetResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this TurnScratchSheetResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.TurnScratchSheetResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TurnScratchSheetResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for TurnScratchSheetResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.TurnScratchSheetResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TurnScratchSheetResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.TurnScratchSheetResponse";
            };

            return TurnScratchSheetResponse;
        })();

        protobuf.CheckItemReceivableCarsRequest = (function() {

            /**
             * Properties of a CheckItemReceivableCarsRequest.
             * @memberof wm5.protobuf
             * @interface ICheckItemReceivableCarsRequest
             * @property {number} userId CheckItemReceivableCarsRequest userId
             * @property {Array.<wm5.protobuf.IUserItem>|null} [itemsToBeEarned] CheckItemReceivableCarsRequest itemsToBeEarned
             */

            /**
             * Constructs a new CheckItemReceivableCarsRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a CheckItemReceivableCarsRequest.
             * @implements ICheckItemReceivableCarsRequest
             * @constructor
             * @param {wm5.protobuf.ICheckItemReceivableCarsRequest=} [properties] Properties to set
             */
            function CheckItemReceivableCarsRequest(properties) {
                this.itemsToBeEarned = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CheckItemReceivableCarsRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.CheckItemReceivableCarsRequest
             * @instance
             */
            CheckItemReceivableCarsRequest.prototype.userId = 0;

            /**
             * CheckItemReceivableCarsRequest itemsToBeEarned.
             * @member {Array.<wm5.protobuf.IUserItem>} itemsToBeEarned
             * @memberof wm5.protobuf.CheckItemReceivableCarsRequest
             * @instance
             */
            CheckItemReceivableCarsRequest.prototype.itemsToBeEarned = $util.emptyArray;

            /**
             * Creates a new CheckItemReceivableCarsRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CheckItemReceivableCarsRequest
             * @static
             * @param {wm5.protobuf.ICheckItemReceivableCarsRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.CheckItemReceivableCarsRequest} CheckItemReceivableCarsRequest instance
             */
            CheckItemReceivableCarsRequest.create = function create(properties) {
                return new CheckItemReceivableCarsRequest(properties);
            };

            /**
             * Encodes the specified CheckItemReceivableCarsRequest message. Does not implicitly {@link wm5.protobuf.CheckItemReceivableCarsRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CheckItemReceivableCarsRequest
             * @static
             * @param {wm5.protobuf.ICheckItemReceivableCarsRequest} message CheckItemReceivableCarsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CheckItemReceivableCarsRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                if (message.itemsToBeEarned != null && message.itemsToBeEarned.length)
                    for (let i = 0; i < message.itemsToBeEarned.length; ++i)
                        $root.wm5.protobuf.UserItem.encode(message.itemsToBeEarned[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified CheckItemReceivableCarsRequest message, length delimited. Does not implicitly {@link wm5.protobuf.CheckItemReceivableCarsRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CheckItemReceivableCarsRequest
             * @static
             * @param {wm5.protobuf.ICheckItemReceivableCarsRequest} message CheckItemReceivableCarsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CheckItemReceivableCarsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CheckItemReceivableCarsRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CheckItemReceivableCarsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CheckItemReceivableCarsRequest} CheckItemReceivableCarsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CheckItemReceivableCarsRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CheckItemReceivableCarsRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 2: {
                            if (!(message.itemsToBeEarned && message.itemsToBeEarned.length))
                                message.itemsToBeEarned = [];
                            message.itemsToBeEarned.push($root.wm5.protobuf.UserItem.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                return message;
            };

            /**
             * Decodes a CheckItemReceivableCarsRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CheckItemReceivableCarsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CheckItemReceivableCarsRequest} CheckItemReceivableCarsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CheckItemReceivableCarsRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CheckItemReceivableCarsRequest message.
             * @function verify
             * @memberof wm5.protobuf.CheckItemReceivableCarsRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CheckItemReceivableCarsRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                if (message.itemsToBeEarned != null && message.hasOwnProperty("itemsToBeEarned")) {
                    if (!Array.isArray(message.itemsToBeEarned))
                        return "itemsToBeEarned: array expected";
                    for (let i = 0; i < message.itemsToBeEarned.length; ++i) {
                        let error = $root.wm5.protobuf.UserItem.verify(message.itemsToBeEarned[i]);
                        if (error)
                            return "itemsToBeEarned." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a CheckItemReceivableCarsRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CheckItemReceivableCarsRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CheckItemReceivableCarsRequest} CheckItemReceivableCarsRequest
             */
            CheckItemReceivableCarsRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CheckItemReceivableCarsRequest)
                    return object;
                let message = new $root.wm5.protobuf.CheckItemReceivableCarsRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.itemsToBeEarned) {
                    if (!Array.isArray(object.itemsToBeEarned))
                        throw TypeError(".wm5.protobuf.CheckItemReceivableCarsRequest.itemsToBeEarned: array expected");
                    message.itemsToBeEarned = [];
                    for (let i = 0; i < object.itemsToBeEarned.length; ++i) {
                        if (typeof object.itemsToBeEarned[i] !== "object")
                            throw TypeError(".wm5.protobuf.CheckItemReceivableCarsRequest.itemsToBeEarned: object expected");
                        message.itemsToBeEarned[i] = $root.wm5.protobuf.UserItem.fromObject(object.itemsToBeEarned[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a CheckItemReceivableCarsRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CheckItemReceivableCarsRequest
             * @static
             * @param {wm5.protobuf.CheckItemReceivableCarsRequest} message CheckItemReceivableCarsRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CheckItemReceivableCarsRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.itemsToBeEarned = [];
                if (options.defaults)
                    object.userId = 0;
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.itemsToBeEarned && message.itemsToBeEarned.length) {
                    object.itemsToBeEarned = [];
                    for (let j = 0; j < message.itemsToBeEarned.length; ++j)
                        object.itemsToBeEarned[j] = $root.wm5.protobuf.UserItem.toObject(message.itemsToBeEarned[j], options);
                }
                return object;
            };

            /**
             * Converts this CheckItemReceivableCarsRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CheckItemReceivableCarsRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CheckItemReceivableCarsRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CheckItemReceivableCarsRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.CheckItemReceivableCarsRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CheckItemReceivableCarsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CheckItemReceivableCarsRequest";
            };

            return CheckItemReceivableCarsRequest;
        })();

        protobuf.CheckItemReceivableCarsResponse = (function() {

            /**
             * Properties of a CheckItemReceivableCarsResponse.
             * @memberof wm5.protobuf
             * @interface ICheckItemReceivableCarsResponse
             * @property {wm5.protobuf.ErrorCode} error CheckItemReceivableCarsResponse error
             * @property {Array.<number>|null} [carIds] CheckItemReceivableCarsResponse carIds
             */

            /**
             * Constructs a new CheckItemReceivableCarsResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a CheckItemReceivableCarsResponse.
             * @implements ICheckItemReceivableCarsResponse
             * @constructor
             * @param {wm5.protobuf.ICheckItemReceivableCarsResponse=} [properties] Properties to set
             */
            function CheckItemReceivableCarsResponse(properties) {
                this.carIds = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CheckItemReceivableCarsResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.CheckItemReceivableCarsResponse
             * @instance
             */
            CheckItemReceivableCarsResponse.prototype.error = 0;

            /**
             * CheckItemReceivableCarsResponse carIds.
             * @member {Array.<number>} carIds
             * @memberof wm5.protobuf.CheckItemReceivableCarsResponse
             * @instance
             */
            CheckItemReceivableCarsResponse.prototype.carIds = $util.emptyArray;

            /**
             * Creates a new CheckItemReceivableCarsResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CheckItemReceivableCarsResponse
             * @static
             * @param {wm5.protobuf.ICheckItemReceivableCarsResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.CheckItemReceivableCarsResponse} CheckItemReceivableCarsResponse instance
             */
            CheckItemReceivableCarsResponse.create = function create(properties) {
                return new CheckItemReceivableCarsResponse(properties);
            };

            /**
             * Encodes the specified CheckItemReceivableCarsResponse message. Does not implicitly {@link wm5.protobuf.CheckItemReceivableCarsResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CheckItemReceivableCarsResponse
             * @static
             * @param {wm5.protobuf.ICheckItemReceivableCarsResponse} message CheckItemReceivableCarsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CheckItemReceivableCarsResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.carIds != null && message.carIds.length)
                    for (let i = 0; i < message.carIds.length; ++i)
                        writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.carIds[i]);
                return writer;
            };

            /**
             * Encodes the specified CheckItemReceivableCarsResponse message, length delimited. Does not implicitly {@link wm5.protobuf.CheckItemReceivableCarsResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CheckItemReceivableCarsResponse
             * @static
             * @param {wm5.protobuf.ICheckItemReceivableCarsResponse} message CheckItemReceivableCarsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CheckItemReceivableCarsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CheckItemReceivableCarsResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CheckItemReceivableCarsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CheckItemReceivableCarsResponse} CheckItemReceivableCarsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CheckItemReceivableCarsResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CheckItemReceivableCarsResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            if (!(message.carIds && message.carIds.length))
                                message.carIds = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.carIds.push(reader.uint32());
                            } else
                                message.carIds.push(reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a CheckItemReceivableCarsResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CheckItemReceivableCarsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CheckItemReceivableCarsResponse} CheckItemReceivableCarsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CheckItemReceivableCarsResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CheckItemReceivableCarsResponse message.
             * @function verify
             * @memberof wm5.protobuf.CheckItemReceivableCarsResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CheckItemReceivableCarsResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.carIds != null && message.hasOwnProperty("carIds")) {
                    if (!Array.isArray(message.carIds))
                        return "carIds: array expected";
                    for (let i = 0; i < message.carIds.length; ++i)
                        if (!$util.isInteger(message.carIds[i]))
                            return "carIds: integer[] expected";
                }
                return null;
            };

            /**
             * Creates a CheckItemReceivableCarsResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CheckItemReceivableCarsResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CheckItemReceivableCarsResponse} CheckItemReceivableCarsResponse
             */
            CheckItemReceivableCarsResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CheckItemReceivableCarsResponse)
                    return object;
                let message = new $root.wm5.protobuf.CheckItemReceivableCarsResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.carIds) {
                    if (!Array.isArray(object.carIds))
                        throw TypeError(".wm5.protobuf.CheckItemReceivableCarsResponse.carIds: array expected");
                    message.carIds = [];
                    for (let i = 0; i < object.carIds.length; ++i)
                        message.carIds[i] = object.carIds[i] >>> 0;
                }
                return message;
            };

            /**
             * Creates a plain object from a CheckItemReceivableCarsResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CheckItemReceivableCarsResponse
             * @static
             * @param {wm5.protobuf.CheckItemReceivableCarsResponse} message CheckItemReceivableCarsResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CheckItemReceivableCarsResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.carIds = [];
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.carIds && message.carIds.length) {
                    object.carIds = [];
                    for (let j = 0; j < message.carIds.length; ++j)
                        object.carIds[j] = message.carIds[j];
                }
                return object;
            };

            /**
             * Converts this CheckItemReceivableCarsResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CheckItemReceivableCarsResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CheckItemReceivableCarsResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CheckItemReceivableCarsResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.CheckItemReceivableCarsResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CheckItemReceivableCarsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CheckItemReceivableCarsResponse";
            };

            return CheckItemReceivableCarsResponse;
        })();

        protobuf.ReceiveUserItemsRequest = (function() {

            /**
             * Properties of a ReceiveUserItemsRequest.
             * @memberof wm5.protobuf
             * @interface IReceiveUserItemsRequest
             * @property {number} carId ReceiveUserItemsRequest carId
             * @property {Array.<number>|null} [targetItemIds] ReceiveUserItemsRequest targetItemIds
             */

            /**
             * Constructs a new ReceiveUserItemsRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a ReceiveUserItemsRequest.
             * @implements IReceiveUserItemsRequest
             * @constructor
             * @param {wm5.protobuf.IReceiveUserItemsRequest=} [properties] Properties to set
             */
            function ReceiveUserItemsRequest(properties) {
                this.targetItemIds = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ReceiveUserItemsRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.ReceiveUserItemsRequest
             * @instance
             */
            ReceiveUserItemsRequest.prototype.carId = 0;

            /**
             * ReceiveUserItemsRequest targetItemIds.
             * @member {Array.<number>} targetItemIds
             * @memberof wm5.protobuf.ReceiveUserItemsRequest
             * @instance
             */
            ReceiveUserItemsRequest.prototype.targetItemIds = $util.emptyArray;

            /**
             * Creates a new ReceiveUserItemsRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.ReceiveUserItemsRequest
             * @static
             * @param {wm5.protobuf.IReceiveUserItemsRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.ReceiveUserItemsRequest} ReceiveUserItemsRequest instance
             */
            ReceiveUserItemsRequest.create = function create(properties) {
                return new ReceiveUserItemsRequest(properties);
            };

            /**
             * Encodes the specified ReceiveUserItemsRequest message. Does not implicitly {@link wm5.protobuf.ReceiveUserItemsRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.ReceiveUserItemsRequest
             * @static
             * @param {wm5.protobuf.IReceiveUserItemsRequest} message ReceiveUserItemsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReceiveUserItemsRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                if (message.targetItemIds != null && message.targetItemIds.length)
                    for (let i = 0; i < message.targetItemIds.length; ++i)
                        writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetItemIds[i]);
                return writer;
            };

            /**
             * Encodes the specified ReceiveUserItemsRequest message, length delimited. Does not implicitly {@link wm5.protobuf.ReceiveUserItemsRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.ReceiveUserItemsRequest
             * @static
             * @param {wm5.protobuf.IReceiveUserItemsRequest} message ReceiveUserItemsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReceiveUserItemsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a ReceiveUserItemsRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.ReceiveUserItemsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.ReceiveUserItemsRequest} ReceiveUserItemsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReceiveUserItemsRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.ReceiveUserItemsRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 2: {
                            if (!(message.targetItemIds && message.targetItemIds.length))
                                message.targetItemIds = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.targetItemIds.push(reader.uint32());
                            } else
                                message.targetItemIds.push(reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                return message;
            };

            /**
             * Decodes a ReceiveUserItemsRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.ReceiveUserItemsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.ReceiveUserItemsRequest} ReceiveUserItemsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReceiveUserItemsRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a ReceiveUserItemsRequest message.
             * @function verify
             * @memberof wm5.protobuf.ReceiveUserItemsRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ReceiveUserItemsRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                if (message.targetItemIds != null && message.hasOwnProperty("targetItemIds")) {
                    if (!Array.isArray(message.targetItemIds))
                        return "targetItemIds: array expected";
                    for (let i = 0; i < message.targetItemIds.length; ++i)
                        if (!$util.isInteger(message.targetItemIds[i]))
                            return "targetItemIds: integer[] expected";
                }
                return null;
            };

            /**
             * Creates a ReceiveUserItemsRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.ReceiveUserItemsRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.ReceiveUserItemsRequest} ReceiveUserItemsRequest
             */
            ReceiveUserItemsRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.ReceiveUserItemsRequest)
                    return object;
                let message = new $root.wm5.protobuf.ReceiveUserItemsRequest();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.targetItemIds) {
                    if (!Array.isArray(object.targetItemIds))
                        throw TypeError(".wm5.protobuf.ReceiveUserItemsRequest.targetItemIds: array expected");
                    message.targetItemIds = [];
                    for (let i = 0; i < object.targetItemIds.length; ++i)
                        message.targetItemIds[i] = object.targetItemIds[i] >>> 0;
                }
                return message;
            };

            /**
             * Creates a plain object from a ReceiveUserItemsRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.ReceiveUserItemsRequest
             * @static
             * @param {wm5.protobuf.ReceiveUserItemsRequest} message ReceiveUserItemsRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ReceiveUserItemsRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.targetItemIds = [];
                if (options.defaults)
                    object.carId = 0;
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.targetItemIds && message.targetItemIds.length) {
                    object.targetItemIds = [];
                    for (let j = 0; j < message.targetItemIds.length; ++j)
                        object.targetItemIds[j] = message.targetItemIds[j];
                }
                return object;
            };

            /**
             * Converts this ReceiveUserItemsRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.ReceiveUserItemsRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ReceiveUserItemsRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ReceiveUserItemsRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.ReceiveUserItemsRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ReceiveUserItemsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.ReceiveUserItemsRequest";
            };

            return ReceiveUserItemsRequest;
        })();

        protobuf.ReceiveUserItemsResponse = (function() {

            /**
             * Properties of a ReceiveUserItemsResponse.
             * @memberof wm5.protobuf
             * @interface IReceiveUserItemsResponse
             * @property {wm5.protobuf.ErrorCode} error ReceiveUserItemsResponse error
             */

            /**
             * Constructs a new ReceiveUserItemsResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a ReceiveUserItemsResponse.
             * @implements IReceiveUserItemsResponse
             * @constructor
             * @param {wm5.protobuf.IReceiveUserItemsResponse=} [properties] Properties to set
             */
            function ReceiveUserItemsResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ReceiveUserItemsResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.ReceiveUserItemsResponse
             * @instance
             */
            ReceiveUserItemsResponse.prototype.error = 0;

            /**
             * Creates a new ReceiveUserItemsResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.ReceiveUserItemsResponse
             * @static
             * @param {wm5.protobuf.IReceiveUserItemsResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.ReceiveUserItemsResponse} ReceiveUserItemsResponse instance
             */
            ReceiveUserItemsResponse.create = function create(properties) {
                return new ReceiveUserItemsResponse(properties);
            };

            /**
             * Encodes the specified ReceiveUserItemsResponse message. Does not implicitly {@link wm5.protobuf.ReceiveUserItemsResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.ReceiveUserItemsResponse
             * @static
             * @param {wm5.protobuf.IReceiveUserItemsResponse} message ReceiveUserItemsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReceiveUserItemsResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified ReceiveUserItemsResponse message, length delimited. Does not implicitly {@link wm5.protobuf.ReceiveUserItemsResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.ReceiveUserItemsResponse
             * @static
             * @param {wm5.protobuf.IReceiveUserItemsResponse} message ReceiveUserItemsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ReceiveUserItemsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a ReceiveUserItemsResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.ReceiveUserItemsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.ReceiveUserItemsResponse} ReceiveUserItemsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReceiveUserItemsResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.ReceiveUserItemsResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a ReceiveUserItemsResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.ReceiveUserItemsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.ReceiveUserItemsResponse} ReceiveUserItemsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ReceiveUserItemsResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a ReceiveUserItemsResponse message.
             * @function verify
             * @memberof wm5.protobuf.ReceiveUserItemsResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ReceiveUserItemsResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a ReceiveUserItemsResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.ReceiveUserItemsResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.ReceiveUserItemsResponse} ReceiveUserItemsResponse
             */
            ReceiveUserItemsResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.ReceiveUserItemsResponse)
                    return object;
                let message = new $root.wm5.protobuf.ReceiveUserItemsResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a ReceiveUserItemsResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.ReceiveUserItemsResponse
             * @static
             * @param {wm5.protobuf.ReceiveUserItemsResponse} message ReceiveUserItemsResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ReceiveUserItemsResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this ReceiveUserItemsResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.ReceiveUserItemsResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ReceiveUserItemsResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ReceiveUserItemsResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.ReceiveUserItemsResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ReceiveUserItemsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.ReceiveUserItemsResponse";
            };

            return ReceiveUserItemsResponse;
        })();

        protobuf.UpdateEventModeSerialRequest = (function() {

            /**
             * Properties of an UpdateEventModeSerialRequest.
             * @memberof wm5.protobuf
             * @interface IUpdateEventModeSerialRequest
             * @property {string|null} [eventModeSerial] UpdateEventModeSerialRequest eventModeSerial
             */

            /**
             * Constructs a new UpdateEventModeSerialRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents an UpdateEventModeSerialRequest.
             * @implements IUpdateEventModeSerialRequest
             * @constructor
             * @param {wm5.protobuf.IUpdateEventModeSerialRequest=} [properties] Properties to set
             */
            function UpdateEventModeSerialRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * UpdateEventModeSerialRequest eventModeSerial.
             * @member {string} eventModeSerial
             * @memberof wm5.protobuf.UpdateEventModeSerialRequest
             * @instance
             */
            UpdateEventModeSerialRequest.prototype.eventModeSerial = "";

            /**
             * Creates a new UpdateEventModeSerialRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.UpdateEventModeSerialRequest
             * @static
             * @param {wm5.protobuf.IUpdateEventModeSerialRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.UpdateEventModeSerialRequest} UpdateEventModeSerialRequest instance
             */
            UpdateEventModeSerialRequest.create = function create(properties) {
                return new UpdateEventModeSerialRequest(properties);
            };

            /**
             * Encodes the specified UpdateEventModeSerialRequest message. Does not implicitly {@link wm5.protobuf.UpdateEventModeSerialRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.UpdateEventModeSerialRequest
             * @static
             * @param {wm5.protobuf.IUpdateEventModeSerialRequest} message UpdateEventModeSerialRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateEventModeSerialRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.eventModeSerial != null && Object.hasOwnProperty.call(message, "eventModeSerial"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.eventModeSerial);
                return writer;
            };

            /**
             * Encodes the specified UpdateEventModeSerialRequest message, length delimited. Does not implicitly {@link wm5.protobuf.UpdateEventModeSerialRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.UpdateEventModeSerialRequest
             * @static
             * @param {wm5.protobuf.IUpdateEventModeSerialRequest} message UpdateEventModeSerialRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateEventModeSerialRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an UpdateEventModeSerialRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.UpdateEventModeSerialRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.UpdateEventModeSerialRequest} UpdateEventModeSerialRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateEventModeSerialRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.UpdateEventModeSerialRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.eventModeSerial = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an UpdateEventModeSerialRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.UpdateEventModeSerialRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.UpdateEventModeSerialRequest} UpdateEventModeSerialRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateEventModeSerialRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an UpdateEventModeSerialRequest message.
             * @function verify
             * @memberof wm5.protobuf.UpdateEventModeSerialRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UpdateEventModeSerialRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.eventModeSerial != null && message.hasOwnProperty("eventModeSerial"))
                    if (!$util.isString(message.eventModeSerial))
                        return "eventModeSerial: string expected";
                return null;
            };

            /**
             * Creates an UpdateEventModeSerialRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.UpdateEventModeSerialRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.UpdateEventModeSerialRequest} UpdateEventModeSerialRequest
             */
            UpdateEventModeSerialRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.UpdateEventModeSerialRequest)
                    return object;
                let message = new $root.wm5.protobuf.UpdateEventModeSerialRequest();
                if (object.eventModeSerial != null)
                    message.eventModeSerial = String(object.eventModeSerial);
                return message;
            };

            /**
             * Creates a plain object from an UpdateEventModeSerialRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.UpdateEventModeSerialRequest
             * @static
             * @param {wm5.protobuf.UpdateEventModeSerialRequest} message UpdateEventModeSerialRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UpdateEventModeSerialRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.eventModeSerial = "";
                if (message.eventModeSerial != null && message.hasOwnProperty("eventModeSerial"))
                    object.eventModeSerial = message.eventModeSerial;
                return object;
            };

            /**
             * Converts this UpdateEventModeSerialRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.UpdateEventModeSerialRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UpdateEventModeSerialRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for UpdateEventModeSerialRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.UpdateEventModeSerialRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UpdateEventModeSerialRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.UpdateEventModeSerialRequest";
            };

            return UpdateEventModeSerialRequest;
        })();

        protobuf.UpdateEventModeSerialResponse = (function() {

            /**
             * Properties of an UpdateEventModeSerialResponse.
             * @memberof wm5.protobuf
             * @interface IUpdateEventModeSerialResponse
             * @property {wm5.protobuf.ErrorCode} error UpdateEventModeSerialResponse error
             * @property {wm5.protobuf.EventModeSerialErrorCode} serialError UpdateEventModeSerialResponse serialError
             * @property {string|null} [eventModeSerial] UpdateEventModeSerialResponse eventModeSerial
             * @property {number|null} [startAt] UpdateEventModeSerialResponse startAt
             * @property {number|null} [endAt] UpdateEventModeSerialResponse endAt
             */

            /**
             * Constructs a new UpdateEventModeSerialResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents an UpdateEventModeSerialResponse.
             * @implements IUpdateEventModeSerialResponse
             * @constructor
             * @param {wm5.protobuf.IUpdateEventModeSerialResponse=} [properties] Properties to set
             */
            function UpdateEventModeSerialResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * UpdateEventModeSerialResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.UpdateEventModeSerialResponse
             * @instance
             */
            UpdateEventModeSerialResponse.prototype.error = 0;

            /**
             * UpdateEventModeSerialResponse serialError.
             * @member {wm5.protobuf.EventModeSerialErrorCode} serialError
             * @memberof wm5.protobuf.UpdateEventModeSerialResponse
             * @instance
             */
            UpdateEventModeSerialResponse.prototype.serialError = 0;

            /**
             * UpdateEventModeSerialResponse eventModeSerial.
             * @member {string} eventModeSerial
             * @memberof wm5.protobuf.UpdateEventModeSerialResponse
             * @instance
             */
            UpdateEventModeSerialResponse.prototype.eventModeSerial = "";

            /**
             * UpdateEventModeSerialResponse startAt.
             * @member {number} startAt
             * @memberof wm5.protobuf.UpdateEventModeSerialResponse
             * @instance
             */
            UpdateEventModeSerialResponse.prototype.startAt = 0;

            /**
             * UpdateEventModeSerialResponse endAt.
             * @member {number} endAt
             * @memberof wm5.protobuf.UpdateEventModeSerialResponse
             * @instance
             */
            UpdateEventModeSerialResponse.prototype.endAt = 0;

            /**
             * Creates a new UpdateEventModeSerialResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.UpdateEventModeSerialResponse
             * @static
             * @param {wm5.protobuf.IUpdateEventModeSerialResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.UpdateEventModeSerialResponse} UpdateEventModeSerialResponse instance
             */
            UpdateEventModeSerialResponse.create = function create(properties) {
                return new UpdateEventModeSerialResponse(properties);
            };

            /**
             * Encodes the specified UpdateEventModeSerialResponse message. Does not implicitly {@link wm5.protobuf.UpdateEventModeSerialResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.UpdateEventModeSerialResponse
             * @static
             * @param {wm5.protobuf.IUpdateEventModeSerialResponse} message UpdateEventModeSerialResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateEventModeSerialResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.eventModeSerial != null && Object.hasOwnProperty.call(message, "eventModeSerial"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.eventModeSerial);
                if (message.endAt != null && Object.hasOwnProperty.call(message, "endAt"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.endAt);
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.serialError);
                if (message.startAt != null && Object.hasOwnProperty.call(message, "startAt"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.startAt);
                return writer;
            };

            /**
             * Encodes the specified UpdateEventModeSerialResponse message, length delimited. Does not implicitly {@link wm5.protobuf.UpdateEventModeSerialResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.UpdateEventModeSerialResponse
             * @static
             * @param {wm5.protobuf.IUpdateEventModeSerialResponse} message UpdateEventModeSerialResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateEventModeSerialResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an UpdateEventModeSerialResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.UpdateEventModeSerialResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.UpdateEventModeSerialResponse} UpdateEventModeSerialResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateEventModeSerialResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.UpdateEventModeSerialResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 4: {
                            message.serialError = reader.int32();
                            break;
                        }
                    case 2: {
                            message.eventModeSerial = reader.string();
                            break;
                        }
                    case 5: {
                            message.startAt = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.endAt = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("serialError"))
                    throw $util.ProtocolError("missing required 'serialError'", { instance: message });
                return message;
            };

            /**
             * Decodes an UpdateEventModeSerialResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.UpdateEventModeSerialResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.UpdateEventModeSerialResponse} UpdateEventModeSerialResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateEventModeSerialResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an UpdateEventModeSerialResponse message.
             * @function verify
             * @memberof wm5.protobuf.UpdateEventModeSerialResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UpdateEventModeSerialResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                switch (message.serialError) {
                default:
                    return "serialError: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                    break;
                }
                if (message.eventModeSerial != null && message.hasOwnProperty("eventModeSerial"))
                    if (!$util.isString(message.eventModeSerial))
                        return "eventModeSerial: string expected";
                if (message.startAt != null && message.hasOwnProperty("startAt"))
                    if (!$util.isInteger(message.startAt))
                        return "startAt: integer expected";
                if (message.endAt != null && message.hasOwnProperty("endAt"))
                    if (!$util.isInteger(message.endAt))
                        return "endAt: integer expected";
                return null;
            };

            /**
             * Creates an UpdateEventModeSerialResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.UpdateEventModeSerialResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.UpdateEventModeSerialResponse} UpdateEventModeSerialResponse
             */
            UpdateEventModeSerialResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.UpdateEventModeSerialResponse)
                    return object;
                let message = new $root.wm5.protobuf.UpdateEventModeSerialResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                switch (object.serialError) {
                default:
                    if (typeof object.serialError === "number") {
                        message.serialError = object.serialError;
                        break;
                    }
                    break;
                case "SERIAL_SUCCESS":
                case 0:
                    message.serialError = 0;
                    break;
                case "SERIAL_ATTEMPT_TO_CHANGE":
                case 1:
                    message.serialError = 1;
                    break;
                case "SERIAL_NO_INPUT":
                case 2:
                    message.serialError = 2;
                    break;
                case "SERIAL_INVALID":
                case 3:
                    message.serialError = 3;
                    break;
                case "SERIAL_EXPIRED":
                case 4:
                    message.serialError = 4;
                    break;
                case "SERIAL_OTHER_PLACE":
                case 5:
                    message.serialError = 5;
                    break;
                }
                if (object.eventModeSerial != null)
                    message.eventModeSerial = String(object.eventModeSerial);
                if (object.startAt != null)
                    message.startAt = object.startAt >>> 0;
                if (object.endAt != null)
                    message.endAt = object.endAt >>> 0;
                return message;
            };

            /**
             * Creates a plain object from an UpdateEventModeSerialResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.UpdateEventModeSerialResponse
             * @static
             * @param {wm5.protobuf.UpdateEventModeSerialResponse} message UpdateEventModeSerialResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UpdateEventModeSerialResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.eventModeSerial = "";
                    object.endAt = 0;
                    object.serialError = options.enums === String ? "SERIAL_SUCCESS" : 0;
                    object.startAt = 0;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.eventModeSerial != null && message.hasOwnProperty("eventModeSerial"))
                    object.eventModeSerial = message.eventModeSerial;
                if (message.endAt != null && message.hasOwnProperty("endAt"))
                    object.endAt = message.endAt;
                if (message.serialError != null && message.hasOwnProperty("serialError"))
                    object.serialError = options.enums === String ? $root.wm5.protobuf.EventModeSerialErrorCode[message.serialError] === undefined ? message.serialError : $root.wm5.protobuf.EventModeSerialErrorCode[message.serialError] : message.serialError;
                if (message.startAt != null && message.hasOwnProperty("startAt"))
                    object.startAt = message.startAt;
                return object;
            };

            /**
             * Converts this UpdateEventModeSerialResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.UpdateEventModeSerialResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UpdateEventModeSerialResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for UpdateEventModeSerialResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.UpdateEventModeSerialResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UpdateEventModeSerialResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.UpdateEventModeSerialResponse";
            };

            return UpdateEventModeSerialResponse;
        })();

        protobuf.ParticipateInInviteFriendCampaignRequest = (function() {

            /**
             * Properties of a ParticipateInInviteFriendCampaignRequest.
             * @memberof wm5.protobuf
             * @interface IParticipateInInviteFriendCampaignRequest
             * @property {number} invitingUserId ParticipateInInviteFriendCampaignRequest invitingUserId
             * @property {number} invitedUserId ParticipateInInviteFriendCampaignRequest invitedUserId
             * @property {number} sourceCarId ParticipateInInviteFriendCampaignRequest sourceCarId
             * @property {boolean} transmission ParticipateInInviteFriendCampaignRequest transmission
             */

            /**
             * Constructs a new ParticipateInInviteFriendCampaignRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a ParticipateInInviteFriendCampaignRequest.
             * @implements IParticipateInInviteFriendCampaignRequest
             * @constructor
             * @param {wm5.protobuf.IParticipateInInviteFriendCampaignRequest=} [properties] Properties to set
             */
            function ParticipateInInviteFriendCampaignRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ParticipateInInviteFriendCampaignRequest invitingUserId.
             * @member {number} invitingUserId
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignRequest
             * @instance
             */
            ParticipateInInviteFriendCampaignRequest.prototype.invitingUserId = 0;

            /**
             * ParticipateInInviteFriendCampaignRequest invitedUserId.
             * @member {number} invitedUserId
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignRequest
             * @instance
             */
            ParticipateInInviteFriendCampaignRequest.prototype.invitedUserId = 0;

            /**
             * ParticipateInInviteFriendCampaignRequest sourceCarId.
             * @member {number} sourceCarId
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignRequest
             * @instance
             */
            ParticipateInInviteFriendCampaignRequest.prototype.sourceCarId = 0;

            /**
             * ParticipateInInviteFriendCampaignRequest transmission.
             * @member {boolean} transmission
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignRequest
             * @instance
             */
            ParticipateInInviteFriendCampaignRequest.prototype.transmission = false;

            /**
             * Creates a new ParticipateInInviteFriendCampaignRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignRequest
             * @static
             * @param {wm5.protobuf.IParticipateInInviteFriendCampaignRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.ParticipateInInviteFriendCampaignRequest} ParticipateInInviteFriendCampaignRequest instance
             */
            ParticipateInInviteFriendCampaignRequest.create = function create(properties) {
                return new ParticipateInInviteFriendCampaignRequest(properties);
            };

            /**
             * Encodes the specified ParticipateInInviteFriendCampaignRequest message. Does not implicitly {@link wm5.protobuf.ParticipateInInviteFriendCampaignRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignRequest
             * @static
             * @param {wm5.protobuf.IParticipateInInviteFriendCampaignRequest} message ParticipateInInviteFriendCampaignRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ParticipateInInviteFriendCampaignRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.invitingUserId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.invitedUserId);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.sourceCarId);
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.transmission);
                return writer;
            };

            /**
             * Encodes the specified ParticipateInInviteFriendCampaignRequest message, length delimited. Does not implicitly {@link wm5.protobuf.ParticipateInInviteFriendCampaignRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignRequest
             * @static
             * @param {wm5.protobuf.IParticipateInInviteFriendCampaignRequest} message ParticipateInInviteFriendCampaignRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ParticipateInInviteFriendCampaignRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a ParticipateInInviteFriendCampaignRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.ParticipateInInviteFriendCampaignRequest} ParticipateInInviteFriendCampaignRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ParticipateInInviteFriendCampaignRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.ParticipateInInviteFriendCampaignRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.invitingUserId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.invitedUserId = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.sourceCarId = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.transmission = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("invitingUserId"))
                    throw $util.ProtocolError("missing required 'invitingUserId'", { instance: message });
                if (!message.hasOwnProperty("invitedUserId"))
                    throw $util.ProtocolError("missing required 'invitedUserId'", { instance: message });
                if (!message.hasOwnProperty("sourceCarId"))
                    throw $util.ProtocolError("missing required 'sourceCarId'", { instance: message });
                if (!message.hasOwnProperty("transmission"))
                    throw $util.ProtocolError("missing required 'transmission'", { instance: message });
                return message;
            };

            /**
             * Decodes a ParticipateInInviteFriendCampaignRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.ParticipateInInviteFriendCampaignRequest} ParticipateInInviteFriendCampaignRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ParticipateInInviteFriendCampaignRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a ParticipateInInviteFriendCampaignRequest message.
             * @function verify
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ParticipateInInviteFriendCampaignRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.invitingUserId))
                    return "invitingUserId: integer expected";
                if (!$util.isInteger(message.invitedUserId))
                    return "invitedUserId: integer expected";
                if (!$util.isInteger(message.sourceCarId))
                    return "sourceCarId: integer expected";
                if (typeof message.transmission !== "boolean")
                    return "transmission: boolean expected";
                return null;
            };

            /**
             * Creates a ParticipateInInviteFriendCampaignRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.ParticipateInInviteFriendCampaignRequest} ParticipateInInviteFriendCampaignRequest
             */
            ParticipateInInviteFriendCampaignRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.ParticipateInInviteFriendCampaignRequest)
                    return object;
                let message = new $root.wm5.protobuf.ParticipateInInviteFriendCampaignRequest();
                if (object.invitingUserId != null)
                    message.invitingUserId = object.invitingUserId >>> 0;
                if (object.invitedUserId != null)
                    message.invitedUserId = object.invitedUserId >>> 0;
                if (object.sourceCarId != null)
                    message.sourceCarId = object.sourceCarId >>> 0;
                if (object.transmission != null)
                    message.transmission = Boolean(object.transmission);
                return message;
            };

            /**
             * Creates a plain object from a ParticipateInInviteFriendCampaignRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignRequest
             * @static
             * @param {wm5.protobuf.ParticipateInInviteFriendCampaignRequest} message ParticipateInInviteFriendCampaignRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ParticipateInInviteFriendCampaignRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.invitingUserId = 0;
                    object.invitedUserId = 0;
                    object.sourceCarId = 0;
                    object.transmission = false;
                }
                if (message.invitingUserId != null && message.hasOwnProperty("invitingUserId"))
                    object.invitingUserId = message.invitingUserId;
                if (message.invitedUserId != null && message.hasOwnProperty("invitedUserId"))
                    object.invitedUserId = message.invitedUserId;
                if (message.sourceCarId != null && message.hasOwnProperty("sourceCarId"))
                    object.sourceCarId = message.sourceCarId;
                if (message.transmission != null && message.hasOwnProperty("transmission"))
                    object.transmission = message.transmission;
                return object;
            };

            /**
             * Converts this ParticipateInInviteFriendCampaignRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ParticipateInInviteFriendCampaignRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ParticipateInInviteFriendCampaignRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ParticipateInInviteFriendCampaignRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.ParticipateInInviteFriendCampaignRequest";
            };

            return ParticipateInInviteFriendCampaignRequest;
        })();

        protobuf.ParticipateInInviteFriendCampaignResponse = (function() {

            /**
             * Properties of a ParticipateInInviteFriendCampaignResponse.
             * @memberof wm5.protobuf
             * @interface IParticipateInInviteFriendCampaignResponse
             * @property {wm5.protobuf.ErrorCode} error ParticipateInInviteFriendCampaignResponse error
             */

            /**
             * Constructs a new ParticipateInInviteFriendCampaignResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a ParticipateInInviteFriendCampaignResponse.
             * @implements IParticipateInInviteFriendCampaignResponse
             * @constructor
             * @param {wm5.protobuf.IParticipateInInviteFriendCampaignResponse=} [properties] Properties to set
             */
            function ParticipateInInviteFriendCampaignResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ParticipateInInviteFriendCampaignResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignResponse
             * @instance
             */
            ParticipateInInviteFriendCampaignResponse.prototype.error = 0;

            /**
             * Creates a new ParticipateInInviteFriendCampaignResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignResponse
             * @static
             * @param {wm5.protobuf.IParticipateInInviteFriendCampaignResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.ParticipateInInviteFriendCampaignResponse} ParticipateInInviteFriendCampaignResponse instance
             */
            ParticipateInInviteFriendCampaignResponse.create = function create(properties) {
                return new ParticipateInInviteFriendCampaignResponse(properties);
            };

            /**
             * Encodes the specified ParticipateInInviteFriendCampaignResponse message. Does not implicitly {@link wm5.protobuf.ParticipateInInviteFriendCampaignResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignResponse
             * @static
             * @param {wm5.protobuf.IParticipateInInviteFriendCampaignResponse} message ParticipateInInviteFriendCampaignResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ParticipateInInviteFriendCampaignResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified ParticipateInInviteFriendCampaignResponse message, length delimited. Does not implicitly {@link wm5.protobuf.ParticipateInInviteFriendCampaignResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignResponse
             * @static
             * @param {wm5.protobuf.IParticipateInInviteFriendCampaignResponse} message ParticipateInInviteFriendCampaignResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ParticipateInInviteFriendCampaignResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a ParticipateInInviteFriendCampaignResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.ParticipateInInviteFriendCampaignResponse} ParticipateInInviteFriendCampaignResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ParticipateInInviteFriendCampaignResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.ParticipateInInviteFriendCampaignResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a ParticipateInInviteFriendCampaignResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.ParticipateInInviteFriendCampaignResponse} ParticipateInInviteFriendCampaignResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ParticipateInInviteFriendCampaignResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a ParticipateInInviteFriendCampaignResponse message.
             * @function verify
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ParticipateInInviteFriendCampaignResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a ParticipateInInviteFriendCampaignResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.ParticipateInInviteFriendCampaignResponse} ParticipateInInviteFriendCampaignResponse
             */
            ParticipateInInviteFriendCampaignResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.ParticipateInInviteFriendCampaignResponse)
                    return object;
                let message = new $root.wm5.protobuf.ParticipateInInviteFriendCampaignResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a ParticipateInInviteFriendCampaignResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignResponse
             * @static
             * @param {wm5.protobuf.ParticipateInInviteFriendCampaignResponse} message ParticipateInInviteFriendCampaignResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ParticipateInInviteFriendCampaignResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this ParticipateInInviteFriendCampaignResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ParticipateInInviteFriendCampaignResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ParticipateInInviteFriendCampaignResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.ParticipateInInviteFriendCampaignResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ParticipateInInviteFriendCampaignResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.ParticipateInInviteFriendCampaignResponse";
            };

            return ParticipateInInviteFriendCampaignResponse;
        })();

        protobuf.ConsumeUserItemRequest = (function() {

            /**
             * Properties of a ConsumeUserItemRequest.
             * @memberof wm5.protobuf
             * @interface IConsumeUserItemRequest
             * @property {number} userId ConsumeUserItemRequest userId
             * @property {number} carId ConsumeUserItemRequest carId
             * @property {number} itemId ConsumeUserItemRequest itemId
             */

            /**
             * Constructs a new ConsumeUserItemRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a ConsumeUserItemRequest.
             * @implements IConsumeUserItemRequest
             * @constructor
             * @param {wm5.protobuf.IConsumeUserItemRequest=} [properties] Properties to set
             */
            function ConsumeUserItemRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ConsumeUserItemRequest userId.
             * @member {number} userId
             * @memberof wm5.protobuf.ConsumeUserItemRequest
             * @instance
             */
            ConsumeUserItemRequest.prototype.userId = 0;

            /**
             * ConsumeUserItemRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.ConsumeUserItemRequest
             * @instance
             */
            ConsumeUserItemRequest.prototype.carId = 0;

            /**
             * ConsumeUserItemRequest itemId.
             * @member {number} itemId
             * @memberof wm5.protobuf.ConsumeUserItemRequest
             * @instance
             */
            ConsumeUserItemRequest.prototype.itemId = 0;

            /**
             * Creates a new ConsumeUserItemRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.ConsumeUserItemRequest
             * @static
             * @param {wm5.protobuf.IConsumeUserItemRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.ConsumeUserItemRequest} ConsumeUserItemRequest instance
             */
            ConsumeUserItemRequest.create = function create(properties) {
                return new ConsumeUserItemRequest(properties);
            };

            /**
             * Encodes the specified ConsumeUserItemRequest message. Does not implicitly {@link wm5.protobuf.ConsumeUserItemRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.ConsumeUserItemRequest
             * @static
             * @param {wm5.protobuf.IConsumeUserItemRequest} message ConsumeUserItemRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ConsumeUserItemRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.carId);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.itemId);
                return writer;
            };

            /**
             * Encodes the specified ConsumeUserItemRequest message, length delimited. Does not implicitly {@link wm5.protobuf.ConsumeUserItemRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.ConsumeUserItemRequest
             * @static
             * @param {wm5.protobuf.IConsumeUserItemRequest} message ConsumeUserItemRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ConsumeUserItemRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a ConsumeUserItemRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.ConsumeUserItemRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.ConsumeUserItemRequest} ConsumeUserItemRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ConsumeUserItemRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.ConsumeUserItemRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.itemId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                if (!message.hasOwnProperty("itemId"))
                    throw $util.ProtocolError("missing required 'itemId'", { instance: message });
                return message;
            };

            /**
             * Decodes a ConsumeUserItemRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.ConsumeUserItemRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.ConsumeUserItemRequest} ConsumeUserItemRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ConsumeUserItemRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a ConsumeUserItemRequest message.
             * @function verify
             * @memberof wm5.protobuf.ConsumeUserItemRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ConsumeUserItemRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                if (!$util.isInteger(message.itemId))
                    return "itemId: integer expected";
                return null;
            };

            /**
             * Creates a ConsumeUserItemRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.ConsumeUserItemRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.ConsumeUserItemRequest} ConsumeUserItemRequest
             */
            ConsumeUserItemRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.ConsumeUserItemRequest)
                    return object;
                let message = new $root.wm5.protobuf.ConsumeUserItemRequest();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.itemId != null)
                    message.itemId = object.itemId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a ConsumeUserItemRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.ConsumeUserItemRequest
             * @static
             * @param {wm5.protobuf.ConsumeUserItemRequest} message ConsumeUserItemRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ConsumeUserItemRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.userId = 0;
                    object.carId = 0;
                    object.itemId = 0;
                }
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.itemId != null && message.hasOwnProperty("itemId"))
                    object.itemId = message.itemId;
                return object;
            };

            /**
             * Converts this ConsumeUserItemRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.ConsumeUserItemRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ConsumeUserItemRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ConsumeUserItemRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.ConsumeUserItemRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ConsumeUserItemRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.ConsumeUserItemRequest";
            };

            return ConsumeUserItemRequest;
        })();

        protobuf.ConsumeUserItemResponse = (function() {

            /**
             * Properties of a ConsumeUserItemResponse.
             * @memberof wm5.protobuf
             * @interface IConsumeUserItemResponse
             * @property {wm5.protobuf.ErrorCode} error ConsumeUserItemResponse error
             */

            /**
             * Constructs a new ConsumeUserItemResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a ConsumeUserItemResponse.
             * @implements IConsumeUserItemResponse
             * @constructor
             * @param {wm5.protobuf.IConsumeUserItemResponse=} [properties] Properties to set
             */
            function ConsumeUserItemResponse(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ConsumeUserItemResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.ConsumeUserItemResponse
             * @instance
             */
            ConsumeUserItemResponse.prototype.error = 0;

            /**
             * Creates a new ConsumeUserItemResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.ConsumeUserItemResponse
             * @static
             * @param {wm5.protobuf.IConsumeUserItemResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.ConsumeUserItemResponse} ConsumeUserItemResponse instance
             */
            ConsumeUserItemResponse.create = function create(properties) {
                return new ConsumeUserItemResponse(properties);
            };

            /**
             * Encodes the specified ConsumeUserItemResponse message. Does not implicitly {@link wm5.protobuf.ConsumeUserItemResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.ConsumeUserItemResponse
             * @static
             * @param {wm5.protobuf.IConsumeUserItemResponse} message ConsumeUserItemResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ConsumeUserItemResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                return writer;
            };

            /**
             * Encodes the specified ConsumeUserItemResponse message, length delimited. Does not implicitly {@link wm5.protobuf.ConsumeUserItemResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.ConsumeUserItemResponse
             * @static
             * @param {wm5.protobuf.IConsumeUserItemResponse} message ConsumeUserItemResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ConsumeUserItemResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a ConsumeUserItemResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.ConsumeUserItemResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.ConsumeUserItemResponse} ConsumeUserItemResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ConsumeUserItemResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.ConsumeUserItemResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a ConsumeUserItemResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.ConsumeUserItemResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.ConsumeUserItemResponse} ConsumeUserItemResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ConsumeUserItemResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a ConsumeUserItemResponse message.
             * @function verify
             * @memberof wm5.protobuf.ConsumeUserItemResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ConsumeUserItemResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                return null;
            };

            /**
             * Creates a ConsumeUserItemResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.ConsumeUserItemResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.ConsumeUserItemResponse} ConsumeUserItemResponse
             */
            ConsumeUserItemResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.ConsumeUserItemResponse)
                    return object;
                let message = new $root.wm5.protobuf.ConsumeUserItemResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a ConsumeUserItemResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.ConsumeUserItemResponse
             * @static
             * @param {wm5.protobuf.ConsumeUserItemResponse} message ConsumeUserItemResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ConsumeUserItemResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                return object;
            };

            /**
             * Converts this ConsumeUserItemResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.ConsumeUserItemResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ConsumeUserItemResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ConsumeUserItemResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.ConsumeUserItemResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ConsumeUserItemResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.ConsumeUserItemResponse";
            };

            return ConsumeUserItemResponse;
        })();

        protobuf.LoadGhostExpeditionInfoRequest = (function() {

            /**
             * Properties of a LoadGhostExpeditionInfoRequest.
             * @memberof wm5.protobuf
             * @interface ILoadGhostExpeditionInfoRequest
             * @property {number} ghostExpeditionId LoadGhostExpeditionInfoRequest ghostExpeditionId
             * @property {number} carId LoadGhostExpeditionInfoRequest carId
             */

            /**
             * Constructs a new LoadGhostExpeditionInfoRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadGhostExpeditionInfoRequest.
             * @implements ILoadGhostExpeditionInfoRequest
             * @constructor
             * @param {wm5.protobuf.ILoadGhostExpeditionInfoRequest=} [properties] Properties to set
             */
            function LoadGhostExpeditionInfoRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadGhostExpeditionInfoRequest ghostExpeditionId.
             * @member {number} ghostExpeditionId
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoRequest
             * @instance
             */
            LoadGhostExpeditionInfoRequest.prototype.ghostExpeditionId = 0;

            /**
             * LoadGhostExpeditionInfoRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoRequest
             * @instance
             */
            LoadGhostExpeditionInfoRequest.prototype.carId = 0;

            /**
             * Creates a new LoadGhostExpeditionInfoRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionInfoRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadGhostExpeditionInfoRequest} LoadGhostExpeditionInfoRequest instance
             */
            LoadGhostExpeditionInfoRequest.create = function create(properties) {
                return new LoadGhostExpeditionInfoRequest(properties);
            };

            /**
             * Encodes the specified LoadGhostExpeditionInfoRequest message. Does not implicitly {@link wm5.protobuf.LoadGhostExpeditionInfoRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionInfoRequest} message LoadGhostExpeditionInfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostExpeditionInfoRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.ghostExpeditionId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.carId);
                return writer;
            };

            /**
             * Encodes the specified LoadGhostExpeditionInfoRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGhostExpeditionInfoRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionInfoRequest} message LoadGhostExpeditionInfoRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostExpeditionInfoRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadGhostExpeditionInfoRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadGhostExpeditionInfoRequest} LoadGhostExpeditionInfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostExpeditionInfoRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGhostExpeditionInfoRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.ghostExpeditionId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.carId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("ghostExpeditionId"))
                    throw $util.ProtocolError("missing required 'ghostExpeditionId'", { instance: message });
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadGhostExpeditionInfoRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadGhostExpeditionInfoRequest} LoadGhostExpeditionInfoRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostExpeditionInfoRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadGhostExpeditionInfoRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadGhostExpeditionInfoRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.ghostExpeditionId))
                    return "ghostExpeditionId: integer expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                return null;
            };

            /**
             * Creates a LoadGhostExpeditionInfoRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadGhostExpeditionInfoRequest} LoadGhostExpeditionInfoRequest
             */
            LoadGhostExpeditionInfoRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadGhostExpeditionInfoRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadGhostExpeditionInfoRequest();
                if (object.ghostExpeditionId != null)
                    message.ghostExpeditionId = object.ghostExpeditionId >>> 0;
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadGhostExpeditionInfoRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoRequest
             * @static
             * @param {wm5.protobuf.LoadGhostExpeditionInfoRequest} message LoadGhostExpeditionInfoRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadGhostExpeditionInfoRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.ghostExpeditionId = 0;
                    object.carId = 0;
                }
                if (message.ghostExpeditionId != null && message.hasOwnProperty("ghostExpeditionId"))
                    object.ghostExpeditionId = message.ghostExpeditionId;
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                return object;
            };

            /**
             * Converts this LoadGhostExpeditionInfoRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadGhostExpeditionInfoRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadGhostExpeditionInfoRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadGhostExpeditionInfoRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadGhostExpeditionInfoRequest";
            };

            return LoadGhostExpeditionInfoRequest;
        })();

        protobuf.LoadGhostExpeditionInfoResponse = (function() {

            /**
             * Properties of a LoadGhostExpeditionInfoResponse.
             * @memberof wm5.protobuf
             * @interface ILoadGhostExpeditionInfoResponse
             * @property {wm5.protobuf.ErrorCode} error LoadGhostExpeditionInfoResponse error
             * @property {number|null} [sugorokuPoint] LoadGhostExpeditionInfoResponse sugorokuPoint
             * @property {number|null} [score] LoadGhostExpeditionInfoResponse score
             * @property {number} localScore LoadGhostExpeditionInfoResponse localScore
             * @property {number|null} [consecutiveLosses] LoadGhostExpeditionInfoResponse consecutiveLosses
             * @property {number|null} [rescuedSugorokuPoint] LoadGhostExpeditionInfoResponse rescuedSugorokuPoint
             * @property {Array.<wm5.protobuf.ICarEntry>|null} [rescuers] LoadGhostExpeditionInfoResponse rescuers
             * @property {Array.<wm5.protobuf.ICarEntry>|null} [recentWinners] LoadGhostExpeditionInfoResponse recentWinners
             * @property {Array.<number>|null} [aftereventBattledCars] LoadGhostExpeditionInfoResponse aftereventBattledCars
             */

            /**
             * Constructs a new LoadGhostExpeditionInfoResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadGhostExpeditionInfoResponse.
             * @implements ILoadGhostExpeditionInfoResponse
             * @constructor
             * @param {wm5.protobuf.ILoadGhostExpeditionInfoResponse=} [properties] Properties to set
             */
            function LoadGhostExpeditionInfoResponse(properties) {
                this.rescuers = [];
                this.recentWinners = [];
                this.aftereventBattledCars = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadGhostExpeditionInfoResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @instance
             */
            LoadGhostExpeditionInfoResponse.prototype.error = 0;

            /**
             * LoadGhostExpeditionInfoResponse sugorokuPoint.
             * @member {number} sugorokuPoint
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @instance
             */
            LoadGhostExpeditionInfoResponse.prototype.sugorokuPoint = 0;

            /**
             * LoadGhostExpeditionInfoResponse score.
             * @member {number} score
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @instance
             */
            LoadGhostExpeditionInfoResponse.prototype.score = 0;

            /**
             * LoadGhostExpeditionInfoResponse localScore.
             * @member {number} localScore
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @instance
             */
            LoadGhostExpeditionInfoResponse.prototype.localScore = 0;

            /**
             * LoadGhostExpeditionInfoResponse consecutiveLosses.
             * @member {number} consecutiveLosses
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @instance
             */
            LoadGhostExpeditionInfoResponse.prototype.consecutiveLosses = 0;

            /**
             * LoadGhostExpeditionInfoResponse rescuedSugorokuPoint.
             * @member {number} rescuedSugorokuPoint
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @instance
             */
            LoadGhostExpeditionInfoResponse.prototype.rescuedSugorokuPoint = 0;

            /**
             * LoadGhostExpeditionInfoResponse rescuers.
             * @member {Array.<wm5.protobuf.ICarEntry>} rescuers
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @instance
             */
            LoadGhostExpeditionInfoResponse.prototype.rescuers = $util.emptyArray;

            /**
             * LoadGhostExpeditionInfoResponse recentWinners.
             * @member {Array.<wm5.protobuf.ICarEntry>} recentWinners
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @instance
             */
            LoadGhostExpeditionInfoResponse.prototype.recentWinners = $util.emptyArray;

            /**
             * LoadGhostExpeditionInfoResponse aftereventBattledCars.
             * @member {Array.<number>} aftereventBattledCars
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @instance
             */
            LoadGhostExpeditionInfoResponse.prototype.aftereventBattledCars = $util.emptyArray;

            /**
             * Creates a new LoadGhostExpeditionInfoResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionInfoResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadGhostExpeditionInfoResponse} LoadGhostExpeditionInfoResponse instance
             */
            LoadGhostExpeditionInfoResponse.create = function create(properties) {
                return new LoadGhostExpeditionInfoResponse(properties);
            };

            /**
             * Encodes the specified LoadGhostExpeditionInfoResponse message. Does not implicitly {@link wm5.protobuf.LoadGhostExpeditionInfoResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionInfoResponse} message LoadGhostExpeditionInfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostExpeditionInfoResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.sugorokuPoint != null && Object.hasOwnProperty.call(message, "sugorokuPoint"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.sugorokuPoint);
                if (message.score != null && Object.hasOwnProperty.call(message, "score"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.score);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.localScore);
                if (message.consecutiveLosses != null && Object.hasOwnProperty.call(message, "consecutiveLosses"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.consecutiveLosses);
                if (message.rescuedSugorokuPoint != null && Object.hasOwnProperty.call(message, "rescuedSugorokuPoint"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.rescuedSugorokuPoint);
                if (message.rescuers != null && message.rescuers.length)
                    for (let i = 0; i < message.rescuers.length; ++i)
                        $root.wm5.protobuf.CarEntry.encode(message.rescuers[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                if (message.recentWinners != null && message.recentWinners.length)
                    for (let i = 0; i < message.recentWinners.length; ++i)
                        $root.wm5.protobuf.CarEntry.encode(message.recentWinners[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                if (message.aftereventBattledCars != null && message.aftereventBattledCars.length)
                    for (let i = 0; i < message.aftereventBattledCars.length; ++i)
                        writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.aftereventBattledCars[i]);
                return writer;
            };

            /**
             * Encodes the specified LoadGhostExpeditionInfoResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGhostExpeditionInfoResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionInfoResponse} message LoadGhostExpeditionInfoResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostExpeditionInfoResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadGhostExpeditionInfoResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadGhostExpeditionInfoResponse} LoadGhostExpeditionInfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostExpeditionInfoResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGhostExpeditionInfoResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.sugorokuPoint = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.score = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.localScore = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.consecutiveLosses = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.rescuedSugorokuPoint = reader.uint32();
                            break;
                        }
                    case 7: {
                            if (!(message.rescuers && message.rescuers.length))
                                message.rescuers = [];
                            message.rescuers.push($root.wm5.protobuf.CarEntry.decode(reader, reader.uint32()));
                            break;
                        }
                    case 8: {
                            if (!(message.recentWinners && message.recentWinners.length))
                                message.recentWinners = [];
                            message.recentWinners.push($root.wm5.protobuf.CarEntry.decode(reader, reader.uint32()));
                            break;
                        }
                    case 9: {
                            if (!(message.aftereventBattledCars && message.aftereventBattledCars.length))
                                message.aftereventBattledCars = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.aftereventBattledCars.push(reader.uint32());
                            } else
                                message.aftereventBattledCars.push(reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("localScore"))
                    throw $util.ProtocolError("missing required 'localScore'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadGhostExpeditionInfoResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadGhostExpeditionInfoResponse} LoadGhostExpeditionInfoResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostExpeditionInfoResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadGhostExpeditionInfoResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadGhostExpeditionInfoResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.sugorokuPoint != null && message.hasOwnProperty("sugorokuPoint"))
                    if (!$util.isInteger(message.sugorokuPoint))
                        return "sugorokuPoint: integer expected";
                if (message.score != null && message.hasOwnProperty("score"))
                    if (!$util.isInteger(message.score))
                        return "score: integer expected";
                if (!$util.isInteger(message.localScore))
                    return "localScore: integer expected";
                if (message.consecutiveLosses != null && message.hasOwnProperty("consecutiveLosses"))
                    if (!$util.isInteger(message.consecutiveLosses))
                        return "consecutiveLosses: integer expected";
                if (message.rescuedSugorokuPoint != null && message.hasOwnProperty("rescuedSugorokuPoint"))
                    if (!$util.isInteger(message.rescuedSugorokuPoint))
                        return "rescuedSugorokuPoint: integer expected";
                if (message.rescuers != null && message.hasOwnProperty("rescuers")) {
                    if (!Array.isArray(message.rescuers))
                        return "rescuers: array expected";
                    for (let i = 0; i < message.rescuers.length; ++i) {
                        let error = $root.wm5.protobuf.CarEntry.verify(message.rescuers[i]);
                        if (error)
                            return "rescuers." + error;
                    }
                }
                if (message.recentWinners != null && message.hasOwnProperty("recentWinners")) {
                    if (!Array.isArray(message.recentWinners))
                        return "recentWinners: array expected";
                    for (let i = 0; i < message.recentWinners.length; ++i) {
                        let error = $root.wm5.protobuf.CarEntry.verify(message.recentWinners[i]);
                        if (error)
                            return "recentWinners." + error;
                    }
                }
                if (message.aftereventBattledCars != null && message.hasOwnProperty("aftereventBattledCars")) {
                    if (!Array.isArray(message.aftereventBattledCars))
                        return "aftereventBattledCars: array expected";
                    for (let i = 0; i < message.aftereventBattledCars.length; ++i)
                        if (!$util.isInteger(message.aftereventBattledCars[i]))
                            return "aftereventBattledCars: integer[] expected";
                }
                return null;
            };

            /**
             * Creates a LoadGhostExpeditionInfoResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadGhostExpeditionInfoResponse} LoadGhostExpeditionInfoResponse
             */
            LoadGhostExpeditionInfoResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadGhostExpeditionInfoResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadGhostExpeditionInfoResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.sugorokuPoint != null)
                    message.sugorokuPoint = object.sugorokuPoint >>> 0;
                if (object.score != null)
                    message.score = object.score >>> 0;
                if (object.localScore != null)
                    message.localScore = object.localScore >>> 0;
                if (object.consecutiveLosses != null)
                    message.consecutiveLosses = object.consecutiveLosses >>> 0;
                if (object.rescuedSugorokuPoint != null)
                    message.rescuedSugorokuPoint = object.rescuedSugorokuPoint >>> 0;
                if (object.rescuers) {
                    if (!Array.isArray(object.rescuers))
                        throw TypeError(".wm5.protobuf.LoadGhostExpeditionInfoResponse.rescuers: array expected");
                    message.rescuers = [];
                    for (let i = 0; i < object.rescuers.length; ++i) {
                        if (typeof object.rescuers[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadGhostExpeditionInfoResponse.rescuers: object expected");
                        message.rescuers[i] = $root.wm5.protobuf.CarEntry.fromObject(object.rescuers[i]);
                    }
                }
                if (object.recentWinners) {
                    if (!Array.isArray(object.recentWinners))
                        throw TypeError(".wm5.protobuf.LoadGhostExpeditionInfoResponse.recentWinners: array expected");
                    message.recentWinners = [];
                    for (let i = 0; i < object.recentWinners.length; ++i) {
                        if (typeof object.recentWinners[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadGhostExpeditionInfoResponse.recentWinners: object expected");
                        message.recentWinners[i] = $root.wm5.protobuf.CarEntry.fromObject(object.recentWinners[i]);
                    }
                }
                if (object.aftereventBattledCars) {
                    if (!Array.isArray(object.aftereventBattledCars))
                        throw TypeError(".wm5.protobuf.LoadGhostExpeditionInfoResponse.aftereventBattledCars: array expected");
                    message.aftereventBattledCars = [];
                    for (let i = 0; i < object.aftereventBattledCars.length; ++i)
                        message.aftereventBattledCars[i] = object.aftereventBattledCars[i] >>> 0;
                }
                return message;
            };

            /**
             * Creates a plain object from a LoadGhostExpeditionInfoResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @static
             * @param {wm5.protobuf.LoadGhostExpeditionInfoResponse} message LoadGhostExpeditionInfoResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadGhostExpeditionInfoResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.rescuers = [];
                    object.recentWinners = [];
                    object.aftereventBattledCars = [];
                }
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.sugorokuPoint = 0;
                    object.score = 0;
                    object.localScore = 0;
                    object.consecutiveLosses = 0;
                    object.rescuedSugorokuPoint = 0;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.sugorokuPoint != null && message.hasOwnProperty("sugorokuPoint"))
                    object.sugorokuPoint = message.sugorokuPoint;
                if (message.score != null && message.hasOwnProperty("score"))
                    object.score = message.score;
                if (message.localScore != null && message.hasOwnProperty("localScore"))
                    object.localScore = message.localScore;
                if (message.consecutiveLosses != null && message.hasOwnProperty("consecutiveLosses"))
                    object.consecutiveLosses = message.consecutiveLosses;
                if (message.rescuedSugorokuPoint != null && message.hasOwnProperty("rescuedSugorokuPoint"))
                    object.rescuedSugorokuPoint = message.rescuedSugorokuPoint;
                if (message.rescuers && message.rescuers.length) {
                    object.rescuers = [];
                    for (let j = 0; j < message.rescuers.length; ++j)
                        object.rescuers[j] = $root.wm5.protobuf.CarEntry.toObject(message.rescuers[j], options);
                }
                if (message.recentWinners && message.recentWinners.length) {
                    object.recentWinners = [];
                    for (let j = 0; j < message.recentWinners.length; ++j)
                        object.recentWinners[j] = $root.wm5.protobuf.CarEntry.toObject(message.recentWinners[j], options);
                }
                if (message.aftereventBattledCars && message.aftereventBattledCars.length) {
                    object.aftereventBattledCars = [];
                    for (let j = 0; j < message.aftereventBattledCars.length; ++j)
                        object.aftereventBattledCars[j] = message.aftereventBattledCars[j];
                }
                return object;
            };

            /**
             * Converts this LoadGhostExpeditionInfoResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadGhostExpeditionInfoResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadGhostExpeditionInfoResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadGhostExpeditionInfoResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadGhostExpeditionInfoResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadGhostExpeditionInfoResponse";
            };

            return LoadGhostExpeditionInfoResponse;
        })();

        protobuf.LoadGhostExpeditionTargetsRequest = (function() {

            /**
             * Properties of a LoadGhostExpeditionTargetsRequest.
             * @memberof wm5.protobuf
             * @interface ILoadGhostExpeditionTargetsRequest
             * @property {number} ghostExpeditionId LoadGhostExpeditionTargetsRequest ghostExpeditionId
             * @property {number} carId LoadGhostExpeditionTargetsRequest carId
             */

            /**
             * Constructs a new LoadGhostExpeditionTargetsRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadGhostExpeditionTargetsRequest.
             * @implements ILoadGhostExpeditionTargetsRequest
             * @constructor
             * @param {wm5.protobuf.ILoadGhostExpeditionTargetsRequest=} [properties] Properties to set
             */
            function LoadGhostExpeditionTargetsRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadGhostExpeditionTargetsRequest ghostExpeditionId.
             * @member {number} ghostExpeditionId
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsRequest
             * @instance
             */
            LoadGhostExpeditionTargetsRequest.prototype.ghostExpeditionId = 0;

            /**
             * LoadGhostExpeditionTargetsRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsRequest
             * @instance
             */
            LoadGhostExpeditionTargetsRequest.prototype.carId = 0;

            /**
             * Creates a new LoadGhostExpeditionTargetsRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionTargetsRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadGhostExpeditionTargetsRequest} LoadGhostExpeditionTargetsRequest instance
             */
            LoadGhostExpeditionTargetsRequest.create = function create(properties) {
                return new LoadGhostExpeditionTargetsRequest(properties);
            };

            /**
             * Encodes the specified LoadGhostExpeditionTargetsRequest message. Does not implicitly {@link wm5.protobuf.LoadGhostExpeditionTargetsRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionTargetsRequest} message LoadGhostExpeditionTargetsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostExpeditionTargetsRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.ghostExpeditionId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.carId);
                return writer;
            };

            /**
             * Encodes the specified LoadGhostExpeditionTargetsRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGhostExpeditionTargetsRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionTargetsRequest} message LoadGhostExpeditionTargetsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostExpeditionTargetsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadGhostExpeditionTargetsRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadGhostExpeditionTargetsRequest} LoadGhostExpeditionTargetsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostExpeditionTargetsRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGhostExpeditionTargetsRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.ghostExpeditionId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.carId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("ghostExpeditionId"))
                    throw $util.ProtocolError("missing required 'ghostExpeditionId'", { instance: message });
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadGhostExpeditionTargetsRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadGhostExpeditionTargetsRequest} LoadGhostExpeditionTargetsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostExpeditionTargetsRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadGhostExpeditionTargetsRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadGhostExpeditionTargetsRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.ghostExpeditionId))
                    return "ghostExpeditionId: integer expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                return null;
            };

            /**
             * Creates a LoadGhostExpeditionTargetsRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadGhostExpeditionTargetsRequest} LoadGhostExpeditionTargetsRequest
             */
            LoadGhostExpeditionTargetsRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadGhostExpeditionTargetsRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadGhostExpeditionTargetsRequest();
                if (object.ghostExpeditionId != null)
                    message.ghostExpeditionId = object.ghostExpeditionId >>> 0;
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadGhostExpeditionTargetsRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsRequest
             * @static
             * @param {wm5.protobuf.LoadGhostExpeditionTargetsRequest} message LoadGhostExpeditionTargetsRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadGhostExpeditionTargetsRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.ghostExpeditionId = 0;
                    object.carId = 0;
                }
                if (message.ghostExpeditionId != null && message.hasOwnProperty("ghostExpeditionId"))
                    object.ghostExpeditionId = message.ghostExpeditionId;
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                return object;
            };

            /**
             * Converts this LoadGhostExpeditionTargetsRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadGhostExpeditionTargetsRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadGhostExpeditionTargetsRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadGhostExpeditionTargetsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadGhostExpeditionTargetsRequest";
            };

            return LoadGhostExpeditionTargetsRequest;
        })();

        protobuf.LoadGhostExpeditionTargetsResponse = (function() {

            /**
             * Properties of a LoadGhostExpeditionTargetsResponse.
             * @memberof wm5.protobuf
             * @interface ILoadGhostExpeditionTargetsResponse
             * @property {wm5.protobuf.ErrorCode} error LoadGhostExpeditionTargetsResponse error
             * @property {Array.<wm5.protobuf.IGhostCar>|null} [candidates] LoadGhostExpeditionTargetsResponse candidates
             * @property {Array.<wm5.protobuf.IWantedCar>|null} [wantedCars] LoadGhostExpeditionTargetsResponse wantedCars
             */

            /**
             * Constructs a new LoadGhostExpeditionTargetsResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadGhostExpeditionTargetsResponse.
             * @implements ILoadGhostExpeditionTargetsResponse
             * @constructor
             * @param {wm5.protobuf.ILoadGhostExpeditionTargetsResponse=} [properties] Properties to set
             */
            function LoadGhostExpeditionTargetsResponse(properties) {
                this.candidates = [];
                this.wantedCars = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadGhostExpeditionTargetsResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsResponse
             * @instance
             */
            LoadGhostExpeditionTargetsResponse.prototype.error = 0;

            /**
             * LoadGhostExpeditionTargetsResponse candidates.
             * @member {Array.<wm5.protobuf.IGhostCar>} candidates
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsResponse
             * @instance
             */
            LoadGhostExpeditionTargetsResponse.prototype.candidates = $util.emptyArray;

            /**
             * LoadGhostExpeditionTargetsResponse wantedCars.
             * @member {Array.<wm5.protobuf.IWantedCar>} wantedCars
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsResponse
             * @instance
             */
            LoadGhostExpeditionTargetsResponse.prototype.wantedCars = $util.emptyArray;

            /**
             * Creates a new LoadGhostExpeditionTargetsResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionTargetsResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadGhostExpeditionTargetsResponse} LoadGhostExpeditionTargetsResponse instance
             */
            LoadGhostExpeditionTargetsResponse.create = function create(properties) {
                return new LoadGhostExpeditionTargetsResponse(properties);
            };

            /**
             * Encodes the specified LoadGhostExpeditionTargetsResponse message. Does not implicitly {@link wm5.protobuf.LoadGhostExpeditionTargetsResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionTargetsResponse} message LoadGhostExpeditionTargetsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostExpeditionTargetsResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                if (message.candidates != null && message.candidates.length)
                    for (let i = 0; i < message.candidates.length; ++i)
                        $root.wm5.protobuf.GhostCar.encode(message.candidates[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.wantedCars != null && message.wantedCars.length)
                    for (let i = 0; i < message.wantedCars.length; ++i)
                        $root.wm5.protobuf.WantedCar.encode(message.wantedCars[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified LoadGhostExpeditionTargetsResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGhostExpeditionTargetsResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionTargetsResponse} message LoadGhostExpeditionTargetsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostExpeditionTargetsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadGhostExpeditionTargetsResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadGhostExpeditionTargetsResponse} LoadGhostExpeditionTargetsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostExpeditionTargetsResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGhostExpeditionTargetsResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            if (!(message.candidates && message.candidates.length))
                                message.candidates = [];
                            message.candidates.push($root.wm5.protobuf.GhostCar.decode(reader, reader.uint32()));
                            break;
                        }
                    case 3: {
                            if (!(message.wantedCars && message.wantedCars.length))
                                message.wantedCars = [];
                            message.wantedCars.push($root.wm5.protobuf.WantedCar.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadGhostExpeditionTargetsResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadGhostExpeditionTargetsResponse} LoadGhostExpeditionTargetsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostExpeditionTargetsResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadGhostExpeditionTargetsResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadGhostExpeditionTargetsResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (message.candidates != null && message.hasOwnProperty("candidates")) {
                    if (!Array.isArray(message.candidates))
                        return "candidates: array expected";
                    for (let i = 0; i < message.candidates.length; ++i) {
                        let error = $root.wm5.protobuf.GhostCar.verify(message.candidates[i]);
                        if (error)
                            return "candidates." + error;
                    }
                }
                if (message.wantedCars != null && message.hasOwnProperty("wantedCars")) {
                    if (!Array.isArray(message.wantedCars))
                        return "wantedCars: array expected";
                    for (let i = 0; i < message.wantedCars.length; ++i) {
                        let error = $root.wm5.protobuf.WantedCar.verify(message.wantedCars[i]);
                        if (error)
                            return "wantedCars." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a LoadGhostExpeditionTargetsResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadGhostExpeditionTargetsResponse} LoadGhostExpeditionTargetsResponse
             */
            LoadGhostExpeditionTargetsResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadGhostExpeditionTargetsResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadGhostExpeditionTargetsResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.candidates) {
                    if (!Array.isArray(object.candidates))
                        throw TypeError(".wm5.protobuf.LoadGhostExpeditionTargetsResponse.candidates: array expected");
                    message.candidates = [];
                    for (let i = 0; i < object.candidates.length; ++i) {
                        if (typeof object.candidates[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadGhostExpeditionTargetsResponse.candidates: object expected");
                        message.candidates[i] = $root.wm5.protobuf.GhostCar.fromObject(object.candidates[i]);
                    }
                }
                if (object.wantedCars) {
                    if (!Array.isArray(object.wantedCars))
                        throw TypeError(".wm5.protobuf.LoadGhostExpeditionTargetsResponse.wantedCars: array expected");
                    message.wantedCars = [];
                    for (let i = 0; i < object.wantedCars.length; ++i) {
                        if (typeof object.wantedCars[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadGhostExpeditionTargetsResponse.wantedCars: object expected");
                        message.wantedCars[i] = $root.wm5.protobuf.WantedCar.fromObject(object.wantedCars[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a LoadGhostExpeditionTargetsResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsResponse
             * @static
             * @param {wm5.protobuf.LoadGhostExpeditionTargetsResponse} message LoadGhostExpeditionTargetsResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadGhostExpeditionTargetsResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults) {
                    object.candidates = [];
                    object.wantedCars = [];
                }
                if (options.defaults)
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.candidates && message.candidates.length) {
                    object.candidates = [];
                    for (let j = 0; j < message.candidates.length; ++j)
                        object.candidates[j] = $root.wm5.protobuf.GhostCar.toObject(message.candidates[j], options);
                }
                if (message.wantedCars && message.wantedCars.length) {
                    object.wantedCars = [];
                    for (let j = 0; j < message.wantedCars.length; ++j)
                        object.wantedCars[j] = $root.wm5.protobuf.WantedCar.toObject(message.wantedCars[j], options);
                }
                return object;
            };

            /**
             * Converts this LoadGhostExpeditionTargetsResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadGhostExpeditionTargetsResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadGhostExpeditionTargetsResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadGhostExpeditionTargetsResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadGhostExpeditionTargetsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadGhostExpeditionTargetsResponse";
            };

            return LoadGhostExpeditionTargetsResponse;
        })();

        protobuf.LoadGhostExpeditionResultRequest = (function() {

            /**
             * Properties of a LoadGhostExpeditionResultRequest.
             * @memberof wm5.protobuf
             * @interface ILoadGhostExpeditionResultRequest
             * @property {number} ghostExpeditionId LoadGhostExpeditionResultRequest ghostExpeditionId
             * @property {number} carId LoadGhostExpeditionResultRequest carId
             */

            /**
             * Constructs a new LoadGhostExpeditionResultRequest.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadGhostExpeditionResultRequest.
             * @implements ILoadGhostExpeditionResultRequest
             * @constructor
             * @param {wm5.protobuf.ILoadGhostExpeditionResultRequest=} [properties] Properties to set
             */
            function LoadGhostExpeditionResultRequest(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadGhostExpeditionResultRequest ghostExpeditionId.
             * @member {number} ghostExpeditionId
             * @memberof wm5.protobuf.LoadGhostExpeditionResultRequest
             * @instance
             */
            LoadGhostExpeditionResultRequest.prototype.ghostExpeditionId = 0;

            /**
             * LoadGhostExpeditionResultRequest carId.
             * @member {number} carId
             * @memberof wm5.protobuf.LoadGhostExpeditionResultRequest
             * @instance
             */
            LoadGhostExpeditionResultRequest.prototype.carId = 0;

            /**
             * Creates a new LoadGhostExpeditionResultRequest instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadGhostExpeditionResultRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionResultRequest=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadGhostExpeditionResultRequest} LoadGhostExpeditionResultRequest instance
             */
            LoadGhostExpeditionResultRequest.create = function create(properties) {
                return new LoadGhostExpeditionResultRequest(properties);
            };

            /**
             * Encodes the specified LoadGhostExpeditionResultRequest message. Does not implicitly {@link wm5.protobuf.LoadGhostExpeditionResultRequest.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadGhostExpeditionResultRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionResultRequest} message LoadGhostExpeditionResultRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostExpeditionResultRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.ghostExpeditionId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.carId);
                return writer;
            };

            /**
             * Encodes the specified LoadGhostExpeditionResultRequest message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGhostExpeditionResultRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadGhostExpeditionResultRequest
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionResultRequest} message LoadGhostExpeditionResultRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostExpeditionResultRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadGhostExpeditionResultRequest message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadGhostExpeditionResultRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadGhostExpeditionResultRequest} LoadGhostExpeditionResultRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostExpeditionResultRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGhostExpeditionResultRequest();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.ghostExpeditionId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.carId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("ghostExpeditionId"))
                    throw $util.ProtocolError("missing required 'ghostExpeditionId'", { instance: message });
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadGhostExpeditionResultRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadGhostExpeditionResultRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadGhostExpeditionResultRequest} LoadGhostExpeditionResultRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostExpeditionResultRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadGhostExpeditionResultRequest message.
             * @function verify
             * @memberof wm5.protobuf.LoadGhostExpeditionResultRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadGhostExpeditionResultRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.ghostExpeditionId))
                    return "ghostExpeditionId: integer expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                return null;
            };

            /**
             * Creates a LoadGhostExpeditionResultRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadGhostExpeditionResultRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadGhostExpeditionResultRequest} LoadGhostExpeditionResultRequest
             */
            LoadGhostExpeditionResultRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadGhostExpeditionResultRequest)
                    return object;
                let message = new $root.wm5.protobuf.LoadGhostExpeditionResultRequest();
                if (object.ghostExpeditionId != null)
                    message.ghostExpeditionId = object.ghostExpeditionId >>> 0;
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a LoadGhostExpeditionResultRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadGhostExpeditionResultRequest
             * @static
             * @param {wm5.protobuf.LoadGhostExpeditionResultRequest} message LoadGhostExpeditionResultRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadGhostExpeditionResultRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.ghostExpeditionId = 0;
                    object.carId = 0;
                }
                if (message.ghostExpeditionId != null && message.hasOwnProperty("ghostExpeditionId"))
                    object.ghostExpeditionId = message.ghostExpeditionId;
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                return object;
            };

            /**
             * Converts this LoadGhostExpeditionResultRequest to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadGhostExpeditionResultRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadGhostExpeditionResultRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadGhostExpeditionResultRequest
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadGhostExpeditionResultRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadGhostExpeditionResultRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadGhostExpeditionResultRequest";
            };

            return LoadGhostExpeditionResultRequest;
        })();

        protobuf.LoadGhostExpeditionResultResponse = (function() {

            /**
             * Properties of a LoadGhostExpeditionResultResponse.
             * @memberof wm5.protobuf
             * @interface ILoadGhostExpeditionResultResponse
             * @property {wm5.protobuf.ErrorCode} error LoadGhostExpeditionResultResponse error
             * @property {number} score LoadGhostExpeditionResultResponse score
             * @property {number} localScore LoadGhostExpeditionResultResponse localScore
             * @property {Array.<wm5.protobuf.IGhostExpeditionRankingEntry>|null} [localRanking] LoadGhostExpeditionResultResponse localRanking
             */

            /**
             * Constructs a new LoadGhostExpeditionResultResponse.
             * @memberof wm5.protobuf
             * @classdesc Represents a LoadGhostExpeditionResultResponse.
             * @implements ILoadGhostExpeditionResultResponse
             * @constructor
             * @param {wm5.protobuf.ILoadGhostExpeditionResultResponse=} [properties] Properties to set
             */
            function LoadGhostExpeditionResultResponse(properties) {
                this.localRanking = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * LoadGhostExpeditionResultResponse error.
             * @member {wm5.protobuf.ErrorCode} error
             * @memberof wm5.protobuf.LoadGhostExpeditionResultResponse
             * @instance
             */
            LoadGhostExpeditionResultResponse.prototype.error = 0;

            /**
             * LoadGhostExpeditionResultResponse score.
             * @member {number} score
             * @memberof wm5.protobuf.LoadGhostExpeditionResultResponse
             * @instance
             */
            LoadGhostExpeditionResultResponse.prototype.score = 0;

            /**
             * LoadGhostExpeditionResultResponse localScore.
             * @member {number} localScore
             * @memberof wm5.protobuf.LoadGhostExpeditionResultResponse
             * @instance
             */
            LoadGhostExpeditionResultResponse.prototype.localScore = 0;

            /**
             * LoadGhostExpeditionResultResponse localRanking.
             * @member {Array.<wm5.protobuf.IGhostExpeditionRankingEntry>} localRanking
             * @memberof wm5.protobuf.LoadGhostExpeditionResultResponse
             * @instance
             */
            LoadGhostExpeditionResultResponse.prototype.localRanking = $util.emptyArray;

            /**
             * Creates a new LoadGhostExpeditionResultResponse instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.LoadGhostExpeditionResultResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionResultResponse=} [properties] Properties to set
             * @returns {wm5.protobuf.LoadGhostExpeditionResultResponse} LoadGhostExpeditionResultResponse instance
             */
            LoadGhostExpeditionResultResponse.create = function create(properties) {
                return new LoadGhostExpeditionResultResponse(properties);
            };

            /**
             * Encodes the specified LoadGhostExpeditionResultResponse message. Does not implicitly {@link wm5.protobuf.LoadGhostExpeditionResultResponse.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.LoadGhostExpeditionResultResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionResultResponse} message LoadGhostExpeditionResultResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostExpeditionResultResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.error);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.score);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.localScore);
                if (message.localRanking != null && message.localRanking.length)
                    for (let i = 0; i < message.localRanking.length; ++i)
                        $root.wm5.protobuf.GhostExpeditionRankingEntry.encode(message.localRanking[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified LoadGhostExpeditionResultResponse message, length delimited. Does not implicitly {@link wm5.protobuf.LoadGhostExpeditionResultResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.LoadGhostExpeditionResultResponse
             * @static
             * @param {wm5.protobuf.ILoadGhostExpeditionResultResponse} message LoadGhostExpeditionResultResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            LoadGhostExpeditionResultResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a LoadGhostExpeditionResultResponse message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.LoadGhostExpeditionResultResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.LoadGhostExpeditionResultResponse} LoadGhostExpeditionResultResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostExpeditionResultResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.LoadGhostExpeditionResultResponse();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.error = reader.int32();
                            break;
                        }
                    case 2: {
                            message.score = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.localScore = reader.uint32();
                            break;
                        }
                    case 4: {
                            if (!(message.localRanking && message.localRanking.length))
                                message.localRanking = [];
                            message.localRanking.push($root.wm5.protobuf.GhostExpeditionRankingEntry.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("error"))
                    throw $util.ProtocolError("missing required 'error'", { instance: message });
                if (!message.hasOwnProperty("score"))
                    throw $util.ProtocolError("missing required 'score'", { instance: message });
                if (!message.hasOwnProperty("localScore"))
                    throw $util.ProtocolError("missing required 'localScore'", { instance: message });
                return message;
            };

            /**
             * Decodes a LoadGhostExpeditionResultResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.LoadGhostExpeditionResultResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.LoadGhostExpeditionResultResponse} LoadGhostExpeditionResultResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            LoadGhostExpeditionResultResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a LoadGhostExpeditionResultResponse message.
             * @function verify
             * @memberof wm5.protobuf.LoadGhostExpeditionResultResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            LoadGhostExpeditionResultResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.error) {
                default:
                    return "error: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                    break;
                }
                if (!$util.isInteger(message.score))
                    return "score: integer expected";
                if (!$util.isInteger(message.localScore))
                    return "localScore: integer expected";
                if (message.localRanking != null && message.hasOwnProperty("localRanking")) {
                    if (!Array.isArray(message.localRanking))
                        return "localRanking: array expected";
                    for (let i = 0; i < message.localRanking.length; ++i) {
                        let error = $root.wm5.protobuf.GhostExpeditionRankingEntry.verify(message.localRanking[i]);
                        if (error)
                            return "localRanking." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a LoadGhostExpeditionResultResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.LoadGhostExpeditionResultResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.LoadGhostExpeditionResultResponse} LoadGhostExpeditionResultResponse
             */
            LoadGhostExpeditionResultResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.LoadGhostExpeditionResultResponse)
                    return object;
                let message = new $root.wm5.protobuf.LoadGhostExpeditionResultResponse();
                switch (object.error) {
                default:
                    if (typeof object.error === "number") {
                        message.error = object.error;
                        break;
                    }
                    break;
                case "ERR_SUCCESS":
                case 0:
                    message.error = 0;
                    break;
                case "ERR_REQUEST":
                case 1:
                    message.error = 1;
                    break;
                case "ERR_NOT_FOUND":
                case 2:
                    message.error = 2;
                    break;
                case "ERR_ID_SERVER":
                case 3:
                    message.error = 3;
                    break;
                case "ERR_ID_BANNED":
                case 4:
                    message.error = 4;
                    break;
                case "ERR_USER_LOCKED":
                case 5:
                    message.error = 5;
                    break;
                case "ERR_USER_VERSION":
                case 6:
                    message.error = 6;
                    break;
                case "ERR_NAME_CONFLICTED":
                case 7:
                    message.error = 7;
                    break;
                case "ERR_TEAM_LOCKED":
                case 8:
                    message.error = 8;
                    break;
                case "ERR_FORBIDDEN":
                case 9:
                    message.error = 9;
                    break;
                case "ERR_TEAM_DISSOLVED":
                case 10:
                    message.error = 10;
                    break;
                case "ERR_USER_SUCCEEDED":
                case 11:
                    message.error = 11;
                    break;
                case "ERR_BEING_TRANSFERRED":
                case 12:
                    message.error = 12;
                    break;
                case "ERR_SCRATCH_LOCKED":
                case 13:
                    message.error = 13;
                    break;
                }
                if (object.score != null)
                    message.score = object.score >>> 0;
                if (object.localScore != null)
                    message.localScore = object.localScore >>> 0;
                if (object.localRanking) {
                    if (!Array.isArray(object.localRanking))
                        throw TypeError(".wm5.protobuf.LoadGhostExpeditionResultResponse.localRanking: array expected");
                    message.localRanking = [];
                    for (let i = 0; i < object.localRanking.length; ++i) {
                        if (typeof object.localRanking[i] !== "object")
                            throw TypeError(".wm5.protobuf.LoadGhostExpeditionResultResponse.localRanking: object expected");
                        message.localRanking[i] = $root.wm5.protobuf.GhostExpeditionRankingEntry.fromObject(object.localRanking[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a LoadGhostExpeditionResultResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.LoadGhostExpeditionResultResponse
             * @static
             * @param {wm5.protobuf.LoadGhostExpeditionResultResponse} message LoadGhostExpeditionResultResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            LoadGhostExpeditionResultResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.localRanking = [];
                if (options.defaults) {
                    object.error = options.enums === String ? "ERR_SUCCESS" : 0;
                    object.score = 0;
                    object.localScore = 0;
                }
                if (message.error != null && message.hasOwnProperty("error"))
                    object.error = options.enums === String ? $root.wm5.protobuf.ErrorCode[message.error] === undefined ? message.error : $root.wm5.protobuf.ErrorCode[message.error] : message.error;
                if (message.score != null && message.hasOwnProperty("score"))
                    object.score = message.score;
                if (message.localScore != null && message.hasOwnProperty("localScore"))
                    object.localScore = message.localScore;
                if (message.localRanking && message.localRanking.length) {
                    object.localRanking = [];
                    for (let j = 0; j < message.localRanking.length; ++j)
                        object.localRanking[j] = $root.wm5.protobuf.GhostExpeditionRankingEntry.toObject(message.localRanking[j], options);
                }
                return object;
            };

            /**
             * Converts this LoadGhostExpeditionResultResponse to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.LoadGhostExpeditionResultResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            LoadGhostExpeditionResultResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for LoadGhostExpeditionResultResponse
             * @function getTypeUrl
             * @memberof wm5.protobuf.LoadGhostExpeditionResultResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            LoadGhostExpeditionResultResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.LoadGhostExpeditionResultResponse";
            };

            return LoadGhostExpeditionResultResponse;
        })();

        protobuf.Car = (function() {

            /**
             * Properties of a Car.
             * @memberof wm5.protobuf
             * @interface ICar
             * @property {number|null} [carId] Car carId
             * @property {number|null} [userId] Car userId
             * @property {number|null} [regionId] Car regionId
             * @property {string|null} [name] Car name
             * @property {number|null} [manufacturer] Car manufacturer
             * @property {number|null} [model] Car model
             * @property {number|null} [visualModel] Car visualModel
             * @property {number|null} [defaultColor] Car defaultColor
             * @property {number} customColor Car customColor
             * @property {number} wheel Car wheel
             * @property {number} wheelColor Car wheelColor
             * @property {number} aero Car aero
             * @property {number} bonnet Car bonnet
             * @property {number} wing Car wing
             * @property {wm5.protobuf.IGTWing|null} [gtWing] Car gtWing
             * @property {number} mirror Car mirror
             * @property {number} sticker Car sticker
             * @property {number} stickerColor Car stickerColor
             * @property {Array.<wm5.protobuf.IMiniSticker>|null} [miniStickers] Car miniStickers
             * @property {number} sideSticker Car sideSticker
             * @property {number} sideStickerColor Car sideStickerColor
             * @property {number} roofSticker Car roofSticker
             * @property {number} roofStickerColor Car roofStickerColor
             * @property {number} neon Car neon
             * @property {number} trunk Car trunk
             * @property {number} plate Car plate
             * @property {number} plateColor Car plateColor
             * @property {number} plateNumber Car plateNumber
             * @property {number} specialSticker Car specialSticker
             * @property {number} specialStickerColor Car specialStickerColor
             * @property {number} tunePower Car tunePower
             * @property {number} tuneHandling Car tuneHandling
             * @property {string} title Car title
             * @property {number} level Car level
             * @property {boolean|null} [teamSticker] Car teamSticker
             * @property {number|null} [teamId] Car teamId
             * @property {string|null} [teamName] Car teamName
             * @property {number|null} [teamStickerFont] Car teamStickerFont
             * @property {number|null} [teamDecoration] Car teamDecoration
             * @property {number|null} [teamDecorationColor] Car teamDecorationColor
             * @property {number|null} [rivalMarker] Car rivalMarker
             * @property {number|null} [rivalMarkerColor] Car rivalMarkerColor
             * @property {number|null} [lastPlayedAt] Car lastPlayedAt
             * @property {wm5.protobuf.IPlace|null} [lastPlayedPlace] Car lastPlayedPlace
             * @property {number|null} [aura] Car aura
             * @property {number|null} [auraMotif] Car auraMotif
             * @property {number|null} [ghostLevel] Car ghostLevel
             * @property {string|null} [country] Car country
             * @property {string|null} [searchCode] Car searchCode
             */

            /**
             * Constructs a new Car.
             * @memberof wm5.protobuf
             * @classdesc Represents a Car.
             * @implements ICar
             * @constructor
             * @param {wm5.protobuf.ICar=} [properties] Properties to set
             */
            function Car(properties) {
                this.miniStickers = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Car carId.
             * @member {number} carId
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.carId = 0;

            /**
             * Car userId.
             * @member {number} userId
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.userId = 0;

            /**
             * Car regionId.
             * @member {number} regionId
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.regionId = 0;

            /**
             * Car name.
             * @member {string} name
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.name = "";

            /**
             * Car manufacturer.
             * @member {number} manufacturer
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.manufacturer = 0;

            /**
             * Car model.
             * @member {number} model
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.model = 0;

            /**
             * Car visualModel.
             * @member {number} visualModel
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.visualModel = 0;

            /**
             * Car defaultColor.
             * @member {number} defaultColor
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.defaultColor = 0;

            /**
             * Car customColor.
             * @member {number} customColor
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.customColor = 0;

            /**
             * Car wheel.
             * @member {number} wheel
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.wheel = 0;

            /**
             * Car wheelColor.
             * @member {number} wheelColor
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.wheelColor = 0;

            /**
             * Car aero.
             * @member {number} aero
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.aero = 0;

            /**
             * Car bonnet.
             * @member {number} bonnet
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.bonnet = 0;

            /**
             * Car wing.
             * @member {number} wing
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.wing = 0;

            /**
             * Car gtWing.
             * @member {wm5.protobuf.IGTWing|null|undefined} gtWing
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.gtWing = null;

            /**
             * Car mirror.
             * @member {number} mirror
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.mirror = 0;

            /**
             * Car sticker.
             * @member {number} sticker
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.sticker = 0;

            /**
             * Car stickerColor.
             * @member {number} stickerColor
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.stickerColor = 0;

            /**
             * Car miniStickers.
             * @member {Array.<wm5.protobuf.IMiniSticker>} miniStickers
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.miniStickers = $util.emptyArray;

            /**
             * Car sideSticker.
             * @member {number} sideSticker
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.sideSticker = 0;

            /**
             * Car sideStickerColor.
             * @member {number} sideStickerColor
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.sideStickerColor = 0;

            /**
             * Car roofSticker.
             * @member {number} roofSticker
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.roofSticker = 0;

            /**
             * Car roofStickerColor.
             * @member {number} roofStickerColor
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.roofStickerColor = 0;

            /**
             * Car neon.
             * @member {number} neon
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.neon = 0;

            /**
             * Car trunk.
             * @member {number} trunk
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.trunk = 0;

            /**
             * Car plate.
             * @member {number} plate
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.plate = 0;

            /**
             * Car plateColor.
             * @member {number} plateColor
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.plateColor = 0;

            /**
             * Car plateNumber.
             * @member {number} plateNumber
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.plateNumber = 0;

            /**
             * Car specialSticker.
             * @member {number} specialSticker
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.specialSticker = 0;

            /**
             * Car specialStickerColor.
             * @member {number} specialStickerColor
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.specialStickerColor = 0;

            /**
             * Car tunePower.
             * @member {number} tunePower
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.tunePower = 0;

            /**
             * Car tuneHandling.
             * @member {number} tuneHandling
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.tuneHandling = 0;

            /**
             * Car title.
             * @member {string} title
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.title = "";

            /**
             * Car level.
             * @member {number} level
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.level = 0;

            /**
             * Car teamSticker.
             * @member {boolean} teamSticker
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.teamSticker = false;

            /**
             * Car teamId.
             * @member {number} teamId
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.teamId = 0;

            /**
             * Car teamName.
             * @member {string} teamName
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.teamName = "";

            /**
             * Car teamStickerFont.
             * @member {number} teamStickerFont
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.teamStickerFont = 0;

            /**
             * Car teamDecoration.
             * @member {number} teamDecoration
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.teamDecoration = 0;

            /**
             * Car teamDecorationColor.
             * @member {number} teamDecorationColor
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.teamDecorationColor = 0;

            /**
             * Car rivalMarker.
             * @member {number} rivalMarker
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.rivalMarker = 0;

            /**
             * Car rivalMarkerColor.
             * @member {number} rivalMarkerColor
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.rivalMarkerColor = 0;

            /**
             * Car lastPlayedAt.
             * @member {number} lastPlayedAt
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.lastPlayedAt = 0;

            /**
             * Car lastPlayedPlace.
             * @member {wm5.protobuf.IPlace|null|undefined} lastPlayedPlace
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.lastPlayedPlace = null;

            /**
             * Car aura.
             * @member {number} aura
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.aura = 0;

            /**
             * Car auraMotif.
             * @member {number} auraMotif
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.auraMotif = 0;

            /**
             * Car ghostLevel.
             * @member {number} ghostLevel
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.ghostLevel = 0;

            /**
             * Car country.
             * @member {string} country
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.country = "";

            /**
             * Car searchCode.
             * @member {string} searchCode
             * @memberof wm5.protobuf.Car
             * @instance
             */
            Car.prototype.searchCode = "";

            /**
             * Creates a new Car instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.Car
             * @static
             * @param {wm5.protobuf.ICar=} [properties] Properties to set
             * @returns {wm5.protobuf.Car} Car instance
             */
            Car.create = function create(properties) {
                return new Car(properties);
            };

            /**
             * Encodes the specified Car message. Does not implicitly {@link wm5.protobuf.Car.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.Car
             * @static
             * @param {wm5.protobuf.ICar} message Car message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Car.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.carId != null && Object.hasOwnProperty.call(message, "carId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                if (message.userId != null && Object.hasOwnProperty.call(message, "userId"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.userId);
                if (message.regionId != null && Object.hasOwnProperty.call(message, "regionId"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.regionId);
                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                if (message.manufacturer != null && Object.hasOwnProperty.call(message, "manufacturer"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.manufacturer);
                if (message.model != null && Object.hasOwnProperty.call(message, "model"))
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.model);
                if (message.visualModel != null && Object.hasOwnProperty.call(message, "visualModel"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.visualModel);
                if (message.defaultColor != null && Object.hasOwnProperty.call(message, "defaultColor"))
                    writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.defaultColor);
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.customColor);
                writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.wheel);
                writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.wheelColor);
                writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.aero);
                writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.bonnet);
                writer.uint32(/* id 14, wireType 0 =*/112).uint32(message.wing);
                if (message.gtWing != null && Object.hasOwnProperty.call(message, "gtWing"))
                    $root.wm5.protobuf.GTWing.encode(message.gtWing, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                writer.uint32(/* id 16, wireType 0 =*/128).uint32(message.mirror);
                writer.uint32(/* id 17, wireType 0 =*/136).uint32(message.sticker);
                writer.uint32(/* id 18, wireType 0 =*/144).uint32(message.stickerColor);
                if (message.miniStickers != null && message.miniStickers.length)
                    for (let i = 0; i < message.miniStickers.length; ++i)
                        $root.wm5.protobuf.MiniSticker.encode(message.miniStickers[i], writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                writer.uint32(/* id 20, wireType 0 =*/160).uint32(message.sideSticker);
                writer.uint32(/* id 21, wireType 0 =*/168).uint32(message.sideStickerColor);
                writer.uint32(/* id 22, wireType 0 =*/176).uint32(message.roofSticker);
                writer.uint32(/* id 23, wireType 0 =*/184).uint32(message.roofStickerColor);
                writer.uint32(/* id 24, wireType 0 =*/192).uint32(message.neon);
                writer.uint32(/* id 25, wireType 0 =*/200).uint32(message.trunk);
                writer.uint32(/* id 26, wireType 0 =*/208).uint32(message.plate);
                writer.uint32(/* id 27, wireType 0 =*/216).uint32(message.plateColor);
                writer.uint32(/* id 28, wireType 0 =*/224).uint32(message.plateNumber);
                writer.uint32(/* id 29, wireType 0 =*/232).uint32(message.specialSticker);
                writer.uint32(/* id 30, wireType 0 =*/240).uint32(message.specialStickerColor);
                writer.uint32(/* id 31, wireType 0 =*/248).uint32(message.tunePower);
                writer.uint32(/* id 32, wireType 0 =*/256).uint32(message.tuneHandling);
                writer.uint32(/* id 33, wireType 2 =*/266).string(message.title);
                writer.uint32(/* id 34, wireType 0 =*/272).uint32(message.level);
                if (message.teamSticker != null && Object.hasOwnProperty.call(message, "teamSticker"))
                    writer.uint32(/* id 35, wireType 0 =*/280).bool(message.teamSticker);
                if (message.teamId != null && Object.hasOwnProperty.call(message, "teamId"))
                    writer.uint32(/* id 36, wireType 0 =*/288).uint32(message.teamId);
                if (message.teamName != null && Object.hasOwnProperty.call(message, "teamName"))
                    writer.uint32(/* id 37, wireType 2 =*/298).string(message.teamName);
                if (message.teamStickerFont != null && Object.hasOwnProperty.call(message, "teamStickerFont"))
                    writer.uint32(/* id 38, wireType 0 =*/304).uint32(message.teamStickerFont);
                if (message.teamDecoration != null && Object.hasOwnProperty.call(message, "teamDecoration"))
                    writer.uint32(/* id 39, wireType 0 =*/312).uint32(message.teamDecoration);
                if (message.teamDecorationColor != null && Object.hasOwnProperty.call(message, "teamDecorationColor"))
                    writer.uint32(/* id 40, wireType 0 =*/320).uint32(message.teamDecorationColor);
                if (message.rivalMarker != null && Object.hasOwnProperty.call(message, "rivalMarker"))
                    writer.uint32(/* id 41, wireType 0 =*/328).uint32(message.rivalMarker);
                if (message.rivalMarkerColor != null && Object.hasOwnProperty.call(message, "rivalMarkerColor"))
                    writer.uint32(/* id 42, wireType 0 =*/336).uint32(message.rivalMarkerColor);
                if (message.lastPlayedAt != null && Object.hasOwnProperty.call(message, "lastPlayedAt"))
                    writer.uint32(/* id 45, wireType 0 =*/360).uint32(message.lastPlayedAt);
                if (message.lastPlayedPlace != null && Object.hasOwnProperty.call(message, "lastPlayedPlace"))
                    $root.wm5.protobuf.Place.encode(message.lastPlayedPlace, writer.uint32(/* id 46, wireType 2 =*/370).fork()).ldelim();
                if (message.aura != null && Object.hasOwnProperty.call(message, "aura"))
                    writer.uint32(/* id 47, wireType 0 =*/376).uint32(message.aura);
                if (message.auraMotif != null && Object.hasOwnProperty.call(message, "auraMotif"))
                    writer.uint32(/* id 48, wireType 0 =*/384).uint32(message.auraMotif);
                if (message.ghostLevel != null && Object.hasOwnProperty.call(message, "ghostLevel"))
                    writer.uint32(/* id 49, wireType 0 =*/392).uint32(message.ghostLevel);
                if (message.country != null && Object.hasOwnProperty.call(message, "country"))
                    writer.uint32(/* id 50, wireType 2 =*/402).string(message.country);
                if (message.searchCode != null && Object.hasOwnProperty.call(message, "searchCode"))
                    writer.uint32(/* id 51, wireType 2 =*/410).string(message.searchCode);
                return writer;
            };

            /**
             * Encodes the specified Car message, length delimited. Does not implicitly {@link wm5.protobuf.Car.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.Car
             * @static
             * @param {wm5.protobuf.ICar} message Car message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Car.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Car message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.Car
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.Car} Car
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Car.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.Car();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.regionId = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.name = reader.string();
                            break;
                        }
                    case 5: {
                            message.manufacturer = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.model = reader.uint32();
                            break;
                        }
                    case 7: {
                            message.visualModel = reader.uint32();
                            break;
                        }
                    case 8: {
                            message.defaultColor = reader.uint32();
                            break;
                        }
                    case 9: {
                            message.customColor = reader.uint32();
                            break;
                        }
                    case 10: {
                            message.wheel = reader.uint32();
                            break;
                        }
                    case 11: {
                            message.wheelColor = reader.uint32();
                            break;
                        }
                    case 12: {
                            message.aero = reader.uint32();
                            break;
                        }
                    case 13: {
                            message.bonnet = reader.uint32();
                            break;
                        }
                    case 14: {
                            message.wing = reader.uint32();
                            break;
                        }
                    case 15: {
                            message.gtWing = $root.wm5.protobuf.GTWing.decode(reader, reader.uint32());
                            break;
                        }
                    case 16: {
                            message.mirror = reader.uint32();
                            break;
                        }
                    case 17: {
                            message.sticker = reader.uint32();
                            break;
                        }
                    case 18: {
                            message.stickerColor = reader.uint32();
                            break;
                        }
                    case 19: {
                            if (!(message.miniStickers && message.miniStickers.length))
                                message.miniStickers = [];
                            message.miniStickers.push($root.wm5.protobuf.MiniSticker.decode(reader, reader.uint32()));
                            break;
                        }
                    case 20: {
                            message.sideSticker = reader.uint32();
                            break;
                        }
                    case 21: {
                            message.sideStickerColor = reader.uint32();
                            break;
                        }
                    case 22: {
                            message.roofSticker = reader.uint32();
                            break;
                        }
                    case 23: {
                            message.roofStickerColor = reader.uint32();
                            break;
                        }
                    case 24: {
                            message.neon = reader.uint32();
                            break;
                        }
                    case 25: {
                            message.trunk = reader.uint32();
                            break;
                        }
                    case 26: {
                            message.plate = reader.uint32();
                            break;
                        }
                    case 27: {
                            message.plateColor = reader.uint32();
                            break;
                        }
                    case 28: {
                            message.plateNumber = reader.uint32();
                            break;
                        }
                    case 29: {
                            message.specialSticker = reader.uint32();
                            break;
                        }
                    case 30: {
                            message.specialStickerColor = reader.uint32();
                            break;
                        }
                    case 31: {
                            message.tunePower = reader.uint32();
                            break;
                        }
                    case 32: {
                            message.tuneHandling = reader.uint32();
                            break;
                        }
                    case 33: {
                            message.title = reader.string();
                            break;
                        }
                    case 34: {
                            message.level = reader.uint32();
                            break;
                        }
                    case 35: {
                            message.teamSticker = reader.bool();
                            break;
                        }
                    case 36: {
                            message.teamId = reader.uint32();
                            break;
                        }
                    case 37: {
                            message.teamName = reader.string();
                            break;
                        }
                    case 38: {
                            message.teamStickerFont = reader.uint32();
                            break;
                        }
                    case 39: {
                            message.teamDecoration = reader.uint32();
                            break;
                        }
                    case 40: {
                            message.teamDecorationColor = reader.uint32();
                            break;
                        }
                    case 41: {
                            message.rivalMarker = reader.uint32();
                            break;
                        }
                    case 42: {
                            message.rivalMarkerColor = reader.uint32();
                            break;
                        }
                    case 45: {
                            message.lastPlayedAt = reader.uint32();
                            break;
                        }
                    case 46: {
                            message.lastPlayedPlace = $root.wm5.protobuf.Place.decode(reader, reader.uint32());
                            break;
                        }
                    case 47: {
                            message.aura = reader.uint32();
                            break;
                        }
                    case 48: {
                            message.auraMotif = reader.uint32();
                            break;
                        }
                    case 49: {
                            message.ghostLevel = reader.uint32();
                            break;
                        }
                    case 50: {
                            message.country = reader.string();
                            break;
                        }
                    case 51: {
                            message.searchCode = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("customColor"))
                    throw $util.ProtocolError("missing required 'customColor'", { instance: message });
                if (!message.hasOwnProperty("wheel"))
                    throw $util.ProtocolError("missing required 'wheel'", { instance: message });
                if (!message.hasOwnProperty("wheelColor"))
                    throw $util.ProtocolError("missing required 'wheelColor'", { instance: message });
                if (!message.hasOwnProperty("aero"))
                    throw $util.ProtocolError("missing required 'aero'", { instance: message });
                if (!message.hasOwnProperty("bonnet"))
                    throw $util.ProtocolError("missing required 'bonnet'", { instance: message });
                if (!message.hasOwnProperty("wing"))
                    throw $util.ProtocolError("missing required 'wing'", { instance: message });
                if (!message.hasOwnProperty("mirror"))
                    throw $util.ProtocolError("missing required 'mirror'", { instance: message });
                if (!message.hasOwnProperty("sticker"))
                    throw $util.ProtocolError("missing required 'sticker'", { instance: message });
                if (!message.hasOwnProperty("stickerColor"))
                    throw $util.ProtocolError("missing required 'stickerColor'", { instance: message });
                if (!message.hasOwnProperty("sideSticker"))
                    throw $util.ProtocolError("missing required 'sideSticker'", { instance: message });
                if (!message.hasOwnProperty("sideStickerColor"))
                    throw $util.ProtocolError("missing required 'sideStickerColor'", { instance: message });
                if (!message.hasOwnProperty("roofSticker"))
                    throw $util.ProtocolError("missing required 'roofSticker'", { instance: message });
                if (!message.hasOwnProperty("roofStickerColor"))
                    throw $util.ProtocolError("missing required 'roofStickerColor'", { instance: message });
                if (!message.hasOwnProperty("neon"))
                    throw $util.ProtocolError("missing required 'neon'", { instance: message });
                if (!message.hasOwnProperty("trunk"))
                    throw $util.ProtocolError("missing required 'trunk'", { instance: message });
                if (!message.hasOwnProperty("plate"))
                    throw $util.ProtocolError("missing required 'plate'", { instance: message });
                if (!message.hasOwnProperty("plateColor"))
                    throw $util.ProtocolError("missing required 'plateColor'", { instance: message });
                if (!message.hasOwnProperty("plateNumber"))
                    throw $util.ProtocolError("missing required 'plateNumber'", { instance: message });
                if (!message.hasOwnProperty("specialSticker"))
                    throw $util.ProtocolError("missing required 'specialSticker'", { instance: message });
                if (!message.hasOwnProperty("specialStickerColor"))
                    throw $util.ProtocolError("missing required 'specialStickerColor'", { instance: message });
                if (!message.hasOwnProperty("tunePower"))
                    throw $util.ProtocolError("missing required 'tunePower'", { instance: message });
                if (!message.hasOwnProperty("tuneHandling"))
                    throw $util.ProtocolError("missing required 'tuneHandling'", { instance: message });
                if (!message.hasOwnProperty("title"))
                    throw $util.ProtocolError("missing required 'title'", { instance: message });
                if (!message.hasOwnProperty("level"))
                    throw $util.ProtocolError("missing required 'level'", { instance: message });
                return message;
            };

            /**
             * Decodes a Car message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.Car
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.Car} Car
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Car.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Car message.
             * @function verify
             * @memberof wm5.protobuf.Car
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Car.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.carId != null && message.hasOwnProperty("carId"))
                    if (!$util.isInteger(message.carId))
                        return "carId: integer expected";
                if (message.userId != null && message.hasOwnProperty("userId"))
                    if (!$util.isInteger(message.userId))
                        return "userId: integer expected";
                if (message.regionId != null && message.hasOwnProperty("regionId"))
                    if (!$util.isInteger(message.regionId))
                        return "regionId: integer expected";
                if (message.name != null && message.hasOwnProperty("name"))
                    if (!$util.isString(message.name))
                        return "name: string expected";
                if (message.manufacturer != null && message.hasOwnProperty("manufacturer"))
                    if (!$util.isInteger(message.manufacturer))
                        return "manufacturer: integer expected";
                if (message.model != null && message.hasOwnProperty("model"))
                    if (!$util.isInteger(message.model))
                        return "model: integer expected";
                if (message.visualModel != null && message.hasOwnProperty("visualModel"))
                    if (!$util.isInteger(message.visualModel))
                        return "visualModel: integer expected";
                if (message.defaultColor != null && message.hasOwnProperty("defaultColor"))
                    if (!$util.isInteger(message.defaultColor))
                        return "defaultColor: integer expected";
                if (!$util.isInteger(message.customColor))
                    return "customColor: integer expected";
                if (!$util.isInteger(message.wheel))
                    return "wheel: integer expected";
                if (!$util.isInteger(message.wheelColor))
                    return "wheelColor: integer expected";
                if (!$util.isInteger(message.aero))
                    return "aero: integer expected";
                if (!$util.isInteger(message.bonnet))
                    return "bonnet: integer expected";
                if (!$util.isInteger(message.wing))
                    return "wing: integer expected";
                if (message.gtWing != null && message.hasOwnProperty("gtWing")) {
                    let error = $root.wm5.protobuf.GTWing.verify(message.gtWing);
                    if (error)
                        return "gtWing." + error;
                }
                if (!$util.isInteger(message.mirror))
                    return "mirror: integer expected";
                if (!$util.isInteger(message.sticker))
                    return "sticker: integer expected";
                if (!$util.isInteger(message.stickerColor))
                    return "stickerColor: integer expected";
                if (message.miniStickers != null && message.hasOwnProperty("miniStickers")) {
                    if (!Array.isArray(message.miniStickers))
                        return "miniStickers: array expected";
                    for (let i = 0; i < message.miniStickers.length; ++i) {
                        let error = $root.wm5.protobuf.MiniSticker.verify(message.miniStickers[i]);
                        if (error)
                            return "miniStickers." + error;
                    }
                }
                if (!$util.isInteger(message.sideSticker))
                    return "sideSticker: integer expected";
                if (!$util.isInteger(message.sideStickerColor))
                    return "sideStickerColor: integer expected";
                if (!$util.isInteger(message.roofSticker))
                    return "roofSticker: integer expected";
                if (!$util.isInteger(message.roofStickerColor))
                    return "roofStickerColor: integer expected";
                if (!$util.isInteger(message.neon))
                    return "neon: integer expected";
                if (!$util.isInteger(message.trunk))
                    return "trunk: integer expected";
                if (!$util.isInteger(message.plate))
                    return "plate: integer expected";
                if (!$util.isInteger(message.plateColor))
                    return "plateColor: integer expected";
                if (!$util.isInteger(message.plateNumber))
                    return "plateNumber: integer expected";
                if (!$util.isInteger(message.specialSticker))
                    return "specialSticker: integer expected";
                if (!$util.isInteger(message.specialStickerColor))
                    return "specialStickerColor: integer expected";
                if (!$util.isInteger(message.tunePower))
                    return "tunePower: integer expected";
                if (!$util.isInteger(message.tuneHandling))
                    return "tuneHandling: integer expected";
                if (!$util.isString(message.title))
                    return "title: string expected";
                if (!$util.isInteger(message.level))
                    return "level: integer expected";
                if (message.teamSticker != null && message.hasOwnProperty("teamSticker"))
                    if (typeof message.teamSticker !== "boolean")
                        return "teamSticker: boolean expected";
                if (message.teamId != null && message.hasOwnProperty("teamId"))
                    if (!$util.isInteger(message.teamId))
                        return "teamId: integer expected";
                if (message.teamName != null && message.hasOwnProperty("teamName"))
                    if (!$util.isString(message.teamName))
                        return "teamName: string expected";
                if (message.teamStickerFont != null && message.hasOwnProperty("teamStickerFont"))
                    if (!$util.isInteger(message.teamStickerFont))
                        return "teamStickerFont: integer expected";
                if (message.teamDecoration != null && message.hasOwnProperty("teamDecoration"))
                    if (!$util.isInteger(message.teamDecoration))
                        return "teamDecoration: integer expected";
                if (message.teamDecorationColor != null && message.hasOwnProperty("teamDecorationColor"))
                    if (!$util.isInteger(message.teamDecorationColor))
                        return "teamDecorationColor: integer expected";
                if (message.rivalMarker != null && message.hasOwnProperty("rivalMarker"))
                    if (!$util.isInteger(message.rivalMarker))
                        return "rivalMarker: integer expected";
                if (message.rivalMarkerColor != null && message.hasOwnProperty("rivalMarkerColor"))
                    if (!$util.isInteger(message.rivalMarkerColor))
                        return "rivalMarkerColor: integer expected";
                if (message.lastPlayedAt != null && message.hasOwnProperty("lastPlayedAt"))
                    if (!$util.isInteger(message.lastPlayedAt))
                        return "lastPlayedAt: integer expected";
                if (message.lastPlayedPlace != null && message.hasOwnProperty("lastPlayedPlace")) {
                    let error = $root.wm5.protobuf.Place.verify(message.lastPlayedPlace);
                    if (error)
                        return "lastPlayedPlace." + error;
                }
                if (message.aura != null && message.hasOwnProperty("aura"))
                    if (!$util.isInteger(message.aura))
                        return "aura: integer expected";
                if (message.auraMotif != null && message.hasOwnProperty("auraMotif"))
                    if (!$util.isInteger(message.auraMotif))
                        return "auraMotif: integer expected";
                if (message.ghostLevel != null && message.hasOwnProperty("ghostLevel"))
                    if (!$util.isInteger(message.ghostLevel))
                        return "ghostLevel: integer expected";
                if (message.country != null && message.hasOwnProperty("country"))
                    if (!$util.isString(message.country))
                        return "country: string expected";
                if (message.searchCode != null && message.hasOwnProperty("searchCode"))
                    if (!$util.isString(message.searchCode))
                        return "searchCode: string expected";
                return null;
            };

            /**
             * Creates a Car message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.Car
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.Car} Car
             */
            Car.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.Car)
                    return object;
                let message = new $root.wm5.protobuf.Car();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.regionId != null)
                    message.regionId = object.regionId >>> 0;
                if (object.name != null)
                    message.name = String(object.name);
                if (object.manufacturer != null)
                    message.manufacturer = object.manufacturer >>> 0;
                if (object.model != null)
                    message.model = object.model >>> 0;
                if (object.visualModel != null)
                    message.visualModel = object.visualModel >>> 0;
                if (object.defaultColor != null)
                    message.defaultColor = object.defaultColor >>> 0;
                if (object.customColor != null)
                    message.customColor = object.customColor >>> 0;
                if (object.wheel != null)
                    message.wheel = object.wheel >>> 0;
                if (object.wheelColor != null)
                    message.wheelColor = object.wheelColor >>> 0;
                if (object.aero != null)
                    message.aero = object.aero >>> 0;
                if (object.bonnet != null)
                    message.bonnet = object.bonnet >>> 0;
                if (object.wing != null)
                    message.wing = object.wing >>> 0;
                if (object.gtWing != null) {
                    if (typeof object.gtWing !== "object")
                        throw TypeError(".wm5.protobuf.Car.gtWing: object expected");
                    message.gtWing = $root.wm5.protobuf.GTWing.fromObject(object.gtWing);
                }
                if (object.mirror != null)
                    message.mirror = object.mirror >>> 0;
                if (object.sticker != null)
                    message.sticker = object.sticker >>> 0;
                if (object.stickerColor != null)
                    message.stickerColor = object.stickerColor >>> 0;
                if (object.miniStickers) {
                    if (!Array.isArray(object.miniStickers))
                        throw TypeError(".wm5.protobuf.Car.miniStickers: array expected");
                    message.miniStickers = [];
                    for (let i = 0; i < object.miniStickers.length; ++i) {
                        if (typeof object.miniStickers[i] !== "object")
                            throw TypeError(".wm5.protobuf.Car.miniStickers: object expected");
                        message.miniStickers[i] = $root.wm5.protobuf.MiniSticker.fromObject(object.miniStickers[i]);
                    }
                }
                if (object.sideSticker != null)
                    message.sideSticker = object.sideSticker >>> 0;
                if (object.sideStickerColor != null)
                    message.sideStickerColor = object.sideStickerColor >>> 0;
                if (object.roofSticker != null)
                    message.roofSticker = object.roofSticker >>> 0;
                if (object.roofStickerColor != null)
                    message.roofStickerColor = object.roofStickerColor >>> 0;
                if (object.neon != null)
                    message.neon = object.neon >>> 0;
                if (object.trunk != null)
                    message.trunk = object.trunk >>> 0;
                if (object.plate != null)
                    message.plate = object.plate >>> 0;
                if (object.plateColor != null)
                    message.plateColor = object.plateColor >>> 0;
                if (object.plateNumber != null)
                    message.plateNumber = object.plateNumber >>> 0;
                if (object.specialSticker != null)
                    message.specialSticker = object.specialSticker >>> 0;
                if (object.specialStickerColor != null)
                    message.specialStickerColor = object.specialStickerColor >>> 0;
                if (object.tunePower != null)
                    message.tunePower = object.tunePower >>> 0;
                if (object.tuneHandling != null)
                    message.tuneHandling = object.tuneHandling >>> 0;
                if (object.title != null)
                    message.title = String(object.title);
                if (object.level != null)
                    message.level = object.level >>> 0;
                if (object.teamSticker != null)
                    message.teamSticker = Boolean(object.teamSticker);
                if (object.teamId != null)
                    message.teamId = object.teamId >>> 0;
                if (object.teamName != null)
                    message.teamName = String(object.teamName);
                if (object.teamStickerFont != null)
                    message.teamStickerFont = object.teamStickerFont >>> 0;
                if (object.teamDecoration != null)
                    message.teamDecoration = object.teamDecoration >>> 0;
                if (object.teamDecorationColor != null)
                    message.teamDecorationColor = object.teamDecorationColor >>> 0;
                if (object.rivalMarker != null)
                    message.rivalMarker = object.rivalMarker >>> 0;
                if (object.rivalMarkerColor != null)
                    message.rivalMarkerColor = object.rivalMarkerColor >>> 0;
                if (object.lastPlayedAt != null)
                    message.lastPlayedAt = object.lastPlayedAt >>> 0;
                if (object.lastPlayedPlace != null) {
                    if (typeof object.lastPlayedPlace !== "object")
                        throw TypeError(".wm5.protobuf.Car.lastPlayedPlace: object expected");
                    message.lastPlayedPlace = $root.wm5.protobuf.Place.fromObject(object.lastPlayedPlace);
                }
                if (object.aura != null)
                    message.aura = object.aura >>> 0;
                if (object.auraMotif != null)
                    message.auraMotif = object.auraMotif >>> 0;
                if (object.ghostLevel != null)
                    message.ghostLevel = object.ghostLevel >>> 0;
                if (object.country != null)
                    message.country = String(object.country);
                if (object.searchCode != null)
                    message.searchCode = String(object.searchCode);
                return message;
            };

            /**
             * Creates a plain object from a Car message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.Car
             * @static
             * @param {wm5.protobuf.Car} message Car
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Car.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.miniStickers = [];
                if (options.defaults) {
                    object.carId = 0;
                    object.userId = 0;
                    object.regionId = 0;
                    object.name = "";
                    object.manufacturer = 0;
                    object.model = 0;
                    object.visualModel = 0;
                    object.defaultColor = 0;
                    object.customColor = 0;
                    object.wheel = 0;
                    object.wheelColor = 0;
                    object.aero = 0;
                    object.bonnet = 0;
                    object.wing = 0;
                    object.gtWing = null;
                    object.mirror = 0;
                    object.sticker = 0;
                    object.stickerColor = 0;
                    object.sideSticker = 0;
                    object.sideStickerColor = 0;
                    object.roofSticker = 0;
                    object.roofStickerColor = 0;
                    object.neon = 0;
                    object.trunk = 0;
                    object.plate = 0;
                    object.plateColor = 0;
                    object.plateNumber = 0;
                    object.specialSticker = 0;
                    object.specialStickerColor = 0;
                    object.tunePower = 0;
                    object.tuneHandling = 0;
                    object.title = "";
                    object.level = 0;
                    object.teamSticker = false;
                    object.teamId = 0;
                    object.teamName = "";
                    object.teamStickerFont = 0;
                    object.teamDecoration = 0;
                    object.teamDecorationColor = 0;
                    object.rivalMarker = 0;
                    object.rivalMarkerColor = 0;
                    object.lastPlayedAt = 0;
                    object.lastPlayedPlace = null;
                    object.aura = 0;
                    object.auraMotif = 0;
                    object.ghostLevel = 0;
                    object.country = "";
                    object.searchCode = "";
                }
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.regionId != null && message.hasOwnProperty("regionId"))
                    object.regionId = message.regionId;
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.manufacturer != null && message.hasOwnProperty("manufacturer"))
                    object.manufacturer = message.manufacturer;
                if (message.model != null && message.hasOwnProperty("model"))
                    object.model = message.model;
                if (message.visualModel != null && message.hasOwnProperty("visualModel"))
                    object.visualModel = message.visualModel;
                if (message.defaultColor != null && message.hasOwnProperty("defaultColor"))
                    object.defaultColor = message.defaultColor;
                if (message.customColor != null && message.hasOwnProperty("customColor"))
                    object.customColor = message.customColor;
                if (message.wheel != null && message.hasOwnProperty("wheel"))
                    object.wheel = message.wheel;
                if (message.wheelColor != null && message.hasOwnProperty("wheelColor"))
                    object.wheelColor = message.wheelColor;
                if (message.aero != null && message.hasOwnProperty("aero"))
                    object.aero = message.aero;
                if (message.bonnet != null && message.hasOwnProperty("bonnet"))
                    object.bonnet = message.bonnet;
                if (message.wing != null && message.hasOwnProperty("wing"))
                    object.wing = message.wing;
                if (message.gtWing != null && message.hasOwnProperty("gtWing"))
                    object.gtWing = $root.wm5.protobuf.GTWing.toObject(message.gtWing, options);
                if (message.mirror != null && message.hasOwnProperty("mirror"))
                    object.mirror = message.mirror;
                if (message.sticker != null && message.hasOwnProperty("sticker"))
                    object.sticker = message.sticker;
                if (message.stickerColor != null && message.hasOwnProperty("stickerColor"))
                    object.stickerColor = message.stickerColor;
                if (message.miniStickers && message.miniStickers.length) {
                    object.miniStickers = [];
                    for (let j = 0; j < message.miniStickers.length; ++j)
                        object.miniStickers[j] = $root.wm5.protobuf.MiniSticker.toObject(message.miniStickers[j], options);
                }
                if (message.sideSticker != null && message.hasOwnProperty("sideSticker"))
                    object.sideSticker = message.sideSticker;
                if (message.sideStickerColor != null && message.hasOwnProperty("sideStickerColor"))
                    object.sideStickerColor = message.sideStickerColor;
                if (message.roofSticker != null && message.hasOwnProperty("roofSticker"))
                    object.roofSticker = message.roofSticker;
                if (message.roofStickerColor != null && message.hasOwnProperty("roofStickerColor"))
                    object.roofStickerColor = message.roofStickerColor;
                if (message.neon != null && message.hasOwnProperty("neon"))
                    object.neon = message.neon;
                if (message.trunk != null && message.hasOwnProperty("trunk"))
                    object.trunk = message.trunk;
                if (message.plate != null && message.hasOwnProperty("plate"))
                    object.plate = message.plate;
                if (message.plateColor != null && message.hasOwnProperty("plateColor"))
                    object.plateColor = message.plateColor;
                if (message.plateNumber != null && message.hasOwnProperty("plateNumber"))
                    object.plateNumber = message.plateNumber;
                if (message.specialSticker != null && message.hasOwnProperty("specialSticker"))
                    object.specialSticker = message.specialSticker;
                if (message.specialStickerColor != null && message.hasOwnProperty("specialStickerColor"))
                    object.specialStickerColor = message.specialStickerColor;
                if (message.tunePower != null && message.hasOwnProperty("tunePower"))
                    object.tunePower = message.tunePower;
                if (message.tuneHandling != null && message.hasOwnProperty("tuneHandling"))
                    object.tuneHandling = message.tuneHandling;
                if (message.title != null && message.hasOwnProperty("title"))
                    object.title = message.title;
                if (message.level != null && message.hasOwnProperty("level"))
                    object.level = message.level;
                if (message.teamSticker != null && message.hasOwnProperty("teamSticker"))
                    object.teamSticker = message.teamSticker;
                if (message.teamId != null && message.hasOwnProperty("teamId"))
                    object.teamId = message.teamId;
                if (message.teamName != null && message.hasOwnProperty("teamName"))
                    object.teamName = message.teamName;
                if (message.teamStickerFont != null && message.hasOwnProperty("teamStickerFont"))
                    object.teamStickerFont = message.teamStickerFont;
                if (message.teamDecoration != null && message.hasOwnProperty("teamDecoration"))
                    object.teamDecoration = message.teamDecoration;
                if (message.teamDecorationColor != null && message.hasOwnProperty("teamDecorationColor"))
                    object.teamDecorationColor = message.teamDecorationColor;
                if (message.rivalMarker != null && message.hasOwnProperty("rivalMarker"))
                    object.rivalMarker = message.rivalMarker;
                if (message.rivalMarkerColor != null && message.hasOwnProperty("rivalMarkerColor"))
                    object.rivalMarkerColor = message.rivalMarkerColor;
                if (message.lastPlayedAt != null && message.hasOwnProperty("lastPlayedAt"))
                    object.lastPlayedAt = message.lastPlayedAt;
                if (message.lastPlayedPlace != null && message.hasOwnProperty("lastPlayedPlace"))
                    object.lastPlayedPlace = $root.wm5.protobuf.Place.toObject(message.lastPlayedPlace, options);
                if (message.aura != null && message.hasOwnProperty("aura"))
                    object.aura = message.aura;
                if (message.auraMotif != null && message.hasOwnProperty("auraMotif"))
                    object.auraMotif = message.auraMotif;
                if (message.ghostLevel != null && message.hasOwnProperty("ghostLevel"))
                    object.ghostLevel = message.ghostLevel;
                if (message.country != null && message.hasOwnProperty("country"))
                    object.country = message.country;
                if (message.searchCode != null && message.hasOwnProperty("searchCode"))
                    object.searchCode = message.searchCode;
                return object;
            };

            /**
             * Converts this Car to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.Car
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Car.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for Car
             * @function getTypeUrl
             * @memberof wm5.protobuf.Car
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Car.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.Car";
            };

            return Car;
        })();

        protobuf.CarSetting = (function() {

            /**
             * Properties of a CarSetting.
             * @memberof wm5.protobuf
             * @interface ICarSetting
             * @property {number|null} [carId] CarSetting carId
             * @property {boolean} view CarSetting view
             * @property {boolean} transmission CarSetting transmission
             * @property {boolean} retire CarSetting retire
             * @property {number} meter CarSetting meter
             * @property {boolean} navigationMap CarSetting navigationMap
             * @property {number} volume CarSetting volume
             * @property {number} bgm CarSetting bgm
             * @property {number} nameplate CarSetting nameplate
             * @property {number} nameplateColor CarSetting nameplateColor
             * @property {number|null} [nameplateFrame] CarSetting nameplateFrame
             * @property {number|null} [nameplateFrameColor] CarSetting nameplateFrameColor
             * @property {number} terminalBackground CarSetting terminalBackground
             */

            /**
             * Constructs a new CarSetting.
             * @memberof wm5.protobuf
             * @classdesc Represents a CarSetting.
             * @implements ICarSetting
             * @constructor
             * @param {wm5.protobuf.ICarSetting=} [properties] Properties to set
             */
            function CarSetting(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CarSetting carId.
             * @member {number} carId
             * @memberof wm5.protobuf.CarSetting
             * @instance
             */
            CarSetting.prototype.carId = 0;

            /**
             * CarSetting view.
             * @member {boolean} view
             * @memberof wm5.protobuf.CarSetting
             * @instance
             */
            CarSetting.prototype.view = false;

            /**
             * CarSetting transmission.
             * @member {boolean} transmission
             * @memberof wm5.protobuf.CarSetting
             * @instance
             */
            CarSetting.prototype.transmission = false;

            /**
             * CarSetting retire.
             * @member {boolean} retire
             * @memberof wm5.protobuf.CarSetting
             * @instance
             */
            CarSetting.prototype.retire = false;

            /**
             * CarSetting meter.
             * @member {number} meter
             * @memberof wm5.protobuf.CarSetting
             * @instance
             */
            CarSetting.prototype.meter = 0;

            /**
             * CarSetting navigationMap.
             * @member {boolean} navigationMap
             * @memberof wm5.protobuf.CarSetting
             * @instance
             */
            CarSetting.prototype.navigationMap = false;

            /**
             * CarSetting volume.
             * @member {number} volume
             * @memberof wm5.protobuf.CarSetting
             * @instance
             */
            CarSetting.prototype.volume = 0;

            /**
             * CarSetting bgm.
             * @member {number} bgm
             * @memberof wm5.protobuf.CarSetting
             * @instance
             */
            CarSetting.prototype.bgm = 0;

            /**
             * CarSetting nameplate.
             * @member {number} nameplate
             * @memberof wm5.protobuf.CarSetting
             * @instance
             */
            CarSetting.prototype.nameplate = 0;

            /**
             * CarSetting nameplateColor.
             * @member {number} nameplateColor
             * @memberof wm5.protobuf.CarSetting
             * @instance
             */
            CarSetting.prototype.nameplateColor = 0;

            /**
             * CarSetting nameplateFrame.
             * @member {number} nameplateFrame
             * @memberof wm5.protobuf.CarSetting
             * @instance
             */
            CarSetting.prototype.nameplateFrame = 0;

            /**
             * CarSetting nameplateFrameColor.
             * @member {number} nameplateFrameColor
             * @memberof wm5.protobuf.CarSetting
             * @instance
             */
            CarSetting.prototype.nameplateFrameColor = 0;

            /**
             * CarSetting terminalBackground.
             * @member {number} terminalBackground
             * @memberof wm5.protobuf.CarSetting
             * @instance
             */
            CarSetting.prototype.terminalBackground = 0;

            /**
             * Creates a new CarSetting instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CarSetting
             * @static
             * @param {wm5.protobuf.ICarSetting=} [properties] Properties to set
             * @returns {wm5.protobuf.CarSetting} CarSetting instance
             */
            CarSetting.create = function create(properties) {
                return new CarSetting(properties);
            };

            /**
             * Encodes the specified CarSetting message. Does not implicitly {@link wm5.protobuf.CarSetting.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CarSetting
             * @static
             * @param {wm5.protobuf.ICarSetting} message CarSetting message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CarSetting.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.carId != null && Object.hasOwnProperty.call(message, "carId"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.view);
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.transmission);
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.retire);
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.meter);
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.navigationMap);
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.volume);
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.bgm);
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.nameplate);
                writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.nameplateColor);
                if (message.nameplateFrame != null && Object.hasOwnProperty.call(message, "nameplateFrame"))
                    writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.nameplateFrame);
                if (message.nameplateFrameColor != null && Object.hasOwnProperty.call(message, "nameplateFrameColor"))
                    writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.nameplateFrameColor);
                writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.terminalBackground);
                return writer;
            };

            /**
             * Encodes the specified CarSetting message, length delimited. Does not implicitly {@link wm5.protobuf.CarSetting.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CarSetting
             * @static
             * @param {wm5.protobuf.ICarSetting} message CarSetting message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CarSetting.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CarSetting message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CarSetting
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CarSetting} CarSetting
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CarSetting.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CarSetting();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.view = reader.bool();
                            break;
                        }
                    case 3: {
                            message.transmission = reader.bool();
                            break;
                        }
                    case 4: {
                            message.retire = reader.bool();
                            break;
                        }
                    case 5: {
                            message.meter = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.navigationMap = reader.bool();
                            break;
                        }
                    case 7: {
                            message.volume = reader.uint32();
                            break;
                        }
                    case 8: {
                            message.bgm = reader.uint32();
                            break;
                        }
                    case 9: {
                            message.nameplate = reader.uint32();
                            break;
                        }
                    case 10: {
                            message.nameplateColor = reader.uint32();
                            break;
                        }
                    case 11: {
                            message.nameplateFrame = reader.uint32();
                            break;
                        }
                    case 12: {
                            message.nameplateFrameColor = reader.uint32();
                            break;
                        }
                    case 13: {
                            message.terminalBackground = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("view"))
                    throw $util.ProtocolError("missing required 'view'", { instance: message });
                if (!message.hasOwnProperty("transmission"))
                    throw $util.ProtocolError("missing required 'transmission'", { instance: message });
                if (!message.hasOwnProperty("retire"))
                    throw $util.ProtocolError("missing required 'retire'", { instance: message });
                if (!message.hasOwnProperty("meter"))
                    throw $util.ProtocolError("missing required 'meter'", { instance: message });
                if (!message.hasOwnProperty("navigationMap"))
                    throw $util.ProtocolError("missing required 'navigationMap'", { instance: message });
                if (!message.hasOwnProperty("volume"))
                    throw $util.ProtocolError("missing required 'volume'", { instance: message });
                if (!message.hasOwnProperty("bgm"))
                    throw $util.ProtocolError("missing required 'bgm'", { instance: message });
                if (!message.hasOwnProperty("nameplate"))
                    throw $util.ProtocolError("missing required 'nameplate'", { instance: message });
                if (!message.hasOwnProperty("nameplateColor"))
                    throw $util.ProtocolError("missing required 'nameplateColor'", { instance: message });
                if (!message.hasOwnProperty("terminalBackground"))
                    throw $util.ProtocolError("missing required 'terminalBackground'", { instance: message });
                return message;
            };

            /**
             * Decodes a CarSetting message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CarSetting
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CarSetting} CarSetting
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CarSetting.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CarSetting message.
             * @function verify
             * @memberof wm5.protobuf.CarSetting
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CarSetting.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.carId != null && message.hasOwnProperty("carId"))
                    if (!$util.isInteger(message.carId))
                        return "carId: integer expected";
                if (typeof message.view !== "boolean")
                    return "view: boolean expected";
                if (typeof message.transmission !== "boolean")
                    return "transmission: boolean expected";
                if (typeof message.retire !== "boolean")
                    return "retire: boolean expected";
                if (!$util.isInteger(message.meter))
                    return "meter: integer expected";
                if (typeof message.navigationMap !== "boolean")
                    return "navigationMap: boolean expected";
                if (!$util.isInteger(message.volume))
                    return "volume: integer expected";
                if (!$util.isInteger(message.bgm))
                    return "bgm: integer expected";
                if (!$util.isInteger(message.nameplate))
                    return "nameplate: integer expected";
                if (!$util.isInteger(message.nameplateColor))
                    return "nameplateColor: integer expected";
                if (message.nameplateFrame != null && message.hasOwnProperty("nameplateFrame"))
                    if (!$util.isInteger(message.nameplateFrame))
                        return "nameplateFrame: integer expected";
                if (message.nameplateFrameColor != null && message.hasOwnProperty("nameplateFrameColor"))
                    if (!$util.isInteger(message.nameplateFrameColor))
                        return "nameplateFrameColor: integer expected";
                if (!$util.isInteger(message.terminalBackground))
                    return "terminalBackground: integer expected";
                return null;
            };

            /**
             * Creates a CarSetting message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CarSetting
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CarSetting} CarSetting
             */
            CarSetting.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CarSetting)
                    return object;
                let message = new $root.wm5.protobuf.CarSetting();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.view != null)
                    message.view = Boolean(object.view);
                if (object.transmission != null)
                    message.transmission = Boolean(object.transmission);
                if (object.retire != null)
                    message.retire = Boolean(object.retire);
                if (object.meter != null)
                    message.meter = object.meter >>> 0;
                if (object.navigationMap != null)
                    message.navigationMap = Boolean(object.navigationMap);
                if (object.volume != null)
                    message.volume = object.volume >>> 0;
                if (object.bgm != null)
                    message.bgm = object.bgm >>> 0;
                if (object.nameplate != null)
                    message.nameplate = object.nameplate >>> 0;
                if (object.nameplateColor != null)
                    message.nameplateColor = object.nameplateColor >>> 0;
                if (object.nameplateFrame != null)
                    message.nameplateFrame = object.nameplateFrame >>> 0;
                if (object.nameplateFrameColor != null)
                    message.nameplateFrameColor = object.nameplateFrameColor >>> 0;
                if (object.terminalBackground != null)
                    message.terminalBackground = object.terminalBackground >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a CarSetting message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CarSetting
             * @static
             * @param {wm5.protobuf.CarSetting} message CarSetting
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CarSetting.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.carId = 0;
                    object.view = false;
                    object.transmission = false;
                    object.retire = false;
                    object.meter = 0;
                    object.navigationMap = false;
                    object.volume = 0;
                    object.bgm = 0;
                    object.nameplate = 0;
                    object.nameplateColor = 0;
                    object.nameplateFrame = 0;
                    object.nameplateFrameColor = 0;
                    object.terminalBackground = 0;
                }
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.view != null && message.hasOwnProperty("view"))
                    object.view = message.view;
                if (message.transmission != null && message.hasOwnProperty("transmission"))
                    object.transmission = message.transmission;
                if (message.retire != null && message.hasOwnProperty("retire"))
                    object.retire = message.retire;
                if (message.meter != null && message.hasOwnProperty("meter"))
                    object.meter = message.meter;
                if (message.navigationMap != null && message.hasOwnProperty("navigationMap"))
                    object.navigationMap = message.navigationMap;
                if (message.volume != null && message.hasOwnProperty("volume"))
                    object.volume = message.volume;
                if (message.bgm != null && message.hasOwnProperty("bgm"))
                    object.bgm = message.bgm;
                if (message.nameplate != null && message.hasOwnProperty("nameplate"))
                    object.nameplate = message.nameplate;
                if (message.nameplateColor != null && message.hasOwnProperty("nameplateColor"))
                    object.nameplateColor = message.nameplateColor;
                if (message.nameplateFrame != null && message.hasOwnProperty("nameplateFrame"))
                    object.nameplateFrame = message.nameplateFrame;
                if (message.nameplateFrameColor != null && message.hasOwnProperty("nameplateFrameColor"))
                    object.nameplateFrameColor = message.nameplateFrameColor;
                if (message.terminalBackground != null && message.hasOwnProperty("terminalBackground"))
                    object.terminalBackground = message.terminalBackground;
                return object;
            };

            /**
             * Converts this CarSetting to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CarSetting
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CarSetting.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CarSetting
             * @function getTypeUrl
             * @memberof wm5.protobuf.CarSetting
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CarSetting.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CarSetting";
            };

            return CarSetting;
        })();

        protobuf.GTWing = (function() {

            /**
             * Properties of a GTWing.
             * @memberof wm5.protobuf
             * @interface IGTWing
             * @property {number} pillar GTWing pillar
             * @property {number} pillarMaterial GTWing pillarMaterial
             * @property {number} mainWing GTWing mainWing
             * @property {number} mainWingColor GTWing mainWingColor
             * @property {number} wingTip GTWing wingTip
             * @property {number} material GTWing material
             */

            /**
             * Constructs a new GTWing.
             * @memberof wm5.protobuf
             * @classdesc Represents a GTWing.
             * @implements IGTWing
             * @constructor
             * @param {wm5.protobuf.IGTWing=} [properties] Properties to set
             */
            function GTWing(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GTWing pillar.
             * @member {number} pillar
             * @memberof wm5.protobuf.GTWing
             * @instance
             */
            GTWing.prototype.pillar = 0;

            /**
             * GTWing pillarMaterial.
             * @member {number} pillarMaterial
             * @memberof wm5.protobuf.GTWing
             * @instance
             */
            GTWing.prototype.pillarMaterial = 0;

            /**
             * GTWing mainWing.
             * @member {number} mainWing
             * @memberof wm5.protobuf.GTWing
             * @instance
             */
            GTWing.prototype.mainWing = 0;

            /**
             * GTWing mainWingColor.
             * @member {number} mainWingColor
             * @memberof wm5.protobuf.GTWing
             * @instance
             */
            GTWing.prototype.mainWingColor = 0;

            /**
             * GTWing wingTip.
             * @member {number} wingTip
             * @memberof wm5.protobuf.GTWing
             * @instance
             */
            GTWing.prototype.wingTip = 0;

            /**
             * GTWing material.
             * @member {number} material
             * @memberof wm5.protobuf.GTWing
             * @instance
             */
            GTWing.prototype.material = 0;

            /**
             * Creates a new GTWing instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.GTWing
             * @static
             * @param {wm5.protobuf.IGTWing=} [properties] Properties to set
             * @returns {wm5.protobuf.GTWing} GTWing instance
             */
            GTWing.create = function create(properties) {
                return new GTWing(properties);
            };

            /**
             * Encodes the specified GTWing message. Does not implicitly {@link wm5.protobuf.GTWing.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.GTWing
             * @static
             * @param {wm5.protobuf.IGTWing} message GTWing message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GTWing.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.pillar);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.pillarMaterial);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.mainWing);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.mainWingColor);
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.wingTip);
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.material);
                return writer;
            };

            /**
             * Encodes the specified GTWing message, length delimited. Does not implicitly {@link wm5.protobuf.GTWing.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.GTWing
             * @static
             * @param {wm5.protobuf.IGTWing} message GTWing message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GTWing.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GTWing message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.GTWing
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.GTWing} GTWing
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GTWing.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.GTWing();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.pillar = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.pillarMaterial = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.mainWing = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.mainWingColor = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.wingTip = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.material = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("pillar"))
                    throw $util.ProtocolError("missing required 'pillar'", { instance: message });
                if (!message.hasOwnProperty("pillarMaterial"))
                    throw $util.ProtocolError("missing required 'pillarMaterial'", { instance: message });
                if (!message.hasOwnProperty("mainWing"))
                    throw $util.ProtocolError("missing required 'mainWing'", { instance: message });
                if (!message.hasOwnProperty("mainWingColor"))
                    throw $util.ProtocolError("missing required 'mainWingColor'", { instance: message });
                if (!message.hasOwnProperty("wingTip"))
                    throw $util.ProtocolError("missing required 'wingTip'", { instance: message });
                if (!message.hasOwnProperty("material"))
                    throw $util.ProtocolError("missing required 'material'", { instance: message });
                return message;
            };

            /**
             * Decodes a GTWing message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.GTWing
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.GTWing} GTWing
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GTWing.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GTWing message.
             * @function verify
             * @memberof wm5.protobuf.GTWing
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GTWing.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.pillar))
                    return "pillar: integer expected";
                if (!$util.isInteger(message.pillarMaterial))
                    return "pillarMaterial: integer expected";
                if (!$util.isInteger(message.mainWing))
                    return "mainWing: integer expected";
                if (!$util.isInteger(message.mainWingColor))
                    return "mainWingColor: integer expected";
                if (!$util.isInteger(message.wingTip))
                    return "wingTip: integer expected";
                if (!$util.isInteger(message.material))
                    return "material: integer expected";
                return null;
            };

            /**
             * Creates a GTWing message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.GTWing
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.GTWing} GTWing
             */
            GTWing.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.GTWing)
                    return object;
                let message = new $root.wm5.protobuf.GTWing();
                if (object.pillar != null)
                    message.pillar = object.pillar >>> 0;
                if (object.pillarMaterial != null)
                    message.pillarMaterial = object.pillarMaterial >>> 0;
                if (object.mainWing != null)
                    message.mainWing = object.mainWing >>> 0;
                if (object.mainWingColor != null)
                    message.mainWingColor = object.mainWingColor >>> 0;
                if (object.wingTip != null)
                    message.wingTip = object.wingTip >>> 0;
                if (object.material != null)
                    message.material = object.material >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a GTWing message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.GTWing
             * @static
             * @param {wm5.protobuf.GTWing} message GTWing
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GTWing.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.pillar = 0;
                    object.pillarMaterial = 0;
                    object.mainWing = 0;
                    object.mainWingColor = 0;
                    object.wingTip = 0;
                    object.material = 0;
                }
                if (message.pillar != null && message.hasOwnProperty("pillar"))
                    object.pillar = message.pillar;
                if (message.pillarMaterial != null && message.hasOwnProperty("pillarMaterial"))
                    object.pillarMaterial = message.pillarMaterial;
                if (message.mainWing != null && message.hasOwnProperty("mainWing"))
                    object.mainWing = message.mainWing;
                if (message.mainWingColor != null && message.hasOwnProperty("mainWingColor"))
                    object.mainWingColor = message.mainWingColor;
                if (message.wingTip != null && message.hasOwnProperty("wingTip"))
                    object.wingTip = message.wingTip;
                if (message.material != null && message.hasOwnProperty("material"))
                    object.material = message.material;
                return object;
            };

            /**
             * Converts this GTWing to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.GTWing
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GTWing.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GTWing
             * @function getTypeUrl
             * @memberof wm5.protobuf.GTWing
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GTWing.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.GTWing";
            };

            return GTWing;
        })();

        protobuf.MiniSticker = (function() {

            /**
             * Properties of a MiniSticker.
             * @memberof wm5.protobuf
             * @interface IMiniSticker
             * @property {number} miniSticker MiniSticker miniSticker
             * @property {number} miniStickerColor MiniSticker miniStickerColor
             */

            /**
             * Constructs a new MiniSticker.
             * @memberof wm5.protobuf
             * @classdesc Represents a MiniSticker.
             * @implements IMiniSticker
             * @constructor
             * @param {wm5.protobuf.IMiniSticker=} [properties] Properties to set
             */
            function MiniSticker(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * MiniSticker miniSticker.
             * @member {number} miniSticker
             * @memberof wm5.protobuf.MiniSticker
             * @instance
             */
            MiniSticker.prototype.miniSticker = 0;

            /**
             * MiniSticker miniStickerColor.
             * @member {number} miniStickerColor
             * @memberof wm5.protobuf.MiniSticker
             * @instance
             */
            MiniSticker.prototype.miniStickerColor = 0;

            /**
             * Creates a new MiniSticker instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.MiniSticker
             * @static
             * @param {wm5.protobuf.IMiniSticker=} [properties] Properties to set
             * @returns {wm5.protobuf.MiniSticker} MiniSticker instance
             */
            MiniSticker.create = function create(properties) {
                return new MiniSticker(properties);
            };

            /**
             * Encodes the specified MiniSticker message. Does not implicitly {@link wm5.protobuf.MiniSticker.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.MiniSticker
             * @static
             * @param {wm5.protobuf.IMiniSticker} message MiniSticker message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MiniSticker.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.miniSticker);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.miniStickerColor);
                return writer;
            };

            /**
             * Encodes the specified MiniSticker message, length delimited. Does not implicitly {@link wm5.protobuf.MiniSticker.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.MiniSticker
             * @static
             * @param {wm5.protobuf.IMiniSticker} message MiniSticker message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MiniSticker.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MiniSticker message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.MiniSticker
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.MiniSticker} MiniSticker
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MiniSticker.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.MiniSticker();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.miniSticker = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.miniStickerColor = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("miniSticker"))
                    throw $util.ProtocolError("missing required 'miniSticker'", { instance: message });
                if (!message.hasOwnProperty("miniStickerColor"))
                    throw $util.ProtocolError("missing required 'miniStickerColor'", { instance: message });
                return message;
            };

            /**
             * Decodes a MiniSticker message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.MiniSticker
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.MiniSticker} MiniSticker
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MiniSticker.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MiniSticker message.
             * @function verify
             * @memberof wm5.protobuf.MiniSticker
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MiniSticker.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.miniSticker))
                    return "miniSticker: integer expected";
                if (!$util.isInteger(message.miniStickerColor))
                    return "miniStickerColor: integer expected";
                return null;
            };

            /**
             * Creates a MiniSticker message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.MiniSticker
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.MiniSticker} MiniSticker
             */
            MiniSticker.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.MiniSticker)
                    return object;
                let message = new $root.wm5.protobuf.MiniSticker();
                if (object.miniSticker != null)
                    message.miniSticker = object.miniSticker >>> 0;
                if (object.miniStickerColor != null)
                    message.miniStickerColor = object.miniStickerColor >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a MiniSticker message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.MiniSticker
             * @static
             * @param {wm5.protobuf.MiniSticker} message MiniSticker
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MiniSticker.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.miniSticker = 0;
                    object.miniStickerColor = 0;
                }
                if (message.miniSticker != null && message.hasOwnProperty("miniSticker"))
                    object.miniSticker = message.miniSticker;
                if (message.miniStickerColor != null && message.hasOwnProperty("miniStickerColor"))
                    object.miniStickerColor = message.miniStickerColor;
                return object;
            };

            /**
             * Converts this MiniSticker to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.MiniSticker
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MiniSticker.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for MiniSticker
             * @function getTypeUrl
             * @memberof wm5.protobuf.MiniSticker
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            MiniSticker.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.MiniSticker";
            };

            return MiniSticker;
        })();

        protobuf.CarItem = (function() {

            /**
             * Properties of a CarItem.
             * @memberof wm5.protobuf
             * @interface ICarItem
             * @property {wm5.protobuf.ItemCategory} category CarItem category
             * @property {number} itemId CarItem itemId
             * @property {number|null} [amount] CarItem amount
             */

            /**
             * Constructs a new CarItem.
             * @memberof wm5.protobuf
             * @classdesc Represents a CarItem.
             * @implements ICarItem
             * @constructor
             * @param {wm5.protobuf.ICarItem=} [properties] Properties to set
             */
            function CarItem(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CarItem category.
             * @member {wm5.protobuf.ItemCategory} category
             * @memberof wm5.protobuf.CarItem
             * @instance
             */
            CarItem.prototype.category = 1;

            /**
             * CarItem itemId.
             * @member {number} itemId
             * @memberof wm5.protobuf.CarItem
             * @instance
             */
            CarItem.prototype.itemId = 0;

            /**
             * CarItem amount.
             * @member {number} amount
             * @memberof wm5.protobuf.CarItem
             * @instance
             */
            CarItem.prototype.amount = 0;

            /**
             * Creates a new CarItem instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CarItem
             * @static
             * @param {wm5.protobuf.ICarItem=} [properties] Properties to set
             * @returns {wm5.protobuf.CarItem} CarItem instance
             */
            CarItem.create = function create(properties) {
                return new CarItem(properties);
            };

            /**
             * Encodes the specified CarItem message. Does not implicitly {@link wm5.protobuf.CarItem.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CarItem
             * @static
             * @param {wm5.protobuf.ICarItem} message CarItem message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CarItem.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.category);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.itemId);
                if (message.amount != null && Object.hasOwnProperty.call(message, "amount"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.amount);
                return writer;
            };

            /**
             * Encodes the specified CarItem message, length delimited. Does not implicitly {@link wm5.protobuf.CarItem.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CarItem
             * @static
             * @param {wm5.protobuf.ICarItem} message CarItem message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CarItem.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CarItem message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CarItem
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CarItem} CarItem
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CarItem.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CarItem();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.category = reader.int32();
                            break;
                        }
                    case 2: {
                            message.itemId = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.amount = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("category"))
                    throw $util.ProtocolError("missing required 'category'", { instance: message });
                if (!message.hasOwnProperty("itemId"))
                    throw $util.ProtocolError("missing required 'itemId'", { instance: message });
                return message;
            };

            /**
             * Decodes a CarItem message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CarItem
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CarItem} CarItem
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CarItem.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CarItem message.
             * @function verify
             * @memberof wm5.protobuf.CarItem
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CarItem.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.category) {
                default:
                    return "category: enum value expected";
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 201:
                case 202:
                    break;
                }
                if (!$util.isInteger(message.itemId))
                    return "itemId: integer expected";
                if (message.amount != null && message.hasOwnProperty("amount"))
                    if (!$util.isInteger(message.amount))
                        return "amount: integer expected";
                return null;
            };

            /**
             * Creates a CarItem message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CarItem
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CarItem} CarItem
             */
            CarItem.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CarItem)
                    return object;
                let message = new $root.wm5.protobuf.CarItem();
                switch (object.category) {
                default:
                    if (typeof object.category === "number") {
                        message.category = object.category;
                        break;
                    }
                    break;
                case "CAT_CUSTOM_COLOR":
                case 1:
                    message.category = 1;
                    break;
                case "CAT_WHEEL":
                case 2:
                    message.category = 2;
                    break;
                case "CAT_AERO":
                case 3:
                    message.category = 3;
                    break;
                case "CAT_BONNET":
                case 4:
                    message.category = 4;
                    break;
                case "CAT_WING":
                case 5:
                    message.category = 5;
                    break;
                case "CAT_MIRROR":
                case 6:
                    message.category = 6;
                    break;
                case "CAT_STICKER":
                case 7:
                    message.category = 7;
                    break;
                case "CAT_NEON":
                case 8:
                    message.category = 8;
                    break;
                case "CAT_TRUNK":
                case 9:
                    message.category = 9;
                    break;
                case "CAT_NUMBER_PLATE":
                case 10:
                    message.category = 10;
                    break;
                case "CAT_SPECIAL_STICKER":
                case 11:
                    message.category = 11;
                    break;
                case "CAT_GT_WING":
                case 12:
                    message.category = 12;
                    break;
                case "CAT_MINI_STICKER":
                case 13:
                    message.category = 13;
                    break;
                case "CAT_AURA_MOTIF":
                case 14:
                    message.category = 14;
                    break;
                case "CAT_METER":
                case 15:
                    message.category = 15;
                    break;
                case "CAT_BGM":
                case 16:
                    message.category = 16;
                    break;
                case "CAT_NAME_PLATE":
                case 17:
                    message.category = 17;
                    break;
                case "CAT_NAME_FRAME":
                case 18:
                    message.category = 18;
                    break;
                case "CAT_NUMBER":
                case 19:
                    message.category = 19;
                    break;
                case "CAT_CHAR_EFFECT":
                case 20:
                    message.category = 20;
                    break;
                case "CAT_MOTION_EFFECT":
                case 21:
                    message.category = 21;
                    break;
                case "CAT_BGM_TRACK":
                case 22:
                    message.category = 22;
                    break;
                case "CAT_SIDE_STICKER":
                case 23:
                    message.category = 23;
                    break;
                case "CAT_ROOF_STICKER":
                case 24:
                    message.category = 24;
                    break;
                case "CAT_TEAM_DECORATION":
                case 25:
                    message.category = 25;
                    break;
                case "CAT_RIVAL_MARKER":
                case 26:
                    message.category = 26;
                    break;
                case "CAT_STAMP":
                case 27:
                    message.category = 27;
                    break;
                case "CAT_TERMINAL_BACKGROUND":
                case 28:
                    message.category = 28;
                    break;
                case "CAT_CAR_TICKET":
                case 201:
                    message.category = 201;
                    break;
                case "CAT_CONSUMPTION_ITEM":
                case 202:
                    message.category = 202;
                    break;
                }
                if (object.itemId != null)
                    message.itemId = object.itemId >>> 0;
                if (object.amount != null)
                    message.amount = object.amount >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a CarItem message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CarItem
             * @static
             * @param {wm5.protobuf.CarItem} message CarItem
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CarItem.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.category = options.enums === String ? "CAT_CUSTOM_COLOR" : 1;
                    object.itemId = 0;
                    object.amount = 0;
                }
                if (message.category != null && message.hasOwnProperty("category"))
                    object.category = options.enums === String ? $root.wm5.protobuf.ItemCategory[message.category] === undefined ? message.category : $root.wm5.protobuf.ItemCategory[message.category] : message.category;
                if (message.itemId != null && message.hasOwnProperty("itemId"))
                    object.itemId = message.itemId;
                if (message.amount != null && message.hasOwnProperty("amount"))
                    object.amount = message.amount;
                return object;
            };

            /**
             * Converts this CarItem to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CarItem
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CarItem.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CarItem
             * @function getTypeUrl
             * @memberof wm5.protobuf.CarItem
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CarItem.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CarItem";
            };

            return CarItem;
        })();

        protobuf.CopiedCar = (function() {

            /**
             * Properties of a CopiedCar.
             * @memberof wm5.protobuf
             * @interface ICopiedCar
             * @property {wm5.protobuf.ICar} car CopiedCar car
             * @property {number} remainingPlayCounts CopiedCar remainingPlayCounts
             */

            /**
             * Constructs a new CopiedCar.
             * @memberof wm5.protobuf
             * @classdesc Represents a CopiedCar.
             * @implements ICopiedCar
             * @constructor
             * @param {wm5.protobuf.ICopiedCar=} [properties] Properties to set
             */
            function CopiedCar(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CopiedCar car.
             * @member {wm5.protobuf.ICar} car
             * @memberof wm5.protobuf.CopiedCar
             * @instance
             */
            CopiedCar.prototype.car = null;

            /**
             * CopiedCar remainingPlayCounts.
             * @member {number} remainingPlayCounts
             * @memberof wm5.protobuf.CopiedCar
             * @instance
             */
            CopiedCar.prototype.remainingPlayCounts = 0;

            /**
             * Creates a new CopiedCar instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CopiedCar
             * @static
             * @param {wm5.protobuf.ICopiedCar=} [properties] Properties to set
             * @returns {wm5.protobuf.CopiedCar} CopiedCar instance
             */
            CopiedCar.create = function create(properties) {
                return new CopiedCar(properties);
            };

            /**
             * Encodes the specified CopiedCar message. Does not implicitly {@link wm5.protobuf.CopiedCar.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CopiedCar
             * @static
             * @param {wm5.protobuf.ICopiedCar} message CopiedCar message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CopiedCar.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.wm5.protobuf.Car.encode(message.car, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.remainingPlayCounts);
                return writer;
            };

            /**
             * Encodes the specified CopiedCar message, length delimited. Does not implicitly {@link wm5.protobuf.CopiedCar.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CopiedCar
             * @static
             * @param {wm5.protobuf.ICopiedCar} message CopiedCar message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CopiedCar.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CopiedCar message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CopiedCar
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CopiedCar} CopiedCar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CopiedCar.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CopiedCar();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.car = $root.wm5.protobuf.Car.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.remainingPlayCounts = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("car"))
                    throw $util.ProtocolError("missing required 'car'", { instance: message });
                if (!message.hasOwnProperty("remainingPlayCounts"))
                    throw $util.ProtocolError("missing required 'remainingPlayCounts'", { instance: message });
                return message;
            };

            /**
             * Decodes a CopiedCar message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CopiedCar
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CopiedCar} CopiedCar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CopiedCar.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CopiedCar message.
             * @function verify
             * @memberof wm5.protobuf.CopiedCar
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CopiedCar.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    let error = $root.wm5.protobuf.Car.verify(message.car);
                    if (error)
                        return "car." + error;
                }
                if (!$util.isInteger(message.remainingPlayCounts))
                    return "remainingPlayCounts: integer expected";
                return null;
            };

            /**
             * Creates a CopiedCar message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CopiedCar
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CopiedCar} CopiedCar
             */
            CopiedCar.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CopiedCar)
                    return object;
                let message = new $root.wm5.protobuf.CopiedCar();
                if (object.car != null) {
                    if (typeof object.car !== "object")
                        throw TypeError(".wm5.protobuf.CopiedCar.car: object expected");
                    message.car = $root.wm5.protobuf.Car.fromObject(object.car);
                }
                if (object.remainingPlayCounts != null)
                    message.remainingPlayCounts = object.remainingPlayCounts >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a CopiedCar message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CopiedCar
             * @static
             * @param {wm5.protobuf.CopiedCar} message CopiedCar
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CopiedCar.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.car = null;
                    object.remainingPlayCounts = 0;
                }
                if (message.car != null && message.hasOwnProperty("car"))
                    object.car = $root.wm5.protobuf.Car.toObject(message.car, options);
                if (message.remainingPlayCounts != null && message.hasOwnProperty("remainingPlayCounts"))
                    object.remainingPlayCounts = message.remainingPlayCounts;
                return object;
            };

            /**
             * Converts this CopiedCar to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CopiedCar
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CopiedCar.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CopiedCar
             * @function getTypeUrl
             * @memberof wm5.protobuf.CopiedCar
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CopiedCar.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CopiedCar";
            };

            return CopiedCar;
        })();

        protobuf.FriendCar = (function() {

            /**
             * Properties of a FriendCar.
             * @memberof wm5.protobuf
             * @interface IFriendCar
             * @property {wm5.protobuf.ICar} car FriendCar car
             * @property {number|null} [friendshipLevel] FriendCar friendshipLevel
             * @property {boolean} nonhuman FriendCar nonhuman
             */

            /**
             * Constructs a new FriendCar.
             * @memberof wm5.protobuf
             * @classdesc Represents a FriendCar.
             * @implements IFriendCar
             * @constructor
             * @param {wm5.protobuf.IFriendCar=} [properties] Properties to set
             */
            function FriendCar(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FriendCar car.
             * @member {wm5.protobuf.ICar} car
             * @memberof wm5.protobuf.FriendCar
             * @instance
             */
            FriendCar.prototype.car = null;

            /**
             * FriendCar friendshipLevel.
             * @member {number} friendshipLevel
             * @memberof wm5.protobuf.FriendCar
             * @instance
             */
            FriendCar.prototype.friendshipLevel = 0;

            /**
             * FriendCar nonhuman.
             * @member {boolean} nonhuman
             * @memberof wm5.protobuf.FriendCar
             * @instance
             */
            FriendCar.prototype.nonhuman = false;

            /**
             * Creates a new FriendCar instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.FriendCar
             * @static
             * @param {wm5.protobuf.IFriendCar=} [properties] Properties to set
             * @returns {wm5.protobuf.FriendCar} FriendCar instance
             */
            FriendCar.create = function create(properties) {
                return new FriendCar(properties);
            };

            /**
             * Encodes the specified FriendCar message. Does not implicitly {@link wm5.protobuf.FriendCar.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.FriendCar
             * @static
             * @param {wm5.protobuf.IFriendCar} message FriendCar message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FriendCar.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.wm5.protobuf.Car.encode(message.car, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.friendshipLevel != null && Object.hasOwnProperty.call(message, "friendshipLevel"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.friendshipLevel);
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.nonhuman);
                return writer;
            };

            /**
             * Encodes the specified FriendCar message, length delimited. Does not implicitly {@link wm5.protobuf.FriendCar.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.FriendCar
             * @static
             * @param {wm5.protobuf.IFriendCar} message FriendCar message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FriendCar.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FriendCar message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.FriendCar
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.FriendCar} FriendCar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FriendCar.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.FriendCar();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.car = $root.wm5.protobuf.Car.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.friendshipLevel = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.nonhuman = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("car"))
                    throw $util.ProtocolError("missing required 'car'", { instance: message });
                if (!message.hasOwnProperty("nonhuman"))
                    throw $util.ProtocolError("missing required 'nonhuman'", { instance: message });
                return message;
            };

            /**
             * Decodes a FriendCar message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.FriendCar
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.FriendCar} FriendCar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FriendCar.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FriendCar message.
             * @function verify
             * @memberof wm5.protobuf.FriendCar
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FriendCar.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    let error = $root.wm5.protobuf.Car.verify(message.car);
                    if (error)
                        return "car." + error;
                }
                if (message.friendshipLevel != null && message.hasOwnProperty("friendshipLevel"))
                    if (!$util.isInteger(message.friendshipLevel))
                        return "friendshipLevel: integer expected";
                if (typeof message.nonhuman !== "boolean")
                    return "nonhuman: boolean expected";
                return null;
            };

            /**
             * Creates a FriendCar message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.FriendCar
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.FriendCar} FriendCar
             */
            FriendCar.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.FriendCar)
                    return object;
                let message = new $root.wm5.protobuf.FriendCar();
                if (object.car != null) {
                    if (typeof object.car !== "object")
                        throw TypeError(".wm5.protobuf.FriendCar.car: object expected");
                    message.car = $root.wm5.protobuf.Car.fromObject(object.car);
                }
                if (object.friendshipLevel != null)
                    message.friendshipLevel = object.friendshipLevel >>> 0;
                if (object.nonhuman != null)
                    message.nonhuman = Boolean(object.nonhuman);
                return message;
            };

            /**
             * Creates a plain object from a FriendCar message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.FriendCar
             * @static
             * @param {wm5.protobuf.FriendCar} message FriendCar
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FriendCar.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.car = null;
                    object.friendshipLevel = 0;
                    object.nonhuman = false;
                }
                if (message.car != null && message.hasOwnProperty("car"))
                    object.car = $root.wm5.protobuf.Car.toObject(message.car, options);
                if (message.friendshipLevel != null && message.hasOwnProperty("friendshipLevel"))
                    object.friendshipLevel = message.friendshipLevel;
                if (message.nonhuman != null && message.hasOwnProperty("nonhuman"))
                    object.nonhuman = message.nonhuman;
                return object;
            };

            /**
             * Converts this FriendCar to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.FriendCar
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FriendCar.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FriendCar
             * @function getTypeUrl
             * @memberof wm5.protobuf.FriendCar
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FriendCar.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.FriendCar";
            };

            return FriendCar;
        })();

        protobuf.ChallengerCar = (function() {

            /**
             * Properties of a ChallengerCar.
             * @memberof wm5.protobuf
             * @interface IChallengerCar
             * @property {wm5.protobuf.IGhostCar} ghostCar ChallengerCar ghostCar
             * @property {boolean} immediate ChallengerCar immediate
             * @property {number} stamp ChallengerCar stamp
             * @property {number} result ChallengerCar result
             */

            /**
             * Constructs a new ChallengerCar.
             * @memberof wm5.protobuf
             * @classdesc Represents a ChallengerCar.
             * @implements IChallengerCar
             * @constructor
             * @param {wm5.protobuf.IChallengerCar=} [properties] Properties to set
             */
            function ChallengerCar(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ChallengerCar ghostCar.
             * @member {wm5.protobuf.IGhostCar} ghostCar
             * @memberof wm5.protobuf.ChallengerCar
             * @instance
             */
            ChallengerCar.prototype.ghostCar = null;

            /**
             * ChallengerCar immediate.
             * @member {boolean} immediate
             * @memberof wm5.protobuf.ChallengerCar
             * @instance
             */
            ChallengerCar.prototype.immediate = false;

            /**
             * ChallengerCar stamp.
             * @member {number} stamp
             * @memberof wm5.protobuf.ChallengerCar
             * @instance
             */
            ChallengerCar.prototype.stamp = 0;

            /**
             * ChallengerCar result.
             * @member {number} result
             * @memberof wm5.protobuf.ChallengerCar
             * @instance
             */
            ChallengerCar.prototype.result = 0;

            /**
             * Creates a new ChallengerCar instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.ChallengerCar
             * @static
             * @param {wm5.protobuf.IChallengerCar=} [properties] Properties to set
             * @returns {wm5.protobuf.ChallengerCar} ChallengerCar instance
             */
            ChallengerCar.create = function create(properties) {
                return new ChallengerCar(properties);
            };

            /**
             * Encodes the specified ChallengerCar message. Does not implicitly {@link wm5.protobuf.ChallengerCar.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.ChallengerCar
             * @static
             * @param {wm5.protobuf.IChallengerCar} message ChallengerCar message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ChallengerCar.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.wm5.protobuf.GhostCar.encode(message.ghostCar, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.immediate);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.stamp);
                writer.uint32(/* id 4, wireType 0 =*/32).sint32(message.result);
                return writer;
            };

            /**
             * Encodes the specified ChallengerCar message, length delimited. Does not implicitly {@link wm5.protobuf.ChallengerCar.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.ChallengerCar
             * @static
             * @param {wm5.protobuf.IChallengerCar} message ChallengerCar message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ChallengerCar.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a ChallengerCar message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.ChallengerCar
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.ChallengerCar} ChallengerCar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ChallengerCar.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.ChallengerCar();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.ghostCar = $root.wm5.protobuf.GhostCar.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.immediate = reader.bool();
                            break;
                        }
                    case 3: {
                            message.stamp = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.result = reader.sint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("ghostCar"))
                    throw $util.ProtocolError("missing required 'ghostCar'", { instance: message });
                if (!message.hasOwnProperty("immediate"))
                    throw $util.ProtocolError("missing required 'immediate'", { instance: message });
                if (!message.hasOwnProperty("stamp"))
                    throw $util.ProtocolError("missing required 'stamp'", { instance: message });
                if (!message.hasOwnProperty("result"))
                    throw $util.ProtocolError("missing required 'result'", { instance: message });
                return message;
            };

            /**
             * Decodes a ChallengerCar message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.ChallengerCar
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.ChallengerCar} ChallengerCar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ChallengerCar.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a ChallengerCar message.
             * @function verify
             * @memberof wm5.protobuf.ChallengerCar
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ChallengerCar.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    let error = $root.wm5.protobuf.GhostCar.verify(message.ghostCar);
                    if (error)
                        return "ghostCar." + error;
                }
                if (typeof message.immediate !== "boolean")
                    return "immediate: boolean expected";
                if (!$util.isInteger(message.stamp))
                    return "stamp: integer expected";
                if (!$util.isInteger(message.result))
                    return "result: integer expected";
                return null;
            };

            /**
             * Creates a ChallengerCar message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.ChallengerCar
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.ChallengerCar} ChallengerCar
             */
            ChallengerCar.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.ChallengerCar)
                    return object;
                let message = new $root.wm5.protobuf.ChallengerCar();
                if (object.ghostCar != null) {
                    if (typeof object.ghostCar !== "object")
                        throw TypeError(".wm5.protobuf.ChallengerCar.ghostCar: object expected");
                    message.ghostCar = $root.wm5.protobuf.GhostCar.fromObject(object.ghostCar);
                }
                if (object.immediate != null)
                    message.immediate = Boolean(object.immediate);
                if (object.stamp != null)
                    message.stamp = object.stamp >>> 0;
                if (object.result != null)
                    message.result = object.result | 0;
                return message;
            };

            /**
             * Creates a plain object from a ChallengerCar message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.ChallengerCar
             * @static
             * @param {wm5.protobuf.ChallengerCar} message ChallengerCar
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ChallengerCar.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.ghostCar = null;
                    object.immediate = false;
                    object.stamp = 0;
                    object.result = 0;
                }
                if (message.ghostCar != null && message.hasOwnProperty("ghostCar"))
                    object.ghostCar = $root.wm5.protobuf.GhostCar.toObject(message.ghostCar, options);
                if (message.immediate != null && message.hasOwnProperty("immediate"))
                    object.immediate = message.immediate;
                if (message.stamp != null && message.hasOwnProperty("stamp"))
                    object.stamp = message.stamp;
                if (message.result != null && message.hasOwnProperty("result"))
                    object.result = message.result;
                return object;
            };

            /**
             * Converts this ChallengerCar to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.ChallengerCar
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ChallengerCar.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ChallengerCar
             * @function getTypeUrl
             * @memberof wm5.protobuf.ChallengerCar
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ChallengerCar.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.ChallengerCar";
            };

            return ChallengerCar;
        })();

        protobuf.StampTargetCar = (function() {

            /**
             * Properties of a StampTargetCar.
             * @memberof wm5.protobuf
             * @interface IStampTargetCar
             * @property {wm5.protobuf.ICar} car StampTargetCar car
             * @property {number} returnCount StampTargetCar returnCount
             * @property {boolean} locked StampTargetCar locked
             * @property {boolean} recommended StampTargetCar recommended
             */

            /**
             * Constructs a new StampTargetCar.
             * @memberof wm5.protobuf
             * @classdesc Represents a StampTargetCar.
             * @implements IStampTargetCar
             * @constructor
             * @param {wm5.protobuf.IStampTargetCar=} [properties] Properties to set
             */
            function StampTargetCar(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * StampTargetCar car.
             * @member {wm5.protobuf.ICar} car
             * @memberof wm5.protobuf.StampTargetCar
             * @instance
             */
            StampTargetCar.prototype.car = null;

            /**
             * StampTargetCar returnCount.
             * @member {number} returnCount
             * @memberof wm5.protobuf.StampTargetCar
             * @instance
             */
            StampTargetCar.prototype.returnCount = 0;

            /**
             * StampTargetCar locked.
             * @member {boolean} locked
             * @memberof wm5.protobuf.StampTargetCar
             * @instance
             */
            StampTargetCar.prototype.locked = false;

            /**
             * StampTargetCar recommended.
             * @member {boolean} recommended
             * @memberof wm5.protobuf.StampTargetCar
             * @instance
             */
            StampTargetCar.prototype.recommended = false;

            /**
             * Creates a new StampTargetCar instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.StampTargetCar
             * @static
             * @param {wm5.protobuf.IStampTargetCar=} [properties] Properties to set
             * @returns {wm5.protobuf.StampTargetCar} StampTargetCar instance
             */
            StampTargetCar.create = function create(properties) {
                return new StampTargetCar(properties);
            };

            /**
             * Encodes the specified StampTargetCar message. Does not implicitly {@link wm5.protobuf.StampTargetCar.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.StampTargetCar
             * @static
             * @param {wm5.protobuf.IStampTargetCar} message StampTargetCar message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StampTargetCar.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.wm5.protobuf.Car.encode(message.car, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.returnCount);
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.locked);
                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.recommended);
                return writer;
            };

            /**
             * Encodes the specified StampTargetCar message, length delimited. Does not implicitly {@link wm5.protobuf.StampTargetCar.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.StampTargetCar
             * @static
             * @param {wm5.protobuf.IStampTargetCar} message StampTargetCar message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StampTargetCar.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a StampTargetCar message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.StampTargetCar
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.StampTargetCar} StampTargetCar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StampTargetCar.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.StampTargetCar();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.car = $root.wm5.protobuf.Car.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.returnCount = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.locked = reader.bool();
                            break;
                        }
                    case 4: {
                            message.recommended = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("car"))
                    throw $util.ProtocolError("missing required 'car'", { instance: message });
                if (!message.hasOwnProperty("returnCount"))
                    throw $util.ProtocolError("missing required 'returnCount'", { instance: message });
                if (!message.hasOwnProperty("locked"))
                    throw $util.ProtocolError("missing required 'locked'", { instance: message });
                if (!message.hasOwnProperty("recommended"))
                    throw $util.ProtocolError("missing required 'recommended'", { instance: message });
                return message;
            };

            /**
             * Decodes a StampTargetCar message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.StampTargetCar
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.StampTargetCar} StampTargetCar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StampTargetCar.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a StampTargetCar message.
             * @function verify
             * @memberof wm5.protobuf.StampTargetCar
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StampTargetCar.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    let error = $root.wm5.protobuf.Car.verify(message.car);
                    if (error)
                        return "car." + error;
                }
                if (!$util.isInteger(message.returnCount))
                    return "returnCount: integer expected";
                if (typeof message.locked !== "boolean")
                    return "locked: boolean expected";
                if (typeof message.recommended !== "boolean")
                    return "recommended: boolean expected";
                return null;
            };

            /**
             * Creates a StampTargetCar message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.StampTargetCar
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.StampTargetCar} StampTargetCar
             */
            StampTargetCar.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.StampTargetCar)
                    return object;
                let message = new $root.wm5.protobuf.StampTargetCar();
                if (object.car != null) {
                    if (typeof object.car !== "object")
                        throw TypeError(".wm5.protobuf.StampTargetCar.car: object expected");
                    message.car = $root.wm5.protobuf.Car.fromObject(object.car);
                }
                if (object.returnCount != null)
                    message.returnCount = object.returnCount >>> 0;
                if (object.locked != null)
                    message.locked = Boolean(object.locked);
                if (object.recommended != null)
                    message.recommended = Boolean(object.recommended);
                return message;
            };

            /**
             * Creates a plain object from a StampTargetCar message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.StampTargetCar
             * @static
             * @param {wm5.protobuf.StampTargetCar} message StampTargetCar
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StampTargetCar.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.car = null;
                    object.returnCount = 0;
                    object.locked = false;
                    object.recommended = false;
                }
                if (message.car != null && message.hasOwnProperty("car"))
                    object.car = $root.wm5.protobuf.Car.toObject(message.car, options);
                if (message.returnCount != null && message.hasOwnProperty("returnCount"))
                    object.returnCount = message.returnCount;
                if (message.locked != null && message.hasOwnProperty("locked"))
                    object.locked = message.locked;
                if (message.recommended != null && message.hasOwnProperty("recommended"))
                    object.recommended = message.recommended;
                return object;
            };

            /**
             * Converts this StampTargetCar to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.StampTargetCar
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StampTargetCar.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for StampTargetCar
             * @function getTypeUrl
             * @memberof wm5.protobuf.StampTargetCar
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            StampTargetCar.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.StampTargetCar";
            };

            return StampTargetCar;
        })();

        protobuf.PreviousVersionStampTargetCar = (function() {

            /**
             * Properties of a PreviousVersionStampTargetCar.
             * @memberof wm5.protobuf
             * @interface IPreviousVersionStampTargetCar
             * @property {wm5.protobuf.ICar} car PreviousVersionStampTargetCar car
             * @property {number} returnCount PreviousVersionStampTargetCar returnCount
             * @property {number|null} [currentCarId] PreviousVersionStampTargetCar currentCarId
             */

            /**
             * Constructs a new PreviousVersionStampTargetCar.
             * @memberof wm5.protobuf
             * @classdesc Represents a PreviousVersionStampTargetCar.
             * @implements IPreviousVersionStampTargetCar
             * @constructor
             * @param {wm5.protobuf.IPreviousVersionStampTargetCar=} [properties] Properties to set
             */
            function PreviousVersionStampTargetCar(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * PreviousVersionStampTargetCar car.
             * @member {wm5.protobuf.ICar} car
             * @memberof wm5.protobuf.PreviousVersionStampTargetCar
             * @instance
             */
            PreviousVersionStampTargetCar.prototype.car = null;

            /**
             * PreviousVersionStampTargetCar returnCount.
             * @member {number} returnCount
             * @memberof wm5.protobuf.PreviousVersionStampTargetCar
             * @instance
             */
            PreviousVersionStampTargetCar.prototype.returnCount = 0;

            /**
             * PreviousVersionStampTargetCar currentCarId.
             * @member {number} currentCarId
             * @memberof wm5.protobuf.PreviousVersionStampTargetCar
             * @instance
             */
            PreviousVersionStampTargetCar.prototype.currentCarId = 0;

            /**
             * Creates a new PreviousVersionStampTargetCar instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.PreviousVersionStampTargetCar
             * @static
             * @param {wm5.protobuf.IPreviousVersionStampTargetCar=} [properties] Properties to set
             * @returns {wm5.protobuf.PreviousVersionStampTargetCar} PreviousVersionStampTargetCar instance
             */
            PreviousVersionStampTargetCar.create = function create(properties) {
                return new PreviousVersionStampTargetCar(properties);
            };

            /**
             * Encodes the specified PreviousVersionStampTargetCar message. Does not implicitly {@link wm5.protobuf.PreviousVersionStampTargetCar.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.PreviousVersionStampTargetCar
             * @static
             * @param {wm5.protobuf.IPreviousVersionStampTargetCar} message PreviousVersionStampTargetCar message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PreviousVersionStampTargetCar.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.wm5.protobuf.Car.encode(message.car, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.currentCarId != null && Object.hasOwnProperty.call(message, "currentCarId"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.currentCarId);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.returnCount);
                return writer;
            };

            /**
             * Encodes the specified PreviousVersionStampTargetCar message, length delimited. Does not implicitly {@link wm5.protobuf.PreviousVersionStampTargetCar.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.PreviousVersionStampTargetCar
             * @static
             * @param {wm5.protobuf.IPreviousVersionStampTargetCar} message PreviousVersionStampTargetCar message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PreviousVersionStampTargetCar.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a PreviousVersionStampTargetCar message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.PreviousVersionStampTargetCar
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.PreviousVersionStampTargetCar} PreviousVersionStampTargetCar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PreviousVersionStampTargetCar.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.PreviousVersionStampTargetCar();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.car = $root.wm5.protobuf.Car.decode(reader, reader.uint32());
                            break;
                        }
                    case 3: {
                            message.returnCount = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.currentCarId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("car"))
                    throw $util.ProtocolError("missing required 'car'", { instance: message });
                if (!message.hasOwnProperty("returnCount"))
                    throw $util.ProtocolError("missing required 'returnCount'", { instance: message });
                return message;
            };

            /**
             * Decodes a PreviousVersionStampTargetCar message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.PreviousVersionStampTargetCar
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.PreviousVersionStampTargetCar} PreviousVersionStampTargetCar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PreviousVersionStampTargetCar.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a PreviousVersionStampTargetCar message.
             * @function verify
             * @memberof wm5.protobuf.PreviousVersionStampTargetCar
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PreviousVersionStampTargetCar.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    let error = $root.wm5.protobuf.Car.verify(message.car);
                    if (error)
                        return "car." + error;
                }
                if (!$util.isInteger(message.returnCount))
                    return "returnCount: integer expected";
                if (message.currentCarId != null && message.hasOwnProperty("currentCarId"))
                    if (!$util.isInteger(message.currentCarId))
                        return "currentCarId: integer expected";
                return null;
            };

            /**
             * Creates a PreviousVersionStampTargetCar message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.PreviousVersionStampTargetCar
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.PreviousVersionStampTargetCar} PreviousVersionStampTargetCar
             */
            PreviousVersionStampTargetCar.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.PreviousVersionStampTargetCar)
                    return object;
                let message = new $root.wm5.protobuf.PreviousVersionStampTargetCar();
                if (object.car != null) {
                    if (typeof object.car !== "object")
                        throw TypeError(".wm5.protobuf.PreviousVersionStampTargetCar.car: object expected");
                    message.car = $root.wm5.protobuf.Car.fromObject(object.car);
                }
                if (object.returnCount != null)
                    message.returnCount = object.returnCount >>> 0;
                if (object.currentCarId != null)
                    message.currentCarId = object.currentCarId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a PreviousVersionStampTargetCar message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.PreviousVersionStampTargetCar
             * @static
             * @param {wm5.protobuf.PreviousVersionStampTargetCar} message PreviousVersionStampTargetCar
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PreviousVersionStampTargetCar.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.car = null;
                    object.currentCarId = 0;
                    object.returnCount = 0;
                }
                if (message.car != null && message.hasOwnProperty("car"))
                    object.car = $root.wm5.protobuf.Car.toObject(message.car, options);
                if (message.currentCarId != null && message.hasOwnProperty("currentCarId"))
                    object.currentCarId = message.currentCarId;
                if (message.returnCount != null && message.hasOwnProperty("returnCount"))
                    object.returnCount = message.returnCount;
                return object;
            };

            /**
             * Converts this PreviousVersionStampTargetCar to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.PreviousVersionStampTargetCar
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PreviousVersionStampTargetCar.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for PreviousVersionStampTargetCar
             * @function getTypeUrl
             * @memberof wm5.protobuf.PreviousVersionStampTargetCar
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PreviousVersionStampTargetCar.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.PreviousVersionStampTargetCar";
            };

            return PreviousVersionStampTargetCar;
        })();

        protobuf.GhostCar = (function() {

            /**
             * Properties of a GhostCar.
             * @memberof wm5.protobuf
             * @interface IGhostCar
             * @property {wm5.protobuf.ICar} car GhostCar car
             * @property {number|null} [area] GhostCar area
             * @property {number|null} [ramp] GhostCar ramp
             * @property {boolean|null} [nonhuman] GhostCar nonhuman
             * @property {number|null} [characterEffect] GhostCar characterEffect
             * @property {wm5.protobuf.GhostType|null} [type] GhostCar type
             */

            /**
             * Constructs a new GhostCar.
             * @memberof wm5.protobuf
             * @classdesc Represents a GhostCar.
             * @implements IGhostCar
             * @constructor
             * @param {wm5.protobuf.IGhostCar=} [properties] Properties to set
             */
            function GhostCar(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GhostCar car.
             * @member {wm5.protobuf.ICar} car
             * @memberof wm5.protobuf.GhostCar
             * @instance
             */
            GhostCar.prototype.car = null;

            /**
             * GhostCar area.
             * @member {number} area
             * @memberof wm5.protobuf.GhostCar
             * @instance
             */
            GhostCar.prototype.area = 0;

            /**
             * GhostCar ramp.
             * @member {number} ramp
             * @memberof wm5.protobuf.GhostCar
             * @instance
             */
            GhostCar.prototype.ramp = 0;

            /**
             * GhostCar nonhuman.
             * @member {boolean} nonhuman
             * @memberof wm5.protobuf.GhostCar
             * @instance
             */
            GhostCar.prototype.nonhuman = false;

            /**
             * GhostCar characterEffect.
             * @member {number} characterEffect
             * @memberof wm5.protobuf.GhostCar
             * @instance
             */
            GhostCar.prototype.characterEffect = 0;

            /**
             * GhostCar type.
             * @member {wm5.protobuf.GhostType} type
             * @memberof wm5.protobuf.GhostCar
             * @instance
             */
            GhostCar.prototype.type = 1;

            /**
             * Creates a new GhostCar instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.GhostCar
             * @static
             * @param {wm5.protobuf.IGhostCar=} [properties] Properties to set
             * @returns {wm5.protobuf.GhostCar} GhostCar instance
             */
            GhostCar.create = function create(properties) {
                return new GhostCar(properties);
            };

            /**
             * Encodes the specified GhostCar message. Does not implicitly {@link wm5.protobuf.GhostCar.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.GhostCar
             * @static
             * @param {wm5.protobuf.IGhostCar} message GhostCar message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostCar.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.wm5.protobuf.Car.encode(message.car, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.area != null && Object.hasOwnProperty.call(message, "area"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.area);
                if (message.ramp != null && Object.hasOwnProperty.call(message, "ramp"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.ramp);
                if (message.nonhuman != null && Object.hasOwnProperty.call(message, "nonhuman"))
                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.nonhuman);
                if (message.characterEffect != null && Object.hasOwnProperty.call(message, "characterEffect"))
                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.characterEffect);
                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.type);
                return writer;
            };

            /**
             * Encodes the specified GhostCar message, length delimited. Does not implicitly {@link wm5.protobuf.GhostCar.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.GhostCar
             * @static
             * @param {wm5.protobuf.IGhostCar} message GhostCar message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostCar.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GhostCar message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.GhostCar
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.GhostCar} GhostCar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostCar.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.GhostCar();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.car = $root.wm5.protobuf.Car.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.area = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.ramp = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.nonhuman = reader.bool();
                            break;
                        }
                    case 5: {
                            message.characterEffect = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.type = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("car"))
                    throw $util.ProtocolError("missing required 'car'", { instance: message });
                return message;
            };

            /**
             * Decodes a GhostCar message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.GhostCar
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.GhostCar} GhostCar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostCar.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GhostCar message.
             * @function verify
             * @memberof wm5.protobuf.GhostCar
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GhostCar.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    let error = $root.wm5.protobuf.Car.verify(message.car);
                    if (error)
                        return "car." + error;
                }
                if (message.area != null && message.hasOwnProperty("area"))
                    if (!$util.isInteger(message.area))
                        return "area: integer expected";
                if (message.ramp != null && message.hasOwnProperty("ramp"))
                    if (!$util.isInteger(message.ramp))
                        return "ramp: integer expected";
                if (message.nonhuman != null && message.hasOwnProperty("nonhuman"))
                    if (typeof message.nonhuman !== "boolean")
                        return "nonhuman: boolean expected";
                if (message.characterEffect != null && message.hasOwnProperty("characterEffect"))
                    if (!$util.isInteger(message.characterEffect))
                        return "characterEffect: integer expected";
                if (message.type != null && message.hasOwnProperty("type"))
                    switch (message.type) {
                    default:
                        return "type: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    }
                return null;
            };

            /**
             * Creates a GhostCar message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.GhostCar
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.GhostCar} GhostCar
             */
            GhostCar.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.GhostCar)
                    return object;
                let message = new $root.wm5.protobuf.GhostCar();
                if (object.car != null) {
                    if (typeof object.car !== "object")
                        throw TypeError(".wm5.protobuf.GhostCar.car: object expected");
                    message.car = $root.wm5.protobuf.Car.fromObject(object.car);
                }
                if (object.area != null)
                    message.area = object.area >>> 0;
                if (object.ramp != null)
                    message.ramp = object.ramp >>> 0;
                if (object.nonhuman != null)
                    message.nonhuman = Boolean(object.nonhuman);
                if (object.characterEffect != null)
                    message.characterEffect = object.characterEffect >>> 0;
                switch (object.type) {
                default:
                    if (typeof object.type === "number") {
                        message.type = object.type;
                        break;
                    }
                    break;
                case "GHOST_NORMAL":
                case 1:
                    message.type = 1;
                    break;
                case "GHOST_PINCH_RUNNER":
                case 2:
                    message.type = 2;
                    break;
                case "GHOST_DEFAULT":
                case 3:
                    message.type = 3;
                    break;
                case "GHOST_REGION":
                case 4:
                    message.type = 4;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a GhostCar message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.GhostCar
             * @static
             * @param {wm5.protobuf.GhostCar} message GhostCar
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GhostCar.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.car = null;
                    object.area = 0;
                    object.ramp = 0;
                    object.nonhuman = false;
                    object.characterEffect = 0;
                    object.type = options.enums === String ? "GHOST_NORMAL" : 1;
                }
                if (message.car != null && message.hasOwnProperty("car"))
                    object.car = $root.wm5.protobuf.Car.toObject(message.car, options);
                if (message.area != null && message.hasOwnProperty("area"))
                    object.area = message.area;
                if (message.ramp != null && message.hasOwnProperty("ramp"))
                    object.ramp = message.ramp;
                if (message.nonhuman != null && message.hasOwnProperty("nonhuman"))
                    object.nonhuman = message.nonhuman;
                if (message.characterEffect != null && message.hasOwnProperty("characterEffect"))
                    object.characterEffect = message.characterEffect;
                if (message.type != null && message.hasOwnProperty("type"))
                    object.type = options.enums === String ? $root.wm5.protobuf.GhostType[message.type] === undefined ? message.type : $root.wm5.protobuf.GhostType[message.type] : message.type;
                return object;
            };

            /**
             * Converts this GhostCar to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.GhostCar
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GhostCar.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GhostCar
             * @function getTypeUrl
             * @memberof wm5.protobuf.GhostCar
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GhostCar.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.GhostCar";
            };

            return GhostCar;
        })();

        protobuf.Team = (function() {

            /**
             * Properties of a Team.
             * @memberof wm5.protobuf
             * @interface ITeam
             * @property {number} teamId Team teamId
             * @property {string} name Team name
             * @property {number} numOfMembers Team numOfMembers
             * @property {number} numOfMemberCars Team numOfMemberCars
             * @property {number} leaderUserId Team leaderUserId
             * @property {string} leaderCarName Team leaderCarName
             * @property {number} leaderRegionId Team leaderRegionId
             * @property {number} stickerFont Team stickerFont
             * @property {boolean} fullfilled Team fullfilled
             * @property {boolean} closed Team closed
             * @property {boolean} recruitmentSuspended Team recruitmentSuspended
             * @property {number} createdAt Team createdAt
             * @property {wm5.protobuf.IPlace} homePlace Team homePlace
             */

            /**
             * Constructs a new Team.
             * @memberof wm5.protobuf
             * @classdesc Represents a Team.
             * @implements ITeam
             * @constructor
             * @param {wm5.protobuf.ITeam=} [properties] Properties to set
             */
            function Team(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Team teamId.
             * @member {number} teamId
             * @memberof wm5.protobuf.Team
             * @instance
             */
            Team.prototype.teamId = 0;

            /**
             * Team name.
             * @member {string} name
             * @memberof wm5.protobuf.Team
             * @instance
             */
            Team.prototype.name = "";

            /**
             * Team numOfMembers.
             * @member {number} numOfMembers
             * @memberof wm5.protobuf.Team
             * @instance
             */
            Team.prototype.numOfMembers = 0;

            /**
             * Team numOfMemberCars.
             * @member {number} numOfMemberCars
             * @memberof wm5.protobuf.Team
             * @instance
             */
            Team.prototype.numOfMemberCars = 0;

            /**
             * Team leaderUserId.
             * @member {number} leaderUserId
             * @memberof wm5.protobuf.Team
             * @instance
             */
            Team.prototype.leaderUserId = 0;

            /**
             * Team leaderCarName.
             * @member {string} leaderCarName
             * @memberof wm5.protobuf.Team
             * @instance
             */
            Team.prototype.leaderCarName = "";

            /**
             * Team leaderRegionId.
             * @member {number} leaderRegionId
             * @memberof wm5.protobuf.Team
             * @instance
             */
            Team.prototype.leaderRegionId = 0;

            /**
             * Team stickerFont.
             * @member {number} stickerFont
             * @memberof wm5.protobuf.Team
             * @instance
             */
            Team.prototype.stickerFont = 0;

            /**
             * Team fullfilled.
             * @member {boolean} fullfilled
             * @memberof wm5.protobuf.Team
             * @instance
             */
            Team.prototype.fullfilled = false;

            /**
             * Team closed.
             * @member {boolean} closed
             * @memberof wm5.protobuf.Team
             * @instance
             */
            Team.prototype.closed = false;

            /**
             * Team recruitmentSuspended.
             * @member {boolean} recruitmentSuspended
             * @memberof wm5.protobuf.Team
             * @instance
             */
            Team.prototype.recruitmentSuspended = false;

            /**
             * Team createdAt.
             * @member {number} createdAt
             * @memberof wm5.protobuf.Team
             * @instance
             */
            Team.prototype.createdAt = 0;

            /**
             * Team homePlace.
             * @member {wm5.protobuf.IPlace} homePlace
             * @memberof wm5.protobuf.Team
             * @instance
             */
            Team.prototype.homePlace = null;

            /**
             * Creates a new Team instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.Team
             * @static
             * @param {wm5.protobuf.ITeam=} [properties] Properties to set
             * @returns {wm5.protobuf.Team} Team instance
             */
            Team.create = function create(properties) {
                return new Team(properties);
            };

            /**
             * Encodes the specified Team message. Does not implicitly {@link wm5.protobuf.Team.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.Team
             * @static
             * @param {wm5.protobuf.ITeam} message Team message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Team.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.teamId);
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.numOfMembers);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.numOfMemberCars);
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.leaderUserId);
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leaderCarName);
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.leaderRegionId);
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.stickerFont);
                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.fullfilled);
                writer.uint32(/* id 10, wireType 0 =*/80).bool(message.closed);
                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.recruitmentSuspended);
                writer.uint32(/* id 12, wireType 0 =*/96).uint32(message.createdAt);
                $root.wm5.protobuf.Place.encode(message.homePlace, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified Team message, length delimited. Does not implicitly {@link wm5.protobuf.Team.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.Team
             * @static
             * @param {wm5.protobuf.ITeam} message Team message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Team.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Team message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.Team
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.Team} Team
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Team.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.Team();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.teamId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.name = reader.string();
                            break;
                        }
                    case 3: {
                            message.numOfMembers = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.numOfMemberCars = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.leaderUserId = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.leaderCarName = reader.string();
                            break;
                        }
                    case 7: {
                            message.leaderRegionId = reader.uint32();
                            break;
                        }
                    case 8: {
                            message.stickerFont = reader.uint32();
                            break;
                        }
                    case 9: {
                            message.fullfilled = reader.bool();
                            break;
                        }
                    case 10: {
                            message.closed = reader.bool();
                            break;
                        }
                    case 11: {
                            message.recruitmentSuspended = reader.bool();
                            break;
                        }
                    case 12: {
                            message.createdAt = reader.uint32();
                            break;
                        }
                    case 13: {
                            message.homePlace = $root.wm5.protobuf.Place.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("teamId"))
                    throw $util.ProtocolError("missing required 'teamId'", { instance: message });
                if (!message.hasOwnProperty("name"))
                    throw $util.ProtocolError("missing required 'name'", { instance: message });
                if (!message.hasOwnProperty("numOfMembers"))
                    throw $util.ProtocolError("missing required 'numOfMembers'", { instance: message });
                if (!message.hasOwnProperty("numOfMemberCars"))
                    throw $util.ProtocolError("missing required 'numOfMemberCars'", { instance: message });
                if (!message.hasOwnProperty("leaderUserId"))
                    throw $util.ProtocolError("missing required 'leaderUserId'", { instance: message });
                if (!message.hasOwnProperty("leaderCarName"))
                    throw $util.ProtocolError("missing required 'leaderCarName'", { instance: message });
                if (!message.hasOwnProperty("leaderRegionId"))
                    throw $util.ProtocolError("missing required 'leaderRegionId'", { instance: message });
                if (!message.hasOwnProperty("stickerFont"))
                    throw $util.ProtocolError("missing required 'stickerFont'", { instance: message });
                if (!message.hasOwnProperty("fullfilled"))
                    throw $util.ProtocolError("missing required 'fullfilled'", { instance: message });
                if (!message.hasOwnProperty("closed"))
                    throw $util.ProtocolError("missing required 'closed'", { instance: message });
                if (!message.hasOwnProperty("recruitmentSuspended"))
                    throw $util.ProtocolError("missing required 'recruitmentSuspended'", { instance: message });
                if (!message.hasOwnProperty("createdAt"))
                    throw $util.ProtocolError("missing required 'createdAt'", { instance: message });
                if (!message.hasOwnProperty("homePlace"))
                    throw $util.ProtocolError("missing required 'homePlace'", { instance: message });
                return message;
            };

            /**
             * Decodes a Team message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.Team
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.Team} Team
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Team.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Team message.
             * @function verify
             * @memberof wm5.protobuf.Team
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Team.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.teamId))
                    return "teamId: integer expected";
                if (!$util.isString(message.name))
                    return "name: string expected";
                if (!$util.isInteger(message.numOfMembers))
                    return "numOfMembers: integer expected";
                if (!$util.isInteger(message.numOfMemberCars))
                    return "numOfMemberCars: integer expected";
                if (!$util.isInteger(message.leaderUserId))
                    return "leaderUserId: integer expected";
                if (!$util.isString(message.leaderCarName))
                    return "leaderCarName: string expected";
                if (!$util.isInteger(message.leaderRegionId))
                    return "leaderRegionId: integer expected";
                if (!$util.isInteger(message.stickerFont))
                    return "stickerFont: integer expected";
                if (typeof message.fullfilled !== "boolean")
                    return "fullfilled: boolean expected";
                if (typeof message.closed !== "boolean")
                    return "closed: boolean expected";
                if (typeof message.recruitmentSuspended !== "boolean")
                    return "recruitmentSuspended: boolean expected";
                if (!$util.isInteger(message.createdAt))
                    return "createdAt: integer expected";
                {
                    let error = $root.wm5.protobuf.Place.verify(message.homePlace);
                    if (error)
                        return "homePlace." + error;
                }
                return null;
            };

            /**
             * Creates a Team message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.Team
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.Team} Team
             */
            Team.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.Team)
                    return object;
                let message = new $root.wm5.protobuf.Team();
                if (object.teamId != null)
                    message.teamId = object.teamId >>> 0;
                if (object.name != null)
                    message.name = String(object.name);
                if (object.numOfMembers != null)
                    message.numOfMembers = object.numOfMembers >>> 0;
                if (object.numOfMemberCars != null)
                    message.numOfMemberCars = object.numOfMemberCars >>> 0;
                if (object.leaderUserId != null)
                    message.leaderUserId = object.leaderUserId >>> 0;
                if (object.leaderCarName != null)
                    message.leaderCarName = String(object.leaderCarName);
                if (object.leaderRegionId != null)
                    message.leaderRegionId = object.leaderRegionId >>> 0;
                if (object.stickerFont != null)
                    message.stickerFont = object.stickerFont >>> 0;
                if (object.fullfilled != null)
                    message.fullfilled = Boolean(object.fullfilled);
                if (object.closed != null)
                    message.closed = Boolean(object.closed);
                if (object.recruitmentSuspended != null)
                    message.recruitmentSuspended = Boolean(object.recruitmentSuspended);
                if (object.createdAt != null)
                    message.createdAt = object.createdAt >>> 0;
                if (object.homePlace != null) {
                    if (typeof object.homePlace !== "object")
                        throw TypeError(".wm5.protobuf.Team.homePlace: object expected");
                    message.homePlace = $root.wm5.protobuf.Place.fromObject(object.homePlace);
                }
                return message;
            };

            /**
             * Creates a plain object from a Team message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.Team
             * @static
             * @param {wm5.protobuf.Team} message Team
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Team.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.teamId = 0;
                    object.name = "";
                    object.numOfMembers = 0;
                    object.numOfMemberCars = 0;
                    object.leaderUserId = 0;
                    object.leaderCarName = "";
                    object.leaderRegionId = 0;
                    object.stickerFont = 0;
                    object.fullfilled = false;
                    object.closed = false;
                    object.recruitmentSuspended = false;
                    object.createdAt = 0;
                    object.homePlace = null;
                }
                if (message.teamId != null && message.hasOwnProperty("teamId"))
                    object.teamId = message.teamId;
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.numOfMembers != null && message.hasOwnProperty("numOfMembers"))
                    object.numOfMembers = message.numOfMembers;
                if (message.numOfMemberCars != null && message.hasOwnProperty("numOfMemberCars"))
                    object.numOfMemberCars = message.numOfMemberCars;
                if (message.leaderUserId != null && message.hasOwnProperty("leaderUserId"))
                    object.leaderUserId = message.leaderUserId;
                if (message.leaderCarName != null && message.hasOwnProperty("leaderCarName"))
                    object.leaderCarName = message.leaderCarName;
                if (message.leaderRegionId != null && message.hasOwnProperty("leaderRegionId"))
                    object.leaderRegionId = message.leaderRegionId;
                if (message.stickerFont != null && message.hasOwnProperty("stickerFont"))
                    object.stickerFont = message.stickerFont;
                if (message.fullfilled != null && message.hasOwnProperty("fullfilled"))
                    object.fullfilled = message.fullfilled;
                if (message.closed != null && message.hasOwnProperty("closed"))
                    object.closed = message.closed;
                if (message.recruitmentSuspended != null && message.hasOwnProperty("recruitmentSuspended"))
                    object.recruitmentSuspended = message.recruitmentSuspended;
                if (message.createdAt != null && message.hasOwnProperty("createdAt"))
                    object.createdAt = message.createdAt;
                if (message.homePlace != null && message.hasOwnProperty("homePlace"))
                    object.homePlace = $root.wm5.protobuf.Place.toObject(message.homePlace, options);
                return object;
            };

            /**
             * Converts this Team to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.Team
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Team.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for Team
             * @function getTypeUrl
             * @memberof wm5.protobuf.Team
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Team.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.Team";
            };

            return Team;
        })();

        protobuf.TeamMember = (function() {

            /**
             * Properties of a TeamMember.
             * @memberof wm5.protobuf
             * @interface ITeamMember
             * @property {number} userId TeamMember userId
             * @property {wm5.protobuf.ICar} car TeamMember car
             * @property {number} numOfOwnedCars TeamMember numOfOwnedCars
             */

            /**
             * Constructs a new TeamMember.
             * @memberof wm5.protobuf
             * @classdesc Represents a TeamMember.
             * @implements ITeamMember
             * @constructor
             * @param {wm5.protobuf.ITeamMember=} [properties] Properties to set
             */
            function TeamMember(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * TeamMember userId.
             * @member {number} userId
             * @memberof wm5.protobuf.TeamMember
             * @instance
             */
            TeamMember.prototype.userId = 0;

            /**
             * TeamMember car.
             * @member {wm5.protobuf.ICar} car
             * @memberof wm5.protobuf.TeamMember
             * @instance
             */
            TeamMember.prototype.car = null;

            /**
             * TeamMember numOfOwnedCars.
             * @member {number} numOfOwnedCars
             * @memberof wm5.protobuf.TeamMember
             * @instance
             */
            TeamMember.prototype.numOfOwnedCars = 0;

            /**
             * Creates a new TeamMember instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.TeamMember
             * @static
             * @param {wm5.protobuf.ITeamMember=} [properties] Properties to set
             * @returns {wm5.protobuf.TeamMember} TeamMember instance
             */
            TeamMember.create = function create(properties) {
                return new TeamMember(properties);
            };

            /**
             * Encodes the specified TeamMember message. Does not implicitly {@link wm5.protobuf.TeamMember.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.TeamMember
             * @static
             * @param {wm5.protobuf.ITeamMember} message TeamMember message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TeamMember.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                $root.wm5.protobuf.Car.encode(message.car, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.numOfOwnedCars);
                return writer;
            };

            /**
             * Encodes the specified TeamMember message, length delimited. Does not implicitly {@link wm5.protobuf.TeamMember.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.TeamMember
             * @static
             * @param {wm5.protobuf.ITeamMember} message TeamMember message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TeamMember.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a TeamMember message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.TeamMember
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.TeamMember} TeamMember
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TeamMember.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.TeamMember();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.car = $root.wm5.protobuf.Car.decode(reader, reader.uint32());
                            break;
                        }
                    case 3: {
                            message.numOfOwnedCars = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                if (!message.hasOwnProperty("car"))
                    throw $util.ProtocolError("missing required 'car'", { instance: message });
                if (!message.hasOwnProperty("numOfOwnedCars"))
                    throw $util.ProtocolError("missing required 'numOfOwnedCars'", { instance: message });
                return message;
            };

            /**
             * Decodes a TeamMember message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.TeamMember
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.TeamMember} TeamMember
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TeamMember.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a TeamMember message.
             * @function verify
             * @memberof wm5.protobuf.TeamMember
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TeamMember.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                {
                    let error = $root.wm5.protobuf.Car.verify(message.car);
                    if (error)
                        return "car." + error;
                }
                if (!$util.isInteger(message.numOfOwnedCars))
                    return "numOfOwnedCars: integer expected";
                return null;
            };

            /**
             * Creates a TeamMember message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.TeamMember
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.TeamMember} TeamMember
             */
            TeamMember.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.TeamMember)
                    return object;
                let message = new $root.wm5.protobuf.TeamMember();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.car != null) {
                    if (typeof object.car !== "object")
                        throw TypeError(".wm5.protobuf.TeamMember.car: object expected");
                    message.car = $root.wm5.protobuf.Car.fromObject(object.car);
                }
                if (object.numOfOwnedCars != null)
                    message.numOfOwnedCars = object.numOfOwnedCars >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a TeamMember message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.TeamMember
             * @static
             * @param {wm5.protobuf.TeamMember} message TeamMember
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TeamMember.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.userId = 0;
                    object.car = null;
                    object.numOfOwnedCars = 0;
                }
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.car != null && message.hasOwnProperty("car"))
                    object.car = $root.wm5.protobuf.Car.toObject(message.car, options);
                if (message.numOfOwnedCars != null && message.hasOwnProperty("numOfOwnedCars"))
                    object.numOfOwnedCars = message.numOfOwnedCars;
                return object;
            };

            /**
             * Converts this TeamMember to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.TeamMember
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TeamMember.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for TeamMember
             * @function getTypeUrl
             * @memberof wm5.protobuf.TeamMember
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TeamMember.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.TeamMember";
            };

            return TeamMember;
        })();

        protobuf.TeamApplicant = (function() {

            /**
             * Properties of a TeamApplicant.
             * @memberof wm5.protobuf
             * @interface ITeamApplicant
             * @property {number} userId TeamApplicant userId
             * @property {wm5.protobuf.ICar} car TeamApplicant car
             * @property {number} numOfOwnedCars TeamApplicant numOfOwnedCars
             * @property {number} expiresAt TeamApplicant expiresAt
             */

            /**
             * Constructs a new TeamApplicant.
             * @memberof wm5.protobuf
             * @classdesc Represents a TeamApplicant.
             * @implements ITeamApplicant
             * @constructor
             * @param {wm5.protobuf.ITeamApplicant=} [properties] Properties to set
             */
            function TeamApplicant(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * TeamApplicant userId.
             * @member {number} userId
             * @memberof wm5.protobuf.TeamApplicant
             * @instance
             */
            TeamApplicant.prototype.userId = 0;

            /**
             * TeamApplicant car.
             * @member {wm5.protobuf.ICar} car
             * @memberof wm5.protobuf.TeamApplicant
             * @instance
             */
            TeamApplicant.prototype.car = null;

            /**
             * TeamApplicant numOfOwnedCars.
             * @member {number} numOfOwnedCars
             * @memberof wm5.protobuf.TeamApplicant
             * @instance
             */
            TeamApplicant.prototype.numOfOwnedCars = 0;

            /**
             * TeamApplicant expiresAt.
             * @member {number} expiresAt
             * @memberof wm5.protobuf.TeamApplicant
             * @instance
             */
            TeamApplicant.prototype.expiresAt = 0;

            /**
             * Creates a new TeamApplicant instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.TeamApplicant
             * @static
             * @param {wm5.protobuf.ITeamApplicant=} [properties] Properties to set
             * @returns {wm5.protobuf.TeamApplicant} TeamApplicant instance
             */
            TeamApplicant.create = function create(properties) {
                return new TeamApplicant(properties);
            };

            /**
             * Encodes the specified TeamApplicant message. Does not implicitly {@link wm5.protobuf.TeamApplicant.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.TeamApplicant
             * @static
             * @param {wm5.protobuf.ITeamApplicant} message TeamApplicant message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TeamApplicant.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.userId);
                $root.wm5.protobuf.Car.encode(message.car, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.numOfOwnedCars);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.expiresAt);
                return writer;
            };

            /**
             * Encodes the specified TeamApplicant message, length delimited. Does not implicitly {@link wm5.protobuf.TeamApplicant.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.TeamApplicant
             * @static
             * @param {wm5.protobuf.ITeamApplicant} message TeamApplicant message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TeamApplicant.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a TeamApplicant message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.TeamApplicant
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.TeamApplicant} TeamApplicant
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TeamApplicant.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.TeamApplicant();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.userId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.car = $root.wm5.protobuf.Car.decode(reader, reader.uint32());
                            break;
                        }
                    case 3: {
                            message.numOfOwnedCars = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.expiresAt = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("userId"))
                    throw $util.ProtocolError("missing required 'userId'", { instance: message });
                if (!message.hasOwnProperty("car"))
                    throw $util.ProtocolError("missing required 'car'", { instance: message });
                if (!message.hasOwnProperty("numOfOwnedCars"))
                    throw $util.ProtocolError("missing required 'numOfOwnedCars'", { instance: message });
                if (!message.hasOwnProperty("expiresAt"))
                    throw $util.ProtocolError("missing required 'expiresAt'", { instance: message });
                return message;
            };

            /**
             * Decodes a TeamApplicant message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.TeamApplicant
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.TeamApplicant} TeamApplicant
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TeamApplicant.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a TeamApplicant message.
             * @function verify
             * @memberof wm5.protobuf.TeamApplicant
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TeamApplicant.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.userId))
                    return "userId: integer expected";
                {
                    let error = $root.wm5.protobuf.Car.verify(message.car);
                    if (error)
                        return "car." + error;
                }
                if (!$util.isInteger(message.numOfOwnedCars))
                    return "numOfOwnedCars: integer expected";
                if (!$util.isInteger(message.expiresAt))
                    return "expiresAt: integer expected";
                return null;
            };

            /**
             * Creates a TeamApplicant message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.TeamApplicant
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.TeamApplicant} TeamApplicant
             */
            TeamApplicant.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.TeamApplicant)
                    return object;
                let message = new $root.wm5.protobuf.TeamApplicant();
                if (object.userId != null)
                    message.userId = object.userId >>> 0;
                if (object.car != null) {
                    if (typeof object.car !== "object")
                        throw TypeError(".wm5.protobuf.TeamApplicant.car: object expected");
                    message.car = $root.wm5.protobuf.Car.fromObject(object.car);
                }
                if (object.numOfOwnedCars != null)
                    message.numOfOwnedCars = object.numOfOwnedCars >>> 0;
                if (object.expiresAt != null)
                    message.expiresAt = object.expiresAt >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a TeamApplicant message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.TeamApplicant
             * @static
             * @param {wm5.protobuf.TeamApplicant} message TeamApplicant
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TeamApplicant.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.userId = 0;
                    object.car = null;
                    object.numOfOwnedCars = 0;
                    object.expiresAt = 0;
                }
                if (message.userId != null && message.hasOwnProperty("userId"))
                    object.userId = message.userId;
                if (message.car != null && message.hasOwnProperty("car"))
                    object.car = $root.wm5.protobuf.Car.toObject(message.car, options);
                if (message.numOfOwnedCars != null && message.hasOwnProperty("numOfOwnedCars"))
                    object.numOfOwnedCars = message.numOfOwnedCars;
                if (message.expiresAt != null && message.hasOwnProperty("expiresAt"))
                    object.expiresAt = message.expiresAt;
                return object;
            };

            /**
             * Converts this TeamApplicant to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.TeamApplicant
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TeamApplicant.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for TeamApplicant
             * @function getTypeUrl
             * @memberof wm5.protobuf.TeamApplicant
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TeamApplicant.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.TeamApplicant";
            };

            return TeamApplicant;
        })();

        protobuf.Place = (function() {

            /**
             * Properties of a Place.
             * @memberof wm5.protobuf
             * @interface IPlace
             * @property {string} placeId Place placeId
             * @property {string} shopName Place shopName
             * @property {number} regionId Place regionId
             * @property {string} country Place country
             */

            /**
             * Constructs a new Place.
             * @memberof wm5.protobuf
             * @classdesc Represents a Place.
             * @implements IPlace
             * @constructor
             * @param {wm5.protobuf.IPlace=} [properties] Properties to set
             */
            function Place(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Place placeId.
             * @member {string} placeId
             * @memberof wm5.protobuf.Place
             * @instance
             */
            Place.prototype.placeId = "";

            /**
             * Place shopName.
             * @member {string} shopName
             * @memberof wm5.protobuf.Place
             * @instance
             */
            Place.prototype.shopName = "";

            /**
             * Place regionId.
             * @member {number} regionId
             * @memberof wm5.protobuf.Place
             * @instance
             */
            Place.prototype.regionId = 0;

            /**
             * Place country.
             * @member {string} country
             * @memberof wm5.protobuf.Place
             * @instance
             */
            Place.prototype.country = "";

            /**
             * Creates a new Place instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.Place
             * @static
             * @param {wm5.protobuf.IPlace=} [properties] Properties to set
             * @returns {wm5.protobuf.Place} Place instance
             */
            Place.create = function create(properties) {
                return new Place(properties);
            };

            /**
             * Encodes the specified Place message. Does not implicitly {@link wm5.protobuf.Place.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.Place
             * @static
             * @param {wm5.protobuf.IPlace} message Place message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Place.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.placeId);
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.shopName);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.regionId);
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.country);
                return writer;
            };

            /**
             * Encodes the specified Place message, length delimited. Does not implicitly {@link wm5.protobuf.Place.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.Place
             * @static
             * @param {wm5.protobuf.IPlace} message Place message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Place.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Place message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.Place
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.Place} Place
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Place.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.Place();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.placeId = reader.string();
                            break;
                        }
                    case 2: {
                            message.shopName = reader.string();
                            break;
                        }
                    case 3: {
                            message.regionId = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.country = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("placeId"))
                    throw $util.ProtocolError("missing required 'placeId'", { instance: message });
                if (!message.hasOwnProperty("shopName"))
                    throw $util.ProtocolError("missing required 'shopName'", { instance: message });
                if (!message.hasOwnProperty("regionId"))
                    throw $util.ProtocolError("missing required 'regionId'", { instance: message });
                if (!message.hasOwnProperty("country"))
                    throw $util.ProtocolError("missing required 'country'", { instance: message });
                return message;
            };

            /**
             * Decodes a Place message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.Place
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.Place} Place
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Place.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Place message.
             * @function verify
             * @memberof wm5.protobuf.Place
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Place.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isString(message.placeId))
                    return "placeId: string expected";
                if (!$util.isString(message.shopName))
                    return "shopName: string expected";
                if (!$util.isInteger(message.regionId))
                    return "regionId: integer expected";
                if (!$util.isString(message.country))
                    return "country: string expected";
                return null;
            };

            /**
             * Creates a Place message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.Place
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.Place} Place
             */
            Place.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.Place)
                    return object;
                let message = new $root.wm5.protobuf.Place();
                if (object.placeId != null)
                    message.placeId = String(object.placeId);
                if (object.shopName != null)
                    message.shopName = String(object.shopName);
                if (object.regionId != null)
                    message.regionId = object.regionId >>> 0;
                if (object.country != null)
                    message.country = String(object.country);
                return message;
            };

            /**
             * Creates a plain object from a Place message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.Place
             * @static
             * @param {wm5.protobuf.Place} message Place
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Place.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.placeId = "";
                    object.shopName = "";
                    object.regionId = 0;
                    object.country = "";
                }
                if (message.placeId != null && message.hasOwnProperty("placeId"))
                    object.placeId = message.placeId;
                if (message.shopName != null && message.hasOwnProperty("shopName"))
                    object.shopName = message.shopName;
                if (message.regionId != null && message.hasOwnProperty("regionId"))
                    object.regionId = message.regionId;
                if (message.country != null && message.hasOwnProperty("country"))
                    object.country = message.country;
                return object;
            };

            /**
             * Converts this Place to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.Place
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Place.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for Place
             * @function getTypeUrl
             * @memberof wm5.protobuf.Place
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Place.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.Place";
            };

            return Place;
        })();

        protobuf.SystemSetting = (function() {

            /**
             * Properties of a SystemSetting.
             * @memberof wm5.protobuf
             * @interface ISystemSetting
             * @property {number} mCoinChute SystemSetting mCoinChute
             * @property {number} mBuyCardCost SystemSetting mBuyCardCost
             * @property {number} mGameCost SystemSetting mGameCost
             * @property {number} mContinueCost SystemSetting mContinueCost
             * @property {number} mFullCourseCost SystemSetting mFullCourseCost
             * @property {boolean} mFreePlay SystemSetting mFreePlay
             * @property {number|null} [mPcbId] SystemSetting mPcbId
             * @property {boolean} mIcCardRw SystemSetting mIcCardRw
             * @property {boolean} mIcCardVender SystemSetting mIcCardVender
             * @property {boolean|null} [mMgCardRw] SystemSetting mMgCardRw
             * @property {boolean|null} [mForceFeedback] SystemSetting mForceFeedback
             * @property {boolean} mWinsAndRemains SystemSetting mWinsAndRemains
             * @property {number} mEventMode SystemSetting mEventMode
             * @property {boolean} mEventModeDist SystemSetting mEventModeDist
             * @property {number} mCloseType SystemSetting mCloseType
             * @property {number} mCloseSun SystemSetting mCloseSun
             * @property {number} mCloseMon SystemSetting mCloseMon
             * @property {number} mCloseTue SystemSetting mCloseTue
             * @property {number} mCloseWed SystemSetting mCloseWed
             * @property {number} mCloseThu SystemSetting mCloseThu
             * @property {number} mCloseFri SystemSetting mCloseFri
             * @property {number} mCloseSat SystemSetting mCloseSat
             * @property {number} mCloseDay SystemSetting mCloseDay
             * @property {boolean|null} [mTouchPanel] SystemSetting mTouchPanel
             * @property {number} mGameVol SystemSetting mGameVol
             * @property {number} mAttractVol SystemSetting mAttractVol
             * @property {number|null} [mCalibHandleCenter] SystemSetting mCalibHandleCenter
             * @property {number|null} [mCalibAccelCenter] SystemSetting mCalibAccelCenter
             * @property {number|null} [mCalibBrakeCenter] SystemSetting mCalibBrakeCenter
             * @property {number|null} [mCalibTouchLeft] SystemSetting mCalibTouchLeft
             * @property {number|null} [mCalibTouchRight] SystemSetting mCalibTouchRight
             * @property {number|null} [mCalibTouchTop] SystemSetting mCalibTouchTop
             * @property {number|null} [mCalibTouchBottom] SystemSetting mCalibTouchBottom
             * @property {boolean|null} [mBanacoinEnabled] SystemSetting mBanacoinEnabled
             * @property {number|null} [mScratchCost] SystemSetting mScratchCost
             */

            /**
             * Constructs a new SystemSetting.
             * @memberof wm5.protobuf
             * @classdesc Represents a SystemSetting.
             * @implements ISystemSetting
             * @constructor
             * @param {wm5.protobuf.ISystemSetting=} [properties] Properties to set
             */
            function SystemSetting(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SystemSetting mCoinChute.
             * @member {number} mCoinChute
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mCoinChute = 0;

            /**
             * SystemSetting mBuyCardCost.
             * @member {number} mBuyCardCost
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mBuyCardCost = 0;

            /**
             * SystemSetting mGameCost.
             * @member {number} mGameCost
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mGameCost = 0;

            /**
             * SystemSetting mContinueCost.
             * @member {number} mContinueCost
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mContinueCost = 0;

            /**
             * SystemSetting mFullCourseCost.
             * @member {number} mFullCourseCost
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mFullCourseCost = 0;

            /**
             * SystemSetting mFreePlay.
             * @member {boolean} mFreePlay
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mFreePlay = false;

            /**
             * SystemSetting mPcbId.
             * @member {number} mPcbId
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mPcbId = 0;

            /**
             * SystemSetting mIcCardRw.
             * @member {boolean} mIcCardRw
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mIcCardRw = false;

            /**
             * SystemSetting mIcCardVender.
             * @member {boolean} mIcCardVender
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mIcCardVender = false;

            /**
             * SystemSetting mMgCardRw.
             * @member {boolean} mMgCardRw
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mMgCardRw = false;

            /**
             * SystemSetting mForceFeedback.
             * @member {boolean} mForceFeedback
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mForceFeedback = false;

            /**
             * SystemSetting mWinsAndRemains.
             * @member {boolean} mWinsAndRemains
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mWinsAndRemains = false;

            /**
             * SystemSetting mEventMode.
             * @member {number} mEventMode
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mEventMode = 0;

            /**
             * SystemSetting mEventModeDist.
             * @member {boolean} mEventModeDist
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mEventModeDist = false;

            /**
             * SystemSetting mCloseType.
             * @member {number} mCloseType
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mCloseType = 0;

            /**
             * SystemSetting mCloseSun.
             * @member {number} mCloseSun
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mCloseSun = 0;

            /**
             * SystemSetting mCloseMon.
             * @member {number} mCloseMon
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mCloseMon = 0;

            /**
             * SystemSetting mCloseTue.
             * @member {number} mCloseTue
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mCloseTue = 0;

            /**
             * SystemSetting mCloseWed.
             * @member {number} mCloseWed
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mCloseWed = 0;

            /**
             * SystemSetting mCloseThu.
             * @member {number} mCloseThu
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mCloseThu = 0;

            /**
             * SystemSetting mCloseFri.
             * @member {number} mCloseFri
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mCloseFri = 0;

            /**
             * SystemSetting mCloseSat.
             * @member {number} mCloseSat
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mCloseSat = 0;

            /**
             * SystemSetting mCloseDay.
             * @member {number} mCloseDay
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mCloseDay = 0;

            /**
             * SystemSetting mTouchPanel.
             * @member {boolean} mTouchPanel
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mTouchPanel = false;

            /**
             * SystemSetting mGameVol.
             * @member {number} mGameVol
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mGameVol = 0;

            /**
             * SystemSetting mAttractVol.
             * @member {number} mAttractVol
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mAttractVol = 0;

            /**
             * SystemSetting mCalibHandleCenter.
             * @member {number} mCalibHandleCenter
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mCalibHandleCenter = 0;

            /**
             * SystemSetting mCalibAccelCenter.
             * @member {number} mCalibAccelCenter
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mCalibAccelCenter = 0;

            /**
             * SystemSetting mCalibBrakeCenter.
             * @member {number} mCalibBrakeCenter
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mCalibBrakeCenter = 0;

            /**
             * SystemSetting mCalibTouchLeft.
             * @member {number} mCalibTouchLeft
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mCalibTouchLeft = 0;

            /**
             * SystemSetting mCalibTouchRight.
             * @member {number} mCalibTouchRight
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mCalibTouchRight = 0;

            /**
             * SystemSetting mCalibTouchTop.
             * @member {number} mCalibTouchTop
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mCalibTouchTop = 0;

            /**
             * SystemSetting mCalibTouchBottom.
             * @member {number} mCalibTouchBottom
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mCalibTouchBottom = 0;

            /**
             * SystemSetting mBanacoinEnabled.
             * @member {boolean} mBanacoinEnabled
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mBanacoinEnabled = false;

            /**
             * SystemSetting mScratchCost.
             * @member {number} mScratchCost
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             */
            SystemSetting.prototype.mScratchCost = 0;

            /**
             * Creates a new SystemSetting instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SystemSetting
             * @static
             * @param {wm5.protobuf.ISystemSetting=} [properties] Properties to set
             * @returns {wm5.protobuf.SystemSetting} SystemSetting instance
             */
            SystemSetting.create = function create(properties) {
                return new SystemSetting(properties);
            };

            /**
             * Encodes the specified SystemSetting message. Does not implicitly {@link wm5.protobuf.SystemSetting.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SystemSetting
             * @static
             * @param {wm5.protobuf.ISystemSetting} message SystemSetting message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SystemSetting.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.mCoinChute);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.mBuyCardCost);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.mGameCost);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.mContinueCost);
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.mFullCourseCost);
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.mFreePlay);
                if (message.mPcbId != null && Object.hasOwnProperty.call(message, "mPcbId"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.mPcbId);
                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.mIcCardRw);
                writer.uint32(/* id 9, wireType 0 =*/72).bool(message.mIcCardVender);
                if (message.mMgCardRw != null && Object.hasOwnProperty.call(message, "mMgCardRw"))
                    writer.uint32(/* id 10, wireType 0 =*/80).bool(message.mMgCardRw);
                if (message.mForceFeedback != null && Object.hasOwnProperty.call(message, "mForceFeedback"))
                    writer.uint32(/* id 11, wireType 0 =*/88).bool(message.mForceFeedback);
                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.mWinsAndRemains);
                writer.uint32(/* id 13, wireType 0 =*/104).uint32(message.mEventMode);
                writer.uint32(/* id 14, wireType 0 =*/112).bool(message.mEventModeDist);
                writer.uint32(/* id 15, wireType 0 =*/120).uint32(message.mCloseType);
                writer.uint32(/* id 16, wireType 0 =*/128).uint32(message.mCloseSun);
                writer.uint32(/* id 17, wireType 0 =*/136).uint32(message.mCloseMon);
                writer.uint32(/* id 18, wireType 0 =*/144).uint32(message.mCloseTue);
                writer.uint32(/* id 19, wireType 0 =*/152).uint32(message.mCloseWed);
                writer.uint32(/* id 20, wireType 0 =*/160).uint32(message.mCloseThu);
                writer.uint32(/* id 21, wireType 0 =*/168).uint32(message.mCloseFri);
                writer.uint32(/* id 22, wireType 0 =*/176).uint32(message.mCloseSat);
                writer.uint32(/* id 23, wireType 0 =*/184).uint32(message.mCloseDay);
                if (message.mTouchPanel != null && Object.hasOwnProperty.call(message, "mTouchPanel"))
                    writer.uint32(/* id 24, wireType 0 =*/192).bool(message.mTouchPanel);
                writer.uint32(/* id 25, wireType 0 =*/200).uint32(message.mGameVol);
                writer.uint32(/* id 26, wireType 0 =*/208).uint32(message.mAttractVol);
                if (message.mCalibHandleCenter != null && Object.hasOwnProperty.call(message, "mCalibHandleCenter"))
                    writer.uint32(/* id 27, wireType 0 =*/216).uint32(message.mCalibHandleCenter);
                if (message.mCalibAccelCenter != null && Object.hasOwnProperty.call(message, "mCalibAccelCenter"))
                    writer.uint32(/* id 28, wireType 0 =*/224).uint32(message.mCalibAccelCenter);
                if (message.mCalibBrakeCenter != null && Object.hasOwnProperty.call(message, "mCalibBrakeCenter"))
                    writer.uint32(/* id 29, wireType 0 =*/232).uint32(message.mCalibBrakeCenter);
                if (message.mCalibTouchLeft != null && Object.hasOwnProperty.call(message, "mCalibTouchLeft"))
                    writer.uint32(/* id 30, wireType 0 =*/240).uint32(message.mCalibTouchLeft);
                if (message.mCalibTouchRight != null && Object.hasOwnProperty.call(message, "mCalibTouchRight"))
                    writer.uint32(/* id 31, wireType 0 =*/248).uint32(message.mCalibTouchRight);
                if (message.mCalibTouchTop != null && Object.hasOwnProperty.call(message, "mCalibTouchTop"))
                    writer.uint32(/* id 32, wireType 0 =*/256).uint32(message.mCalibTouchTop);
                if (message.mCalibTouchBottom != null && Object.hasOwnProperty.call(message, "mCalibTouchBottom"))
                    writer.uint32(/* id 33, wireType 0 =*/264).uint32(message.mCalibTouchBottom);
                if (message.mBanacoinEnabled != null && Object.hasOwnProperty.call(message, "mBanacoinEnabled"))
                    writer.uint32(/* id 34, wireType 0 =*/272).bool(message.mBanacoinEnabled);
                if (message.mScratchCost != null && Object.hasOwnProperty.call(message, "mScratchCost"))
                    writer.uint32(/* id 35, wireType 0 =*/280).uint32(message.mScratchCost);
                return writer;
            };

            /**
             * Encodes the specified SystemSetting message, length delimited. Does not implicitly {@link wm5.protobuf.SystemSetting.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SystemSetting
             * @static
             * @param {wm5.protobuf.ISystemSetting} message SystemSetting message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SystemSetting.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SystemSetting message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SystemSetting
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SystemSetting} SystemSetting
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SystemSetting.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SystemSetting();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.mCoinChute = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.mBuyCardCost = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.mGameCost = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.mContinueCost = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.mFullCourseCost = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.mFreePlay = reader.bool();
                            break;
                        }
                    case 7: {
                            message.mPcbId = reader.uint32();
                            break;
                        }
                    case 8: {
                            message.mIcCardRw = reader.bool();
                            break;
                        }
                    case 9: {
                            message.mIcCardVender = reader.bool();
                            break;
                        }
                    case 10: {
                            message.mMgCardRw = reader.bool();
                            break;
                        }
                    case 11: {
                            message.mForceFeedback = reader.bool();
                            break;
                        }
                    case 12: {
                            message.mWinsAndRemains = reader.bool();
                            break;
                        }
                    case 13: {
                            message.mEventMode = reader.uint32();
                            break;
                        }
                    case 14: {
                            message.mEventModeDist = reader.bool();
                            break;
                        }
                    case 15: {
                            message.mCloseType = reader.uint32();
                            break;
                        }
                    case 16: {
                            message.mCloseSun = reader.uint32();
                            break;
                        }
                    case 17: {
                            message.mCloseMon = reader.uint32();
                            break;
                        }
                    case 18: {
                            message.mCloseTue = reader.uint32();
                            break;
                        }
                    case 19: {
                            message.mCloseWed = reader.uint32();
                            break;
                        }
                    case 20: {
                            message.mCloseThu = reader.uint32();
                            break;
                        }
                    case 21: {
                            message.mCloseFri = reader.uint32();
                            break;
                        }
                    case 22: {
                            message.mCloseSat = reader.uint32();
                            break;
                        }
                    case 23: {
                            message.mCloseDay = reader.uint32();
                            break;
                        }
                    case 24: {
                            message.mTouchPanel = reader.bool();
                            break;
                        }
                    case 25: {
                            message.mGameVol = reader.uint32();
                            break;
                        }
                    case 26: {
                            message.mAttractVol = reader.uint32();
                            break;
                        }
                    case 27: {
                            message.mCalibHandleCenter = reader.uint32();
                            break;
                        }
                    case 28: {
                            message.mCalibAccelCenter = reader.uint32();
                            break;
                        }
                    case 29: {
                            message.mCalibBrakeCenter = reader.uint32();
                            break;
                        }
                    case 30: {
                            message.mCalibTouchLeft = reader.uint32();
                            break;
                        }
                    case 31: {
                            message.mCalibTouchRight = reader.uint32();
                            break;
                        }
                    case 32: {
                            message.mCalibTouchTop = reader.uint32();
                            break;
                        }
                    case 33: {
                            message.mCalibTouchBottom = reader.uint32();
                            break;
                        }
                    case 34: {
                            message.mBanacoinEnabled = reader.bool();
                            break;
                        }
                    case 35: {
                            message.mScratchCost = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("mCoinChute"))
                    throw $util.ProtocolError("missing required 'mCoinChute'", { instance: message });
                if (!message.hasOwnProperty("mBuyCardCost"))
                    throw $util.ProtocolError("missing required 'mBuyCardCost'", { instance: message });
                if (!message.hasOwnProperty("mGameCost"))
                    throw $util.ProtocolError("missing required 'mGameCost'", { instance: message });
                if (!message.hasOwnProperty("mContinueCost"))
                    throw $util.ProtocolError("missing required 'mContinueCost'", { instance: message });
                if (!message.hasOwnProperty("mFullCourseCost"))
                    throw $util.ProtocolError("missing required 'mFullCourseCost'", { instance: message });
                if (!message.hasOwnProperty("mFreePlay"))
                    throw $util.ProtocolError("missing required 'mFreePlay'", { instance: message });
                if (!message.hasOwnProperty("mIcCardRw"))
                    throw $util.ProtocolError("missing required 'mIcCardRw'", { instance: message });
                if (!message.hasOwnProperty("mIcCardVender"))
                    throw $util.ProtocolError("missing required 'mIcCardVender'", { instance: message });
                if (!message.hasOwnProperty("mWinsAndRemains"))
                    throw $util.ProtocolError("missing required 'mWinsAndRemains'", { instance: message });
                if (!message.hasOwnProperty("mEventMode"))
                    throw $util.ProtocolError("missing required 'mEventMode'", { instance: message });
                if (!message.hasOwnProperty("mEventModeDist"))
                    throw $util.ProtocolError("missing required 'mEventModeDist'", { instance: message });
                if (!message.hasOwnProperty("mCloseType"))
                    throw $util.ProtocolError("missing required 'mCloseType'", { instance: message });
                if (!message.hasOwnProperty("mCloseSun"))
                    throw $util.ProtocolError("missing required 'mCloseSun'", { instance: message });
                if (!message.hasOwnProperty("mCloseMon"))
                    throw $util.ProtocolError("missing required 'mCloseMon'", { instance: message });
                if (!message.hasOwnProperty("mCloseTue"))
                    throw $util.ProtocolError("missing required 'mCloseTue'", { instance: message });
                if (!message.hasOwnProperty("mCloseWed"))
                    throw $util.ProtocolError("missing required 'mCloseWed'", { instance: message });
                if (!message.hasOwnProperty("mCloseThu"))
                    throw $util.ProtocolError("missing required 'mCloseThu'", { instance: message });
                if (!message.hasOwnProperty("mCloseFri"))
                    throw $util.ProtocolError("missing required 'mCloseFri'", { instance: message });
                if (!message.hasOwnProperty("mCloseSat"))
                    throw $util.ProtocolError("missing required 'mCloseSat'", { instance: message });
                if (!message.hasOwnProperty("mCloseDay"))
                    throw $util.ProtocolError("missing required 'mCloseDay'", { instance: message });
                if (!message.hasOwnProperty("mGameVol"))
                    throw $util.ProtocolError("missing required 'mGameVol'", { instance: message });
                if (!message.hasOwnProperty("mAttractVol"))
                    throw $util.ProtocolError("missing required 'mAttractVol'", { instance: message });
                return message;
            };

            /**
             * Decodes a SystemSetting message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SystemSetting
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SystemSetting} SystemSetting
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SystemSetting.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SystemSetting message.
             * @function verify
             * @memberof wm5.protobuf.SystemSetting
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SystemSetting.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.mCoinChute))
                    return "mCoinChute: integer expected";
                if (!$util.isInteger(message.mBuyCardCost))
                    return "mBuyCardCost: integer expected";
                if (!$util.isInteger(message.mGameCost))
                    return "mGameCost: integer expected";
                if (!$util.isInteger(message.mContinueCost))
                    return "mContinueCost: integer expected";
                if (!$util.isInteger(message.mFullCourseCost))
                    return "mFullCourseCost: integer expected";
                if (typeof message.mFreePlay !== "boolean")
                    return "mFreePlay: boolean expected";
                if (message.mPcbId != null && message.hasOwnProperty("mPcbId"))
                    if (!$util.isInteger(message.mPcbId))
                        return "mPcbId: integer expected";
                if (typeof message.mIcCardRw !== "boolean")
                    return "mIcCardRw: boolean expected";
                if (typeof message.mIcCardVender !== "boolean")
                    return "mIcCardVender: boolean expected";
                if (message.mMgCardRw != null && message.hasOwnProperty("mMgCardRw"))
                    if (typeof message.mMgCardRw !== "boolean")
                        return "mMgCardRw: boolean expected";
                if (message.mForceFeedback != null && message.hasOwnProperty("mForceFeedback"))
                    if (typeof message.mForceFeedback !== "boolean")
                        return "mForceFeedback: boolean expected";
                if (typeof message.mWinsAndRemains !== "boolean")
                    return "mWinsAndRemains: boolean expected";
                if (!$util.isInteger(message.mEventMode))
                    return "mEventMode: integer expected";
                if (typeof message.mEventModeDist !== "boolean")
                    return "mEventModeDist: boolean expected";
                if (!$util.isInteger(message.mCloseType))
                    return "mCloseType: integer expected";
                if (!$util.isInteger(message.mCloseSun))
                    return "mCloseSun: integer expected";
                if (!$util.isInteger(message.mCloseMon))
                    return "mCloseMon: integer expected";
                if (!$util.isInteger(message.mCloseTue))
                    return "mCloseTue: integer expected";
                if (!$util.isInteger(message.mCloseWed))
                    return "mCloseWed: integer expected";
                if (!$util.isInteger(message.mCloseThu))
                    return "mCloseThu: integer expected";
                if (!$util.isInteger(message.mCloseFri))
                    return "mCloseFri: integer expected";
                if (!$util.isInteger(message.mCloseSat))
                    return "mCloseSat: integer expected";
                if (!$util.isInteger(message.mCloseDay))
                    return "mCloseDay: integer expected";
                if (message.mTouchPanel != null && message.hasOwnProperty("mTouchPanel"))
                    if (typeof message.mTouchPanel !== "boolean")
                        return "mTouchPanel: boolean expected";
                if (!$util.isInteger(message.mGameVol))
                    return "mGameVol: integer expected";
                if (!$util.isInteger(message.mAttractVol))
                    return "mAttractVol: integer expected";
                if (message.mCalibHandleCenter != null && message.hasOwnProperty("mCalibHandleCenter"))
                    if (!$util.isInteger(message.mCalibHandleCenter))
                        return "mCalibHandleCenter: integer expected";
                if (message.mCalibAccelCenter != null && message.hasOwnProperty("mCalibAccelCenter"))
                    if (!$util.isInteger(message.mCalibAccelCenter))
                        return "mCalibAccelCenter: integer expected";
                if (message.mCalibBrakeCenter != null && message.hasOwnProperty("mCalibBrakeCenter"))
                    if (!$util.isInteger(message.mCalibBrakeCenter))
                        return "mCalibBrakeCenter: integer expected";
                if (message.mCalibTouchLeft != null && message.hasOwnProperty("mCalibTouchLeft"))
                    if (!$util.isInteger(message.mCalibTouchLeft))
                        return "mCalibTouchLeft: integer expected";
                if (message.mCalibTouchRight != null && message.hasOwnProperty("mCalibTouchRight"))
                    if (!$util.isInteger(message.mCalibTouchRight))
                        return "mCalibTouchRight: integer expected";
                if (message.mCalibTouchTop != null && message.hasOwnProperty("mCalibTouchTop"))
                    if (!$util.isInteger(message.mCalibTouchTop))
                        return "mCalibTouchTop: integer expected";
                if (message.mCalibTouchBottom != null && message.hasOwnProperty("mCalibTouchBottom"))
                    if (!$util.isInteger(message.mCalibTouchBottom))
                        return "mCalibTouchBottom: integer expected";
                if (message.mBanacoinEnabled != null && message.hasOwnProperty("mBanacoinEnabled"))
                    if (typeof message.mBanacoinEnabled !== "boolean")
                        return "mBanacoinEnabled: boolean expected";
                if (message.mScratchCost != null && message.hasOwnProperty("mScratchCost"))
                    if (!$util.isInteger(message.mScratchCost))
                        return "mScratchCost: integer expected";
                return null;
            };

            /**
             * Creates a SystemSetting message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SystemSetting
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SystemSetting} SystemSetting
             */
            SystemSetting.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SystemSetting)
                    return object;
                let message = new $root.wm5.protobuf.SystemSetting();
                if (object.mCoinChute != null)
                    message.mCoinChute = object.mCoinChute >>> 0;
                if (object.mBuyCardCost != null)
                    message.mBuyCardCost = object.mBuyCardCost >>> 0;
                if (object.mGameCost != null)
                    message.mGameCost = object.mGameCost >>> 0;
                if (object.mContinueCost != null)
                    message.mContinueCost = object.mContinueCost >>> 0;
                if (object.mFullCourseCost != null)
                    message.mFullCourseCost = object.mFullCourseCost >>> 0;
                if (object.mFreePlay != null)
                    message.mFreePlay = Boolean(object.mFreePlay);
                if (object.mPcbId != null)
                    message.mPcbId = object.mPcbId >>> 0;
                if (object.mIcCardRw != null)
                    message.mIcCardRw = Boolean(object.mIcCardRw);
                if (object.mIcCardVender != null)
                    message.mIcCardVender = Boolean(object.mIcCardVender);
                if (object.mMgCardRw != null)
                    message.mMgCardRw = Boolean(object.mMgCardRw);
                if (object.mForceFeedback != null)
                    message.mForceFeedback = Boolean(object.mForceFeedback);
                if (object.mWinsAndRemains != null)
                    message.mWinsAndRemains = Boolean(object.mWinsAndRemains);
                if (object.mEventMode != null)
                    message.mEventMode = object.mEventMode >>> 0;
                if (object.mEventModeDist != null)
                    message.mEventModeDist = Boolean(object.mEventModeDist);
                if (object.mCloseType != null)
                    message.mCloseType = object.mCloseType >>> 0;
                if (object.mCloseSun != null)
                    message.mCloseSun = object.mCloseSun >>> 0;
                if (object.mCloseMon != null)
                    message.mCloseMon = object.mCloseMon >>> 0;
                if (object.mCloseTue != null)
                    message.mCloseTue = object.mCloseTue >>> 0;
                if (object.mCloseWed != null)
                    message.mCloseWed = object.mCloseWed >>> 0;
                if (object.mCloseThu != null)
                    message.mCloseThu = object.mCloseThu >>> 0;
                if (object.mCloseFri != null)
                    message.mCloseFri = object.mCloseFri >>> 0;
                if (object.mCloseSat != null)
                    message.mCloseSat = object.mCloseSat >>> 0;
                if (object.mCloseDay != null)
                    message.mCloseDay = object.mCloseDay >>> 0;
                if (object.mTouchPanel != null)
                    message.mTouchPanel = Boolean(object.mTouchPanel);
                if (object.mGameVol != null)
                    message.mGameVol = object.mGameVol >>> 0;
                if (object.mAttractVol != null)
                    message.mAttractVol = object.mAttractVol >>> 0;
                if (object.mCalibHandleCenter != null)
                    message.mCalibHandleCenter = object.mCalibHandleCenter >>> 0;
                if (object.mCalibAccelCenter != null)
                    message.mCalibAccelCenter = object.mCalibAccelCenter >>> 0;
                if (object.mCalibBrakeCenter != null)
                    message.mCalibBrakeCenter = object.mCalibBrakeCenter >>> 0;
                if (object.mCalibTouchLeft != null)
                    message.mCalibTouchLeft = object.mCalibTouchLeft >>> 0;
                if (object.mCalibTouchRight != null)
                    message.mCalibTouchRight = object.mCalibTouchRight >>> 0;
                if (object.mCalibTouchTop != null)
                    message.mCalibTouchTop = object.mCalibTouchTop >>> 0;
                if (object.mCalibTouchBottom != null)
                    message.mCalibTouchBottom = object.mCalibTouchBottom >>> 0;
                if (object.mBanacoinEnabled != null)
                    message.mBanacoinEnabled = Boolean(object.mBanacoinEnabled);
                if (object.mScratchCost != null)
                    message.mScratchCost = object.mScratchCost >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a SystemSetting message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SystemSetting
             * @static
             * @param {wm5.protobuf.SystemSetting} message SystemSetting
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SystemSetting.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.mCoinChute = 0;
                    object.mBuyCardCost = 0;
                    object.mGameCost = 0;
                    object.mContinueCost = 0;
                    object.mFullCourseCost = 0;
                    object.mFreePlay = false;
                    object.mPcbId = 0;
                    object.mIcCardRw = false;
                    object.mIcCardVender = false;
                    object.mMgCardRw = false;
                    object.mForceFeedback = false;
                    object.mWinsAndRemains = false;
                    object.mEventMode = 0;
                    object.mEventModeDist = false;
                    object.mCloseType = 0;
                    object.mCloseSun = 0;
                    object.mCloseMon = 0;
                    object.mCloseTue = 0;
                    object.mCloseWed = 0;
                    object.mCloseThu = 0;
                    object.mCloseFri = 0;
                    object.mCloseSat = 0;
                    object.mCloseDay = 0;
                    object.mTouchPanel = false;
                    object.mGameVol = 0;
                    object.mAttractVol = 0;
                    object.mCalibHandleCenter = 0;
                    object.mCalibAccelCenter = 0;
                    object.mCalibBrakeCenter = 0;
                    object.mCalibTouchLeft = 0;
                    object.mCalibTouchRight = 0;
                    object.mCalibTouchTop = 0;
                    object.mCalibTouchBottom = 0;
                    object.mBanacoinEnabled = false;
                    object.mScratchCost = 0;
                }
                if (message.mCoinChute != null && message.hasOwnProperty("mCoinChute"))
                    object.mCoinChute = message.mCoinChute;
                if (message.mBuyCardCost != null && message.hasOwnProperty("mBuyCardCost"))
                    object.mBuyCardCost = message.mBuyCardCost;
                if (message.mGameCost != null && message.hasOwnProperty("mGameCost"))
                    object.mGameCost = message.mGameCost;
                if (message.mContinueCost != null && message.hasOwnProperty("mContinueCost"))
                    object.mContinueCost = message.mContinueCost;
                if (message.mFullCourseCost != null && message.hasOwnProperty("mFullCourseCost"))
                    object.mFullCourseCost = message.mFullCourseCost;
                if (message.mFreePlay != null && message.hasOwnProperty("mFreePlay"))
                    object.mFreePlay = message.mFreePlay;
                if (message.mPcbId != null && message.hasOwnProperty("mPcbId"))
                    object.mPcbId = message.mPcbId;
                if (message.mIcCardRw != null && message.hasOwnProperty("mIcCardRw"))
                    object.mIcCardRw = message.mIcCardRw;
                if (message.mIcCardVender != null && message.hasOwnProperty("mIcCardVender"))
                    object.mIcCardVender = message.mIcCardVender;
                if (message.mMgCardRw != null && message.hasOwnProperty("mMgCardRw"))
                    object.mMgCardRw = message.mMgCardRw;
                if (message.mForceFeedback != null && message.hasOwnProperty("mForceFeedback"))
                    object.mForceFeedback = message.mForceFeedback;
                if (message.mWinsAndRemains != null && message.hasOwnProperty("mWinsAndRemains"))
                    object.mWinsAndRemains = message.mWinsAndRemains;
                if (message.mEventMode != null && message.hasOwnProperty("mEventMode"))
                    object.mEventMode = message.mEventMode;
                if (message.mEventModeDist != null && message.hasOwnProperty("mEventModeDist"))
                    object.mEventModeDist = message.mEventModeDist;
                if (message.mCloseType != null && message.hasOwnProperty("mCloseType"))
                    object.mCloseType = message.mCloseType;
                if (message.mCloseSun != null && message.hasOwnProperty("mCloseSun"))
                    object.mCloseSun = message.mCloseSun;
                if (message.mCloseMon != null && message.hasOwnProperty("mCloseMon"))
                    object.mCloseMon = message.mCloseMon;
                if (message.mCloseTue != null && message.hasOwnProperty("mCloseTue"))
                    object.mCloseTue = message.mCloseTue;
                if (message.mCloseWed != null && message.hasOwnProperty("mCloseWed"))
                    object.mCloseWed = message.mCloseWed;
                if (message.mCloseThu != null && message.hasOwnProperty("mCloseThu"))
                    object.mCloseThu = message.mCloseThu;
                if (message.mCloseFri != null && message.hasOwnProperty("mCloseFri"))
                    object.mCloseFri = message.mCloseFri;
                if (message.mCloseSat != null && message.hasOwnProperty("mCloseSat"))
                    object.mCloseSat = message.mCloseSat;
                if (message.mCloseDay != null && message.hasOwnProperty("mCloseDay"))
                    object.mCloseDay = message.mCloseDay;
                if (message.mTouchPanel != null && message.hasOwnProperty("mTouchPanel"))
                    object.mTouchPanel = message.mTouchPanel;
                if (message.mGameVol != null && message.hasOwnProperty("mGameVol"))
                    object.mGameVol = message.mGameVol;
                if (message.mAttractVol != null && message.hasOwnProperty("mAttractVol"))
                    object.mAttractVol = message.mAttractVol;
                if (message.mCalibHandleCenter != null && message.hasOwnProperty("mCalibHandleCenter"))
                    object.mCalibHandleCenter = message.mCalibHandleCenter;
                if (message.mCalibAccelCenter != null && message.hasOwnProperty("mCalibAccelCenter"))
                    object.mCalibAccelCenter = message.mCalibAccelCenter;
                if (message.mCalibBrakeCenter != null && message.hasOwnProperty("mCalibBrakeCenter"))
                    object.mCalibBrakeCenter = message.mCalibBrakeCenter;
                if (message.mCalibTouchLeft != null && message.hasOwnProperty("mCalibTouchLeft"))
                    object.mCalibTouchLeft = message.mCalibTouchLeft;
                if (message.mCalibTouchRight != null && message.hasOwnProperty("mCalibTouchRight"))
                    object.mCalibTouchRight = message.mCalibTouchRight;
                if (message.mCalibTouchTop != null && message.hasOwnProperty("mCalibTouchTop"))
                    object.mCalibTouchTop = message.mCalibTouchTop;
                if (message.mCalibTouchBottom != null && message.hasOwnProperty("mCalibTouchBottom"))
                    object.mCalibTouchBottom = message.mCalibTouchBottom;
                if (message.mBanacoinEnabled != null && message.hasOwnProperty("mBanacoinEnabled"))
                    object.mBanacoinEnabled = message.mBanacoinEnabled;
                if (message.mScratchCost != null && message.hasOwnProperty("mScratchCost"))
                    object.mScratchCost = message.mScratchCost;
                return object;
            };

            /**
             * Converts this SystemSetting to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SystemSetting
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SystemSetting.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SystemSetting
             * @function getTypeUrl
             * @memberof wm5.protobuf.SystemSetting
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SystemSetting.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SystemSetting";
            };

            return SystemSetting;
        })();

        protobuf.GhostCompetitionSchedule = (function() {

            /**
             * Properties of a GhostCompetitionSchedule.
             * @memberof wm5.protobuf
             * @interface IGhostCompetitionSchedule
             * @property {number} competitionId GhostCompetitionSchedule competitionId
             * @property {number} qualifyingPeriodStartAt GhostCompetitionSchedule qualifyingPeriodStartAt
             * @property {number} qualifyingPeriodCloseAt GhostCompetitionSchedule qualifyingPeriodCloseAt
             * @property {number} competitionStartAt GhostCompetitionSchedule competitionStartAt
             * @property {number} competitionCloseAt GhostCompetitionSchedule competitionCloseAt
             * @property {number} competitionEndAt GhostCompetitionSchedule competitionEndAt
             * @property {number} lengthOfPeriod GhostCompetitionSchedule lengthOfPeriod
             * @property {number} lengthOfInterval GhostCompetitionSchedule lengthOfInterval
             * @property {number} area GhostCompetitionSchedule area
             * @property {number} minigamePatternId GhostCompetitionSchedule minigamePatternId
             */

            /**
             * Constructs a new GhostCompetitionSchedule.
             * @memberof wm5.protobuf
             * @classdesc Represents a GhostCompetitionSchedule.
             * @implements IGhostCompetitionSchedule
             * @constructor
             * @param {wm5.protobuf.IGhostCompetitionSchedule=} [properties] Properties to set
             */
            function GhostCompetitionSchedule(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GhostCompetitionSchedule competitionId.
             * @member {number} competitionId
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @instance
             */
            GhostCompetitionSchedule.prototype.competitionId = 0;

            /**
             * GhostCompetitionSchedule qualifyingPeriodStartAt.
             * @member {number} qualifyingPeriodStartAt
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @instance
             */
            GhostCompetitionSchedule.prototype.qualifyingPeriodStartAt = 0;

            /**
             * GhostCompetitionSchedule qualifyingPeriodCloseAt.
             * @member {number} qualifyingPeriodCloseAt
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @instance
             */
            GhostCompetitionSchedule.prototype.qualifyingPeriodCloseAt = 0;

            /**
             * GhostCompetitionSchedule competitionStartAt.
             * @member {number} competitionStartAt
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @instance
             */
            GhostCompetitionSchedule.prototype.competitionStartAt = 0;

            /**
             * GhostCompetitionSchedule competitionCloseAt.
             * @member {number} competitionCloseAt
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @instance
             */
            GhostCompetitionSchedule.prototype.competitionCloseAt = 0;

            /**
             * GhostCompetitionSchedule competitionEndAt.
             * @member {number} competitionEndAt
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @instance
             */
            GhostCompetitionSchedule.prototype.competitionEndAt = 0;

            /**
             * GhostCompetitionSchedule lengthOfPeriod.
             * @member {number} lengthOfPeriod
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @instance
             */
            GhostCompetitionSchedule.prototype.lengthOfPeriod = 0;

            /**
             * GhostCompetitionSchedule lengthOfInterval.
             * @member {number} lengthOfInterval
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @instance
             */
            GhostCompetitionSchedule.prototype.lengthOfInterval = 0;

            /**
             * GhostCompetitionSchedule area.
             * @member {number} area
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @instance
             */
            GhostCompetitionSchedule.prototype.area = 0;

            /**
             * GhostCompetitionSchedule minigamePatternId.
             * @member {number} minigamePatternId
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @instance
             */
            GhostCompetitionSchedule.prototype.minigamePatternId = 0;

            /**
             * Creates a new GhostCompetitionSchedule instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @static
             * @param {wm5.protobuf.IGhostCompetitionSchedule=} [properties] Properties to set
             * @returns {wm5.protobuf.GhostCompetitionSchedule} GhostCompetitionSchedule instance
             */
            GhostCompetitionSchedule.create = function create(properties) {
                return new GhostCompetitionSchedule(properties);
            };

            /**
             * Encodes the specified GhostCompetitionSchedule message. Does not implicitly {@link wm5.protobuf.GhostCompetitionSchedule.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @static
             * @param {wm5.protobuf.IGhostCompetitionSchedule} message GhostCompetitionSchedule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostCompetitionSchedule.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.competitionId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.qualifyingPeriodStartAt);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.qualifyingPeriodCloseAt);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.competitionStartAt);
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.competitionCloseAt);
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.competitionEndAt);
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.lengthOfPeriod);
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.lengthOfInterval);
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.area);
                writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.minigamePatternId);
                return writer;
            };

            /**
             * Encodes the specified GhostCompetitionSchedule message, length delimited. Does not implicitly {@link wm5.protobuf.GhostCompetitionSchedule.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @static
             * @param {wm5.protobuf.IGhostCompetitionSchedule} message GhostCompetitionSchedule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostCompetitionSchedule.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GhostCompetitionSchedule message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.GhostCompetitionSchedule} GhostCompetitionSchedule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostCompetitionSchedule.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.GhostCompetitionSchedule();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.competitionId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.qualifyingPeriodStartAt = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.qualifyingPeriodCloseAt = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.competitionStartAt = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.competitionCloseAt = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.competitionEndAt = reader.uint32();
                            break;
                        }
                    case 7: {
                            message.lengthOfPeriod = reader.uint32();
                            break;
                        }
                    case 8: {
                            message.lengthOfInterval = reader.uint32();
                            break;
                        }
                    case 9: {
                            message.area = reader.uint32();
                            break;
                        }
                    case 10: {
                            message.minigamePatternId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("competitionId"))
                    throw $util.ProtocolError("missing required 'competitionId'", { instance: message });
                if (!message.hasOwnProperty("qualifyingPeriodStartAt"))
                    throw $util.ProtocolError("missing required 'qualifyingPeriodStartAt'", { instance: message });
                if (!message.hasOwnProperty("qualifyingPeriodCloseAt"))
                    throw $util.ProtocolError("missing required 'qualifyingPeriodCloseAt'", { instance: message });
                if (!message.hasOwnProperty("competitionStartAt"))
                    throw $util.ProtocolError("missing required 'competitionStartAt'", { instance: message });
                if (!message.hasOwnProperty("competitionCloseAt"))
                    throw $util.ProtocolError("missing required 'competitionCloseAt'", { instance: message });
                if (!message.hasOwnProperty("competitionEndAt"))
                    throw $util.ProtocolError("missing required 'competitionEndAt'", { instance: message });
                if (!message.hasOwnProperty("lengthOfPeriod"))
                    throw $util.ProtocolError("missing required 'lengthOfPeriod'", { instance: message });
                if (!message.hasOwnProperty("lengthOfInterval"))
                    throw $util.ProtocolError("missing required 'lengthOfInterval'", { instance: message });
                if (!message.hasOwnProperty("area"))
                    throw $util.ProtocolError("missing required 'area'", { instance: message });
                if (!message.hasOwnProperty("minigamePatternId"))
                    throw $util.ProtocolError("missing required 'minigamePatternId'", { instance: message });
                return message;
            };

            /**
             * Decodes a GhostCompetitionSchedule message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.GhostCompetitionSchedule} GhostCompetitionSchedule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostCompetitionSchedule.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GhostCompetitionSchedule message.
             * @function verify
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GhostCompetitionSchedule.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.competitionId))
                    return "competitionId: integer expected";
                if (!$util.isInteger(message.qualifyingPeriodStartAt))
                    return "qualifyingPeriodStartAt: integer expected";
                if (!$util.isInteger(message.qualifyingPeriodCloseAt))
                    return "qualifyingPeriodCloseAt: integer expected";
                if (!$util.isInteger(message.competitionStartAt))
                    return "competitionStartAt: integer expected";
                if (!$util.isInteger(message.competitionCloseAt))
                    return "competitionCloseAt: integer expected";
                if (!$util.isInteger(message.competitionEndAt))
                    return "competitionEndAt: integer expected";
                if (!$util.isInteger(message.lengthOfPeriod))
                    return "lengthOfPeriod: integer expected";
                if (!$util.isInteger(message.lengthOfInterval))
                    return "lengthOfInterval: integer expected";
                if (!$util.isInteger(message.area))
                    return "area: integer expected";
                if (!$util.isInteger(message.minigamePatternId))
                    return "minigamePatternId: integer expected";
                return null;
            };

            /**
             * Creates a GhostCompetitionSchedule message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.GhostCompetitionSchedule} GhostCompetitionSchedule
             */
            GhostCompetitionSchedule.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.GhostCompetitionSchedule)
                    return object;
                let message = new $root.wm5.protobuf.GhostCompetitionSchedule();
                if (object.competitionId != null)
                    message.competitionId = object.competitionId >>> 0;
                if (object.qualifyingPeriodStartAt != null)
                    message.qualifyingPeriodStartAt = object.qualifyingPeriodStartAt >>> 0;
                if (object.qualifyingPeriodCloseAt != null)
                    message.qualifyingPeriodCloseAt = object.qualifyingPeriodCloseAt >>> 0;
                if (object.competitionStartAt != null)
                    message.competitionStartAt = object.competitionStartAt >>> 0;
                if (object.competitionCloseAt != null)
                    message.competitionCloseAt = object.competitionCloseAt >>> 0;
                if (object.competitionEndAt != null)
                    message.competitionEndAt = object.competitionEndAt >>> 0;
                if (object.lengthOfPeriod != null)
                    message.lengthOfPeriod = object.lengthOfPeriod >>> 0;
                if (object.lengthOfInterval != null)
                    message.lengthOfInterval = object.lengthOfInterval >>> 0;
                if (object.area != null)
                    message.area = object.area >>> 0;
                if (object.minigamePatternId != null)
                    message.minigamePatternId = object.minigamePatternId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a GhostCompetitionSchedule message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @static
             * @param {wm5.protobuf.GhostCompetitionSchedule} message GhostCompetitionSchedule
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GhostCompetitionSchedule.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.competitionId = 0;
                    object.qualifyingPeriodStartAt = 0;
                    object.qualifyingPeriodCloseAt = 0;
                    object.competitionStartAt = 0;
                    object.competitionCloseAt = 0;
                    object.competitionEndAt = 0;
                    object.lengthOfPeriod = 0;
                    object.lengthOfInterval = 0;
                    object.area = 0;
                    object.minigamePatternId = 0;
                }
                if (message.competitionId != null && message.hasOwnProperty("competitionId"))
                    object.competitionId = message.competitionId;
                if (message.qualifyingPeriodStartAt != null && message.hasOwnProperty("qualifyingPeriodStartAt"))
                    object.qualifyingPeriodStartAt = message.qualifyingPeriodStartAt;
                if (message.qualifyingPeriodCloseAt != null && message.hasOwnProperty("qualifyingPeriodCloseAt"))
                    object.qualifyingPeriodCloseAt = message.qualifyingPeriodCloseAt;
                if (message.competitionStartAt != null && message.hasOwnProperty("competitionStartAt"))
                    object.competitionStartAt = message.competitionStartAt;
                if (message.competitionCloseAt != null && message.hasOwnProperty("competitionCloseAt"))
                    object.competitionCloseAt = message.competitionCloseAt;
                if (message.competitionEndAt != null && message.hasOwnProperty("competitionEndAt"))
                    object.competitionEndAt = message.competitionEndAt;
                if (message.lengthOfPeriod != null && message.hasOwnProperty("lengthOfPeriod"))
                    object.lengthOfPeriod = message.lengthOfPeriod;
                if (message.lengthOfInterval != null && message.hasOwnProperty("lengthOfInterval"))
                    object.lengthOfInterval = message.lengthOfInterval;
                if (message.area != null && message.hasOwnProperty("area"))
                    object.area = message.area;
                if (message.minigamePatternId != null && message.hasOwnProperty("minigamePatternId"))
                    object.minigamePatternId = message.minigamePatternId;
                return object;
            };

            /**
             * Converts this GhostCompetitionSchedule to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GhostCompetitionSchedule.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GhostCompetitionSchedule
             * @function getTypeUrl
             * @memberof wm5.protobuf.GhostCompetitionSchedule
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GhostCompetitionSchedule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.GhostCompetitionSchedule";
            };

            return GhostCompetitionSchedule;
        })();

        protobuf.GhostCompetitionParameter = (function() {

            /**
             * Properties of a GhostCompetitionParameter.
             * @memberof wm5.protobuf
             * @interface IGhostCompetitionParameter
             * @property {Array.<number>|null} [parameters1] GhostCompetitionParameter parameters1
             * @property {boolean} parameters2 GhostCompetitionParameter parameters2
             */

            /**
             * Constructs a new GhostCompetitionParameter.
             * @memberof wm5.protobuf
             * @classdesc Represents a GhostCompetitionParameter.
             * @implements IGhostCompetitionParameter
             * @constructor
             * @param {wm5.protobuf.IGhostCompetitionParameter=} [properties] Properties to set
             */
            function GhostCompetitionParameter(properties) {
                this.parameters1 = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GhostCompetitionParameter parameters1.
             * @member {Array.<number>} parameters1
             * @memberof wm5.protobuf.GhostCompetitionParameter
             * @instance
             */
            GhostCompetitionParameter.prototype.parameters1 = $util.emptyArray;

            /**
             * GhostCompetitionParameter parameters2.
             * @member {boolean} parameters2
             * @memberof wm5.protobuf.GhostCompetitionParameter
             * @instance
             */
            GhostCompetitionParameter.prototype.parameters2 = false;

            /**
             * Creates a new GhostCompetitionParameter instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.GhostCompetitionParameter
             * @static
             * @param {wm5.protobuf.IGhostCompetitionParameter=} [properties] Properties to set
             * @returns {wm5.protobuf.GhostCompetitionParameter} GhostCompetitionParameter instance
             */
            GhostCompetitionParameter.create = function create(properties) {
                return new GhostCompetitionParameter(properties);
            };

            /**
             * Encodes the specified GhostCompetitionParameter message. Does not implicitly {@link wm5.protobuf.GhostCompetitionParameter.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.GhostCompetitionParameter
             * @static
             * @param {wm5.protobuf.IGhostCompetitionParameter} message GhostCompetitionParameter message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostCompetitionParameter.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.parameters1 != null && message.parameters1.length)
                    for (let i = 0; i < message.parameters1.length; ++i)
                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.parameters1[i]);
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.parameters2);
                return writer;
            };

            /**
             * Encodes the specified GhostCompetitionParameter message, length delimited. Does not implicitly {@link wm5.protobuf.GhostCompetitionParameter.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.GhostCompetitionParameter
             * @static
             * @param {wm5.protobuf.IGhostCompetitionParameter} message GhostCompetitionParameter message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostCompetitionParameter.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GhostCompetitionParameter message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.GhostCompetitionParameter
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.GhostCompetitionParameter} GhostCompetitionParameter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostCompetitionParameter.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.GhostCompetitionParameter();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.parameters1 && message.parameters1.length))
                                message.parameters1 = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.parameters1.push(reader.float());
                            } else
                                message.parameters1.push(reader.float());
                            break;
                        }
                    case 2: {
                            message.parameters2 = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("parameters2"))
                    throw $util.ProtocolError("missing required 'parameters2'", { instance: message });
                return message;
            };

            /**
             * Decodes a GhostCompetitionParameter message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.GhostCompetitionParameter
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.GhostCompetitionParameter} GhostCompetitionParameter
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostCompetitionParameter.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GhostCompetitionParameter message.
             * @function verify
             * @memberof wm5.protobuf.GhostCompetitionParameter
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GhostCompetitionParameter.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.parameters1 != null && message.hasOwnProperty("parameters1")) {
                    if (!Array.isArray(message.parameters1))
                        return "parameters1: array expected";
                    for (let i = 0; i < message.parameters1.length; ++i)
                        if (typeof message.parameters1[i] !== "number")
                            return "parameters1: number[] expected";
                }
                if (typeof message.parameters2 !== "boolean")
                    return "parameters2: boolean expected";
                return null;
            };

            /**
             * Creates a GhostCompetitionParameter message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.GhostCompetitionParameter
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.GhostCompetitionParameter} GhostCompetitionParameter
             */
            GhostCompetitionParameter.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.GhostCompetitionParameter)
                    return object;
                let message = new $root.wm5.protobuf.GhostCompetitionParameter();
                if (object.parameters1) {
                    if (!Array.isArray(object.parameters1))
                        throw TypeError(".wm5.protobuf.GhostCompetitionParameter.parameters1: array expected");
                    message.parameters1 = [];
                    for (let i = 0; i < object.parameters1.length; ++i)
                        message.parameters1[i] = Number(object.parameters1[i]);
                }
                if (object.parameters2 != null)
                    message.parameters2 = Boolean(object.parameters2);
                return message;
            };

            /**
             * Creates a plain object from a GhostCompetitionParameter message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.GhostCompetitionParameter
             * @static
             * @param {wm5.protobuf.GhostCompetitionParameter} message GhostCompetitionParameter
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GhostCompetitionParameter.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.parameters1 = [];
                if (options.defaults)
                    object.parameters2 = false;
                if (message.parameters1 && message.parameters1.length) {
                    object.parameters1 = [];
                    for (let j = 0; j < message.parameters1.length; ++j)
                        object.parameters1[j] = options.json && !isFinite(message.parameters1[j]) ? String(message.parameters1[j]) : message.parameters1[j];
                }
                if (message.parameters2 != null && message.hasOwnProperty("parameters2"))
                    object.parameters2 = message.parameters2;
                return object;
            };

            /**
             * Converts this GhostCompetitionParameter to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.GhostCompetitionParameter
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GhostCompetitionParameter.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GhostCompetitionParameter
             * @function getTypeUrl
             * @memberof wm5.protobuf.GhostCompetitionParameter
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GhostCompetitionParameter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.GhostCompetitionParameter";
            };

            return GhostCompetitionParameter;
        })();

        protobuf.SpecialGhostSchedule = (function() {

            /**
             * Properties of a SpecialGhostSchedule.
             * @memberof wm5.protobuf
             * @interface ISpecialGhostSchedule
             * @property {number} startAt SpecialGhostSchedule startAt
             * @property {number} endAt SpecialGhostSchedule endAt
             * @property {number} announcementEndAt SpecialGhostSchedule announcementEndAt
             */

            /**
             * Constructs a new SpecialGhostSchedule.
             * @memberof wm5.protobuf
             * @classdesc Represents a SpecialGhostSchedule.
             * @implements ISpecialGhostSchedule
             * @constructor
             * @param {wm5.protobuf.ISpecialGhostSchedule=} [properties] Properties to set
             */
            function SpecialGhostSchedule(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SpecialGhostSchedule startAt.
             * @member {number} startAt
             * @memberof wm5.protobuf.SpecialGhostSchedule
             * @instance
             */
            SpecialGhostSchedule.prototype.startAt = 0;

            /**
             * SpecialGhostSchedule endAt.
             * @member {number} endAt
             * @memberof wm5.protobuf.SpecialGhostSchedule
             * @instance
             */
            SpecialGhostSchedule.prototype.endAt = 0;

            /**
             * SpecialGhostSchedule announcementEndAt.
             * @member {number} announcementEndAt
             * @memberof wm5.protobuf.SpecialGhostSchedule
             * @instance
             */
            SpecialGhostSchedule.prototype.announcementEndAt = 0;

            /**
             * Creates a new SpecialGhostSchedule instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SpecialGhostSchedule
             * @static
             * @param {wm5.protobuf.ISpecialGhostSchedule=} [properties] Properties to set
             * @returns {wm5.protobuf.SpecialGhostSchedule} SpecialGhostSchedule instance
             */
            SpecialGhostSchedule.create = function create(properties) {
                return new SpecialGhostSchedule(properties);
            };

            /**
             * Encodes the specified SpecialGhostSchedule message. Does not implicitly {@link wm5.protobuf.SpecialGhostSchedule.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SpecialGhostSchedule
             * @static
             * @param {wm5.protobuf.ISpecialGhostSchedule} message SpecialGhostSchedule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SpecialGhostSchedule.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.startAt);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.endAt);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.announcementEndAt);
                return writer;
            };

            /**
             * Encodes the specified SpecialGhostSchedule message, length delimited. Does not implicitly {@link wm5.protobuf.SpecialGhostSchedule.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SpecialGhostSchedule
             * @static
             * @param {wm5.protobuf.ISpecialGhostSchedule} message SpecialGhostSchedule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SpecialGhostSchedule.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SpecialGhostSchedule message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SpecialGhostSchedule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SpecialGhostSchedule} SpecialGhostSchedule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SpecialGhostSchedule.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SpecialGhostSchedule();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.startAt = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.endAt = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.announcementEndAt = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("startAt"))
                    throw $util.ProtocolError("missing required 'startAt'", { instance: message });
                if (!message.hasOwnProperty("endAt"))
                    throw $util.ProtocolError("missing required 'endAt'", { instance: message });
                if (!message.hasOwnProperty("announcementEndAt"))
                    throw $util.ProtocolError("missing required 'announcementEndAt'", { instance: message });
                return message;
            };

            /**
             * Decodes a SpecialGhostSchedule message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SpecialGhostSchedule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SpecialGhostSchedule} SpecialGhostSchedule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SpecialGhostSchedule.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SpecialGhostSchedule message.
             * @function verify
             * @memberof wm5.protobuf.SpecialGhostSchedule
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SpecialGhostSchedule.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.startAt))
                    return "startAt: integer expected";
                if (!$util.isInteger(message.endAt))
                    return "endAt: integer expected";
                if (!$util.isInteger(message.announcementEndAt))
                    return "announcementEndAt: integer expected";
                return null;
            };

            /**
             * Creates a SpecialGhostSchedule message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SpecialGhostSchedule
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SpecialGhostSchedule} SpecialGhostSchedule
             */
            SpecialGhostSchedule.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SpecialGhostSchedule)
                    return object;
                let message = new $root.wm5.protobuf.SpecialGhostSchedule();
                if (object.startAt != null)
                    message.startAt = object.startAt >>> 0;
                if (object.endAt != null)
                    message.endAt = object.endAt >>> 0;
                if (object.announcementEndAt != null)
                    message.announcementEndAt = object.announcementEndAt >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a SpecialGhostSchedule message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SpecialGhostSchedule
             * @static
             * @param {wm5.protobuf.SpecialGhostSchedule} message SpecialGhostSchedule
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SpecialGhostSchedule.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.startAt = 0;
                    object.endAt = 0;
                    object.announcementEndAt = 0;
                }
                if (message.startAt != null && message.hasOwnProperty("startAt"))
                    object.startAt = message.startAt;
                if (message.endAt != null && message.hasOwnProperty("endAt"))
                    object.endAt = message.endAt;
                if (message.announcementEndAt != null && message.hasOwnProperty("announcementEndAt"))
                    object.announcementEndAt = message.announcementEndAt;
                return object;
            };

            /**
             * Converts this SpecialGhostSchedule to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SpecialGhostSchedule
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SpecialGhostSchedule.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SpecialGhostSchedule
             * @function getTypeUrl
             * @memberof wm5.protobuf.SpecialGhostSchedule
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SpecialGhostSchedule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SpecialGhostSchedule";
            };

            return SpecialGhostSchedule;
        })();

        protobuf.SpecialAuraMotif = (function() {

            /**
             * Properties of a SpecialAuraMotif.
             * @memberof wm5.protobuf
             * @interface ISpecialAuraMotif
             * @property {number} auraMotif SpecialAuraMotif auraMotif
             * @property {number} medalPoints SpecialAuraMotif medalPoints
             */

            /**
             * Constructs a new SpecialAuraMotif.
             * @memberof wm5.protobuf
             * @classdesc Represents a SpecialAuraMotif.
             * @implements ISpecialAuraMotif
             * @constructor
             * @param {wm5.protobuf.ISpecialAuraMotif=} [properties] Properties to set
             */
            function SpecialAuraMotif(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SpecialAuraMotif auraMotif.
             * @member {number} auraMotif
             * @memberof wm5.protobuf.SpecialAuraMotif
             * @instance
             */
            SpecialAuraMotif.prototype.auraMotif = 0;

            /**
             * SpecialAuraMotif medalPoints.
             * @member {number} medalPoints
             * @memberof wm5.protobuf.SpecialAuraMotif
             * @instance
             */
            SpecialAuraMotif.prototype.medalPoints = 0;

            /**
             * Creates a new SpecialAuraMotif instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.SpecialAuraMotif
             * @static
             * @param {wm5.protobuf.ISpecialAuraMotif=} [properties] Properties to set
             * @returns {wm5.protobuf.SpecialAuraMotif} SpecialAuraMotif instance
             */
            SpecialAuraMotif.create = function create(properties) {
                return new SpecialAuraMotif(properties);
            };

            /**
             * Encodes the specified SpecialAuraMotif message. Does not implicitly {@link wm5.protobuf.SpecialAuraMotif.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.SpecialAuraMotif
             * @static
             * @param {wm5.protobuf.ISpecialAuraMotif} message SpecialAuraMotif message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SpecialAuraMotif.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.auraMotif);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.medalPoints);
                return writer;
            };

            /**
             * Encodes the specified SpecialAuraMotif message, length delimited. Does not implicitly {@link wm5.protobuf.SpecialAuraMotif.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.SpecialAuraMotif
             * @static
             * @param {wm5.protobuf.ISpecialAuraMotif} message SpecialAuraMotif message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SpecialAuraMotif.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SpecialAuraMotif message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.SpecialAuraMotif
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.SpecialAuraMotif} SpecialAuraMotif
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SpecialAuraMotif.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.SpecialAuraMotif();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.auraMotif = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.medalPoints = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("auraMotif"))
                    throw $util.ProtocolError("missing required 'auraMotif'", { instance: message });
                if (!message.hasOwnProperty("medalPoints"))
                    throw $util.ProtocolError("missing required 'medalPoints'", { instance: message });
                return message;
            };

            /**
             * Decodes a SpecialAuraMotif message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.SpecialAuraMotif
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.SpecialAuraMotif} SpecialAuraMotif
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SpecialAuraMotif.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SpecialAuraMotif message.
             * @function verify
             * @memberof wm5.protobuf.SpecialAuraMotif
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SpecialAuraMotif.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.auraMotif))
                    return "auraMotif: integer expected";
                if (!$util.isInteger(message.medalPoints))
                    return "medalPoints: integer expected";
                return null;
            };

            /**
             * Creates a SpecialAuraMotif message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.SpecialAuraMotif
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.SpecialAuraMotif} SpecialAuraMotif
             */
            SpecialAuraMotif.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.SpecialAuraMotif)
                    return object;
                let message = new $root.wm5.protobuf.SpecialAuraMotif();
                if (object.auraMotif != null)
                    message.auraMotif = object.auraMotif >>> 0;
                if (object.medalPoints != null)
                    message.medalPoints = object.medalPoints >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a SpecialAuraMotif message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.SpecialAuraMotif
             * @static
             * @param {wm5.protobuf.SpecialAuraMotif} message SpecialAuraMotif
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SpecialAuraMotif.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.auraMotif = 0;
                    object.medalPoints = 0;
                }
                if (message.auraMotif != null && message.hasOwnProperty("auraMotif"))
                    object.auraMotif = message.auraMotif;
                if (message.medalPoints != null && message.hasOwnProperty("medalPoints"))
                    object.medalPoints = message.medalPoints;
                return object;
            };

            /**
             * Converts this SpecialAuraMotif to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.SpecialAuraMotif
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SpecialAuraMotif.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SpecialAuraMotif
             * @function getTypeUrl
             * @memberof wm5.protobuf.SpecialAuraMotif
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SpecialAuraMotif.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.SpecialAuraMotif";
            };

            return SpecialAuraMotif;
        })();

        protobuf.TransferNotice = (function() {

            /**
             * Properties of a TransferNotice.
             * @memberof wm5.protobuf
             * @interface ITransferNotice
             * @property {boolean} needToSeeTransferred TransferNotice needToSeeTransferred
             * @property {boolean} needToRenameCar TransferNotice needToRenameCar
             * @property {boolean} needToRenameTeam TransferNotice needToRenameTeam
             */

            /**
             * Constructs a new TransferNotice.
             * @memberof wm5.protobuf
             * @classdesc Represents a TransferNotice.
             * @implements ITransferNotice
             * @constructor
             * @param {wm5.protobuf.ITransferNotice=} [properties] Properties to set
             */
            function TransferNotice(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * TransferNotice needToSeeTransferred.
             * @member {boolean} needToSeeTransferred
             * @memberof wm5.protobuf.TransferNotice
             * @instance
             */
            TransferNotice.prototype.needToSeeTransferred = false;

            /**
             * TransferNotice needToRenameCar.
             * @member {boolean} needToRenameCar
             * @memberof wm5.protobuf.TransferNotice
             * @instance
             */
            TransferNotice.prototype.needToRenameCar = false;

            /**
             * TransferNotice needToRenameTeam.
             * @member {boolean} needToRenameTeam
             * @memberof wm5.protobuf.TransferNotice
             * @instance
             */
            TransferNotice.prototype.needToRenameTeam = false;

            /**
             * Creates a new TransferNotice instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.TransferNotice
             * @static
             * @param {wm5.protobuf.ITransferNotice=} [properties] Properties to set
             * @returns {wm5.protobuf.TransferNotice} TransferNotice instance
             */
            TransferNotice.create = function create(properties) {
                return new TransferNotice(properties);
            };

            /**
             * Encodes the specified TransferNotice message. Does not implicitly {@link wm5.protobuf.TransferNotice.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.TransferNotice
             * @static
             * @param {wm5.protobuf.ITransferNotice} message TransferNotice message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransferNotice.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.needToSeeTransferred);
                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.needToRenameCar);
                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.needToRenameTeam);
                return writer;
            };

            /**
             * Encodes the specified TransferNotice message, length delimited. Does not implicitly {@link wm5.protobuf.TransferNotice.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.TransferNotice
             * @static
             * @param {wm5.protobuf.ITransferNotice} message TransferNotice message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransferNotice.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a TransferNotice message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.TransferNotice
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.TransferNotice} TransferNotice
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransferNotice.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.TransferNotice();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.needToSeeTransferred = reader.bool();
                            break;
                        }
                    case 2: {
                            message.needToRenameCar = reader.bool();
                            break;
                        }
                    case 3: {
                            message.needToRenameTeam = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("needToSeeTransferred"))
                    throw $util.ProtocolError("missing required 'needToSeeTransferred'", { instance: message });
                if (!message.hasOwnProperty("needToRenameCar"))
                    throw $util.ProtocolError("missing required 'needToRenameCar'", { instance: message });
                if (!message.hasOwnProperty("needToRenameTeam"))
                    throw $util.ProtocolError("missing required 'needToRenameTeam'", { instance: message });
                return message;
            };

            /**
             * Decodes a TransferNotice message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.TransferNotice
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.TransferNotice} TransferNotice
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransferNotice.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a TransferNotice message.
             * @function verify
             * @memberof wm5.protobuf.TransferNotice
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TransferNotice.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (typeof message.needToSeeTransferred !== "boolean")
                    return "needToSeeTransferred: boolean expected";
                if (typeof message.needToRenameCar !== "boolean")
                    return "needToRenameCar: boolean expected";
                if (typeof message.needToRenameTeam !== "boolean")
                    return "needToRenameTeam: boolean expected";
                return null;
            };

            /**
             * Creates a TransferNotice message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.TransferNotice
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.TransferNotice} TransferNotice
             */
            TransferNotice.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.TransferNotice)
                    return object;
                let message = new $root.wm5.protobuf.TransferNotice();
                if (object.needToSeeTransferred != null)
                    message.needToSeeTransferred = Boolean(object.needToSeeTransferred);
                if (object.needToRenameCar != null)
                    message.needToRenameCar = Boolean(object.needToRenameCar);
                if (object.needToRenameTeam != null)
                    message.needToRenameTeam = Boolean(object.needToRenameTeam);
                return message;
            };

            /**
             * Creates a plain object from a TransferNotice message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.TransferNotice
             * @static
             * @param {wm5.protobuf.TransferNotice} message TransferNotice
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TransferNotice.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.needToSeeTransferred = false;
                    object.needToRenameCar = false;
                    object.needToRenameTeam = false;
                }
                if (message.needToSeeTransferred != null && message.hasOwnProperty("needToSeeTransferred"))
                    object.needToSeeTransferred = message.needToSeeTransferred;
                if (message.needToRenameCar != null && message.hasOwnProperty("needToRenameCar"))
                    object.needToRenameCar = message.needToRenameCar;
                if (message.needToRenameTeam != null && message.hasOwnProperty("needToRenameTeam"))
                    object.needToRenameTeam = message.needToRenameTeam;
                return object;
            };

            /**
             * Converts this TransferNotice to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.TransferNotice
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TransferNotice.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for TransferNotice
             * @function getTypeUrl
             * @memberof wm5.protobuf.TransferNotice
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TransferNotice.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.TransferNotice";
            };

            return TransferNotice;
        })();

        protobuf.RepayingCampaignSchedule = (function() {

            /**
             * Properties of a RepayingCampaignSchedule.
             * @memberof wm5.protobuf
             * @interface IRepayingCampaignSchedule
             * @property {number} startAt RepayingCampaignSchedule startAt
             * @property {number} endAt RepayingCampaignSchedule endAt
             * @property {number} announcementEndAt RepayingCampaignSchedule announcementEndAt
             * @property {number} targetMaxiGold RepayingCampaignSchedule targetMaxiGold
             * @property {number} repaymentMaxiGold RepayingCampaignSchedule repaymentMaxiGold
             */

            /**
             * Constructs a new RepayingCampaignSchedule.
             * @memberof wm5.protobuf
             * @classdesc Represents a RepayingCampaignSchedule.
             * @implements IRepayingCampaignSchedule
             * @constructor
             * @param {wm5.protobuf.IRepayingCampaignSchedule=} [properties] Properties to set
             */
            function RepayingCampaignSchedule(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * RepayingCampaignSchedule startAt.
             * @member {number} startAt
             * @memberof wm5.protobuf.RepayingCampaignSchedule
             * @instance
             */
            RepayingCampaignSchedule.prototype.startAt = 0;

            /**
             * RepayingCampaignSchedule endAt.
             * @member {number} endAt
             * @memberof wm5.protobuf.RepayingCampaignSchedule
             * @instance
             */
            RepayingCampaignSchedule.prototype.endAt = 0;

            /**
             * RepayingCampaignSchedule announcementEndAt.
             * @member {number} announcementEndAt
             * @memberof wm5.protobuf.RepayingCampaignSchedule
             * @instance
             */
            RepayingCampaignSchedule.prototype.announcementEndAt = 0;

            /**
             * RepayingCampaignSchedule targetMaxiGold.
             * @member {number} targetMaxiGold
             * @memberof wm5.protobuf.RepayingCampaignSchedule
             * @instance
             */
            RepayingCampaignSchedule.prototype.targetMaxiGold = 0;

            /**
             * RepayingCampaignSchedule repaymentMaxiGold.
             * @member {number} repaymentMaxiGold
             * @memberof wm5.protobuf.RepayingCampaignSchedule
             * @instance
             */
            RepayingCampaignSchedule.prototype.repaymentMaxiGold = 0;

            /**
             * Creates a new RepayingCampaignSchedule instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.RepayingCampaignSchedule
             * @static
             * @param {wm5.protobuf.IRepayingCampaignSchedule=} [properties] Properties to set
             * @returns {wm5.protobuf.RepayingCampaignSchedule} RepayingCampaignSchedule instance
             */
            RepayingCampaignSchedule.create = function create(properties) {
                return new RepayingCampaignSchedule(properties);
            };

            /**
             * Encodes the specified RepayingCampaignSchedule message. Does not implicitly {@link wm5.protobuf.RepayingCampaignSchedule.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.RepayingCampaignSchedule
             * @static
             * @param {wm5.protobuf.IRepayingCampaignSchedule} message RepayingCampaignSchedule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RepayingCampaignSchedule.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.startAt);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.endAt);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.announcementEndAt);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.targetMaxiGold);
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.repaymentMaxiGold);
                return writer;
            };

            /**
             * Encodes the specified RepayingCampaignSchedule message, length delimited. Does not implicitly {@link wm5.protobuf.RepayingCampaignSchedule.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.RepayingCampaignSchedule
             * @static
             * @param {wm5.protobuf.IRepayingCampaignSchedule} message RepayingCampaignSchedule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RepayingCampaignSchedule.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RepayingCampaignSchedule message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.RepayingCampaignSchedule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.RepayingCampaignSchedule} RepayingCampaignSchedule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RepayingCampaignSchedule.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.RepayingCampaignSchedule();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.startAt = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.endAt = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.announcementEndAt = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.targetMaxiGold = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.repaymentMaxiGold = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("startAt"))
                    throw $util.ProtocolError("missing required 'startAt'", { instance: message });
                if (!message.hasOwnProperty("endAt"))
                    throw $util.ProtocolError("missing required 'endAt'", { instance: message });
                if (!message.hasOwnProperty("announcementEndAt"))
                    throw $util.ProtocolError("missing required 'announcementEndAt'", { instance: message });
                if (!message.hasOwnProperty("targetMaxiGold"))
                    throw $util.ProtocolError("missing required 'targetMaxiGold'", { instance: message });
                if (!message.hasOwnProperty("repaymentMaxiGold"))
                    throw $util.ProtocolError("missing required 'repaymentMaxiGold'", { instance: message });
                return message;
            };

            /**
             * Decodes a RepayingCampaignSchedule message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.RepayingCampaignSchedule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.RepayingCampaignSchedule} RepayingCampaignSchedule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RepayingCampaignSchedule.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RepayingCampaignSchedule message.
             * @function verify
             * @memberof wm5.protobuf.RepayingCampaignSchedule
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RepayingCampaignSchedule.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.startAt))
                    return "startAt: integer expected";
                if (!$util.isInteger(message.endAt))
                    return "endAt: integer expected";
                if (!$util.isInteger(message.announcementEndAt))
                    return "announcementEndAt: integer expected";
                if (!$util.isInteger(message.targetMaxiGold))
                    return "targetMaxiGold: integer expected";
                if (!$util.isInteger(message.repaymentMaxiGold))
                    return "repaymentMaxiGold: integer expected";
                return null;
            };

            /**
             * Creates a RepayingCampaignSchedule message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.RepayingCampaignSchedule
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.RepayingCampaignSchedule} RepayingCampaignSchedule
             */
            RepayingCampaignSchedule.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.RepayingCampaignSchedule)
                    return object;
                let message = new $root.wm5.protobuf.RepayingCampaignSchedule();
                if (object.startAt != null)
                    message.startAt = object.startAt >>> 0;
                if (object.endAt != null)
                    message.endAt = object.endAt >>> 0;
                if (object.announcementEndAt != null)
                    message.announcementEndAt = object.announcementEndAt >>> 0;
                if (object.targetMaxiGold != null)
                    message.targetMaxiGold = object.targetMaxiGold >>> 0;
                if (object.repaymentMaxiGold != null)
                    message.repaymentMaxiGold = object.repaymentMaxiGold >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a RepayingCampaignSchedule message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.RepayingCampaignSchedule
             * @static
             * @param {wm5.protobuf.RepayingCampaignSchedule} message RepayingCampaignSchedule
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RepayingCampaignSchedule.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.startAt = 0;
                    object.endAt = 0;
                    object.announcementEndAt = 0;
                    object.targetMaxiGold = 0;
                    object.repaymentMaxiGold = 0;
                }
                if (message.startAt != null && message.hasOwnProperty("startAt"))
                    object.startAt = message.startAt;
                if (message.endAt != null && message.hasOwnProperty("endAt"))
                    object.endAt = message.endAt;
                if (message.announcementEndAt != null && message.hasOwnProperty("announcementEndAt"))
                    object.announcementEndAt = message.announcementEndAt;
                if (message.targetMaxiGold != null && message.hasOwnProperty("targetMaxiGold"))
                    object.targetMaxiGold = message.targetMaxiGold;
                if (message.repaymentMaxiGold != null && message.hasOwnProperty("repaymentMaxiGold"))
                    object.repaymentMaxiGold = message.repaymentMaxiGold;
                return object;
            };

            /**
             * Converts this RepayingCampaignSchedule to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.RepayingCampaignSchedule
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RepayingCampaignSchedule.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for RepayingCampaignSchedule
             * @function getTypeUrl
             * @memberof wm5.protobuf.RepayingCampaignSchedule
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RepayingCampaignSchedule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.RepayingCampaignSchedule";
            };

            return RepayingCampaignSchedule;
        })();

        protobuf.GameFeatureVersion = (function() {

            /**
             * Properties of a GameFeatureVersion.
             * @memberof wm5.protobuf
             * @interface IGameFeatureVersion
             * @property {number} version GameFeatureVersion version
             * @property {number} year GameFeatureVersion year
             * @property {number} month GameFeatureVersion month
             * @property {number} pluses GameFeatureVersion pluses
             * @property {number} releaseAt GameFeatureVersion releaseAt
             */

            /**
             * Constructs a new GameFeatureVersion.
             * @memberof wm5.protobuf
             * @classdesc Represents a GameFeatureVersion.
             * @implements IGameFeatureVersion
             * @constructor
             * @param {wm5.protobuf.IGameFeatureVersion=} [properties] Properties to set
             */
            function GameFeatureVersion(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GameFeatureVersion version.
             * @member {number} version
             * @memberof wm5.protobuf.GameFeatureVersion
             * @instance
             */
            GameFeatureVersion.prototype.version = 0;

            /**
             * GameFeatureVersion year.
             * @member {number} year
             * @memberof wm5.protobuf.GameFeatureVersion
             * @instance
             */
            GameFeatureVersion.prototype.year = 0;

            /**
             * GameFeatureVersion month.
             * @member {number} month
             * @memberof wm5.protobuf.GameFeatureVersion
             * @instance
             */
            GameFeatureVersion.prototype.month = 0;

            /**
             * GameFeatureVersion pluses.
             * @member {number} pluses
             * @memberof wm5.protobuf.GameFeatureVersion
             * @instance
             */
            GameFeatureVersion.prototype.pluses = 0;

            /**
             * GameFeatureVersion releaseAt.
             * @member {number} releaseAt
             * @memberof wm5.protobuf.GameFeatureVersion
             * @instance
             */
            GameFeatureVersion.prototype.releaseAt = 0;

            /**
             * Creates a new GameFeatureVersion instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.GameFeatureVersion
             * @static
             * @param {wm5.protobuf.IGameFeatureVersion=} [properties] Properties to set
             * @returns {wm5.protobuf.GameFeatureVersion} GameFeatureVersion instance
             */
            GameFeatureVersion.create = function create(properties) {
                return new GameFeatureVersion(properties);
            };

            /**
             * Encodes the specified GameFeatureVersion message. Does not implicitly {@link wm5.protobuf.GameFeatureVersion.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.GameFeatureVersion
             * @static
             * @param {wm5.protobuf.IGameFeatureVersion} message GameFeatureVersion message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GameFeatureVersion.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.version);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.year);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.month);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.pluses);
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.releaseAt);
                return writer;
            };

            /**
             * Encodes the specified GameFeatureVersion message, length delimited. Does not implicitly {@link wm5.protobuf.GameFeatureVersion.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.GameFeatureVersion
             * @static
             * @param {wm5.protobuf.IGameFeatureVersion} message GameFeatureVersion message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GameFeatureVersion.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GameFeatureVersion message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.GameFeatureVersion
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.GameFeatureVersion} GameFeatureVersion
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GameFeatureVersion.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.GameFeatureVersion();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.version = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.year = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.month = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.pluses = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.releaseAt = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("version"))
                    throw $util.ProtocolError("missing required 'version'", { instance: message });
                if (!message.hasOwnProperty("year"))
                    throw $util.ProtocolError("missing required 'year'", { instance: message });
                if (!message.hasOwnProperty("month"))
                    throw $util.ProtocolError("missing required 'month'", { instance: message });
                if (!message.hasOwnProperty("pluses"))
                    throw $util.ProtocolError("missing required 'pluses'", { instance: message });
                if (!message.hasOwnProperty("releaseAt"))
                    throw $util.ProtocolError("missing required 'releaseAt'", { instance: message });
                return message;
            };

            /**
             * Decodes a GameFeatureVersion message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.GameFeatureVersion
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.GameFeatureVersion} GameFeatureVersion
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GameFeatureVersion.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GameFeatureVersion message.
             * @function verify
             * @memberof wm5.protobuf.GameFeatureVersion
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GameFeatureVersion.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.version))
                    return "version: integer expected";
                if (!$util.isInteger(message.year))
                    return "year: integer expected";
                if (!$util.isInteger(message.month))
                    return "month: integer expected";
                if (!$util.isInteger(message.pluses))
                    return "pluses: integer expected";
                if (!$util.isInteger(message.releaseAt))
                    return "releaseAt: integer expected";
                return null;
            };

            /**
             * Creates a GameFeatureVersion message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.GameFeatureVersion
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.GameFeatureVersion} GameFeatureVersion
             */
            GameFeatureVersion.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.GameFeatureVersion)
                    return object;
                let message = new $root.wm5.protobuf.GameFeatureVersion();
                if (object.version != null)
                    message.version = object.version >>> 0;
                if (object.year != null)
                    message.year = object.year >>> 0;
                if (object.month != null)
                    message.month = object.month >>> 0;
                if (object.pluses != null)
                    message.pluses = object.pluses >>> 0;
                if (object.releaseAt != null)
                    message.releaseAt = object.releaseAt >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a GameFeatureVersion message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.GameFeatureVersion
             * @static
             * @param {wm5.protobuf.GameFeatureVersion} message GameFeatureVersion
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GameFeatureVersion.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.version = 0;
                    object.year = 0;
                    object.month = 0;
                    object.pluses = 0;
                    object.releaseAt = 0;
                }
                if (message.version != null && message.hasOwnProperty("version"))
                    object.version = message.version;
                if (message.year != null && message.hasOwnProperty("year"))
                    object.year = message.year;
                if (message.month != null && message.hasOwnProperty("month"))
                    object.month = message.month;
                if (message.pluses != null && message.hasOwnProperty("pluses"))
                    object.pluses = message.pluses;
                if (message.releaseAt != null && message.hasOwnProperty("releaseAt"))
                    object.releaseAt = message.releaseAt;
                return object;
            };

            /**
             * Converts this GameFeatureVersion to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.GameFeatureVersion
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GameFeatureVersion.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GameFeatureVersion
             * @function getTypeUrl
             * @memberof wm5.protobuf.GameFeatureVersion
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GameFeatureVersion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.GameFeatureVersion";
            };

            return GameFeatureVersion;
        })();

        protobuf.BingoSchedule = (function() {

            /**
             * Properties of a BingoSchedule.
             * @memberof wm5.protobuf
             * @interface IBingoSchedule
             * @property {number} id BingoSchedule id
             * @property {number} announcementStartAt BingoSchedule announcementStartAt
             * @property {number} startAt BingoSchedule startAt
             * @property {number} endAt BingoSchedule endAt
             * @property {number} numOfDeletionsToAcquireNameBonus BingoSchedule numOfDeletionsToAcquireNameBonus
             * @property {boolean} nameBonusSelectable BingoSchedule nameBonusSelectable
             * @property {number} prizeItemId1 BingoSchedule prizeItemId1
             * @property {number} prizeItemId2 BingoSchedule prizeItemId2
             * @property {number} prizeItemId3 BingoSchedule prizeItemId3
             */

            /**
             * Constructs a new BingoSchedule.
             * @memberof wm5.protobuf
             * @classdesc Represents a BingoSchedule.
             * @implements IBingoSchedule
             * @constructor
             * @param {wm5.protobuf.IBingoSchedule=} [properties] Properties to set
             */
            function BingoSchedule(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * BingoSchedule id.
             * @member {number} id
             * @memberof wm5.protobuf.BingoSchedule
             * @instance
             */
            BingoSchedule.prototype.id = 0;

            /**
             * BingoSchedule announcementStartAt.
             * @member {number} announcementStartAt
             * @memberof wm5.protobuf.BingoSchedule
             * @instance
             */
            BingoSchedule.prototype.announcementStartAt = 0;

            /**
             * BingoSchedule startAt.
             * @member {number} startAt
             * @memberof wm5.protobuf.BingoSchedule
             * @instance
             */
            BingoSchedule.prototype.startAt = 0;

            /**
             * BingoSchedule endAt.
             * @member {number} endAt
             * @memberof wm5.protobuf.BingoSchedule
             * @instance
             */
            BingoSchedule.prototype.endAt = 0;

            /**
             * BingoSchedule numOfDeletionsToAcquireNameBonus.
             * @member {number} numOfDeletionsToAcquireNameBonus
             * @memberof wm5.protobuf.BingoSchedule
             * @instance
             */
            BingoSchedule.prototype.numOfDeletionsToAcquireNameBonus = 0;

            /**
             * BingoSchedule nameBonusSelectable.
             * @member {boolean} nameBonusSelectable
             * @memberof wm5.protobuf.BingoSchedule
             * @instance
             */
            BingoSchedule.prototype.nameBonusSelectable = false;

            /**
             * BingoSchedule prizeItemId1.
             * @member {number} prizeItemId1
             * @memberof wm5.protobuf.BingoSchedule
             * @instance
             */
            BingoSchedule.prototype.prizeItemId1 = 0;

            /**
             * BingoSchedule prizeItemId2.
             * @member {number} prizeItemId2
             * @memberof wm5.protobuf.BingoSchedule
             * @instance
             */
            BingoSchedule.prototype.prizeItemId2 = 0;

            /**
             * BingoSchedule prizeItemId3.
             * @member {number} prizeItemId3
             * @memberof wm5.protobuf.BingoSchedule
             * @instance
             */
            BingoSchedule.prototype.prizeItemId3 = 0;

            /**
             * Creates a new BingoSchedule instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.BingoSchedule
             * @static
             * @param {wm5.protobuf.IBingoSchedule=} [properties] Properties to set
             * @returns {wm5.protobuf.BingoSchedule} BingoSchedule instance
             */
            BingoSchedule.create = function create(properties) {
                return new BingoSchedule(properties);
            };

            /**
             * Encodes the specified BingoSchedule message. Does not implicitly {@link wm5.protobuf.BingoSchedule.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.BingoSchedule
             * @static
             * @param {wm5.protobuf.IBingoSchedule} message BingoSchedule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BingoSchedule.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.id);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.announcementStartAt);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.startAt);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.endAt);
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.numOfDeletionsToAcquireNameBonus);
                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.nameBonusSelectable);
                writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.prizeItemId1);
                writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.prizeItemId2);
                writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.prizeItemId3);
                return writer;
            };

            /**
             * Encodes the specified BingoSchedule message, length delimited. Does not implicitly {@link wm5.protobuf.BingoSchedule.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.BingoSchedule
             * @static
             * @param {wm5.protobuf.IBingoSchedule} message BingoSchedule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BingoSchedule.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a BingoSchedule message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.BingoSchedule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.BingoSchedule} BingoSchedule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BingoSchedule.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.BingoSchedule();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.id = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.announcementStartAt = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.startAt = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.endAt = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.numOfDeletionsToAcquireNameBonus = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.nameBonusSelectable = reader.bool();
                            break;
                        }
                    case 7: {
                            message.prizeItemId1 = reader.uint32();
                            break;
                        }
                    case 8: {
                            message.prizeItemId2 = reader.uint32();
                            break;
                        }
                    case 9: {
                            message.prizeItemId3 = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("id"))
                    throw $util.ProtocolError("missing required 'id'", { instance: message });
                if (!message.hasOwnProperty("announcementStartAt"))
                    throw $util.ProtocolError("missing required 'announcementStartAt'", { instance: message });
                if (!message.hasOwnProperty("startAt"))
                    throw $util.ProtocolError("missing required 'startAt'", { instance: message });
                if (!message.hasOwnProperty("endAt"))
                    throw $util.ProtocolError("missing required 'endAt'", { instance: message });
                if (!message.hasOwnProperty("numOfDeletionsToAcquireNameBonus"))
                    throw $util.ProtocolError("missing required 'numOfDeletionsToAcquireNameBonus'", { instance: message });
                if (!message.hasOwnProperty("nameBonusSelectable"))
                    throw $util.ProtocolError("missing required 'nameBonusSelectable'", { instance: message });
                if (!message.hasOwnProperty("prizeItemId1"))
                    throw $util.ProtocolError("missing required 'prizeItemId1'", { instance: message });
                if (!message.hasOwnProperty("prizeItemId2"))
                    throw $util.ProtocolError("missing required 'prizeItemId2'", { instance: message });
                if (!message.hasOwnProperty("prizeItemId3"))
                    throw $util.ProtocolError("missing required 'prizeItemId3'", { instance: message });
                return message;
            };

            /**
             * Decodes a BingoSchedule message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.BingoSchedule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.BingoSchedule} BingoSchedule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BingoSchedule.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a BingoSchedule message.
             * @function verify
             * @memberof wm5.protobuf.BingoSchedule
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            BingoSchedule.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.id))
                    return "id: integer expected";
                if (!$util.isInteger(message.announcementStartAt))
                    return "announcementStartAt: integer expected";
                if (!$util.isInteger(message.startAt))
                    return "startAt: integer expected";
                if (!$util.isInteger(message.endAt))
                    return "endAt: integer expected";
                if (!$util.isInteger(message.numOfDeletionsToAcquireNameBonus))
                    return "numOfDeletionsToAcquireNameBonus: integer expected";
                if (typeof message.nameBonusSelectable !== "boolean")
                    return "nameBonusSelectable: boolean expected";
                if (!$util.isInteger(message.prizeItemId1))
                    return "prizeItemId1: integer expected";
                if (!$util.isInteger(message.prizeItemId2))
                    return "prizeItemId2: integer expected";
                if (!$util.isInteger(message.prizeItemId3))
                    return "prizeItemId3: integer expected";
                return null;
            };

            /**
             * Creates a BingoSchedule message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.BingoSchedule
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.BingoSchedule} BingoSchedule
             */
            BingoSchedule.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.BingoSchedule)
                    return object;
                let message = new $root.wm5.protobuf.BingoSchedule();
                if (object.id != null)
                    message.id = object.id >>> 0;
                if (object.announcementStartAt != null)
                    message.announcementStartAt = object.announcementStartAt >>> 0;
                if (object.startAt != null)
                    message.startAt = object.startAt >>> 0;
                if (object.endAt != null)
                    message.endAt = object.endAt >>> 0;
                if (object.numOfDeletionsToAcquireNameBonus != null)
                    message.numOfDeletionsToAcquireNameBonus = object.numOfDeletionsToAcquireNameBonus >>> 0;
                if (object.nameBonusSelectable != null)
                    message.nameBonusSelectable = Boolean(object.nameBonusSelectable);
                if (object.prizeItemId1 != null)
                    message.prizeItemId1 = object.prizeItemId1 >>> 0;
                if (object.prizeItemId2 != null)
                    message.prizeItemId2 = object.prizeItemId2 >>> 0;
                if (object.prizeItemId3 != null)
                    message.prizeItemId3 = object.prizeItemId3 >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a BingoSchedule message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.BingoSchedule
             * @static
             * @param {wm5.protobuf.BingoSchedule} message BingoSchedule
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            BingoSchedule.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.id = 0;
                    object.announcementStartAt = 0;
                    object.startAt = 0;
                    object.endAt = 0;
                    object.numOfDeletionsToAcquireNameBonus = 0;
                    object.nameBonusSelectable = false;
                    object.prizeItemId1 = 0;
                    object.prizeItemId2 = 0;
                    object.prizeItemId3 = 0;
                }
                if (message.id != null && message.hasOwnProperty("id"))
                    object.id = message.id;
                if (message.announcementStartAt != null && message.hasOwnProperty("announcementStartAt"))
                    object.announcementStartAt = message.announcementStartAt;
                if (message.startAt != null && message.hasOwnProperty("startAt"))
                    object.startAt = message.startAt;
                if (message.endAt != null && message.hasOwnProperty("endAt"))
                    object.endAt = message.endAt;
                if (message.numOfDeletionsToAcquireNameBonus != null && message.hasOwnProperty("numOfDeletionsToAcquireNameBonus"))
                    object.numOfDeletionsToAcquireNameBonus = message.numOfDeletionsToAcquireNameBonus;
                if (message.nameBonusSelectable != null && message.hasOwnProperty("nameBonusSelectable"))
                    object.nameBonusSelectable = message.nameBonusSelectable;
                if (message.prizeItemId1 != null && message.hasOwnProperty("prizeItemId1"))
                    object.prizeItemId1 = message.prizeItemId1;
                if (message.prizeItemId2 != null && message.hasOwnProperty("prizeItemId2"))
                    object.prizeItemId2 = message.prizeItemId2;
                if (message.prizeItemId3 != null && message.hasOwnProperty("prizeItemId3"))
                    object.prizeItemId3 = message.prizeItemId3;
                return object;
            };

            /**
             * Converts this BingoSchedule to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.BingoSchedule
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            BingoSchedule.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for BingoSchedule
             * @function getTypeUrl
             * @memberof wm5.protobuf.BingoSchedule
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            BingoSchedule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.BingoSchedule";
            };

            return BingoSchedule;
        })();

        protobuf.BingoCard = (function() {

            /**
             * Properties of a BingoCard.
             * @memberof wm5.protobuf
             * @interface IBingoCard
             * @property {number} numOfSquares BingoCard numOfSquares
             * @property {Array.<string>|null} [sheet] BingoCard sheet
             * @property {boolean|null} [completed] BingoCard completed
             * @property {number|null} [bingoCardId] BingoCard bingoCardId
             */

            /**
             * Constructs a new BingoCard.
             * @memberof wm5.protobuf
             * @classdesc Represents a BingoCard.
             * @implements IBingoCard
             * @constructor
             * @param {wm5.protobuf.IBingoCard=} [properties] Properties to set
             */
            function BingoCard(properties) {
                this.sheet = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * BingoCard numOfSquares.
             * @member {number} numOfSquares
             * @memberof wm5.protobuf.BingoCard
             * @instance
             */
            BingoCard.prototype.numOfSquares = 0;

            /**
             * BingoCard sheet.
             * @member {Array.<string>} sheet
             * @memberof wm5.protobuf.BingoCard
             * @instance
             */
            BingoCard.prototype.sheet = $util.emptyArray;

            /**
             * BingoCard completed.
             * @member {boolean} completed
             * @memberof wm5.protobuf.BingoCard
             * @instance
             */
            BingoCard.prototype.completed = false;

            /**
             * BingoCard bingoCardId.
             * @member {number} bingoCardId
             * @memberof wm5.protobuf.BingoCard
             * @instance
             */
            BingoCard.prototype.bingoCardId = 0;

            /**
             * Creates a new BingoCard instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.BingoCard
             * @static
             * @param {wm5.protobuf.IBingoCard=} [properties] Properties to set
             * @returns {wm5.protobuf.BingoCard} BingoCard instance
             */
            BingoCard.create = function create(properties) {
                return new BingoCard(properties);
            };

            /**
             * Encodes the specified BingoCard message. Does not implicitly {@link wm5.protobuf.BingoCard.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.BingoCard
             * @static
             * @param {wm5.protobuf.IBingoCard} message BingoCard message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BingoCard.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.numOfSquares);
                if (message.sheet != null && message.sheet.length)
                    for (let i = 0; i < message.sheet.length; ++i)
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.sheet[i]);
                if (message.completed != null && Object.hasOwnProperty.call(message, "completed"))
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.completed);
                if (message.bingoCardId != null && Object.hasOwnProperty.call(message, "bingoCardId"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.bingoCardId);
                return writer;
            };

            /**
             * Encodes the specified BingoCard message, length delimited. Does not implicitly {@link wm5.protobuf.BingoCard.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.BingoCard
             * @static
             * @param {wm5.protobuf.IBingoCard} message BingoCard message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BingoCard.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a BingoCard message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.BingoCard
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.BingoCard} BingoCard
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BingoCard.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.BingoCard();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.numOfSquares = reader.uint32();
                            break;
                        }
                    case 2: {
                            if (!(message.sheet && message.sheet.length))
                                message.sheet = [];
                            message.sheet.push(reader.string());
                            break;
                        }
                    case 3: {
                            message.completed = reader.bool();
                            break;
                        }
                    case 4: {
                            message.bingoCardId = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("numOfSquares"))
                    throw $util.ProtocolError("missing required 'numOfSquares'", { instance: message });
                return message;
            };

            /**
             * Decodes a BingoCard message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.BingoCard
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.BingoCard} BingoCard
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BingoCard.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a BingoCard message.
             * @function verify
             * @memberof wm5.protobuf.BingoCard
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            BingoCard.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.numOfSquares))
                    return "numOfSquares: integer expected";
                if (message.sheet != null && message.hasOwnProperty("sheet")) {
                    if (!Array.isArray(message.sheet))
                        return "sheet: array expected";
                    for (let i = 0; i < message.sheet.length; ++i)
                        if (!$util.isString(message.sheet[i]))
                            return "sheet: string[] expected";
                }
                if (message.completed != null && message.hasOwnProperty("completed"))
                    if (typeof message.completed !== "boolean")
                        return "completed: boolean expected";
                if (message.bingoCardId != null && message.hasOwnProperty("bingoCardId"))
                    if (!$util.isInteger(message.bingoCardId))
                        return "bingoCardId: integer expected";
                return null;
            };

            /**
             * Creates a BingoCard message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.BingoCard
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.BingoCard} BingoCard
             */
            BingoCard.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.BingoCard)
                    return object;
                let message = new $root.wm5.protobuf.BingoCard();
                if (object.numOfSquares != null)
                    message.numOfSquares = object.numOfSquares >>> 0;
                if (object.sheet) {
                    if (!Array.isArray(object.sheet))
                        throw TypeError(".wm5.protobuf.BingoCard.sheet: array expected");
                    message.sheet = [];
                    for (let i = 0; i < object.sheet.length; ++i)
                        message.sheet[i] = String(object.sheet[i]);
                }
                if (object.completed != null)
                    message.completed = Boolean(object.completed);
                if (object.bingoCardId != null)
                    message.bingoCardId = object.bingoCardId >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a BingoCard message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.BingoCard
             * @static
             * @param {wm5.protobuf.BingoCard} message BingoCard
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            BingoCard.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.sheet = [];
                if (options.defaults) {
                    object.numOfSquares = 0;
                    object.completed = false;
                    object.bingoCardId = 0;
                }
                if (message.numOfSquares != null && message.hasOwnProperty("numOfSquares"))
                    object.numOfSquares = message.numOfSquares;
                if (message.sheet && message.sheet.length) {
                    object.sheet = [];
                    for (let j = 0; j < message.sheet.length; ++j)
                        object.sheet[j] = message.sheet[j];
                }
                if (message.completed != null && message.hasOwnProperty("completed"))
                    object.completed = message.completed;
                if (message.bingoCardId != null && message.hasOwnProperty("bingoCardId"))
                    object.bingoCardId = message.bingoCardId;
                return object;
            };

            /**
             * Converts this BingoCard to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.BingoCard
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            BingoCard.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for BingoCard
             * @function getTypeUrl
             * @memberof wm5.protobuf.BingoCard
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            BingoCard.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.BingoCard";
            };

            return BingoCard;
        })();

        protobuf.CarCampaignSchedule = (function() {

            /**
             * Properties of a CarCampaignSchedule.
             * @memberof wm5.protobuf
             * @interface ICarCampaignSchedule
             * @property {number} campaignId CarCampaignSchedule campaignId
             * @property {number} announcementStartAt CarCampaignSchedule announcementStartAt
             * @property {number} startAt CarCampaignSchedule startAt
             * @property {number} endAt CarCampaignSchedule endAt
             */

            /**
             * Constructs a new CarCampaignSchedule.
             * @memberof wm5.protobuf
             * @classdesc Represents a CarCampaignSchedule.
             * @implements ICarCampaignSchedule
             * @constructor
             * @param {wm5.protobuf.ICarCampaignSchedule=} [properties] Properties to set
             */
            function CarCampaignSchedule(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CarCampaignSchedule campaignId.
             * @member {number} campaignId
             * @memberof wm5.protobuf.CarCampaignSchedule
             * @instance
             */
            CarCampaignSchedule.prototype.campaignId = 0;

            /**
             * CarCampaignSchedule announcementStartAt.
             * @member {number} announcementStartAt
             * @memberof wm5.protobuf.CarCampaignSchedule
             * @instance
             */
            CarCampaignSchedule.prototype.announcementStartAt = 0;

            /**
             * CarCampaignSchedule startAt.
             * @member {number} startAt
             * @memberof wm5.protobuf.CarCampaignSchedule
             * @instance
             */
            CarCampaignSchedule.prototype.startAt = 0;

            /**
             * CarCampaignSchedule endAt.
             * @member {number} endAt
             * @memberof wm5.protobuf.CarCampaignSchedule
             * @instance
             */
            CarCampaignSchedule.prototype.endAt = 0;

            /**
             * Creates a new CarCampaignSchedule instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CarCampaignSchedule
             * @static
             * @param {wm5.protobuf.ICarCampaignSchedule=} [properties] Properties to set
             * @returns {wm5.protobuf.CarCampaignSchedule} CarCampaignSchedule instance
             */
            CarCampaignSchedule.create = function create(properties) {
                return new CarCampaignSchedule(properties);
            };

            /**
             * Encodes the specified CarCampaignSchedule message. Does not implicitly {@link wm5.protobuf.CarCampaignSchedule.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CarCampaignSchedule
             * @static
             * @param {wm5.protobuf.ICarCampaignSchedule} message CarCampaignSchedule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CarCampaignSchedule.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.campaignId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.announcementStartAt);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.startAt);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.endAt);
                return writer;
            };

            /**
             * Encodes the specified CarCampaignSchedule message, length delimited. Does not implicitly {@link wm5.protobuf.CarCampaignSchedule.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CarCampaignSchedule
             * @static
             * @param {wm5.protobuf.ICarCampaignSchedule} message CarCampaignSchedule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CarCampaignSchedule.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CarCampaignSchedule message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CarCampaignSchedule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CarCampaignSchedule} CarCampaignSchedule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CarCampaignSchedule.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CarCampaignSchedule();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.campaignId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.announcementStartAt = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.startAt = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.endAt = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("campaignId"))
                    throw $util.ProtocolError("missing required 'campaignId'", { instance: message });
                if (!message.hasOwnProperty("announcementStartAt"))
                    throw $util.ProtocolError("missing required 'announcementStartAt'", { instance: message });
                if (!message.hasOwnProperty("startAt"))
                    throw $util.ProtocolError("missing required 'startAt'", { instance: message });
                if (!message.hasOwnProperty("endAt"))
                    throw $util.ProtocolError("missing required 'endAt'", { instance: message });
                return message;
            };

            /**
             * Decodes a CarCampaignSchedule message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CarCampaignSchedule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CarCampaignSchedule} CarCampaignSchedule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CarCampaignSchedule.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CarCampaignSchedule message.
             * @function verify
             * @memberof wm5.protobuf.CarCampaignSchedule
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CarCampaignSchedule.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.campaignId))
                    return "campaignId: integer expected";
                if (!$util.isInteger(message.announcementStartAt))
                    return "announcementStartAt: integer expected";
                if (!$util.isInteger(message.startAt))
                    return "startAt: integer expected";
                if (!$util.isInteger(message.endAt))
                    return "endAt: integer expected";
                return null;
            };

            /**
             * Creates a CarCampaignSchedule message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CarCampaignSchedule
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CarCampaignSchedule} CarCampaignSchedule
             */
            CarCampaignSchedule.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CarCampaignSchedule)
                    return object;
                let message = new $root.wm5.protobuf.CarCampaignSchedule();
                if (object.campaignId != null)
                    message.campaignId = object.campaignId >>> 0;
                if (object.announcementStartAt != null)
                    message.announcementStartAt = object.announcementStartAt >>> 0;
                if (object.startAt != null)
                    message.startAt = object.startAt >>> 0;
                if (object.endAt != null)
                    message.endAt = object.endAt >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a CarCampaignSchedule message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CarCampaignSchedule
             * @static
             * @param {wm5.protobuf.CarCampaignSchedule} message CarCampaignSchedule
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CarCampaignSchedule.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.campaignId = 0;
                    object.announcementStartAt = 0;
                    object.startAt = 0;
                    object.endAt = 0;
                }
                if (message.campaignId != null && message.hasOwnProperty("campaignId"))
                    object.campaignId = message.campaignId;
                if (message.announcementStartAt != null && message.hasOwnProperty("announcementStartAt"))
                    object.announcementStartAt = message.announcementStartAt;
                if (message.startAt != null && message.hasOwnProperty("startAt"))
                    object.startAt = message.startAt;
                if (message.endAt != null && message.hasOwnProperty("endAt"))
                    object.endAt = message.endAt;
                return object;
            };

            /**
             * Converts this CarCampaignSchedule to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CarCampaignSchedule
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CarCampaignSchedule.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CarCampaignSchedule
             * @function getTypeUrl
             * @memberof wm5.protobuf.CarCampaignSchedule
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CarCampaignSchedule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CarCampaignSchedule";
            };

            return CarCampaignSchedule;
        })();

        protobuf.ScratchSheet = (function() {

            /**
             * Properties of a ScratchSheet.
             * @memberof wm5.protobuf
             * @interface IScratchSheet
             * @property {Array.<wm5.protobuf.ScratchSheet.IScratchSquare>|null} [squares] ScratchSheet squares
             */

            /**
             * Constructs a new ScratchSheet.
             * @memberof wm5.protobuf
             * @classdesc Represents a ScratchSheet.
             * @implements IScratchSheet
             * @constructor
             * @param {wm5.protobuf.IScratchSheet=} [properties] Properties to set
             */
            function ScratchSheet(properties) {
                this.squares = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ScratchSheet squares.
             * @member {Array.<wm5.protobuf.ScratchSheet.IScratchSquare>} squares
             * @memberof wm5.protobuf.ScratchSheet
             * @instance
             */
            ScratchSheet.prototype.squares = $util.emptyArray;

            /**
             * Creates a new ScratchSheet instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.ScratchSheet
             * @static
             * @param {wm5.protobuf.IScratchSheet=} [properties] Properties to set
             * @returns {wm5.protobuf.ScratchSheet} ScratchSheet instance
             */
            ScratchSheet.create = function create(properties) {
                return new ScratchSheet(properties);
            };

            /**
             * Encodes the specified ScratchSheet message. Does not implicitly {@link wm5.protobuf.ScratchSheet.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.ScratchSheet
             * @static
             * @param {wm5.protobuf.IScratchSheet} message ScratchSheet message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ScratchSheet.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.squares != null && message.squares.length)
                    for (let i = 0; i < message.squares.length; ++i)
                        $root.wm5.protobuf.ScratchSheet.ScratchSquare.encode(message.squares[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified ScratchSheet message, length delimited. Does not implicitly {@link wm5.protobuf.ScratchSheet.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.ScratchSheet
             * @static
             * @param {wm5.protobuf.IScratchSheet} message ScratchSheet message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ScratchSheet.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a ScratchSheet message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.ScratchSheet
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.ScratchSheet} ScratchSheet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ScratchSheet.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.ScratchSheet();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.squares && message.squares.length))
                                message.squares = [];
                            message.squares.push($root.wm5.protobuf.ScratchSheet.ScratchSquare.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a ScratchSheet message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.ScratchSheet
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.ScratchSheet} ScratchSheet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ScratchSheet.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a ScratchSheet message.
             * @function verify
             * @memberof wm5.protobuf.ScratchSheet
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ScratchSheet.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.squares != null && message.hasOwnProperty("squares")) {
                    if (!Array.isArray(message.squares))
                        return "squares: array expected";
                    for (let i = 0; i < message.squares.length; ++i) {
                        let error = $root.wm5.protobuf.ScratchSheet.ScratchSquare.verify(message.squares[i]);
                        if (error)
                            return "squares." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a ScratchSheet message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.ScratchSheet
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.ScratchSheet} ScratchSheet
             */
            ScratchSheet.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.ScratchSheet)
                    return object;
                let message = new $root.wm5.protobuf.ScratchSheet();
                if (object.squares) {
                    if (!Array.isArray(object.squares))
                        throw TypeError(".wm5.protobuf.ScratchSheet.squares: array expected");
                    message.squares = [];
                    for (let i = 0; i < object.squares.length; ++i) {
                        if (typeof object.squares[i] !== "object")
                            throw TypeError(".wm5.protobuf.ScratchSheet.squares: object expected");
                        message.squares[i] = $root.wm5.protobuf.ScratchSheet.ScratchSquare.fromObject(object.squares[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a ScratchSheet message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.ScratchSheet
             * @static
             * @param {wm5.protobuf.ScratchSheet} message ScratchSheet
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ScratchSheet.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.squares = [];
                if (message.squares && message.squares.length) {
                    object.squares = [];
                    for (let j = 0; j < message.squares.length; ++j)
                        object.squares[j] = $root.wm5.protobuf.ScratchSheet.ScratchSquare.toObject(message.squares[j], options);
                }
                return object;
            };

            /**
             * Converts this ScratchSheet to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.ScratchSheet
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ScratchSheet.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ScratchSheet
             * @function getTypeUrl
             * @memberof wm5.protobuf.ScratchSheet
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ScratchSheet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.ScratchSheet";
            };

            ScratchSheet.ScratchSquare = (function() {

                /**
                 * Properties of a ScratchSquare.
                 * @memberof wm5.protobuf.ScratchSheet
                 * @interface IScratchSquare
                 * @property {wm5.protobuf.ItemCategory} category ScratchSquare category
                 * @property {number} itemId ScratchSquare itemId
                 * @property {boolean} earned ScratchSquare earned
                 */

                /**
                 * Constructs a new ScratchSquare.
                 * @memberof wm5.protobuf.ScratchSheet
                 * @classdesc Represents a ScratchSquare.
                 * @implements IScratchSquare
                 * @constructor
                 * @param {wm5.protobuf.ScratchSheet.IScratchSquare=} [properties] Properties to set
                 */
                function ScratchSquare(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * ScratchSquare category.
                 * @member {wm5.protobuf.ItemCategory} category
                 * @memberof wm5.protobuf.ScratchSheet.ScratchSquare
                 * @instance
                 */
                ScratchSquare.prototype.category = 1;

                /**
                 * ScratchSquare itemId.
                 * @member {number} itemId
                 * @memberof wm5.protobuf.ScratchSheet.ScratchSquare
                 * @instance
                 */
                ScratchSquare.prototype.itemId = 0;

                /**
                 * ScratchSquare earned.
                 * @member {boolean} earned
                 * @memberof wm5.protobuf.ScratchSheet.ScratchSquare
                 * @instance
                 */
                ScratchSquare.prototype.earned = false;

                /**
                 * Creates a new ScratchSquare instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.ScratchSheet.ScratchSquare
                 * @static
                 * @param {wm5.protobuf.ScratchSheet.IScratchSquare=} [properties] Properties to set
                 * @returns {wm5.protobuf.ScratchSheet.ScratchSquare} ScratchSquare instance
                 */
                ScratchSquare.create = function create(properties) {
                    return new ScratchSquare(properties);
                };

                /**
                 * Encodes the specified ScratchSquare message. Does not implicitly {@link wm5.protobuf.ScratchSheet.ScratchSquare.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.ScratchSheet.ScratchSquare
                 * @static
                 * @param {wm5.protobuf.ScratchSheet.IScratchSquare} message ScratchSquare message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ScratchSquare.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.category);
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.itemId);
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.earned);
                    return writer;
                };

                /**
                 * Encodes the specified ScratchSquare message, length delimited. Does not implicitly {@link wm5.protobuf.ScratchSheet.ScratchSquare.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.ScratchSheet.ScratchSquare
                 * @static
                 * @param {wm5.protobuf.ScratchSheet.IScratchSquare} message ScratchSquare message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ScratchSquare.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a ScratchSquare message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.ScratchSheet.ScratchSquare
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.ScratchSheet.ScratchSquare} ScratchSquare
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ScratchSquare.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.ScratchSheet.ScratchSquare();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.category = reader.int32();
                                break;
                            }
                        case 2: {
                                message.itemId = reader.uint32();
                                break;
                            }
                        case 3: {
                                message.earned = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("category"))
                        throw $util.ProtocolError("missing required 'category'", { instance: message });
                    if (!message.hasOwnProperty("itemId"))
                        throw $util.ProtocolError("missing required 'itemId'", { instance: message });
                    if (!message.hasOwnProperty("earned"))
                        throw $util.ProtocolError("missing required 'earned'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a ScratchSquare message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.ScratchSheet.ScratchSquare
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.ScratchSheet.ScratchSquare} ScratchSquare
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ScratchSquare.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a ScratchSquare message.
                 * @function verify
                 * @memberof wm5.protobuf.ScratchSheet.ScratchSquare
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ScratchSquare.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    switch (message.category) {
                    default:
                        return "category: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 201:
                    case 202:
                        break;
                    }
                    if (!$util.isInteger(message.itemId))
                        return "itemId: integer expected";
                    if (typeof message.earned !== "boolean")
                        return "earned: boolean expected";
                    return null;
                };

                /**
                 * Creates a ScratchSquare message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.ScratchSheet.ScratchSquare
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.ScratchSheet.ScratchSquare} ScratchSquare
                 */
                ScratchSquare.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.ScratchSheet.ScratchSquare)
                        return object;
                    let message = new $root.wm5.protobuf.ScratchSheet.ScratchSquare();
                    switch (object.category) {
                    default:
                        if (typeof object.category === "number") {
                            message.category = object.category;
                            break;
                        }
                        break;
                    case "CAT_CUSTOM_COLOR":
                    case 1:
                        message.category = 1;
                        break;
                    case "CAT_WHEEL":
                    case 2:
                        message.category = 2;
                        break;
                    case "CAT_AERO":
                    case 3:
                        message.category = 3;
                        break;
                    case "CAT_BONNET":
                    case 4:
                        message.category = 4;
                        break;
                    case "CAT_WING":
                    case 5:
                        message.category = 5;
                        break;
                    case "CAT_MIRROR":
                    case 6:
                        message.category = 6;
                        break;
                    case "CAT_STICKER":
                    case 7:
                        message.category = 7;
                        break;
                    case "CAT_NEON":
                    case 8:
                        message.category = 8;
                        break;
                    case "CAT_TRUNK":
                    case 9:
                        message.category = 9;
                        break;
                    case "CAT_NUMBER_PLATE":
                    case 10:
                        message.category = 10;
                        break;
                    case "CAT_SPECIAL_STICKER":
                    case 11:
                        message.category = 11;
                        break;
                    case "CAT_GT_WING":
                    case 12:
                        message.category = 12;
                        break;
                    case "CAT_MINI_STICKER":
                    case 13:
                        message.category = 13;
                        break;
                    case "CAT_AURA_MOTIF":
                    case 14:
                        message.category = 14;
                        break;
                    case "CAT_METER":
                    case 15:
                        message.category = 15;
                        break;
                    case "CAT_BGM":
                    case 16:
                        message.category = 16;
                        break;
                    case "CAT_NAME_PLATE":
                    case 17:
                        message.category = 17;
                        break;
                    case "CAT_NAME_FRAME":
                    case 18:
                        message.category = 18;
                        break;
                    case "CAT_NUMBER":
                    case 19:
                        message.category = 19;
                        break;
                    case "CAT_CHAR_EFFECT":
                    case 20:
                        message.category = 20;
                        break;
                    case "CAT_MOTION_EFFECT":
                    case 21:
                        message.category = 21;
                        break;
                    case "CAT_BGM_TRACK":
                    case 22:
                        message.category = 22;
                        break;
                    case "CAT_SIDE_STICKER":
                    case 23:
                        message.category = 23;
                        break;
                    case "CAT_ROOF_STICKER":
                    case 24:
                        message.category = 24;
                        break;
                    case "CAT_TEAM_DECORATION":
                    case 25:
                        message.category = 25;
                        break;
                    case "CAT_RIVAL_MARKER":
                    case 26:
                        message.category = 26;
                        break;
                    case "CAT_STAMP":
                    case 27:
                        message.category = 27;
                        break;
                    case "CAT_TERMINAL_BACKGROUND":
                    case 28:
                        message.category = 28;
                        break;
                    case "CAT_CAR_TICKET":
                    case 201:
                        message.category = 201;
                        break;
                    case "CAT_CONSUMPTION_ITEM":
                    case 202:
                        message.category = 202;
                        break;
                    }
                    if (object.itemId != null)
                        message.itemId = object.itemId >>> 0;
                    if (object.earned != null)
                        message.earned = Boolean(object.earned);
                    return message;
                };

                /**
                 * Creates a plain object from a ScratchSquare message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.ScratchSheet.ScratchSquare
                 * @static
                 * @param {wm5.protobuf.ScratchSheet.ScratchSquare} message ScratchSquare
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ScratchSquare.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.category = options.enums === String ? "CAT_CUSTOM_COLOR" : 1;
                        object.itemId = 0;
                        object.earned = false;
                    }
                    if (message.category != null && message.hasOwnProperty("category"))
                        object.category = options.enums === String ? $root.wm5.protobuf.ItemCategory[message.category] === undefined ? message.category : $root.wm5.protobuf.ItemCategory[message.category] : message.category;
                    if (message.itemId != null && message.hasOwnProperty("itemId"))
                        object.itemId = message.itemId;
                    if (message.earned != null && message.hasOwnProperty("earned"))
                        object.earned = message.earned;
                    return object;
                };

                /**
                 * Converts this ScratchSquare to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.ScratchSheet.ScratchSquare
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ScratchSquare.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for ScratchSquare
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.ScratchSheet.ScratchSquare
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ScratchSquare.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.ScratchSheet.ScratchSquare";
                };

                return ScratchSquare;
            })();

            return ScratchSheet;
        })();

        protobuf.UserItem = (function() {

            /**
             * Properties of a UserItem.
             * @memberof wm5.protobuf
             * @interface IUserItem
             * @property {wm5.protobuf.ItemCategory} category UserItem category
             * @property {number} itemId UserItem itemId
             * @property {number|null} [userItemId] UserItem userItemId
             * @property {number|null} [earnedAt] UserItem earnedAt
             */

            /**
             * Constructs a new UserItem.
             * @memberof wm5.protobuf
             * @classdesc Represents a UserItem.
             * @implements IUserItem
             * @constructor
             * @param {wm5.protobuf.IUserItem=} [properties] Properties to set
             */
            function UserItem(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * UserItem category.
             * @member {wm5.protobuf.ItemCategory} category
             * @memberof wm5.protobuf.UserItem
             * @instance
             */
            UserItem.prototype.category = 1;

            /**
             * UserItem itemId.
             * @member {number} itemId
             * @memberof wm5.protobuf.UserItem
             * @instance
             */
            UserItem.prototype.itemId = 0;

            /**
             * UserItem userItemId.
             * @member {number} userItemId
             * @memberof wm5.protobuf.UserItem
             * @instance
             */
            UserItem.prototype.userItemId = 0;

            /**
             * UserItem earnedAt.
             * @member {number} earnedAt
             * @memberof wm5.protobuf.UserItem
             * @instance
             */
            UserItem.prototype.earnedAt = 0;

            /**
             * Creates a new UserItem instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.UserItem
             * @static
             * @param {wm5.protobuf.IUserItem=} [properties] Properties to set
             * @returns {wm5.protobuf.UserItem} UserItem instance
             */
            UserItem.create = function create(properties) {
                return new UserItem(properties);
            };

            /**
             * Encodes the specified UserItem message. Does not implicitly {@link wm5.protobuf.UserItem.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.UserItem
             * @static
             * @param {wm5.protobuf.IUserItem} message UserItem message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UserItem.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.category);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.itemId);
                if (message.userItemId != null && Object.hasOwnProperty.call(message, "userItemId"))
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.userItemId);
                if (message.earnedAt != null && Object.hasOwnProperty.call(message, "earnedAt"))
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.earnedAt);
                return writer;
            };

            /**
             * Encodes the specified UserItem message, length delimited. Does not implicitly {@link wm5.protobuf.UserItem.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.UserItem
             * @static
             * @param {wm5.protobuf.IUserItem} message UserItem message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UserItem.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a UserItem message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.UserItem
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.UserItem} UserItem
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UserItem.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.UserItem();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.category = reader.int32();
                            break;
                        }
                    case 2: {
                            message.itemId = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.userItemId = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.earnedAt = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("category"))
                    throw $util.ProtocolError("missing required 'category'", { instance: message });
                if (!message.hasOwnProperty("itemId"))
                    throw $util.ProtocolError("missing required 'itemId'", { instance: message });
                return message;
            };

            /**
             * Decodes a UserItem message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.UserItem
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.UserItem} UserItem
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UserItem.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a UserItem message.
             * @function verify
             * @memberof wm5.protobuf.UserItem
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UserItem.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.category) {
                default:
                    return "category: enum value expected";
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 201:
                case 202:
                    break;
                }
                if (!$util.isInteger(message.itemId))
                    return "itemId: integer expected";
                if (message.userItemId != null && message.hasOwnProperty("userItemId"))
                    if (!$util.isInteger(message.userItemId))
                        return "userItemId: integer expected";
                if (message.earnedAt != null && message.hasOwnProperty("earnedAt"))
                    if (!$util.isInteger(message.earnedAt))
                        return "earnedAt: integer expected";
                return null;
            };

            /**
             * Creates a UserItem message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.UserItem
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.UserItem} UserItem
             */
            UserItem.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.UserItem)
                    return object;
                let message = new $root.wm5.protobuf.UserItem();
                switch (object.category) {
                default:
                    if (typeof object.category === "number") {
                        message.category = object.category;
                        break;
                    }
                    break;
                case "CAT_CUSTOM_COLOR":
                case 1:
                    message.category = 1;
                    break;
                case "CAT_WHEEL":
                case 2:
                    message.category = 2;
                    break;
                case "CAT_AERO":
                case 3:
                    message.category = 3;
                    break;
                case "CAT_BONNET":
                case 4:
                    message.category = 4;
                    break;
                case "CAT_WING":
                case 5:
                    message.category = 5;
                    break;
                case "CAT_MIRROR":
                case 6:
                    message.category = 6;
                    break;
                case "CAT_STICKER":
                case 7:
                    message.category = 7;
                    break;
                case "CAT_NEON":
                case 8:
                    message.category = 8;
                    break;
                case "CAT_TRUNK":
                case 9:
                    message.category = 9;
                    break;
                case "CAT_NUMBER_PLATE":
                case 10:
                    message.category = 10;
                    break;
                case "CAT_SPECIAL_STICKER":
                case 11:
                    message.category = 11;
                    break;
                case "CAT_GT_WING":
                case 12:
                    message.category = 12;
                    break;
                case "CAT_MINI_STICKER":
                case 13:
                    message.category = 13;
                    break;
                case "CAT_AURA_MOTIF":
                case 14:
                    message.category = 14;
                    break;
                case "CAT_METER":
                case 15:
                    message.category = 15;
                    break;
                case "CAT_BGM":
                case 16:
                    message.category = 16;
                    break;
                case "CAT_NAME_PLATE":
                case 17:
                    message.category = 17;
                    break;
                case "CAT_NAME_FRAME":
                case 18:
                    message.category = 18;
                    break;
                case "CAT_NUMBER":
                case 19:
                    message.category = 19;
                    break;
                case "CAT_CHAR_EFFECT":
                case 20:
                    message.category = 20;
                    break;
                case "CAT_MOTION_EFFECT":
                case 21:
                    message.category = 21;
                    break;
                case "CAT_BGM_TRACK":
                case 22:
                    message.category = 22;
                    break;
                case "CAT_SIDE_STICKER":
                case 23:
                    message.category = 23;
                    break;
                case "CAT_ROOF_STICKER":
                case 24:
                    message.category = 24;
                    break;
                case "CAT_TEAM_DECORATION":
                case 25:
                    message.category = 25;
                    break;
                case "CAT_RIVAL_MARKER":
                case 26:
                    message.category = 26;
                    break;
                case "CAT_STAMP":
                case 27:
                    message.category = 27;
                    break;
                case "CAT_TERMINAL_BACKGROUND":
                case 28:
                    message.category = 28;
                    break;
                case "CAT_CAR_TICKET":
                case 201:
                    message.category = 201;
                    break;
                case "CAT_CONSUMPTION_ITEM":
                case 202:
                    message.category = 202;
                    break;
                }
                if (object.itemId != null)
                    message.itemId = object.itemId >>> 0;
                if (object.userItemId != null)
                    message.userItemId = object.userItemId >>> 0;
                if (object.earnedAt != null)
                    message.earnedAt = object.earnedAt >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a UserItem message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.UserItem
             * @static
             * @param {wm5.protobuf.UserItem} message UserItem
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UserItem.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.category = options.enums === String ? "CAT_CUSTOM_COLOR" : 1;
                    object.itemId = 0;
                    object.userItemId = 0;
                    object.earnedAt = 0;
                }
                if (message.category != null && message.hasOwnProperty("category"))
                    object.category = options.enums === String ? $root.wm5.protobuf.ItemCategory[message.category] === undefined ? message.category : $root.wm5.protobuf.ItemCategory[message.category] : message.category;
                if (message.itemId != null && message.hasOwnProperty("itemId"))
                    object.itemId = message.itemId;
                if (message.userItemId != null && message.hasOwnProperty("userItemId"))
                    object.userItemId = message.userItemId;
                if (message.earnedAt != null && message.hasOwnProperty("earnedAt"))
                    object.earnedAt = message.earnedAt;
                return object;
            };

            /**
             * Converts this UserItem to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.UserItem
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UserItem.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for UserItem
             * @function getTypeUrl
             * @memberof wm5.protobuf.UserItem
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UserItem.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.UserItem";
            };

            return UserItem;
        })();

        protobuf.InviteFriendCampaignSchedule = (function() {

            /**
             * Properties of an InviteFriendCampaignSchedule.
             * @memberof wm5.protobuf
             * @interface IInviteFriendCampaignSchedule
             * @property {number} campaignId InviteFriendCampaignSchedule campaignId
             * @property {number} startAt InviteFriendCampaignSchedule startAt
             * @property {number} endAt InviteFriendCampaignSchedule endAt
             * @property {number} couponUnreceivableAt InviteFriendCampaignSchedule couponUnreceivableAt
             */

            /**
             * Constructs a new InviteFriendCampaignSchedule.
             * @memberof wm5.protobuf
             * @classdesc Represents an InviteFriendCampaignSchedule.
             * @implements IInviteFriendCampaignSchedule
             * @constructor
             * @param {wm5.protobuf.IInviteFriendCampaignSchedule=} [properties] Properties to set
             */
            function InviteFriendCampaignSchedule(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * InviteFriendCampaignSchedule campaignId.
             * @member {number} campaignId
             * @memberof wm5.protobuf.InviteFriendCampaignSchedule
             * @instance
             */
            InviteFriendCampaignSchedule.prototype.campaignId = 0;

            /**
             * InviteFriendCampaignSchedule startAt.
             * @member {number} startAt
             * @memberof wm5.protobuf.InviteFriendCampaignSchedule
             * @instance
             */
            InviteFriendCampaignSchedule.prototype.startAt = 0;

            /**
             * InviteFriendCampaignSchedule endAt.
             * @member {number} endAt
             * @memberof wm5.protobuf.InviteFriendCampaignSchedule
             * @instance
             */
            InviteFriendCampaignSchedule.prototype.endAt = 0;

            /**
             * InviteFriendCampaignSchedule couponUnreceivableAt.
             * @member {number} couponUnreceivableAt
             * @memberof wm5.protobuf.InviteFriendCampaignSchedule
             * @instance
             */
            InviteFriendCampaignSchedule.prototype.couponUnreceivableAt = 0;

            /**
             * Creates a new InviteFriendCampaignSchedule instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.InviteFriendCampaignSchedule
             * @static
             * @param {wm5.protobuf.IInviteFriendCampaignSchedule=} [properties] Properties to set
             * @returns {wm5.protobuf.InviteFriendCampaignSchedule} InviteFriendCampaignSchedule instance
             */
            InviteFriendCampaignSchedule.create = function create(properties) {
                return new InviteFriendCampaignSchedule(properties);
            };

            /**
             * Encodes the specified InviteFriendCampaignSchedule message. Does not implicitly {@link wm5.protobuf.InviteFriendCampaignSchedule.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.InviteFriendCampaignSchedule
             * @static
             * @param {wm5.protobuf.IInviteFriendCampaignSchedule} message InviteFriendCampaignSchedule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            InviteFriendCampaignSchedule.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.campaignId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.startAt);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.endAt);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.couponUnreceivableAt);
                return writer;
            };

            /**
             * Encodes the specified InviteFriendCampaignSchedule message, length delimited. Does not implicitly {@link wm5.protobuf.InviteFriendCampaignSchedule.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.InviteFriendCampaignSchedule
             * @static
             * @param {wm5.protobuf.IInviteFriendCampaignSchedule} message InviteFriendCampaignSchedule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            InviteFriendCampaignSchedule.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an InviteFriendCampaignSchedule message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.InviteFriendCampaignSchedule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.InviteFriendCampaignSchedule} InviteFriendCampaignSchedule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            InviteFriendCampaignSchedule.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.InviteFriendCampaignSchedule();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.campaignId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.startAt = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.endAt = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.couponUnreceivableAt = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("campaignId"))
                    throw $util.ProtocolError("missing required 'campaignId'", { instance: message });
                if (!message.hasOwnProperty("startAt"))
                    throw $util.ProtocolError("missing required 'startAt'", { instance: message });
                if (!message.hasOwnProperty("endAt"))
                    throw $util.ProtocolError("missing required 'endAt'", { instance: message });
                if (!message.hasOwnProperty("couponUnreceivableAt"))
                    throw $util.ProtocolError("missing required 'couponUnreceivableAt'", { instance: message });
                return message;
            };

            /**
             * Decodes an InviteFriendCampaignSchedule message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.InviteFriendCampaignSchedule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.InviteFriendCampaignSchedule} InviteFriendCampaignSchedule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            InviteFriendCampaignSchedule.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an InviteFriendCampaignSchedule message.
             * @function verify
             * @memberof wm5.protobuf.InviteFriendCampaignSchedule
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            InviteFriendCampaignSchedule.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.campaignId))
                    return "campaignId: integer expected";
                if (!$util.isInteger(message.startAt))
                    return "startAt: integer expected";
                if (!$util.isInteger(message.endAt))
                    return "endAt: integer expected";
                if (!$util.isInteger(message.couponUnreceivableAt))
                    return "couponUnreceivableAt: integer expected";
                return null;
            };

            /**
             * Creates an InviteFriendCampaignSchedule message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.InviteFriendCampaignSchedule
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.InviteFriendCampaignSchedule} InviteFriendCampaignSchedule
             */
            InviteFriendCampaignSchedule.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.InviteFriendCampaignSchedule)
                    return object;
                let message = new $root.wm5.protobuf.InviteFriendCampaignSchedule();
                if (object.campaignId != null)
                    message.campaignId = object.campaignId >>> 0;
                if (object.startAt != null)
                    message.startAt = object.startAt >>> 0;
                if (object.endAt != null)
                    message.endAt = object.endAt >>> 0;
                if (object.couponUnreceivableAt != null)
                    message.couponUnreceivableAt = object.couponUnreceivableAt >>> 0;
                return message;
            };

            /**
             * Creates a plain object from an InviteFriendCampaignSchedule message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.InviteFriendCampaignSchedule
             * @static
             * @param {wm5.protobuf.InviteFriendCampaignSchedule} message InviteFriendCampaignSchedule
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            InviteFriendCampaignSchedule.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.campaignId = 0;
                    object.startAt = 0;
                    object.endAt = 0;
                    object.couponUnreceivableAt = 0;
                }
                if (message.campaignId != null && message.hasOwnProperty("campaignId"))
                    object.campaignId = message.campaignId;
                if (message.startAt != null && message.hasOwnProperty("startAt"))
                    object.startAt = message.startAt;
                if (message.endAt != null && message.hasOwnProperty("endAt"))
                    object.endAt = message.endAt;
                if (message.couponUnreceivableAt != null && message.hasOwnProperty("couponUnreceivableAt"))
                    object.couponUnreceivableAt = message.couponUnreceivableAt;
                return object;
            };

            /**
             * Converts this InviteFriendCampaignSchedule to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.InviteFriendCampaignSchedule
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            InviteFriendCampaignSchedule.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for InviteFriendCampaignSchedule
             * @function getTypeUrl
             * @memberof wm5.protobuf.InviteFriendCampaignSchedule
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            InviteFriendCampaignSchedule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.InviteFriendCampaignSchedule";
            };

            return InviteFriendCampaignSchedule;
        })();

        protobuf.GhostExpeditionSchedule = (function() {

            /**
             * Properties of a GhostExpeditionSchedule.
             * @memberof wm5.protobuf
             * @interface IGhostExpeditionSchedule
             * @property {number} ghostExpeditionId GhostExpeditionSchedule ghostExpeditionId
             * @property {number} startAt GhostExpeditionSchedule startAt
             * @property {number} endAt GhostExpeditionSchedule endAt
             * @property {number} aftereventEndAt GhostExpeditionSchedule aftereventEndAt
             * @property {string} opponentCountry GhostExpeditionSchedule opponentCountry
             */

            /**
             * Constructs a new GhostExpeditionSchedule.
             * @memberof wm5.protobuf
             * @classdesc Represents a GhostExpeditionSchedule.
             * @implements IGhostExpeditionSchedule
             * @constructor
             * @param {wm5.protobuf.IGhostExpeditionSchedule=} [properties] Properties to set
             */
            function GhostExpeditionSchedule(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GhostExpeditionSchedule ghostExpeditionId.
             * @member {number} ghostExpeditionId
             * @memberof wm5.protobuf.GhostExpeditionSchedule
             * @instance
             */
            GhostExpeditionSchedule.prototype.ghostExpeditionId = 0;

            /**
             * GhostExpeditionSchedule startAt.
             * @member {number} startAt
             * @memberof wm5.protobuf.GhostExpeditionSchedule
             * @instance
             */
            GhostExpeditionSchedule.prototype.startAt = 0;

            /**
             * GhostExpeditionSchedule endAt.
             * @member {number} endAt
             * @memberof wm5.protobuf.GhostExpeditionSchedule
             * @instance
             */
            GhostExpeditionSchedule.prototype.endAt = 0;

            /**
             * GhostExpeditionSchedule aftereventEndAt.
             * @member {number} aftereventEndAt
             * @memberof wm5.protobuf.GhostExpeditionSchedule
             * @instance
             */
            GhostExpeditionSchedule.prototype.aftereventEndAt = 0;

            /**
             * GhostExpeditionSchedule opponentCountry.
             * @member {string} opponentCountry
             * @memberof wm5.protobuf.GhostExpeditionSchedule
             * @instance
             */
            GhostExpeditionSchedule.prototype.opponentCountry = "";

            /**
             * Creates a new GhostExpeditionSchedule instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.GhostExpeditionSchedule
             * @static
             * @param {wm5.protobuf.IGhostExpeditionSchedule=} [properties] Properties to set
             * @returns {wm5.protobuf.GhostExpeditionSchedule} GhostExpeditionSchedule instance
             */
            GhostExpeditionSchedule.create = function create(properties) {
                return new GhostExpeditionSchedule(properties);
            };

            /**
             * Encodes the specified GhostExpeditionSchedule message. Does not implicitly {@link wm5.protobuf.GhostExpeditionSchedule.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.GhostExpeditionSchedule
             * @static
             * @param {wm5.protobuf.IGhostExpeditionSchedule} message GhostExpeditionSchedule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostExpeditionSchedule.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.ghostExpeditionId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.startAt);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.endAt);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.aftereventEndAt);
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.opponentCountry);
                return writer;
            };

            /**
             * Encodes the specified GhostExpeditionSchedule message, length delimited. Does not implicitly {@link wm5.protobuf.GhostExpeditionSchedule.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.GhostExpeditionSchedule
             * @static
             * @param {wm5.protobuf.IGhostExpeditionSchedule} message GhostExpeditionSchedule message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostExpeditionSchedule.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GhostExpeditionSchedule message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.GhostExpeditionSchedule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.GhostExpeditionSchedule} GhostExpeditionSchedule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostExpeditionSchedule.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.GhostExpeditionSchedule();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.ghostExpeditionId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.startAt = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.endAt = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.aftereventEndAt = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.opponentCountry = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("ghostExpeditionId"))
                    throw $util.ProtocolError("missing required 'ghostExpeditionId'", { instance: message });
                if (!message.hasOwnProperty("startAt"))
                    throw $util.ProtocolError("missing required 'startAt'", { instance: message });
                if (!message.hasOwnProperty("endAt"))
                    throw $util.ProtocolError("missing required 'endAt'", { instance: message });
                if (!message.hasOwnProperty("aftereventEndAt"))
                    throw $util.ProtocolError("missing required 'aftereventEndAt'", { instance: message });
                if (!message.hasOwnProperty("opponentCountry"))
                    throw $util.ProtocolError("missing required 'opponentCountry'", { instance: message });
                return message;
            };

            /**
             * Decodes a GhostExpeditionSchedule message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.GhostExpeditionSchedule
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.GhostExpeditionSchedule} GhostExpeditionSchedule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostExpeditionSchedule.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GhostExpeditionSchedule message.
             * @function verify
             * @memberof wm5.protobuf.GhostExpeditionSchedule
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GhostExpeditionSchedule.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.ghostExpeditionId))
                    return "ghostExpeditionId: integer expected";
                if (!$util.isInteger(message.startAt))
                    return "startAt: integer expected";
                if (!$util.isInteger(message.endAt))
                    return "endAt: integer expected";
                if (!$util.isInteger(message.aftereventEndAt))
                    return "aftereventEndAt: integer expected";
                if (!$util.isString(message.opponentCountry))
                    return "opponentCountry: string expected";
                return null;
            };

            /**
             * Creates a GhostExpeditionSchedule message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.GhostExpeditionSchedule
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.GhostExpeditionSchedule} GhostExpeditionSchedule
             */
            GhostExpeditionSchedule.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.GhostExpeditionSchedule)
                    return object;
                let message = new $root.wm5.protobuf.GhostExpeditionSchedule();
                if (object.ghostExpeditionId != null)
                    message.ghostExpeditionId = object.ghostExpeditionId >>> 0;
                if (object.startAt != null)
                    message.startAt = object.startAt >>> 0;
                if (object.endAt != null)
                    message.endAt = object.endAt >>> 0;
                if (object.aftereventEndAt != null)
                    message.aftereventEndAt = object.aftereventEndAt >>> 0;
                if (object.opponentCountry != null)
                    message.opponentCountry = String(object.opponentCountry);
                return message;
            };

            /**
             * Creates a plain object from a GhostExpeditionSchedule message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.GhostExpeditionSchedule
             * @static
             * @param {wm5.protobuf.GhostExpeditionSchedule} message GhostExpeditionSchedule
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GhostExpeditionSchedule.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.ghostExpeditionId = 0;
                    object.startAt = 0;
                    object.endAt = 0;
                    object.aftereventEndAt = 0;
                    object.opponentCountry = "";
                }
                if (message.ghostExpeditionId != null && message.hasOwnProperty("ghostExpeditionId"))
                    object.ghostExpeditionId = message.ghostExpeditionId;
                if (message.startAt != null && message.hasOwnProperty("startAt"))
                    object.startAt = message.startAt;
                if (message.endAt != null && message.hasOwnProperty("endAt"))
                    object.endAt = message.endAt;
                if (message.aftereventEndAt != null && message.hasOwnProperty("aftereventEndAt"))
                    object.aftereventEndAt = message.aftereventEndAt;
                if (message.opponentCountry != null && message.hasOwnProperty("opponentCountry"))
                    object.opponentCountry = message.opponentCountry;
                return object;
            };

            /**
             * Converts this GhostExpeditionSchedule to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.GhostExpeditionSchedule
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GhostExpeditionSchedule.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GhostExpeditionSchedule
             * @function getTypeUrl
             * @memberof wm5.protobuf.GhostExpeditionSchedule
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GhostExpeditionSchedule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.GhostExpeditionSchedule";
            };

            return GhostExpeditionSchedule;
        })();

        protobuf.GhostExpeditionRankingEntry = (function() {

            /**
             * Properties of a GhostExpeditionRankingEntry.
             * @memberof wm5.protobuf
             * @interface IGhostExpeditionRankingEntry
             * @property {number|null} [rank] GhostExpeditionRankingEntry rank
             * @property {number} score GhostExpeditionRankingEntry score
             * @property {wm5.protobuf.ICar} car GhostExpeditionRankingEntry car
             */

            /**
             * Constructs a new GhostExpeditionRankingEntry.
             * @memberof wm5.protobuf
             * @classdesc Represents a GhostExpeditionRankingEntry.
             * @implements IGhostExpeditionRankingEntry
             * @constructor
             * @param {wm5.protobuf.IGhostExpeditionRankingEntry=} [properties] Properties to set
             */
            function GhostExpeditionRankingEntry(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GhostExpeditionRankingEntry rank.
             * @member {number} rank
             * @memberof wm5.protobuf.GhostExpeditionRankingEntry
             * @instance
             */
            GhostExpeditionRankingEntry.prototype.rank = 0;

            /**
             * GhostExpeditionRankingEntry score.
             * @member {number} score
             * @memberof wm5.protobuf.GhostExpeditionRankingEntry
             * @instance
             */
            GhostExpeditionRankingEntry.prototype.score = 0;

            /**
             * GhostExpeditionRankingEntry car.
             * @member {wm5.protobuf.ICar} car
             * @memberof wm5.protobuf.GhostExpeditionRankingEntry
             * @instance
             */
            GhostExpeditionRankingEntry.prototype.car = null;

            /**
             * Creates a new GhostExpeditionRankingEntry instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.GhostExpeditionRankingEntry
             * @static
             * @param {wm5.protobuf.IGhostExpeditionRankingEntry=} [properties] Properties to set
             * @returns {wm5.protobuf.GhostExpeditionRankingEntry} GhostExpeditionRankingEntry instance
             */
            GhostExpeditionRankingEntry.create = function create(properties) {
                return new GhostExpeditionRankingEntry(properties);
            };

            /**
             * Encodes the specified GhostExpeditionRankingEntry message. Does not implicitly {@link wm5.protobuf.GhostExpeditionRankingEntry.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.GhostExpeditionRankingEntry
             * @static
             * @param {wm5.protobuf.IGhostExpeditionRankingEntry} message GhostExpeditionRankingEntry message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostExpeditionRankingEntry.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.rank != null && Object.hasOwnProperty.call(message, "rank"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.rank);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.score);
                $root.wm5.protobuf.Car.encode(message.car, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified GhostExpeditionRankingEntry message, length delimited. Does not implicitly {@link wm5.protobuf.GhostExpeditionRankingEntry.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.GhostExpeditionRankingEntry
             * @static
             * @param {wm5.protobuf.IGhostExpeditionRankingEntry} message GhostExpeditionRankingEntry message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostExpeditionRankingEntry.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GhostExpeditionRankingEntry message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.GhostExpeditionRankingEntry
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.GhostExpeditionRankingEntry} GhostExpeditionRankingEntry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostExpeditionRankingEntry.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.GhostExpeditionRankingEntry();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.rank = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.score = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.car = $root.wm5.protobuf.Car.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("score"))
                    throw $util.ProtocolError("missing required 'score'", { instance: message });
                if (!message.hasOwnProperty("car"))
                    throw $util.ProtocolError("missing required 'car'", { instance: message });
                return message;
            };

            /**
             * Decodes a GhostExpeditionRankingEntry message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.GhostExpeditionRankingEntry
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.GhostExpeditionRankingEntry} GhostExpeditionRankingEntry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostExpeditionRankingEntry.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GhostExpeditionRankingEntry message.
             * @function verify
             * @memberof wm5.protobuf.GhostExpeditionRankingEntry
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GhostExpeditionRankingEntry.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.rank != null && message.hasOwnProperty("rank"))
                    if (!$util.isInteger(message.rank))
                        return "rank: integer expected";
                if (!$util.isInteger(message.score))
                    return "score: integer expected";
                {
                    let error = $root.wm5.protobuf.Car.verify(message.car);
                    if (error)
                        return "car." + error;
                }
                return null;
            };

            /**
             * Creates a GhostExpeditionRankingEntry message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.GhostExpeditionRankingEntry
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.GhostExpeditionRankingEntry} GhostExpeditionRankingEntry
             */
            GhostExpeditionRankingEntry.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.GhostExpeditionRankingEntry)
                    return object;
                let message = new $root.wm5.protobuf.GhostExpeditionRankingEntry();
                if (object.rank != null)
                    message.rank = object.rank >>> 0;
                if (object.score != null)
                    message.score = object.score >>> 0;
                if (object.car != null) {
                    if (typeof object.car !== "object")
                        throw TypeError(".wm5.protobuf.GhostExpeditionRankingEntry.car: object expected");
                    message.car = $root.wm5.protobuf.Car.fromObject(object.car);
                }
                return message;
            };

            /**
             * Creates a plain object from a GhostExpeditionRankingEntry message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.GhostExpeditionRankingEntry
             * @static
             * @param {wm5.protobuf.GhostExpeditionRankingEntry} message GhostExpeditionRankingEntry
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GhostExpeditionRankingEntry.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.rank = 0;
                    object.score = 0;
                    object.car = null;
                }
                if (message.rank != null && message.hasOwnProperty("rank"))
                    object.rank = message.rank;
                if (message.score != null && message.hasOwnProperty("score"))
                    object.score = message.score;
                if (message.car != null && message.hasOwnProperty("car"))
                    object.car = $root.wm5.protobuf.Car.toObject(message.car, options);
                return object;
            };

            /**
             * Converts this GhostExpeditionRankingEntry to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.GhostExpeditionRankingEntry
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GhostExpeditionRankingEntry.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GhostExpeditionRankingEntry
             * @function getTypeUrl
             * @memberof wm5.protobuf.GhostExpeditionRankingEntry
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GhostExpeditionRankingEntry.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.GhostExpeditionRankingEntry";
            };

            return GhostExpeditionRankingEntry;
        })();

        protobuf.WantedCar = (function() {

            /**
             * Properties of a WantedCar.
             * @memberof wm5.protobuf
             * @interface IWantedCar
             * @property {wm5.protobuf.IGhostCar} ghost WantedCar ghost
             * @property {number} wantedId WantedCar wantedId
             * @property {number} bonus WantedCar bonus
             * @property {number} numOfHostages WantedCar numOfHostages
             * @property {wm5.protobuf.ICarEntry|null} [hostage] WantedCar hostage
             */

            /**
             * Constructs a new WantedCar.
             * @memberof wm5.protobuf
             * @classdesc Represents a WantedCar.
             * @implements IWantedCar
             * @constructor
             * @param {wm5.protobuf.IWantedCar=} [properties] Properties to set
             */
            function WantedCar(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * WantedCar ghost.
             * @member {wm5.protobuf.IGhostCar} ghost
             * @memberof wm5.protobuf.WantedCar
             * @instance
             */
            WantedCar.prototype.ghost = null;

            /**
             * WantedCar wantedId.
             * @member {number} wantedId
             * @memberof wm5.protobuf.WantedCar
             * @instance
             */
            WantedCar.prototype.wantedId = 0;

            /**
             * WantedCar bonus.
             * @member {number} bonus
             * @memberof wm5.protobuf.WantedCar
             * @instance
             */
            WantedCar.prototype.bonus = 0;

            /**
             * WantedCar numOfHostages.
             * @member {number} numOfHostages
             * @memberof wm5.protobuf.WantedCar
             * @instance
             */
            WantedCar.prototype.numOfHostages = 0;

            /**
             * WantedCar hostage.
             * @member {wm5.protobuf.ICarEntry|null|undefined} hostage
             * @memberof wm5.protobuf.WantedCar
             * @instance
             */
            WantedCar.prototype.hostage = null;

            /**
             * Creates a new WantedCar instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.WantedCar
             * @static
             * @param {wm5.protobuf.IWantedCar=} [properties] Properties to set
             * @returns {wm5.protobuf.WantedCar} WantedCar instance
             */
            WantedCar.create = function create(properties) {
                return new WantedCar(properties);
            };

            /**
             * Encodes the specified WantedCar message. Does not implicitly {@link wm5.protobuf.WantedCar.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.WantedCar
             * @static
             * @param {wm5.protobuf.IWantedCar} message WantedCar message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            WantedCar.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.wm5.protobuf.GhostCar.encode(message.ghost, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.wantedId);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.bonus);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.numOfHostages);
                if (message.hostage != null && Object.hasOwnProperty.call(message, "hostage"))
                    $root.wm5.protobuf.CarEntry.encode(message.hostage, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified WantedCar message, length delimited. Does not implicitly {@link wm5.protobuf.WantedCar.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.WantedCar
             * @static
             * @param {wm5.protobuf.IWantedCar} message WantedCar message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            WantedCar.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a WantedCar message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.WantedCar
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.WantedCar} WantedCar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            WantedCar.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.WantedCar();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.ghost = $root.wm5.protobuf.GhostCar.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.wantedId = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.bonus = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.numOfHostages = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.hostage = $root.wm5.protobuf.CarEntry.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("ghost"))
                    throw $util.ProtocolError("missing required 'ghost'", { instance: message });
                if (!message.hasOwnProperty("wantedId"))
                    throw $util.ProtocolError("missing required 'wantedId'", { instance: message });
                if (!message.hasOwnProperty("bonus"))
                    throw $util.ProtocolError("missing required 'bonus'", { instance: message });
                if (!message.hasOwnProperty("numOfHostages"))
                    throw $util.ProtocolError("missing required 'numOfHostages'", { instance: message });
                return message;
            };

            /**
             * Decodes a WantedCar message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.WantedCar
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.WantedCar} WantedCar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            WantedCar.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a WantedCar message.
             * @function verify
             * @memberof wm5.protobuf.WantedCar
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            WantedCar.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    let error = $root.wm5.protobuf.GhostCar.verify(message.ghost);
                    if (error)
                        return "ghost." + error;
                }
                if (!$util.isInteger(message.wantedId))
                    return "wantedId: integer expected";
                if (!$util.isInteger(message.bonus))
                    return "bonus: integer expected";
                if (!$util.isInteger(message.numOfHostages))
                    return "numOfHostages: integer expected";
                if (message.hostage != null && message.hasOwnProperty("hostage")) {
                    let error = $root.wm5.protobuf.CarEntry.verify(message.hostage);
                    if (error)
                        return "hostage." + error;
                }
                return null;
            };

            /**
             * Creates a WantedCar message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.WantedCar
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.WantedCar} WantedCar
             */
            WantedCar.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.WantedCar)
                    return object;
                let message = new $root.wm5.protobuf.WantedCar();
                if (object.ghost != null) {
                    if (typeof object.ghost !== "object")
                        throw TypeError(".wm5.protobuf.WantedCar.ghost: object expected");
                    message.ghost = $root.wm5.protobuf.GhostCar.fromObject(object.ghost);
                }
                if (object.wantedId != null)
                    message.wantedId = object.wantedId >>> 0;
                if (object.bonus != null)
                    message.bonus = object.bonus >>> 0;
                if (object.numOfHostages != null)
                    message.numOfHostages = object.numOfHostages >>> 0;
                if (object.hostage != null) {
                    if (typeof object.hostage !== "object")
                        throw TypeError(".wm5.protobuf.WantedCar.hostage: object expected");
                    message.hostage = $root.wm5.protobuf.CarEntry.fromObject(object.hostage);
                }
                return message;
            };

            /**
             * Creates a plain object from a WantedCar message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.WantedCar
             * @static
             * @param {wm5.protobuf.WantedCar} message WantedCar
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            WantedCar.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.ghost = null;
                    object.wantedId = 0;
                    object.bonus = 0;
                    object.numOfHostages = 0;
                    object.hostage = null;
                }
                if (message.ghost != null && message.hasOwnProperty("ghost"))
                    object.ghost = $root.wm5.protobuf.GhostCar.toObject(message.ghost, options);
                if (message.wantedId != null && message.hasOwnProperty("wantedId"))
                    object.wantedId = message.wantedId;
                if (message.bonus != null && message.hasOwnProperty("bonus"))
                    object.bonus = message.bonus;
                if (message.numOfHostages != null && message.hasOwnProperty("numOfHostages"))
                    object.numOfHostages = message.numOfHostages;
                if (message.hostage != null && message.hasOwnProperty("hostage"))
                    object.hostage = $root.wm5.protobuf.CarEntry.toObject(message.hostage, options);
                return object;
            };

            /**
             * Converts this WantedCar to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.WantedCar
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            WantedCar.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for WantedCar
             * @function getTypeUrl
             * @memberof wm5.protobuf.WantedCar
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            WantedCar.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.WantedCar";
            };

            return WantedCar;
        })();

        protobuf.CarEntry = (function() {

            /**
             * Properties of a CarEntry.
             * @memberof wm5.protobuf
             * @interface ICarEntry
             * @property {string} name CarEntry name
             * @property {number} level CarEntry level
             * @property {string} title CarEntry title
             * @property {number} model CarEntry model
             * @property {number} visualModel CarEntry visualModel
             * @property {number} defaultColor CarEntry defaultColor
             * @property {number|null} [score] CarEntry score
             */

            /**
             * Constructs a new CarEntry.
             * @memberof wm5.protobuf
             * @classdesc Represents a CarEntry.
             * @implements ICarEntry
             * @constructor
             * @param {wm5.protobuf.ICarEntry=} [properties] Properties to set
             */
            function CarEntry(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CarEntry name.
             * @member {string} name
             * @memberof wm5.protobuf.CarEntry
             * @instance
             */
            CarEntry.prototype.name = "";

            /**
             * CarEntry level.
             * @member {number} level
             * @memberof wm5.protobuf.CarEntry
             * @instance
             */
            CarEntry.prototype.level = 0;

            /**
             * CarEntry title.
             * @member {string} title
             * @memberof wm5.protobuf.CarEntry
             * @instance
             */
            CarEntry.prototype.title = "";

            /**
             * CarEntry model.
             * @member {number} model
             * @memberof wm5.protobuf.CarEntry
             * @instance
             */
            CarEntry.prototype.model = 0;

            /**
             * CarEntry visualModel.
             * @member {number} visualModel
             * @memberof wm5.protobuf.CarEntry
             * @instance
             */
            CarEntry.prototype.visualModel = 0;

            /**
             * CarEntry defaultColor.
             * @member {number} defaultColor
             * @memberof wm5.protobuf.CarEntry
             * @instance
             */
            CarEntry.prototype.defaultColor = 0;

            /**
             * CarEntry score.
             * @member {number} score
             * @memberof wm5.protobuf.CarEntry
             * @instance
             */
            CarEntry.prototype.score = 0;

            /**
             * Creates a new CarEntry instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CarEntry
             * @static
             * @param {wm5.protobuf.ICarEntry=} [properties] Properties to set
             * @returns {wm5.protobuf.CarEntry} CarEntry instance
             */
            CarEntry.create = function create(properties) {
                return new CarEntry(properties);
            };

            /**
             * Encodes the specified CarEntry message. Does not implicitly {@link wm5.protobuf.CarEntry.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CarEntry
             * @static
             * @param {wm5.protobuf.ICarEntry} message CarEntry message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CarEntry.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.level);
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.title);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.model);
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.visualModel);
                writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.defaultColor);
                if (message.score != null && Object.hasOwnProperty.call(message, "score"))
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.score);
                return writer;
            };

            /**
             * Encodes the specified CarEntry message, length delimited. Does not implicitly {@link wm5.protobuf.CarEntry.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CarEntry
             * @static
             * @param {wm5.protobuf.ICarEntry} message CarEntry message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CarEntry.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CarEntry message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CarEntry
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CarEntry} CarEntry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CarEntry.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CarEntry();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.name = reader.string();
                            break;
                        }
                    case 2: {
                            message.level = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.title = reader.string();
                            break;
                        }
                    case 4: {
                            message.model = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.visualModel = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.defaultColor = reader.uint32();
                            break;
                        }
                    case 7: {
                            message.score = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("name"))
                    throw $util.ProtocolError("missing required 'name'", { instance: message });
                if (!message.hasOwnProperty("level"))
                    throw $util.ProtocolError("missing required 'level'", { instance: message });
                if (!message.hasOwnProperty("title"))
                    throw $util.ProtocolError("missing required 'title'", { instance: message });
                if (!message.hasOwnProperty("model"))
                    throw $util.ProtocolError("missing required 'model'", { instance: message });
                if (!message.hasOwnProperty("visualModel"))
                    throw $util.ProtocolError("missing required 'visualModel'", { instance: message });
                if (!message.hasOwnProperty("defaultColor"))
                    throw $util.ProtocolError("missing required 'defaultColor'", { instance: message });
                return message;
            };

            /**
             * Decodes a CarEntry message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CarEntry
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CarEntry} CarEntry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CarEntry.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CarEntry message.
             * @function verify
             * @memberof wm5.protobuf.CarEntry
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CarEntry.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isString(message.name))
                    return "name: string expected";
                if (!$util.isInteger(message.level))
                    return "level: integer expected";
                if (!$util.isString(message.title))
                    return "title: string expected";
                if (!$util.isInteger(message.model))
                    return "model: integer expected";
                if (!$util.isInteger(message.visualModel))
                    return "visualModel: integer expected";
                if (!$util.isInteger(message.defaultColor))
                    return "defaultColor: integer expected";
                if (message.score != null && message.hasOwnProperty("score"))
                    if (!$util.isInteger(message.score))
                        return "score: integer expected";
                return null;
            };

            /**
             * Creates a CarEntry message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CarEntry
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CarEntry} CarEntry
             */
            CarEntry.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CarEntry)
                    return object;
                let message = new $root.wm5.protobuf.CarEntry();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.level != null)
                    message.level = object.level >>> 0;
                if (object.title != null)
                    message.title = String(object.title);
                if (object.model != null)
                    message.model = object.model >>> 0;
                if (object.visualModel != null)
                    message.visualModel = object.visualModel >>> 0;
                if (object.defaultColor != null)
                    message.defaultColor = object.defaultColor >>> 0;
                if (object.score != null)
                    message.score = object.score >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a CarEntry message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CarEntry
             * @static
             * @param {wm5.protobuf.CarEntry} message CarEntry
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CarEntry.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.name = "";
                    object.level = 0;
                    object.title = "";
                    object.model = 0;
                    object.visualModel = 0;
                    object.defaultColor = 0;
                    object.score = 0;
                }
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.level != null && message.hasOwnProperty("level"))
                    object.level = message.level;
                if (message.title != null && message.hasOwnProperty("title"))
                    object.title = message.title;
                if (message.model != null && message.hasOwnProperty("model"))
                    object.model = message.model;
                if (message.visualModel != null && message.hasOwnProperty("visualModel"))
                    object.visualModel = message.visualModel;
                if (message.defaultColor != null && message.hasOwnProperty("defaultColor"))
                    object.defaultColor = message.defaultColor;
                if (message.score != null && message.hasOwnProperty("score"))
                    object.score = message.score;
                return object;
            };

            /**
             * Converts this CarEntry to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CarEntry
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CarEntry.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CarEntry
             * @function getTypeUrl
             * @memberof wm5.protobuf.CarEntry
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CarEntry.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CarEntry";
            };

            return CarEntry;
        })();

        protobuf.GhostTrail = (function() {

            /**
             * Properties of a GhostTrail.
             * @memberof wm5.protobuf
             * @interface IGhostTrail
             * @property {number} carId GhostTrail carId
             * @property {number} area GhostTrail area
             * @property {number} ramp GhostTrail ramp
             * @property {number} playedAt GhostTrail playedAt
             * @property {wm5.protobuf.IPlace|null} [playedPlace] GhostTrail playedPlace
             * @property {Uint8Array} trail GhostTrail trail
             */

            /**
             * Constructs a new GhostTrail.
             * @memberof wm5.protobuf
             * @classdesc Represents a GhostTrail.
             * @implements IGhostTrail
             * @constructor
             * @param {wm5.protobuf.IGhostTrail=} [properties] Properties to set
             */
            function GhostTrail(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GhostTrail carId.
             * @member {number} carId
             * @memberof wm5.protobuf.GhostTrail
             * @instance
             */
            GhostTrail.prototype.carId = 0;

            /**
             * GhostTrail area.
             * @member {number} area
             * @memberof wm5.protobuf.GhostTrail
             * @instance
             */
            GhostTrail.prototype.area = 0;

            /**
             * GhostTrail ramp.
             * @member {number} ramp
             * @memberof wm5.protobuf.GhostTrail
             * @instance
             */
            GhostTrail.prototype.ramp = 0;

            /**
             * GhostTrail playedAt.
             * @member {number} playedAt
             * @memberof wm5.protobuf.GhostTrail
             * @instance
             */
            GhostTrail.prototype.playedAt = 0;

            /**
             * GhostTrail playedPlace.
             * @member {wm5.protobuf.IPlace|null|undefined} playedPlace
             * @memberof wm5.protobuf.GhostTrail
             * @instance
             */
            GhostTrail.prototype.playedPlace = null;

            /**
             * GhostTrail trail.
             * @member {Uint8Array} trail
             * @memberof wm5.protobuf.GhostTrail
             * @instance
             */
            GhostTrail.prototype.trail = $util.newBuffer([]);

            /**
             * Creates a new GhostTrail instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.GhostTrail
             * @static
             * @param {wm5.protobuf.IGhostTrail=} [properties] Properties to set
             * @returns {wm5.protobuf.GhostTrail} GhostTrail instance
             */
            GhostTrail.create = function create(properties) {
                return new GhostTrail(properties);
            };

            /**
             * Encodes the specified GhostTrail message. Does not implicitly {@link wm5.protobuf.GhostTrail.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.GhostTrail
             * @static
             * @param {wm5.protobuf.IGhostTrail} message GhostTrail message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostTrail.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.carId);
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.area);
                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.ramp);
                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.playedAt);
                if (message.playedPlace != null && Object.hasOwnProperty.call(message, "playedPlace"))
                    $root.wm5.protobuf.Place.encode(message.playedPlace, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.trail);
                return writer;
            };

            /**
             * Encodes the specified GhostTrail message, length delimited. Does not implicitly {@link wm5.protobuf.GhostTrail.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.GhostTrail
             * @static
             * @param {wm5.protobuf.IGhostTrail} message GhostTrail message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostTrail.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GhostTrail message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.GhostTrail
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.GhostTrail} GhostTrail
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostTrail.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.GhostTrail();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.carId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.area = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.ramp = reader.uint32();
                            break;
                        }
                    case 4: {
                            message.playedAt = reader.uint32();
                            break;
                        }
                    case 5: {
                            message.playedPlace = $root.wm5.protobuf.Place.decode(reader, reader.uint32());
                            break;
                        }
                    case 6: {
                            message.trail = reader.bytes();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("carId"))
                    throw $util.ProtocolError("missing required 'carId'", { instance: message });
                if (!message.hasOwnProperty("area"))
                    throw $util.ProtocolError("missing required 'area'", { instance: message });
                if (!message.hasOwnProperty("ramp"))
                    throw $util.ProtocolError("missing required 'ramp'", { instance: message });
                if (!message.hasOwnProperty("playedAt"))
                    throw $util.ProtocolError("missing required 'playedAt'", { instance: message });
                if (!message.hasOwnProperty("trail"))
                    throw $util.ProtocolError("missing required 'trail'", { instance: message });
                return message;
            };

            /**
             * Decodes a GhostTrail message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.GhostTrail
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.GhostTrail} GhostTrail
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostTrail.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GhostTrail message.
             * @function verify
             * @memberof wm5.protobuf.GhostTrail
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GhostTrail.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.carId))
                    return "carId: integer expected";
                if (!$util.isInteger(message.area))
                    return "area: integer expected";
                if (!$util.isInteger(message.ramp))
                    return "ramp: integer expected";
                if (!$util.isInteger(message.playedAt))
                    return "playedAt: integer expected";
                if (message.playedPlace != null && message.hasOwnProperty("playedPlace")) {
                    let error = $root.wm5.protobuf.Place.verify(message.playedPlace);
                    if (error)
                        return "playedPlace." + error;
                }
                if (!(message.trail && typeof message.trail.length === "number" || $util.isString(message.trail)))
                    return "trail: buffer expected";
                return null;
            };

            /**
             * Creates a GhostTrail message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.GhostTrail
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.GhostTrail} GhostTrail
             */
            GhostTrail.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.GhostTrail)
                    return object;
                let message = new $root.wm5.protobuf.GhostTrail();
                if (object.carId != null)
                    message.carId = object.carId >>> 0;
                if (object.area != null)
                    message.area = object.area >>> 0;
                if (object.ramp != null)
                    message.ramp = object.ramp >>> 0;
                if (object.playedAt != null)
                    message.playedAt = object.playedAt >>> 0;
                if (object.playedPlace != null) {
                    if (typeof object.playedPlace !== "object")
                        throw TypeError(".wm5.protobuf.GhostTrail.playedPlace: object expected");
                    message.playedPlace = $root.wm5.protobuf.Place.fromObject(object.playedPlace);
                }
                if (object.trail != null)
                    if (typeof object.trail === "string")
                        $util.base64.decode(object.trail, message.trail = $util.newBuffer($util.base64.length(object.trail)), 0);
                    else if (object.trail.length >= 0)
                        message.trail = object.trail;
                return message;
            };

            /**
             * Creates a plain object from a GhostTrail message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.GhostTrail
             * @static
             * @param {wm5.protobuf.GhostTrail} message GhostTrail
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GhostTrail.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.carId = 0;
                    object.area = 0;
                    object.ramp = 0;
                    object.playedAt = 0;
                    object.playedPlace = null;
                    if (options.bytes === String)
                        object.trail = "";
                    else {
                        object.trail = [];
                        if (options.bytes !== Array)
                            object.trail = $util.newBuffer(object.trail);
                    }
                }
                if (message.carId != null && message.hasOwnProperty("carId"))
                    object.carId = message.carId;
                if (message.area != null && message.hasOwnProperty("area"))
                    object.area = message.area;
                if (message.ramp != null && message.hasOwnProperty("ramp"))
                    object.ramp = message.ramp;
                if (message.playedAt != null && message.hasOwnProperty("playedAt"))
                    object.playedAt = message.playedAt;
                if (message.playedPlace != null && message.hasOwnProperty("playedPlace"))
                    object.playedPlace = $root.wm5.protobuf.Place.toObject(message.playedPlace, options);
                if (message.trail != null && message.hasOwnProperty("trail"))
                    object.trail = options.bytes === String ? $util.base64.encode(message.trail, 0, message.trail.length) : options.bytes === Array ? Array.prototype.slice.call(message.trail) : message.trail;
                return object;
            };

            /**
             * Converts this GhostTrail to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.GhostTrail
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GhostTrail.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GhostTrail
             * @function getTypeUrl
             * @memberof wm5.protobuf.GhostTrail
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GhostTrail.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.GhostTrail";
            };

            return GhostTrail;
        })();

        protobuf.PlaceList = (function() {

            /**
             * Properties of a PlaceList.
             * @memberof wm5.protobuf
             * @interface IPlaceList
             * @property {Array.<wm5.protobuf.IPlace>|null} [places] PlaceList places
             */

            /**
             * Constructs a new PlaceList.
             * @memberof wm5.protobuf
             * @classdesc Represents a PlaceList.
             * @implements IPlaceList
             * @constructor
             * @param {wm5.protobuf.IPlaceList=} [properties] Properties to set
             */
            function PlaceList(properties) {
                this.places = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * PlaceList places.
             * @member {Array.<wm5.protobuf.IPlace>} places
             * @memberof wm5.protobuf.PlaceList
             * @instance
             */
            PlaceList.prototype.places = $util.emptyArray;

            /**
             * Creates a new PlaceList instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.PlaceList
             * @static
             * @param {wm5.protobuf.IPlaceList=} [properties] Properties to set
             * @returns {wm5.protobuf.PlaceList} PlaceList instance
             */
            PlaceList.create = function create(properties) {
                return new PlaceList(properties);
            };

            /**
             * Encodes the specified PlaceList message. Does not implicitly {@link wm5.protobuf.PlaceList.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.PlaceList
             * @static
             * @param {wm5.protobuf.IPlaceList} message PlaceList message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PlaceList.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.places != null && message.places.length)
                    for (let i = 0; i < message.places.length; ++i)
                        $root.wm5.protobuf.Place.encode(message.places[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified PlaceList message, length delimited. Does not implicitly {@link wm5.protobuf.PlaceList.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.PlaceList
             * @static
             * @param {wm5.protobuf.IPlaceList} message PlaceList message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            PlaceList.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a PlaceList message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.PlaceList
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.PlaceList} PlaceList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PlaceList.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.PlaceList();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.places && message.places.length))
                                message.places = [];
                            message.places.push($root.wm5.protobuf.Place.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a PlaceList message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.PlaceList
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.PlaceList} PlaceList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            PlaceList.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a PlaceList message.
             * @function verify
             * @memberof wm5.protobuf.PlaceList
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            PlaceList.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.places != null && message.hasOwnProperty("places")) {
                    if (!Array.isArray(message.places))
                        return "places: array expected";
                    for (let i = 0; i < message.places.length; ++i) {
                        let error = $root.wm5.protobuf.Place.verify(message.places[i]);
                        if (error)
                            return "places." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a PlaceList message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.PlaceList
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.PlaceList} PlaceList
             */
            PlaceList.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.PlaceList)
                    return object;
                let message = new $root.wm5.protobuf.PlaceList();
                if (object.places) {
                    if (!Array.isArray(object.places))
                        throw TypeError(".wm5.protobuf.PlaceList.places: array expected");
                    message.places = [];
                    for (let i = 0; i < object.places.length; ++i) {
                        if (typeof object.places[i] !== "object")
                            throw TypeError(".wm5.protobuf.PlaceList.places: object expected");
                        message.places[i] = $root.wm5.protobuf.Place.fromObject(object.places[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a PlaceList message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.PlaceList
             * @static
             * @param {wm5.protobuf.PlaceList} message PlaceList
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            PlaceList.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.places = [];
                if (message.places && message.places.length) {
                    object.places = [];
                    for (let j = 0; j < message.places.length; ++j)
                        object.places[j] = $root.wm5.protobuf.Place.toObject(message.places[j], options);
                }
                return object;
            };

            /**
             * Converts this PlaceList to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.PlaceList
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            PlaceList.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for PlaceList
             * @function getTypeUrl
             * @memberof wm5.protobuf.PlaceList
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            PlaceList.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.PlaceList";
            };

            return PlaceList;
        })();

        protobuf.GhostList = (function() {

            /**
             * Properties of a GhostList.
             * @memberof wm5.protobuf
             * @interface IGhostList
             * @property {Array.<wm5.protobuf.IGhostCar>|null} [ghosts] GhostList ghosts
             */

            /**
             * Constructs a new GhostList.
             * @memberof wm5.protobuf
             * @classdesc Represents a GhostList.
             * @implements IGhostList
             * @constructor
             * @param {wm5.protobuf.IGhostList=} [properties] Properties to set
             */
            function GhostList(properties) {
                this.ghosts = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GhostList ghosts.
             * @member {Array.<wm5.protobuf.IGhostCar>} ghosts
             * @memberof wm5.protobuf.GhostList
             * @instance
             */
            GhostList.prototype.ghosts = $util.emptyArray;

            /**
             * Creates a new GhostList instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.GhostList
             * @static
             * @param {wm5.protobuf.IGhostList=} [properties] Properties to set
             * @returns {wm5.protobuf.GhostList} GhostList instance
             */
            GhostList.create = function create(properties) {
                return new GhostList(properties);
            };

            /**
             * Encodes the specified GhostList message. Does not implicitly {@link wm5.protobuf.GhostList.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.GhostList
             * @static
             * @param {wm5.protobuf.IGhostList} message GhostList message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostList.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.ghosts != null && message.ghosts.length)
                    for (let i = 0; i < message.ghosts.length; ++i)
                        $root.wm5.protobuf.GhostCar.encode(message.ghosts[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified GhostList message, length delimited. Does not implicitly {@link wm5.protobuf.GhostList.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.GhostList
             * @static
             * @param {wm5.protobuf.IGhostList} message GhostList message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostList.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GhostList message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.GhostList
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.GhostList} GhostList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostList.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.GhostList();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.ghosts && message.ghosts.length))
                                message.ghosts = [];
                            message.ghosts.push($root.wm5.protobuf.GhostCar.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a GhostList message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.GhostList
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.GhostList} GhostList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostList.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GhostList message.
             * @function verify
             * @memberof wm5.protobuf.GhostList
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GhostList.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.ghosts != null && message.hasOwnProperty("ghosts")) {
                    if (!Array.isArray(message.ghosts))
                        return "ghosts: array expected";
                    for (let i = 0; i < message.ghosts.length; ++i) {
                        let error = $root.wm5.protobuf.GhostCar.verify(message.ghosts[i]);
                        if (error)
                            return "ghosts." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a GhostList message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.GhostList
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.GhostList} GhostList
             */
            GhostList.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.GhostList)
                    return object;
                let message = new $root.wm5.protobuf.GhostList();
                if (object.ghosts) {
                    if (!Array.isArray(object.ghosts))
                        throw TypeError(".wm5.protobuf.GhostList.ghosts: array expected");
                    message.ghosts = [];
                    for (let i = 0; i < object.ghosts.length; ++i) {
                        if (typeof object.ghosts[i] !== "object")
                            throw TypeError(".wm5.protobuf.GhostList.ghosts: object expected");
                        message.ghosts[i] = $root.wm5.protobuf.GhostCar.fromObject(object.ghosts[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a GhostList message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.GhostList
             * @static
             * @param {wm5.protobuf.GhostList} message GhostList
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GhostList.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.ghosts = [];
                if (message.ghosts && message.ghosts.length) {
                    object.ghosts = [];
                    for (let j = 0; j < message.ghosts.length; ++j)
                        object.ghosts[j] = $root.wm5.protobuf.GhostCar.toObject(message.ghosts[j], options);
                }
                return object;
            };

            /**
             * Converts this GhostList to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.GhostList
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GhostList.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GhostList
             * @function getTypeUrl
             * @memberof wm5.protobuf.GhostList
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GhostList.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.GhostList";
            };

            return GhostList;
        })();

        protobuf.CarSummary = (function() {

            /**
             * Properties of a CarSummary.
             * @memberof wm5.protobuf
             * @interface ICarSummary
             * @property {number} hitCount CarSummary hitCount
             * @property {Array.<wm5.protobuf.ICar>|null} [cars] CarSummary cars
             */

            /**
             * Constructs a new CarSummary.
             * @memberof wm5.protobuf
             * @classdesc Represents a CarSummary.
             * @implements ICarSummary
             * @constructor
             * @param {wm5.protobuf.ICarSummary=} [properties] Properties to set
             */
            function CarSummary(properties) {
                this.cars = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CarSummary hitCount.
             * @member {number} hitCount
             * @memberof wm5.protobuf.CarSummary
             * @instance
             */
            CarSummary.prototype.hitCount = 0;

            /**
             * CarSummary cars.
             * @member {Array.<wm5.protobuf.ICar>} cars
             * @memberof wm5.protobuf.CarSummary
             * @instance
             */
            CarSummary.prototype.cars = $util.emptyArray;

            /**
             * Creates a new CarSummary instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.CarSummary
             * @static
             * @param {wm5.protobuf.ICarSummary=} [properties] Properties to set
             * @returns {wm5.protobuf.CarSummary} CarSummary instance
             */
            CarSummary.create = function create(properties) {
                return new CarSummary(properties);
            };

            /**
             * Encodes the specified CarSummary message. Does not implicitly {@link wm5.protobuf.CarSummary.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.CarSummary
             * @static
             * @param {wm5.protobuf.ICarSummary} message CarSummary message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CarSummary.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.hitCount);
                if (message.cars != null && message.cars.length)
                    for (let i = 0; i < message.cars.length; ++i)
                        $root.wm5.protobuf.Car.encode(message.cars[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified CarSummary message, length delimited. Does not implicitly {@link wm5.protobuf.CarSummary.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.CarSummary
             * @static
             * @param {wm5.protobuf.ICarSummary} message CarSummary message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CarSummary.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CarSummary message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.CarSummary
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.CarSummary} CarSummary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CarSummary.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.CarSummary();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.hitCount = reader.uint32();
                            break;
                        }
                    case 2: {
                            if (!(message.cars && message.cars.length))
                                message.cars = [];
                            message.cars.push($root.wm5.protobuf.Car.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("hitCount"))
                    throw $util.ProtocolError("missing required 'hitCount'", { instance: message });
                return message;
            };

            /**
             * Decodes a CarSummary message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.CarSummary
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.CarSummary} CarSummary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CarSummary.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CarSummary message.
             * @function verify
             * @memberof wm5.protobuf.CarSummary
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CarSummary.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.hitCount))
                    return "hitCount: integer expected";
                if (message.cars != null && message.hasOwnProperty("cars")) {
                    if (!Array.isArray(message.cars))
                        return "cars: array expected";
                    for (let i = 0; i < message.cars.length; ++i) {
                        let error = $root.wm5.protobuf.Car.verify(message.cars[i]);
                        if (error)
                            return "cars." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a CarSummary message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.CarSummary
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.CarSummary} CarSummary
             */
            CarSummary.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.CarSummary)
                    return object;
                let message = new $root.wm5.protobuf.CarSummary();
                if (object.hitCount != null)
                    message.hitCount = object.hitCount >>> 0;
                if (object.cars) {
                    if (!Array.isArray(object.cars))
                        throw TypeError(".wm5.protobuf.CarSummary.cars: array expected");
                    message.cars = [];
                    for (let i = 0; i < object.cars.length; ++i) {
                        if (typeof object.cars[i] !== "object")
                            throw TypeError(".wm5.protobuf.CarSummary.cars: object expected");
                        message.cars[i] = $root.wm5.protobuf.Car.fromObject(object.cars[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a CarSummary message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.CarSummary
             * @static
             * @param {wm5.protobuf.CarSummary} message CarSummary
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CarSummary.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.cars = [];
                if (options.defaults)
                    object.hitCount = 0;
                if (message.hitCount != null && message.hasOwnProperty("hitCount"))
                    object.hitCount = message.hitCount;
                if (message.cars && message.cars.length) {
                    object.cars = [];
                    for (let j = 0; j < message.cars.length; ++j)
                        object.cars[j] = $root.wm5.protobuf.Car.toObject(message.cars[j], options);
                }
                return object;
            };

            /**
             * Converts this CarSummary to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.CarSummary
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CarSummary.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CarSummary
             * @function getTypeUrl
             * @memberof wm5.protobuf.CarSummary
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CarSummary.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.CarSummary";
            };

            return CarSummary;
        })();

        protobuf.GhostSummary = (function() {

            /**
             * Properties of a GhostSummary.
             * @memberof wm5.protobuf
             * @interface IGhostSummary
             * @property {Array.<wm5.protobuf.IGhostCar>|null} [ghosts] GhostSummary ghosts
             */

            /**
             * Constructs a new GhostSummary.
             * @memberof wm5.protobuf
             * @classdesc Represents a GhostSummary.
             * @implements IGhostSummary
             * @constructor
             * @param {wm5.protobuf.IGhostSummary=} [properties] Properties to set
             */
            function GhostSummary(properties) {
                this.ghosts = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GhostSummary ghosts.
             * @member {Array.<wm5.protobuf.IGhostCar>} ghosts
             * @memberof wm5.protobuf.GhostSummary
             * @instance
             */
            GhostSummary.prototype.ghosts = $util.emptyArray;

            /**
             * Creates a new GhostSummary instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.GhostSummary
             * @static
             * @param {wm5.protobuf.IGhostSummary=} [properties] Properties to set
             * @returns {wm5.protobuf.GhostSummary} GhostSummary instance
             */
            GhostSummary.create = function create(properties) {
                return new GhostSummary(properties);
            };

            /**
             * Encodes the specified GhostSummary message. Does not implicitly {@link wm5.protobuf.GhostSummary.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.GhostSummary
             * @static
             * @param {wm5.protobuf.IGhostSummary} message GhostSummary message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostSummary.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.ghosts != null && message.ghosts.length)
                    for (let i = 0; i < message.ghosts.length; ++i)
                        $root.wm5.protobuf.GhostCar.encode(message.ghosts[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified GhostSummary message, length delimited. Does not implicitly {@link wm5.protobuf.GhostSummary.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.GhostSummary
             * @static
             * @param {wm5.protobuf.IGhostSummary} message GhostSummary message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostSummary.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GhostSummary message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.GhostSummary
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.GhostSummary} GhostSummary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostSummary.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.GhostSummary();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.ghosts && message.ghosts.length))
                                message.ghosts = [];
                            message.ghosts.push($root.wm5.protobuf.GhostCar.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a GhostSummary message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.GhostSummary
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.GhostSummary} GhostSummary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostSummary.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GhostSummary message.
             * @function verify
             * @memberof wm5.protobuf.GhostSummary
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GhostSummary.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.ghosts != null && message.hasOwnProperty("ghosts")) {
                    if (!Array.isArray(message.ghosts))
                        return "ghosts: array expected";
                    for (let i = 0; i < message.ghosts.length; ++i) {
                        let error = $root.wm5.protobuf.GhostCar.verify(message.ghosts[i]);
                        if (error)
                            return "ghosts." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a GhostSummary message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.GhostSummary
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.GhostSummary} GhostSummary
             */
            GhostSummary.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.GhostSummary)
                    return object;
                let message = new $root.wm5.protobuf.GhostSummary();
                if (object.ghosts) {
                    if (!Array.isArray(object.ghosts))
                        throw TypeError(".wm5.protobuf.GhostSummary.ghosts: array expected");
                    message.ghosts = [];
                    for (let i = 0; i < object.ghosts.length; ++i) {
                        if (typeof object.ghosts[i] !== "object")
                            throw TypeError(".wm5.protobuf.GhostSummary.ghosts: object expected");
                        message.ghosts[i] = $root.wm5.protobuf.GhostCar.fromObject(object.ghosts[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a GhostSummary message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.GhostSummary
             * @static
             * @param {wm5.protobuf.GhostSummary} message GhostSummary
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GhostSummary.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.ghosts = [];
                if (message.ghosts && message.ghosts.length) {
                    object.ghosts = [];
                    for (let j = 0; j < message.ghosts.length; ++j)
                        object.ghosts[j] = $root.wm5.protobuf.GhostCar.toObject(message.ghosts[j], options);
                }
                return object;
            };

            /**
             * Converts this GhostSummary to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.GhostSummary
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GhostSummary.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GhostSummary
             * @function getTypeUrl
             * @memberof wm5.protobuf.GhostSummary
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GhostSummary.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.GhostSummary";
            };

            return GhostSummary;
        })();

        protobuf.FileList = (function() {

            /**
             * Properties of a FileList.
             * @memberof wm5.protobuf
             * @interface IFileList
             * @property {Array.<wm5.protobuf.FileList.IFileInfo>|null} [files] FileList files
             * @property {number|null} [interval] FileList interval
             */

            /**
             * Constructs a new FileList.
             * @memberof wm5.protobuf
             * @classdesc Represents a FileList.
             * @implements IFileList
             * @constructor
             * @param {wm5.protobuf.IFileList=} [properties] Properties to set
             */
            function FileList(properties) {
                this.files = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FileList files.
             * @member {Array.<wm5.protobuf.FileList.IFileInfo>} files
             * @memberof wm5.protobuf.FileList
             * @instance
             */
            FileList.prototype.files = $util.emptyArray;

            /**
             * FileList interval.
             * @member {number} interval
             * @memberof wm5.protobuf.FileList
             * @instance
             */
            FileList.prototype.interval = 0;

            /**
             * Creates a new FileList instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.FileList
             * @static
             * @param {wm5.protobuf.IFileList=} [properties] Properties to set
             * @returns {wm5.protobuf.FileList} FileList instance
             */
            FileList.create = function create(properties) {
                return new FileList(properties);
            };

            /**
             * Encodes the specified FileList message. Does not implicitly {@link wm5.protobuf.FileList.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.FileList
             * @static
             * @param {wm5.protobuf.IFileList} message FileList message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FileList.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.files != null && message.files.length)
                    for (let i = 0; i < message.files.length; ++i)
                        $root.wm5.protobuf.FileList.FileInfo.encode(message.files[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.interval != null && Object.hasOwnProperty.call(message, "interval"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.interval);
                return writer;
            };

            /**
             * Encodes the specified FileList message, length delimited. Does not implicitly {@link wm5.protobuf.FileList.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.FileList
             * @static
             * @param {wm5.protobuf.IFileList} message FileList message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FileList.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FileList message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.FileList
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.FileList} FileList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FileList.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.FileList();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.files && message.files.length))
                                message.files = [];
                            message.files.push($root.wm5.protobuf.FileList.FileInfo.decode(reader, reader.uint32()));
                            break;
                        }
                    case 2: {
                            message.interval = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a FileList message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.FileList
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.FileList} FileList
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FileList.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FileList message.
             * @function verify
             * @memberof wm5.protobuf.FileList
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FileList.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.files != null && message.hasOwnProperty("files")) {
                    if (!Array.isArray(message.files))
                        return "files: array expected";
                    for (let i = 0; i < message.files.length; ++i) {
                        let error = $root.wm5.protobuf.FileList.FileInfo.verify(message.files[i]);
                        if (error)
                            return "files." + error;
                    }
                }
                if (message.interval != null && message.hasOwnProperty("interval"))
                    if (!$util.isInteger(message.interval))
                        return "interval: integer expected";
                return null;
            };

            /**
             * Creates a FileList message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.FileList
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.FileList} FileList
             */
            FileList.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.FileList)
                    return object;
                let message = new $root.wm5.protobuf.FileList();
                if (object.files) {
                    if (!Array.isArray(object.files))
                        throw TypeError(".wm5.protobuf.FileList.files: array expected");
                    message.files = [];
                    for (let i = 0; i < object.files.length; ++i) {
                        if (typeof object.files[i] !== "object")
                            throw TypeError(".wm5.protobuf.FileList.files: object expected");
                        message.files[i] = $root.wm5.protobuf.FileList.FileInfo.fromObject(object.files[i]);
                    }
                }
                if (object.interval != null)
                    message.interval = object.interval >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a FileList message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.FileList
             * @static
             * @param {wm5.protobuf.FileList} message FileList
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FileList.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.files = [];
                if (options.defaults)
                    object.interval = 0;
                if (message.files && message.files.length) {
                    object.files = [];
                    for (let j = 0; j < message.files.length; ++j)
                        object.files[j] = $root.wm5.protobuf.FileList.FileInfo.toObject(message.files[j], options);
                }
                if (message.interval != null && message.hasOwnProperty("interval"))
                    object.interval = message.interval;
                return object;
            };

            /**
             * Converts this FileList to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.FileList
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FileList.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FileList
             * @function getTypeUrl
             * @memberof wm5.protobuf.FileList
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FileList.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.FileList";
            };

            FileList.FileInfo = (function() {

                /**
                 * Properties of a FileInfo.
                 * @memberof wm5.protobuf.FileList
                 * @interface IFileInfo
                 * @property {number} fileId FileInfo fileId
                 * @property {wm5.protobuf.FileType} fileType FileInfo fileType
                 * @property {number} fileSize FileInfo fileSize
                 * @property {string} url FileInfo url
                 * @property {Uint8Array} sha1sum FileInfo sha1sum
                 * @property {number} notBefore FileInfo notBefore
                 * @property {number} notAfter FileInfo notAfter
                 */

                /**
                 * Constructs a new FileInfo.
                 * @memberof wm5.protobuf.FileList
                 * @classdesc Represents a FileInfo.
                 * @implements IFileInfo
                 * @constructor
                 * @param {wm5.protobuf.FileList.IFileInfo=} [properties] Properties to set
                 */
                function FileInfo(properties) {
                    if (properties)
                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * FileInfo fileId.
                 * @member {number} fileId
                 * @memberof wm5.protobuf.FileList.FileInfo
                 * @instance
                 */
                FileInfo.prototype.fileId = 0;

                /**
                 * FileInfo fileType.
                 * @member {wm5.protobuf.FileType} fileType
                 * @memberof wm5.protobuf.FileList.FileInfo
                 * @instance
                 */
                FileInfo.prototype.fileType = 1;

                /**
                 * FileInfo fileSize.
                 * @member {number} fileSize
                 * @memberof wm5.protobuf.FileList.FileInfo
                 * @instance
                 */
                FileInfo.prototype.fileSize = 0;

                /**
                 * FileInfo url.
                 * @member {string} url
                 * @memberof wm5.protobuf.FileList.FileInfo
                 * @instance
                 */
                FileInfo.prototype.url = "";

                /**
                 * FileInfo sha1sum.
                 * @member {Uint8Array} sha1sum
                 * @memberof wm5.protobuf.FileList.FileInfo
                 * @instance
                 */
                FileInfo.prototype.sha1sum = $util.newBuffer([]);

                /**
                 * FileInfo notBefore.
                 * @member {number} notBefore
                 * @memberof wm5.protobuf.FileList.FileInfo
                 * @instance
                 */
                FileInfo.prototype.notBefore = 0;

                /**
                 * FileInfo notAfter.
                 * @member {number} notAfter
                 * @memberof wm5.protobuf.FileList.FileInfo
                 * @instance
                 */
                FileInfo.prototype.notAfter = 0;

                /**
                 * Creates a new FileInfo instance using the specified properties.
                 * @function create
                 * @memberof wm5.protobuf.FileList.FileInfo
                 * @static
                 * @param {wm5.protobuf.FileList.IFileInfo=} [properties] Properties to set
                 * @returns {wm5.protobuf.FileList.FileInfo} FileInfo instance
                 */
                FileInfo.create = function create(properties) {
                    return new FileInfo(properties);
                };

                /**
                 * Encodes the specified FileInfo message. Does not implicitly {@link wm5.protobuf.FileList.FileInfo.verify|verify} messages.
                 * @function encode
                 * @memberof wm5.protobuf.FileList.FileInfo
                 * @static
                 * @param {wm5.protobuf.FileList.IFileInfo} message FileInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.fileId);
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.fileType);
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.fileSize);
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.url);
                    writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.sha1sum);
                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.notBefore);
                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.notAfter);
                    return writer;
                };

                /**
                 * Encodes the specified FileInfo message, length delimited. Does not implicitly {@link wm5.protobuf.FileList.FileInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof wm5.protobuf.FileList.FileInfo
                 * @static
                 * @param {wm5.protobuf.FileList.IFileInfo} message FileInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a FileInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof wm5.protobuf.FileList.FileInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {wm5.protobuf.FileList.FileInfo} FileInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.FileList.FileInfo();
                    while (reader.pos < end) {
                        let tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.fileId = reader.uint32();
                                break;
                            }
                        case 2: {
                                message.fileType = reader.int32();
                                break;
                            }
                        case 3: {
                                message.fileSize = reader.uint32();
                                break;
                            }
                        case 4: {
                                message.url = reader.string();
                                break;
                            }
                        case 5: {
                                message.sha1sum = reader.bytes();
                                break;
                            }
                        case 6: {
                                message.notBefore = reader.uint32();
                                break;
                            }
                        case 7: {
                                message.notAfter = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("fileId"))
                        throw $util.ProtocolError("missing required 'fileId'", { instance: message });
                    if (!message.hasOwnProperty("fileType"))
                        throw $util.ProtocolError("missing required 'fileType'", { instance: message });
                    if (!message.hasOwnProperty("fileSize"))
                        throw $util.ProtocolError("missing required 'fileSize'", { instance: message });
                    if (!message.hasOwnProperty("url"))
                        throw $util.ProtocolError("missing required 'url'", { instance: message });
                    if (!message.hasOwnProperty("sha1sum"))
                        throw $util.ProtocolError("missing required 'sha1sum'", { instance: message });
                    if (!message.hasOwnProperty("notBefore"))
                        throw $util.ProtocolError("missing required 'notBefore'", { instance: message });
                    if (!message.hasOwnProperty("notAfter"))
                        throw $util.ProtocolError("missing required 'notAfter'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a FileInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof wm5.protobuf.FileList.FileInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {wm5.protobuf.FileList.FileInfo} FileInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a FileInfo message.
                 * @function verify
                 * @memberof wm5.protobuf.FileList.FileInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.fileId))
                        return "fileId: integer expected";
                    switch (message.fileType) {
                    default:
                        return "fileType: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    }
                    if (!$util.isInteger(message.fileSize))
                        return "fileSize: integer expected";
                    if (!$util.isString(message.url))
                        return "url: string expected";
                    if (!(message.sha1sum && typeof message.sha1sum.length === "number" || $util.isString(message.sha1sum)))
                        return "sha1sum: buffer expected";
                    if (!$util.isInteger(message.notBefore))
                        return "notBefore: integer expected";
                    if (!$util.isInteger(message.notAfter))
                        return "notAfter: integer expected";
                    return null;
                };

                /**
                 * Creates a FileInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof wm5.protobuf.FileList.FileInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {wm5.protobuf.FileList.FileInfo} FileInfo
                 */
                FileInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.wm5.protobuf.FileList.FileInfo)
                        return object;
                    let message = new $root.wm5.protobuf.FileList.FileInfo();
                    if (object.fileId != null)
                        message.fileId = object.fileId >>> 0;
                    switch (object.fileType) {
                    default:
                        if (typeof object.fileType === "number") {
                            message.fileType = object.fileType;
                            break;
                        }
                        break;
                    case "FILE_PROMOTION_ANNOUNCEMENT":
                    case 1:
                        message.fileType = 1;
                        break;
                    case "FILE_SHOP_ANNOUNCEMENT":
                    case 2:
                        message.fileType = 2;
                        break;
                    case "FILE_WEBSITE_ANNOUNCEMENT":
                    case 3:
                        message.fileType = 3;
                        break;
                    case "FILE_FEATURE_ANNOUNCEMENT":
                    case 4:
                        message.fileType = 4;
                        break;
                    case "FILE_SCRATCH_DIRECTIONS":
                    case 5:
                        message.fileType = 5;
                        break;
                    }
                    if (object.fileSize != null)
                        message.fileSize = object.fileSize >>> 0;
                    if (object.url != null)
                        message.url = String(object.url);
                    if (object.sha1sum != null)
                        if (typeof object.sha1sum === "string")
                            $util.base64.decode(object.sha1sum, message.sha1sum = $util.newBuffer($util.base64.length(object.sha1sum)), 0);
                        else if (object.sha1sum.length >= 0)
                            message.sha1sum = object.sha1sum;
                    if (object.notBefore != null)
                        message.notBefore = object.notBefore >>> 0;
                    if (object.notAfter != null)
                        message.notAfter = object.notAfter >>> 0;
                    return message;
                };

                /**
                 * Creates a plain object from a FileInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof wm5.protobuf.FileList.FileInfo
                 * @static
                 * @param {wm5.protobuf.FileList.FileInfo} message FileInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    let object = {};
                    if (options.defaults) {
                        object.fileId = 0;
                        object.fileType = options.enums === String ? "FILE_PROMOTION_ANNOUNCEMENT" : 1;
                        object.fileSize = 0;
                        object.url = "";
                        if (options.bytes === String)
                            object.sha1sum = "";
                        else {
                            object.sha1sum = [];
                            if (options.bytes !== Array)
                                object.sha1sum = $util.newBuffer(object.sha1sum);
                        }
                        object.notBefore = 0;
                        object.notAfter = 0;
                    }
                    if (message.fileId != null && message.hasOwnProperty("fileId"))
                        object.fileId = message.fileId;
                    if (message.fileType != null && message.hasOwnProperty("fileType"))
                        object.fileType = options.enums === String ? $root.wm5.protobuf.FileType[message.fileType] === undefined ? message.fileType : $root.wm5.protobuf.FileType[message.fileType] : message.fileType;
                    if (message.fileSize != null && message.hasOwnProperty("fileSize"))
                        object.fileSize = message.fileSize;
                    if (message.url != null && message.hasOwnProperty("url"))
                        object.url = message.url;
                    if (message.sha1sum != null && message.hasOwnProperty("sha1sum"))
                        object.sha1sum = options.bytes === String ? $util.base64.encode(message.sha1sum, 0, message.sha1sum.length) : options.bytes === Array ? Array.prototype.slice.call(message.sha1sum) : message.sha1sum;
                    if (message.notBefore != null && message.hasOwnProperty("notBefore"))
                        object.notBefore = message.notBefore;
                    if (message.notAfter != null && message.hasOwnProperty("notAfter"))
                        object.notAfter = message.notAfter;
                    return object;
                };

                /**
                 * Converts this FileInfo to JSON.
                 * @function toJSON
                 * @memberof wm5.protobuf.FileList.FileInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for FileInfo
                 * @function getTypeUrl
                 * @memberof wm5.protobuf.FileList.FileInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/wm5.protobuf.FileList.FileInfo";
                };

                return FileInfo;
            })();

            return FileList;
        })();

        protobuf.GhostCompetitionTarget = (function() {

            /**
             * Properties of a GhostCompetitionTarget.
             * @memberof wm5.protobuf
             * @interface IGhostCompetitionTarget
             * @property {number} competitionId GhostCompetitionTarget competitionId
             * @property {number|null} [specialGhostId] GhostCompetitionTarget specialGhostId
             * @property {wm5.protobuf.IGhostCar} ghostCar GhostCompetitionTarget ghostCar
             * @property {number|Long} trailId GhostCompetitionTarget trailId
             * @property {number} updatedAt GhostCompetitionTarget updatedAt
             * @property {wm5.protobuf.IGhostCompetitionSchedule|null} [competitionSchedule] GhostCompetitionTarget competitionSchedule
             */

            /**
             * Constructs a new GhostCompetitionTarget.
             * @memberof wm5.protobuf
             * @classdesc Represents a GhostCompetitionTarget.
             * @implements IGhostCompetitionTarget
             * @constructor
             * @param {wm5.protobuf.IGhostCompetitionTarget=} [properties] Properties to set
             */
            function GhostCompetitionTarget(properties) {
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GhostCompetitionTarget competitionId.
             * @member {number} competitionId
             * @memberof wm5.protobuf.GhostCompetitionTarget
             * @instance
             */
            GhostCompetitionTarget.prototype.competitionId = 0;

            /**
             * GhostCompetitionTarget specialGhostId.
             * @member {number} specialGhostId
             * @memberof wm5.protobuf.GhostCompetitionTarget
             * @instance
             */
            GhostCompetitionTarget.prototype.specialGhostId = 0;

            /**
             * GhostCompetitionTarget ghostCar.
             * @member {wm5.protobuf.IGhostCar} ghostCar
             * @memberof wm5.protobuf.GhostCompetitionTarget
             * @instance
             */
            GhostCompetitionTarget.prototype.ghostCar = null;

            /**
             * GhostCompetitionTarget trailId.
             * @member {number|Long} trailId
             * @memberof wm5.protobuf.GhostCompetitionTarget
             * @instance
             */
            GhostCompetitionTarget.prototype.trailId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

            /**
             * GhostCompetitionTarget updatedAt.
             * @member {number} updatedAt
             * @memberof wm5.protobuf.GhostCompetitionTarget
             * @instance
             */
            GhostCompetitionTarget.prototype.updatedAt = 0;

            /**
             * GhostCompetitionTarget competitionSchedule.
             * @member {wm5.protobuf.IGhostCompetitionSchedule|null|undefined} competitionSchedule
             * @memberof wm5.protobuf.GhostCompetitionTarget
             * @instance
             */
            GhostCompetitionTarget.prototype.competitionSchedule = null;

            /**
             * Creates a new GhostCompetitionTarget instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.GhostCompetitionTarget
             * @static
             * @param {wm5.protobuf.IGhostCompetitionTarget=} [properties] Properties to set
             * @returns {wm5.protobuf.GhostCompetitionTarget} GhostCompetitionTarget instance
             */
            GhostCompetitionTarget.create = function create(properties) {
                return new GhostCompetitionTarget(properties);
            };

            /**
             * Encodes the specified GhostCompetitionTarget message. Does not implicitly {@link wm5.protobuf.GhostCompetitionTarget.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.GhostCompetitionTarget
             * @static
             * @param {wm5.protobuf.IGhostCompetitionTarget} message GhostCompetitionTarget message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostCompetitionTarget.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.competitionId);
                if (message.specialGhostId != null && Object.hasOwnProperty.call(message, "specialGhostId"))
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.specialGhostId);
                $root.wm5.protobuf.GhostCar.encode(message.ghostCar, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.trailId);
                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.updatedAt);
                if (message.competitionSchedule != null && Object.hasOwnProperty.call(message, "competitionSchedule"))
                    $root.wm5.protobuf.GhostCompetitionSchedule.encode(message.competitionSchedule, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified GhostCompetitionTarget message, length delimited. Does not implicitly {@link wm5.protobuf.GhostCompetitionTarget.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.GhostCompetitionTarget
             * @static
             * @param {wm5.protobuf.IGhostCompetitionTarget} message GhostCompetitionTarget message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostCompetitionTarget.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GhostCompetitionTarget message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.GhostCompetitionTarget
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.GhostCompetitionTarget} GhostCompetitionTarget
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostCompetitionTarget.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.GhostCompetitionTarget();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.competitionId = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.specialGhostId = reader.uint32();
                            break;
                        }
                    case 3: {
                            message.ghostCar = $root.wm5.protobuf.GhostCar.decode(reader, reader.uint32());
                            break;
                        }
                    case 4: {
                            message.trailId = reader.uint64();
                            break;
                        }
                    case 5: {
                            message.updatedAt = reader.uint32();
                            break;
                        }
                    case 6: {
                            message.competitionSchedule = $root.wm5.protobuf.GhostCompetitionSchedule.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("competitionId"))
                    throw $util.ProtocolError("missing required 'competitionId'", { instance: message });
                if (!message.hasOwnProperty("ghostCar"))
                    throw $util.ProtocolError("missing required 'ghostCar'", { instance: message });
                if (!message.hasOwnProperty("trailId"))
                    throw $util.ProtocolError("missing required 'trailId'", { instance: message });
                if (!message.hasOwnProperty("updatedAt"))
                    throw $util.ProtocolError("missing required 'updatedAt'", { instance: message });
                return message;
            };

            /**
             * Decodes a GhostCompetitionTarget message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.GhostCompetitionTarget
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.GhostCompetitionTarget} GhostCompetitionTarget
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostCompetitionTarget.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GhostCompetitionTarget message.
             * @function verify
             * @memberof wm5.protobuf.GhostCompetitionTarget
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GhostCompetitionTarget.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.competitionId))
                    return "competitionId: integer expected";
                if (message.specialGhostId != null && message.hasOwnProperty("specialGhostId"))
                    if (!$util.isInteger(message.specialGhostId))
                        return "specialGhostId: integer expected";
                {
                    let error = $root.wm5.protobuf.GhostCar.verify(message.ghostCar);
                    if (error)
                        return "ghostCar." + error;
                }
                if (!$util.isInteger(message.trailId) && !(message.trailId && $util.isInteger(message.trailId.low) && $util.isInteger(message.trailId.high)))
                    return "trailId: integer|Long expected";
                if (!$util.isInteger(message.updatedAt))
                    return "updatedAt: integer expected";
                if (message.competitionSchedule != null && message.hasOwnProperty("competitionSchedule")) {
                    let error = $root.wm5.protobuf.GhostCompetitionSchedule.verify(message.competitionSchedule);
                    if (error)
                        return "competitionSchedule." + error;
                }
                return null;
            };

            /**
             * Creates a GhostCompetitionTarget message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.GhostCompetitionTarget
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.GhostCompetitionTarget} GhostCompetitionTarget
             */
            GhostCompetitionTarget.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.GhostCompetitionTarget)
                    return object;
                let message = new $root.wm5.protobuf.GhostCompetitionTarget();
                if (object.competitionId != null)
                    message.competitionId = object.competitionId >>> 0;
                if (object.specialGhostId != null)
                    message.specialGhostId = object.specialGhostId >>> 0;
                if (object.ghostCar != null) {
                    if (typeof object.ghostCar !== "object")
                        throw TypeError(".wm5.protobuf.GhostCompetitionTarget.ghostCar: object expected");
                    message.ghostCar = $root.wm5.protobuf.GhostCar.fromObject(object.ghostCar);
                }
                if (object.trailId != null)
                    if ($util.Long)
                        (message.trailId = $util.Long.fromValue(object.trailId)).unsigned = true;
                    else if (typeof object.trailId === "string")
                        message.trailId = parseInt(object.trailId, 10);
                    else if (typeof object.trailId === "number")
                        message.trailId = object.trailId;
                    else if (typeof object.trailId === "object")
                        message.trailId = new $util.LongBits(object.trailId.low >>> 0, object.trailId.high >>> 0).toNumber(true);
                if (object.updatedAt != null)
                    message.updatedAt = object.updatedAt >>> 0;
                if (object.competitionSchedule != null) {
                    if (typeof object.competitionSchedule !== "object")
                        throw TypeError(".wm5.protobuf.GhostCompetitionTarget.competitionSchedule: object expected");
                    message.competitionSchedule = $root.wm5.protobuf.GhostCompetitionSchedule.fromObject(object.competitionSchedule);
                }
                return message;
            };

            /**
             * Creates a plain object from a GhostCompetitionTarget message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.GhostCompetitionTarget
             * @static
             * @param {wm5.protobuf.GhostCompetitionTarget} message GhostCompetitionTarget
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GhostCompetitionTarget.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.defaults) {
                    object.competitionId = 0;
                    object.specialGhostId = 0;
                    object.ghostCar = null;
                    if ($util.Long) {
                        let long = new $util.Long(0, 0, true);
                        object.trailId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.trailId = options.longs === String ? "0" : 0;
                    object.updatedAt = 0;
                    object.competitionSchedule = null;
                }
                if (message.competitionId != null && message.hasOwnProperty("competitionId"))
                    object.competitionId = message.competitionId;
                if (message.specialGhostId != null && message.hasOwnProperty("specialGhostId"))
                    object.specialGhostId = message.specialGhostId;
                if (message.ghostCar != null && message.hasOwnProperty("ghostCar"))
                    object.ghostCar = $root.wm5.protobuf.GhostCar.toObject(message.ghostCar, options);
                if (message.trailId != null && message.hasOwnProperty("trailId"))
                    if (typeof message.trailId === "number")
                        object.trailId = options.longs === String ? String(message.trailId) : message.trailId;
                    else
                        object.trailId = options.longs === String ? $util.Long.prototype.toString.call(message.trailId) : options.longs === Number ? new $util.LongBits(message.trailId.low >>> 0, message.trailId.high >>> 0).toNumber(true) : message.trailId;
                if (message.updatedAt != null && message.hasOwnProperty("updatedAt"))
                    object.updatedAt = message.updatedAt;
                if (message.competitionSchedule != null && message.hasOwnProperty("competitionSchedule"))
                    object.competitionSchedule = $root.wm5.protobuf.GhostCompetitionSchedule.toObject(message.competitionSchedule, options);
                return object;
            };

            /**
             * Converts this GhostCompetitionTarget to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.GhostCompetitionTarget
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GhostCompetitionTarget.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GhostCompetitionTarget
             * @function getTypeUrl
             * @memberof wm5.protobuf.GhostCompetitionTarget
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GhostCompetitionTarget.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.GhostCompetitionTarget";
            };

            return GhostCompetitionTarget;
        })();

        protobuf.GhostExpeditionRanking = (function() {

            /**
             * Properties of a GhostExpeditionRanking.
             * @memberof wm5.protobuf
             * @interface IGhostExpeditionRanking
             * @property {number} localScore GhostExpeditionRanking localScore
             * @property {wm5.protobuf.IGhostExpeditionRankingEntry|null} [todaysMvp] GhostExpeditionRanking todaysMvp
             * @property {Array.<wm5.protobuf.IGhostExpeditionRankingEntry>|null} [localRanking] GhostExpeditionRanking localRanking
             */

            /**
             * Constructs a new GhostExpeditionRanking.
             * @memberof wm5.protobuf
             * @classdesc Represents a GhostExpeditionRanking.
             * @implements IGhostExpeditionRanking
             * @constructor
             * @param {wm5.protobuf.IGhostExpeditionRanking=} [properties] Properties to set
             */
            function GhostExpeditionRanking(properties) {
                this.localRanking = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GhostExpeditionRanking localScore.
             * @member {number} localScore
             * @memberof wm5.protobuf.GhostExpeditionRanking
             * @instance
             */
            GhostExpeditionRanking.prototype.localScore = 0;

            /**
             * GhostExpeditionRanking todaysMvp.
             * @member {wm5.protobuf.IGhostExpeditionRankingEntry|null|undefined} todaysMvp
             * @memberof wm5.protobuf.GhostExpeditionRanking
             * @instance
             */
            GhostExpeditionRanking.prototype.todaysMvp = null;

            /**
             * GhostExpeditionRanking localRanking.
             * @member {Array.<wm5.protobuf.IGhostExpeditionRankingEntry>} localRanking
             * @memberof wm5.protobuf.GhostExpeditionRanking
             * @instance
             */
            GhostExpeditionRanking.prototype.localRanking = $util.emptyArray;

            /**
             * Creates a new GhostExpeditionRanking instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.GhostExpeditionRanking
             * @static
             * @param {wm5.protobuf.IGhostExpeditionRanking=} [properties] Properties to set
             * @returns {wm5.protobuf.GhostExpeditionRanking} GhostExpeditionRanking instance
             */
            GhostExpeditionRanking.create = function create(properties) {
                return new GhostExpeditionRanking(properties);
            };

            /**
             * Encodes the specified GhostExpeditionRanking message. Does not implicitly {@link wm5.protobuf.GhostExpeditionRanking.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.GhostExpeditionRanking
             * @static
             * @param {wm5.protobuf.IGhostExpeditionRanking} message GhostExpeditionRanking message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostExpeditionRanking.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.localScore);
                if (message.todaysMvp != null && Object.hasOwnProperty.call(message, "todaysMvp"))
                    $root.wm5.protobuf.GhostExpeditionRankingEntry.encode(message.todaysMvp, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                if (message.localRanking != null && message.localRanking.length)
                    for (let i = 0; i < message.localRanking.length; ++i)
                        $root.wm5.protobuf.GhostExpeditionRankingEntry.encode(message.localRanking[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified GhostExpeditionRanking message, length delimited. Does not implicitly {@link wm5.protobuf.GhostExpeditionRanking.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.GhostExpeditionRanking
             * @static
             * @param {wm5.protobuf.IGhostExpeditionRanking} message GhostExpeditionRanking message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostExpeditionRanking.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GhostExpeditionRanking message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.GhostExpeditionRanking
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.GhostExpeditionRanking} GhostExpeditionRanking
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostExpeditionRanking.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.GhostExpeditionRanking();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.localScore = reader.uint32();
                            break;
                        }
                    case 2: {
                            message.todaysMvp = $root.wm5.protobuf.GhostExpeditionRankingEntry.decode(reader, reader.uint32());
                            break;
                        }
                    case 3: {
                            if (!(message.localRanking && message.localRanking.length))
                                message.localRanking = [];
                            message.localRanking.push($root.wm5.protobuf.GhostExpeditionRankingEntry.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("localScore"))
                    throw $util.ProtocolError("missing required 'localScore'", { instance: message });
                return message;
            };

            /**
             * Decodes a GhostExpeditionRanking message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.GhostExpeditionRanking
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.GhostExpeditionRanking} GhostExpeditionRanking
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostExpeditionRanking.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GhostExpeditionRanking message.
             * @function verify
             * @memberof wm5.protobuf.GhostExpeditionRanking
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GhostExpeditionRanking.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.localScore))
                    return "localScore: integer expected";
                if (message.todaysMvp != null && message.hasOwnProperty("todaysMvp")) {
                    let error = $root.wm5.protobuf.GhostExpeditionRankingEntry.verify(message.todaysMvp);
                    if (error)
                        return "todaysMvp." + error;
                }
                if (message.localRanking != null && message.hasOwnProperty("localRanking")) {
                    if (!Array.isArray(message.localRanking))
                        return "localRanking: array expected";
                    for (let i = 0; i < message.localRanking.length; ++i) {
                        let error = $root.wm5.protobuf.GhostExpeditionRankingEntry.verify(message.localRanking[i]);
                        if (error)
                            return "localRanking." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a GhostExpeditionRanking message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.GhostExpeditionRanking
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.GhostExpeditionRanking} GhostExpeditionRanking
             */
            GhostExpeditionRanking.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.GhostExpeditionRanking)
                    return object;
                let message = new $root.wm5.protobuf.GhostExpeditionRanking();
                if (object.localScore != null)
                    message.localScore = object.localScore >>> 0;
                if (object.todaysMvp != null) {
                    if (typeof object.todaysMvp !== "object")
                        throw TypeError(".wm5.protobuf.GhostExpeditionRanking.todaysMvp: object expected");
                    message.todaysMvp = $root.wm5.protobuf.GhostExpeditionRankingEntry.fromObject(object.todaysMvp);
                }
                if (object.localRanking) {
                    if (!Array.isArray(object.localRanking))
                        throw TypeError(".wm5.protobuf.GhostExpeditionRanking.localRanking: array expected");
                    message.localRanking = [];
                    for (let i = 0; i < object.localRanking.length; ++i) {
                        if (typeof object.localRanking[i] !== "object")
                            throw TypeError(".wm5.protobuf.GhostExpeditionRanking.localRanking: object expected");
                        message.localRanking[i] = $root.wm5.protobuf.GhostExpeditionRankingEntry.fromObject(object.localRanking[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a GhostExpeditionRanking message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.GhostExpeditionRanking
             * @static
             * @param {wm5.protobuf.GhostExpeditionRanking} message GhostExpeditionRanking
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GhostExpeditionRanking.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.localRanking = [];
                if (options.defaults) {
                    object.localScore = 0;
                    object.todaysMvp = null;
                }
                if (message.localScore != null && message.hasOwnProperty("localScore"))
                    object.localScore = message.localScore;
                if (message.todaysMvp != null && message.hasOwnProperty("todaysMvp"))
                    object.todaysMvp = $root.wm5.protobuf.GhostExpeditionRankingEntry.toObject(message.todaysMvp, options);
                if (message.localRanking && message.localRanking.length) {
                    object.localRanking = [];
                    for (let j = 0; j < message.localRanking.length; ++j)
                        object.localRanking[j] = $root.wm5.protobuf.GhostExpeditionRankingEntry.toObject(message.localRanking[j], options);
                }
                return object;
            };

            /**
             * Converts this GhostExpeditionRanking to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.GhostExpeditionRanking
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GhostExpeditionRanking.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GhostExpeditionRanking
             * @function getTypeUrl
             * @memberof wm5.protobuf.GhostExpeditionRanking
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GhostExpeditionRanking.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.GhostExpeditionRanking";
            };

            return GhostExpeditionRanking;
        })();

        protobuf.GhostExpeditionParticipants = (function() {

            /**
             * Properties of a GhostExpeditionParticipants.
             * @memberof wm5.protobuf
             * @interface IGhostExpeditionParticipants
             * @property {string} placeId GhostExpeditionParticipants placeId
             * @property {Array.<number>|null} [participantCars] GhostExpeditionParticipants participantCars
             */

            /**
             * Constructs a new GhostExpeditionParticipants.
             * @memberof wm5.protobuf
             * @classdesc Represents a GhostExpeditionParticipants.
             * @implements IGhostExpeditionParticipants
             * @constructor
             * @param {wm5.protobuf.IGhostExpeditionParticipants=} [properties] Properties to set
             */
            function GhostExpeditionParticipants(properties) {
                this.participantCars = [];
                if (properties)
                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GhostExpeditionParticipants placeId.
             * @member {string} placeId
             * @memberof wm5.protobuf.GhostExpeditionParticipants
             * @instance
             */
            GhostExpeditionParticipants.prototype.placeId = "";

            /**
             * GhostExpeditionParticipants participantCars.
             * @member {Array.<number>} participantCars
             * @memberof wm5.protobuf.GhostExpeditionParticipants
             * @instance
             */
            GhostExpeditionParticipants.prototype.participantCars = $util.emptyArray;

            /**
             * Creates a new GhostExpeditionParticipants instance using the specified properties.
             * @function create
             * @memberof wm5.protobuf.GhostExpeditionParticipants
             * @static
             * @param {wm5.protobuf.IGhostExpeditionParticipants=} [properties] Properties to set
             * @returns {wm5.protobuf.GhostExpeditionParticipants} GhostExpeditionParticipants instance
             */
            GhostExpeditionParticipants.create = function create(properties) {
                return new GhostExpeditionParticipants(properties);
            };

            /**
             * Encodes the specified GhostExpeditionParticipants message. Does not implicitly {@link wm5.protobuf.GhostExpeditionParticipants.verify|verify} messages.
             * @function encode
             * @memberof wm5.protobuf.GhostExpeditionParticipants
             * @static
             * @param {wm5.protobuf.IGhostExpeditionParticipants} message GhostExpeditionParticipants message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostExpeditionParticipants.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.placeId);
                if (message.participantCars != null && message.participantCars.length)
                    for (let i = 0; i < message.participantCars.length; ++i)
                        writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.participantCars[i]);
                return writer;
            };

            /**
             * Encodes the specified GhostExpeditionParticipants message, length delimited. Does not implicitly {@link wm5.protobuf.GhostExpeditionParticipants.verify|verify} messages.
             * @function encodeDelimited
             * @memberof wm5.protobuf.GhostExpeditionParticipants
             * @static
             * @param {wm5.protobuf.IGhostExpeditionParticipants} message GhostExpeditionParticipants message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GhostExpeditionParticipants.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GhostExpeditionParticipants message from the specified reader or buffer.
             * @function decode
             * @memberof wm5.protobuf.GhostExpeditionParticipants
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {wm5.protobuf.GhostExpeditionParticipants} GhostExpeditionParticipants
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostExpeditionParticipants.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.wm5.protobuf.GhostExpeditionParticipants();
                while (reader.pos < end) {
                    let tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.placeId = reader.string();
                            break;
                        }
                    case 2: {
                            if (!(message.participantCars && message.participantCars.length))
                                message.participantCars = [];
                            if ((tag & 7) === 2) {
                                let end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.participantCars.push(reader.uint32());
                            } else
                                message.participantCars.push(reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("placeId"))
                    throw $util.ProtocolError("missing required 'placeId'", { instance: message });
                return message;
            };

            /**
             * Decodes a GhostExpeditionParticipants message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof wm5.protobuf.GhostExpeditionParticipants
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {wm5.protobuf.GhostExpeditionParticipants} GhostExpeditionParticipants
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GhostExpeditionParticipants.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GhostExpeditionParticipants message.
             * @function verify
             * @memberof wm5.protobuf.GhostExpeditionParticipants
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GhostExpeditionParticipants.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isString(message.placeId))
                    return "placeId: string expected";
                if (message.participantCars != null && message.hasOwnProperty("participantCars")) {
                    if (!Array.isArray(message.participantCars))
                        return "participantCars: array expected";
                    for (let i = 0; i < message.participantCars.length; ++i)
                        if (!$util.isInteger(message.participantCars[i]))
                            return "participantCars: integer[] expected";
                }
                return null;
            };

            /**
             * Creates a GhostExpeditionParticipants message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof wm5.protobuf.GhostExpeditionParticipants
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {wm5.protobuf.GhostExpeditionParticipants} GhostExpeditionParticipants
             */
            GhostExpeditionParticipants.fromObject = function fromObject(object) {
                if (object instanceof $root.wm5.protobuf.GhostExpeditionParticipants)
                    return object;
                let message = new $root.wm5.protobuf.GhostExpeditionParticipants();
                if (object.placeId != null)
                    message.placeId = String(object.placeId);
                if (object.participantCars) {
                    if (!Array.isArray(object.participantCars))
                        throw TypeError(".wm5.protobuf.GhostExpeditionParticipants.participantCars: array expected");
                    message.participantCars = [];
                    for (let i = 0; i < object.participantCars.length; ++i)
                        message.participantCars[i] = object.participantCars[i] >>> 0;
                }
                return message;
            };

            /**
             * Creates a plain object from a GhostExpeditionParticipants message. Also converts values to other types if specified.
             * @function toObject
             * @memberof wm5.protobuf.GhostExpeditionParticipants
             * @static
             * @param {wm5.protobuf.GhostExpeditionParticipants} message GhostExpeditionParticipants
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GhostExpeditionParticipants.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                let object = {};
                if (options.arrays || options.defaults)
                    object.participantCars = [];
                if (options.defaults)
                    object.placeId = "";
                if (message.placeId != null && message.hasOwnProperty("placeId"))
                    object.placeId = message.placeId;
                if (message.participantCars && message.participantCars.length) {
                    object.participantCars = [];
                    for (let j = 0; j < message.participantCars.length; ++j)
                        object.participantCars[j] = message.participantCars[j];
                }
                return object;
            };

            /**
             * Converts this GhostExpeditionParticipants to JSON.
             * @function toJSON
             * @memberof wm5.protobuf.GhostExpeditionParticipants
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GhostExpeditionParticipants.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GhostExpeditionParticipants
             * @function getTypeUrl
             * @memberof wm5.protobuf.GhostExpeditionParticipants
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GhostExpeditionParticipants.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/wm5.protobuf.GhostExpeditionParticipants";
            };

            return GhostExpeditionParticipants;
        })();

        /**
         * SystemConstant enum.
         * @name wm5.protobuf.SystemConstant
         * @enum {number}
         * @property {number} PROTOBUF_MESSAGE_REVISION=5004 PROTOBUF_MESSAGE_REVISION value
         */
        protobuf.SystemConstant = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[5004] = "PROTOBUF_MESSAGE_REVISION"] = 5004;
            return values;
        })();

        /**
         * ErrorCode enum.
         * @name wm5.protobuf.ErrorCode
         * @enum {number}
         * @property {number} ERR_SUCCESS=0 ERR_SUCCESS value
         * @property {number} ERR_REQUEST=1 ERR_REQUEST value
         * @property {number} ERR_NOT_FOUND=2 ERR_NOT_FOUND value
         * @property {number} ERR_ID_SERVER=3 ERR_ID_SERVER value
         * @property {number} ERR_ID_BANNED=4 ERR_ID_BANNED value
         * @property {number} ERR_USER_LOCKED=5 ERR_USER_LOCKED value
         * @property {number} ERR_USER_VERSION=6 ERR_USER_VERSION value
         * @property {number} ERR_NAME_CONFLICTED=7 ERR_NAME_CONFLICTED value
         * @property {number} ERR_TEAM_LOCKED=8 ERR_TEAM_LOCKED value
         * @property {number} ERR_FORBIDDEN=9 ERR_FORBIDDEN value
         * @property {number} ERR_TEAM_DISSOLVED=10 ERR_TEAM_DISSOLVED value
         * @property {number} ERR_USER_SUCCEEDED=11 ERR_USER_SUCCEEDED value
         * @property {number} ERR_BEING_TRANSFERRED=12 ERR_BEING_TRANSFERRED value
         * @property {number} ERR_SCRATCH_LOCKED=13 ERR_SCRATCH_LOCKED value
         */
        protobuf.ErrorCode = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "ERR_SUCCESS"] = 0;
            values[valuesById[1] = "ERR_REQUEST"] = 1;
            values[valuesById[2] = "ERR_NOT_FOUND"] = 2;
            values[valuesById[3] = "ERR_ID_SERVER"] = 3;
            values[valuesById[4] = "ERR_ID_BANNED"] = 4;
            values[valuesById[5] = "ERR_USER_LOCKED"] = 5;
            values[valuesById[6] = "ERR_USER_VERSION"] = 6;
            values[valuesById[7] = "ERR_NAME_CONFLICTED"] = 7;
            values[valuesById[8] = "ERR_TEAM_LOCKED"] = 8;
            values[valuesById[9] = "ERR_FORBIDDEN"] = 9;
            values[valuesById[10] = "ERR_TEAM_DISSOLVED"] = 10;
            values[valuesById[11] = "ERR_USER_SUCCEEDED"] = 11;
            values[valuesById[12] = "ERR_BEING_TRANSFERRED"] = 12;
            values[valuesById[13] = "ERR_SCRATCH_LOCKED"] = 13;
            return values;
        })();

        /**
         * LineType enum.
         * @name wm5.protobuf.LineType
         * @enum {number}
         * @property {number} L_UNKNOWN=0 L_UNKNOWN value
         * @property {number} L_MOBILE=1 L_MOBILE value
         * @property {number} L_ISDN=2 L_ISDN value
         * @property {number} L_BFLETS=3 L_BFLETS value
         * @property {number} L_ADSL=4 L_ADSL value
         * @property {number} L_WIRED=5 L_WIRED value
         */
        protobuf.LineType = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "L_UNKNOWN"] = 0;
            values[valuesById[1] = "L_MOBILE"] = 1;
            values[valuesById[2] = "L_ISDN"] = 2;
            values[valuesById[3] = "L_BFLETS"] = 3;
            values[valuesById[4] = "L_ADSL"] = 4;
            values[valuesById[5] = "L_WIRED"] = 5;
            return values;
        })();

        /**
         * TerminalType enum.
         * @name wm5.protobuf.TerminalType
         * @enum {number}
         * @property {number} T_DRIVE=0 T_DRIVE value
         * @property {number} T_TERMINAL=1 T_TERMINAL value
         */
        protobuf.TerminalType = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "T_DRIVE"] = 0;
            values[valuesById[1] = "T_TERMINAL"] = 1;
            return values;
        })();

        /**
         * DeviceType enum.
         * @name wm5.protobuf.DeviceType
         * @enum {number}
         * @property {number} DEVICE_CARD=0 DEVICE_CARD value
         * @property {number} DEVICE_PHONE=1 DEVICE_PHONE value
         */
        protobuf.DeviceType = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "DEVICE_CARD"] = 0;
            values[valuesById[1] = "DEVICE_PHONE"] = 1;
            return values;
        })();

        /**
         * WebsiteMembership enum.
         * @name wm5.protobuf.WebsiteMembership
         * @enum {number}
         * @property {number} MEMBER_NON_MEMBER=0 MEMBER_NON_MEMBER value
         * @property {number} MEMBER_PREMIUM=1 MEMBER_PREMIUM value
         * @property {number} MEMBER_FREE=2 MEMBER_FREE value
         * @property {number} MEMBER_PREMIUM_INACTIVE=3 MEMBER_PREMIUM_INACTIVE value
         * @property {number} MEMBER_FREE_INACTIVE=4 MEMBER_FREE_INACTIVE value
         */
        protobuf.WebsiteMembership = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "MEMBER_NON_MEMBER"] = 0;
            values[valuesById[1] = "MEMBER_PREMIUM"] = 1;
            values[valuesById[2] = "MEMBER_FREE"] = 2;
            values[valuesById[3] = "MEMBER_PREMIUM_INACTIVE"] = 3;
            values[valuesById[4] = "MEMBER_FREE_INACTIVE"] = 4;
            return values;
        })();

        /**
         * ItemCategory enum.
         * @name wm5.protobuf.ItemCategory
         * @enum {number}
         * @property {number} CAT_CUSTOM_COLOR=1 CAT_CUSTOM_COLOR value
         * @property {number} CAT_WHEEL=2 CAT_WHEEL value
         * @property {number} CAT_AERO=3 CAT_AERO value
         * @property {number} CAT_BONNET=4 CAT_BONNET value
         * @property {number} CAT_WING=5 CAT_WING value
         * @property {number} CAT_MIRROR=6 CAT_MIRROR value
         * @property {number} CAT_STICKER=7 CAT_STICKER value
         * @property {number} CAT_NEON=8 CAT_NEON value
         * @property {number} CAT_TRUNK=9 CAT_TRUNK value
         * @property {number} CAT_NUMBER_PLATE=10 CAT_NUMBER_PLATE value
         * @property {number} CAT_SPECIAL_STICKER=11 CAT_SPECIAL_STICKER value
         * @property {number} CAT_GT_WING=12 CAT_GT_WING value
         * @property {number} CAT_MINI_STICKER=13 CAT_MINI_STICKER value
         * @property {number} CAT_AURA_MOTIF=14 CAT_AURA_MOTIF value
         * @property {number} CAT_METER=15 CAT_METER value
         * @property {number} CAT_BGM=16 CAT_BGM value
         * @property {number} CAT_NAME_PLATE=17 CAT_NAME_PLATE value
         * @property {number} CAT_NAME_FRAME=18 CAT_NAME_FRAME value
         * @property {number} CAT_NUMBER=19 CAT_NUMBER value
         * @property {number} CAT_CHAR_EFFECT=20 CAT_CHAR_EFFECT value
         * @property {number} CAT_MOTION_EFFECT=21 CAT_MOTION_EFFECT value
         * @property {number} CAT_BGM_TRACK=22 CAT_BGM_TRACK value
         * @property {number} CAT_SIDE_STICKER=23 CAT_SIDE_STICKER value
         * @property {number} CAT_ROOF_STICKER=24 CAT_ROOF_STICKER value
         * @property {number} CAT_TEAM_DECORATION=25 CAT_TEAM_DECORATION value
         * @property {number} CAT_RIVAL_MARKER=26 CAT_RIVAL_MARKER value
         * @property {number} CAT_STAMP=27 CAT_STAMP value
         * @property {number} CAT_TERMINAL_BACKGROUND=28 CAT_TERMINAL_BACKGROUND value
         * @property {number} CAT_CAR_TICKET=201 CAT_CAR_TICKET value
         * @property {number} CAT_CONSUMPTION_ITEM=202 CAT_CONSUMPTION_ITEM value
         */
        protobuf.ItemCategory = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "CAT_CUSTOM_COLOR"] = 1;
            values[valuesById[2] = "CAT_WHEEL"] = 2;
            values[valuesById[3] = "CAT_AERO"] = 3;
            values[valuesById[4] = "CAT_BONNET"] = 4;
            values[valuesById[5] = "CAT_WING"] = 5;
            values[valuesById[6] = "CAT_MIRROR"] = 6;
            values[valuesById[7] = "CAT_STICKER"] = 7;
            values[valuesById[8] = "CAT_NEON"] = 8;
            values[valuesById[9] = "CAT_TRUNK"] = 9;
            values[valuesById[10] = "CAT_NUMBER_PLATE"] = 10;
            values[valuesById[11] = "CAT_SPECIAL_STICKER"] = 11;
            values[valuesById[12] = "CAT_GT_WING"] = 12;
            values[valuesById[13] = "CAT_MINI_STICKER"] = 13;
            values[valuesById[14] = "CAT_AURA_MOTIF"] = 14;
            values[valuesById[15] = "CAT_METER"] = 15;
            values[valuesById[16] = "CAT_BGM"] = 16;
            values[valuesById[17] = "CAT_NAME_PLATE"] = 17;
            values[valuesById[18] = "CAT_NAME_FRAME"] = 18;
            values[valuesById[19] = "CAT_NUMBER"] = 19;
            values[valuesById[20] = "CAT_CHAR_EFFECT"] = 20;
            values[valuesById[21] = "CAT_MOTION_EFFECT"] = 21;
            values[valuesById[22] = "CAT_BGM_TRACK"] = 22;
            values[valuesById[23] = "CAT_SIDE_STICKER"] = 23;
            values[valuesById[24] = "CAT_ROOF_STICKER"] = 24;
            values[valuesById[25] = "CAT_TEAM_DECORATION"] = 25;
            values[valuesById[26] = "CAT_RIVAL_MARKER"] = 26;
            values[valuesById[27] = "CAT_STAMP"] = 27;
            values[valuesById[28] = "CAT_TERMINAL_BACKGROUND"] = 28;
            values[valuesById[201] = "CAT_CAR_TICKET"] = 201;
            values[valuesById[202] = "CAT_CONSUMPTION_ITEM"] = 202;
            return values;
        })();

        /**
         * TutorialType enum.
         * @name wm5.protobuf.TutorialType
         * @enum {number}
         * @property {number} TUTORIAL_STORY=1 TUTORIAL_STORY value
         * @property {number} TUTORIAL_TIME_ATTACK=2 TUTORIAL_TIME_ATTACK value
         * @property {number} TUTORIAL_GHOST=4 TUTORIAL_GHOST value
         * @property {number} TUTORIAL_GHOST_CHALLENGE=8 TUTORIAL_GHOST_CHALLENGE value
         * @property {number} TUTORIAL_GHOST_LEVEL=16 TUTORIAL_GHOST_LEVEL value
         * @property {number} TUTORIAL_UNUSED_1=32 TUTORIAL_UNUSED_1 value
         * @property {number} TUTORIAL_GHOST_SEARCH=64 TUTORIAL_GHOST_SEARCH value
         * @property {number} TUTORIAL_GHOST_COMPETITION=128 TUTORIAL_GHOST_COMPETITION value
         * @property {number} TUTORIAL_HP600_CARD=256 TUTORIAL_HP600_CARD value
         * @property {number} TUTORIAL_UNUSED_2=512 TUTORIAL_UNUSED_2 value
         * @property {number} TUTORIAL_COMPETITION_QUALIFIED=1024 TUTORIAL_COMPETITION_QUALIFIED value
         * @property {number} TUTORIAL_COMPETITION_TERMINAL=2048 TUTORIAL_COMPETITION_TERMINAL value
         * @property {number} TUTORIAL_COMPETITION_NOTICE=4096 TUTORIAL_COMPETITION_NOTICE value
         * @property {number} TUTORIAL_COMPETITION_FINISHED=8192 TUTORIAL_COMPETITION_FINISHED value
         * @property {number} TUTORIAL_UNUSED_3=16384 TUTORIAL_UNUSED_3 value
         * @property {number} TUTORIAL_BINGO_RULE=32768 TUTORIAL_BINGO_RULE value
         * @property {number} TUTORIAL_BINGO_NOTICE=65536 TUTORIAL_BINGO_NOTICE value
         * @property {number} TUTORIAL_UNUSED_4=131072 TUTORIAL_UNUSED_4 value
         * @property {number} TUTORIAL_SHOP_FOR_DRIVE=262144 TUTORIAL_SHOP_FOR_DRIVE value
         * @property {number} TUTORIAL_SHOP_GRADE_GAUGE=524288 TUTORIAL_SHOP_GRADE_GAUGE value
         * @property {number} TUTORIAL_GHOST_STAMP=1048576 TUTORIAL_GHOST_STAMP value
         * @property {number} TUTORIAL_GHOST_STAMP_DECLINED=2097152 TUTORIAL_GHOST_STAMP_DECLINED value
         * @property {number} TUTORIAL_GHOST_STAMP_FRIENDS=4194304 TUTORIAL_GHOST_STAMP_FRIENDS value
         * @property {number} TUTORIAL_TERMINAL_SCRATCH=8388608 TUTORIAL_TERMINAL_SCRATCH value
         * @property {number} TUTORIAL_UNUSED_5=16777216 TUTORIAL_UNUSED_5 value
         * @property {number} TUTORIAL_INVITE_FRIEND_CAMPAIGN=33554432 TUTORIAL_INVITE_FRIEND_CAMPAIGN value
         * @property {number} TUTORIAL_CAR_COUPON_FULL_TUNED_RECEIVABLE=67108864 TUTORIAL_CAR_COUPON_FULL_TUNED_RECEIVABLE value
         * @property {number} TUTORIAL_VS_CONTINUE_TICKET=134217728 TUTORIAL_VS_CONTINUE_TICKET value
         * @property {number} TUTORIAL_EXPEDITION=268435456 TUTORIAL_EXPEDITION value
         * @property {number} TUTORIAL_EXPEDITION_WANTED=536870912 TUTORIAL_EXPEDITION_WANTED value
         * @property {number} TUTORIAL_EXPEDITION_REWARD=1073741824 TUTORIAL_EXPEDITION_REWARD value
         */
        protobuf.TutorialType = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "TUTORIAL_STORY"] = 1;
            values[valuesById[2] = "TUTORIAL_TIME_ATTACK"] = 2;
            values[valuesById[4] = "TUTORIAL_GHOST"] = 4;
            values[valuesById[8] = "TUTORIAL_GHOST_CHALLENGE"] = 8;
            values[valuesById[16] = "TUTORIAL_GHOST_LEVEL"] = 16;
            values[valuesById[32] = "TUTORIAL_UNUSED_1"] = 32;
            values[valuesById[64] = "TUTORIAL_GHOST_SEARCH"] = 64;
            values[valuesById[128] = "TUTORIAL_GHOST_COMPETITION"] = 128;
            values[valuesById[256] = "TUTORIAL_HP600_CARD"] = 256;
            values[valuesById[512] = "TUTORIAL_UNUSED_2"] = 512;
            values[valuesById[1024] = "TUTORIAL_COMPETITION_QUALIFIED"] = 1024;
            values[valuesById[2048] = "TUTORIAL_COMPETITION_TERMINAL"] = 2048;
            values[valuesById[4096] = "TUTORIAL_COMPETITION_NOTICE"] = 4096;
            values[valuesById[8192] = "TUTORIAL_COMPETITION_FINISHED"] = 8192;
            values[valuesById[16384] = "TUTORIAL_UNUSED_3"] = 16384;
            values[valuesById[32768] = "TUTORIAL_BINGO_RULE"] = 32768;
            values[valuesById[65536] = "TUTORIAL_BINGO_NOTICE"] = 65536;
            values[valuesById[131072] = "TUTORIAL_UNUSED_4"] = 131072;
            values[valuesById[262144] = "TUTORIAL_SHOP_FOR_DRIVE"] = 262144;
            values[valuesById[524288] = "TUTORIAL_SHOP_GRADE_GAUGE"] = 524288;
            values[valuesById[1048576] = "TUTORIAL_GHOST_STAMP"] = 1048576;
            values[valuesById[2097152] = "TUTORIAL_GHOST_STAMP_DECLINED"] = 2097152;
            values[valuesById[4194304] = "TUTORIAL_GHOST_STAMP_FRIENDS"] = 4194304;
            values[valuesById[8388608] = "TUTORIAL_TERMINAL_SCRATCH"] = 8388608;
            values[valuesById[16777216] = "TUTORIAL_UNUSED_5"] = 16777216;
            values[valuesById[33554432] = "TUTORIAL_INVITE_FRIEND_CAMPAIGN"] = 33554432;
            values[valuesById[67108864] = "TUTORIAL_CAR_COUPON_FULL_TUNED_RECEIVABLE"] = 67108864;
            values[valuesById[134217728] = "TUTORIAL_VS_CONTINUE_TICKET"] = 134217728;
            values[valuesById[268435456] = "TUTORIAL_EXPEDITION"] = 268435456;
            values[valuesById[536870912] = "TUTORIAL_EXPEDITION_WANTED"] = 536870912;
            values[valuesById[1073741824] = "TUTORIAL_EXPEDITION_REWARD"] = 1073741824;
            return values;
        })();

        /**
         * CarCreationMethod enum.
         * @name wm5.protobuf.CarCreationMethod
         * @enum {number}
         * @property {number} CAR_NEW=0 CAR_NEW value
         * @property {number} CAR_TRANSFER=1 CAR_TRANSFER value
         * @property {number} CAR_HP600=2 CAR_HP600 value
         * @property {number} CAR_CAMPAIGN=3 CAR_CAMPAIGN value
         * @property {number} CAR_COUPON=4 CAR_COUPON value
         * @property {number} CAR_TICKET=5 CAR_TICKET value
         * @property {number} CAR_FULL_TUNED=6 CAR_FULL_TUNED value
         */
        protobuf.CarCreationMethod = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "CAR_NEW"] = 0;
            values[valuesById[1] = "CAR_TRANSFER"] = 1;
            values[valuesById[2] = "CAR_HP600"] = 2;
            values[valuesById[3] = "CAR_CAMPAIGN"] = 3;
            values[valuesById[4] = "CAR_COUPON"] = 4;
            values[valuesById[5] = "CAR_TICKET"] = 5;
            values[valuesById[6] = "CAR_FULL_TUNED"] = 6;
            return values;
        })();

        /**
         * CarCreationCoupon enum.
         * @name wm5.protobuf.CarCreationCoupon
         * @enum {number}
         * @property {number} CAR_COUPON_NONE=0 CAR_COUPON_NONE value
         * @property {number} CAR_COUPON_HP600=1 CAR_COUPON_HP600 value
         * @property {number} CAR_COUPON_BMW_M3_BLACK=2 CAR_COUPON_BMW_M3_BLACK value
         * @property {number} CAR_COUPON_2000GT_BLACK=3 CAR_COUPON_2000GT_BLACK value
         * @property {number} CAR_COUPON_CAMARO_SS_RS_BLACK=4 CAR_COUPON_CAMARO_SS_RS_BLACK value
         * @property {number} CAR_COUPON_CORVETTE_ZR1_TAXI=5 CAR_COUPON_CORVETTE_ZR1_TAXI value
         * @property {number} CAR_COUPON_CAMARO_SS_RS_TAXI=6 CAR_COUPON_CAMARO_SS_RS_TAXI value
         * @property {number} CAR_COUPON_SLK_350_PACE_CAR=7 CAR_COUPON_SLK_350_PACE_CAR value
         * @property {number} CAR_COUPON_BMW_Z4_PACE_CAR=8 CAR_COUPON_BMW_Z4_PACE_CAR value
         * @property {number} CAR_COUPON_HIACE_VAN_HIGH_LIFTED=9 CAR_COUPON_HIACE_VAN_HIGH_LIFTED value
         * @property {number} CAR_COUPON_BMW_M1=10 CAR_COUPON_BMW_M1 value
         * @property {number} CAR_COUPON_BMW_M3_CSL=11 CAR_COUPON_BMW_M3_CSL value
         * @property {number} CAR_COUPON_BENZ_SLS_AMG=12 CAR_COUPON_BENZ_SLS_AMG value
         * @property {number} CAR_COUPON_BENZ_190E=13 CAR_COUPON_BENZ_190E value
         * @property {number} CAR_COUPON_SUBARU_LEVORG=14 CAR_COUPON_SUBARU_LEVORG value
         * @property {number} CAR_COUPON_AUDI_R8=15 CAR_COUPON_AUDI_R8 value
         * @property {number} CAR_COUPON_AUDI_RS4=16 CAR_COUPON_AUDI_RS4 value
         * @property {number} CAR_COUPON_CHRYSLER_VIPER_SRT_10=17 CAR_COUPON_CHRYSLER_VIPER_SRT_10 value
         * @property {number} CAR_COUPON_CHRYSLER_CHARGER_SRT_8=18 CAR_COUPON_CHRYSLER_CHARGER_SRT_8 value
         * @property {number} CAR_COUPON_BMW_MINI_COOPER_S_ALL4=19 CAR_COUPON_BMW_MINI_COOPER_S_ALL4 value
         * @property {number} CAR_COUPON_MAZDA_ROADSTER_ND=20 CAR_COUPON_MAZDA_ROADSTER_ND value
         * @property {number} CAR_COUPON_NISSAN_R35_NISMO=21 CAR_COUPON_NISSAN_R35_NISMO value
         * @property {number} CAR_COUPON_NISSAN_FAIRLADY_Z_NISMO=22 CAR_COUPON_NISSAN_FAIRLADY_Z_NISMO value
         * @property {number} CAR_COUPON_FULL_TUNED=23 CAR_COUPON_FULL_TUNED value
         * @property {number} CAR_COUPON_LAMBORGHINI_MIURA_P400S=24 CAR_COUPON_LAMBORGHINI_MIURA_P400S value
         * @property {number} CAR_COUPON_LAMBORGHINI_DIABLO_VT=25 CAR_COUPON_LAMBORGHINI_DIABLO_VT value
         * @property {number} CAR_COUPON_NISSAN_SILVIA_K_S=26 CAR_COUPON_NISSAN_SILVIA_K_S value
         */
        protobuf.CarCreationCoupon = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "CAR_COUPON_NONE"] = 0;
            values[valuesById[1] = "CAR_COUPON_HP600"] = 1;
            values[valuesById[2] = "CAR_COUPON_BMW_M3_BLACK"] = 2;
            values[valuesById[3] = "CAR_COUPON_2000GT_BLACK"] = 3;
            values[valuesById[4] = "CAR_COUPON_CAMARO_SS_RS_BLACK"] = 4;
            values[valuesById[5] = "CAR_COUPON_CORVETTE_ZR1_TAXI"] = 5;
            values[valuesById[6] = "CAR_COUPON_CAMARO_SS_RS_TAXI"] = 6;
            values[valuesById[7] = "CAR_COUPON_SLK_350_PACE_CAR"] = 7;
            values[valuesById[8] = "CAR_COUPON_BMW_Z4_PACE_CAR"] = 8;
            values[valuesById[9] = "CAR_COUPON_HIACE_VAN_HIGH_LIFTED"] = 9;
            values[valuesById[10] = "CAR_COUPON_BMW_M1"] = 10;
            values[valuesById[11] = "CAR_COUPON_BMW_M3_CSL"] = 11;
            values[valuesById[12] = "CAR_COUPON_BENZ_SLS_AMG"] = 12;
            values[valuesById[13] = "CAR_COUPON_BENZ_190E"] = 13;
            values[valuesById[14] = "CAR_COUPON_SUBARU_LEVORG"] = 14;
            values[valuesById[15] = "CAR_COUPON_AUDI_R8"] = 15;
            values[valuesById[16] = "CAR_COUPON_AUDI_RS4"] = 16;
            values[valuesById[17] = "CAR_COUPON_CHRYSLER_VIPER_SRT_10"] = 17;
            values[valuesById[18] = "CAR_COUPON_CHRYSLER_CHARGER_SRT_8"] = 18;
            values[valuesById[19] = "CAR_COUPON_BMW_MINI_COOPER_S_ALL4"] = 19;
            values[valuesById[20] = "CAR_COUPON_MAZDA_ROADSTER_ND"] = 20;
            values[valuesById[21] = "CAR_COUPON_NISSAN_R35_NISMO"] = 21;
            values[valuesById[22] = "CAR_COUPON_NISSAN_FAIRLADY_Z_NISMO"] = 22;
            values[valuesById[23] = "CAR_COUPON_FULL_TUNED"] = 23;
            values[valuesById[24] = "CAR_COUPON_LAMBORGHINI_MIURA_P400S"] = 24;
            values[valuesById[25] = "CAR_COUPON_LAMBORGHINI_DIABLO_VT"] = 25;
            values[valuesById[26] = "CAR_COUPON_NISSAN_SILVIA_K_S"] = 26;
            return values;
        })();

        /**
         * GameMode enum.
         * @name wm5.protobuf.GameMode
         * @enum {number}
         * @property {number} MODE_STORY=1 MODE_STORY value
         * @property {number} MODE_TIME_ATTACK=2 MODE_TIME_ATTACK value
         * @property {number} MODE_VS_BATTLE=3 MODE_VS_BATTLE value
         * @property {number} MODE_GHOST_BATTLE=4 MODE_GHOST_BATTLE value
         * @property {number} MODE_EVENT=5 MODE_EVENT value
         */
        protobuf.GameMode = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "MODE_STORY"] = 1;
            values[valuesById[2] = "MODE_TIME_ATTACK"] = 2;
            values[valuesById[3] = "MODE_VS_BATTLE"] = 3;
            values[valuesById[4] = "MODE_GHOST_BATTLE"] = 4;
            values[valuesById[5] = "MODE_EVENT"] = 5;
            return values;
        })();

        /**
         * GhostType enum.
         * @name wm5.protobuf.GhostType
         * @enum {number}
         * @property {number} GHOST_NORMAL=1 GHOST_NORMAL value
         * @property {number} GHOST_PINCH_RUNNER=2 GHOST_PINCH_RUNNER value
         * @property {number} GHOST_DEFAULT=3 GHOST_DEFAULT value
         * @property {number} GHOST_REGION=4 GHOST_REGION value
         */
        protobuf.GhostType = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "GHOST_NORMAL"] = 1;
            values[valuesById[2] = "GHOST_PINCH_RUNNER"] = 2;
            values[valuesById[3] = "GHOST_DEFAULT"] = 3;
            values[valuesById[4] = "GHOST_REGION"] = 4;
            return values;
        })();

        /**
         * GhostSelectionMethod enum.
         * @name wm5.protobuf.GhostSelectionMethod
         * @enum {number}
         * @property {number} GHOST_CHALLENGE=1 GHOST_CHALLENGE value
         * @property {number} GHOST_SELECT_BY_LEVEL=2 GHOST_SELECT_BY_LEVEL value
         * @property {number} GHOST_SELECT_CROWN_MATCH=3 GHOST_SELECT_CROWN_MATCH value
         * @property {number} GHOST_SELECT_STAMP_MATCH=4 GHOST_SELECT_STAMP_MATCH value
         * @property {number} GHOST_SELECT_FROM_HISTORY=5 GHOST_SELECT_FROM_HISTORY value
         * @property {number} GHOST_SEARCH_BY_SHOP=6 GHOST_SEARCH_BY_SHOP value
         * @property {number} GHOST_SEARCH_BY_NAME=7 GHOST_SEARCH_BY_NAME value
         * @property {number} GHOST_ACCEPT_CHALLENGER=8 GHOST_ACCEPT_CHALLENGER value
         * @property {number} GHOST_APPOINTMENT=9 GHOST_APPOINTMENT value
         * @property {number} GHOST_DEFAULT_OPPONENT=10 GHOST_DEFAULT_OPPONENT value
         * @property {number} GHOST_COMPETITION=11 GHOST_COMPETITION value
         * @property {number} GHOST_SPECIAL=12 GHOST_SPECIAL value
         * @property {number} GHOST_EXPEDITION=13 GHOST_EXPEDITION value
         */
        protobuf.GhostSelectionMethod = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "GHOST_CHALLENGE"] = 1;
            values[valuesById[2] = "GHOST_SELECT_BY_LEVEL"] = 2;
            values[valuesById[3] = "GHOST_SELECT_CROWN_MATCH"] = 3;
            values[valuesById[4] = "GHOST_SELECT_STAMP_MATCH"] = 4;
            values[valuesById[5] = "GHOST_SELECT_FROM_HISTORY"] = 5;
            values[valuesById[6] = "GHOST_SEARCH_BY_SHOP"] = 6;
            values[valuesById[7] = "GHOST_SEARCH_BY_NAME"] = 7;
            values[valuesById[8] = "GHOST_ACCEPT_CHALLENGER"] = 8;
            values[valuesById[9] = "GHOST_APPOINTMENT"] = 9;
            values[valuesById[10] = "GHOST_DEFAULT_OPPONENT"] = 10;
            values[valuesById[11] = "GHOST_COMPETITION"] = 11;
            values[valuesById[12] = "GHOST_SPECIAL"] = 12;
            values[valuesById[13] = "GHOST_EXPEDITION"] = 13;
            return values;
        })();

        /**
         * NoticeEntry enum.
         * @name wm5.protobuf.NoticeEntry
         * @enum {number}
         * @property {number} NOTICE_TEAM_JOINED=1 NOTICE_TEAM_JOINED value
         * @property {number} NOTICE_TEAM_DISSOLVED=2 NOTICE_TEAM_DISSOLVED value
         * @property {number} NOTICE_TEAM_LEADER_CHANGED=3 NOTICE_TEAM_LEADER_CHANGED value
         * @property {number} NOTICE_TEAM_FORCEDLY_DISSOLVED=4 NOTICE_TEAM_FORCEDLY_DISSOLVED value
         * @property {number} NOTICE_TEAM_NOT_TRANSFERRED=5 NOTICE_TEAM_NOT_TRANSFERRED value
         * @property {number} NOTICE_TEAM_TRANSFERRED=6 NOTICE_TEAM_TRANSFERRED value
         * @property {number} NOTICE_TEAM_REJOIN_FINISHED=7 NOTICE_TEAM_REJOIN_FINISHED value
         * @property {number} NOTICE_TEAM_NAME_CHANGED=8 NOTICE_TEAM_NAME_CHANGED value
         * @property {number} NOTICE_TEAM_SUSPENDED=9 NOTICE_TEAM_SUSPENDED value
         * @property {number} NOTICE_WEBSITE_CANCELLED=10 NOTICE_WEBSITE_CANCELLED value
         * @property {number} NOTICE_WEBSITE_EXPIRATION_EXPECTED=11 NOTICE_WEBSITE_EXPIRATION_EXPECTED value
         * @property {number} NOTICE_WEBSITE_EXPIRED=12 NOTICE_WEBSITE_EXPIRED value
         */
        protobuf.NoticeEntry = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "NOTICE_TEAM_JOINED"] = 1;
            values[valuesById[2] = "NOTICE_TEAM_DISSOLVED"] = 2;
            values[valuesById[3] = "NOTICE_TEAM_LEADER_CHANGED"] = 3;
            values[valuesById[4] = "NOTICE_TEAM_FORCEDLY_DISSOLVED"] = 4;
            values[valuesById[5] = "NOTICE_TEAM_NOT_TRANSFERRED"] = 5;
            values[valuesById[6] = "NOTICE_TEAM_TRANSFERRED"] = 6;
            values[valuesById[7] = "NOTICE_TEAM_REJOIN_FINISHED"] = 7;
            values[valuesById[8] = "NOTICE_TEAM_NAME_CHANGED"] = 8;
            values[valuesById[9] = "NOTICE_TEAM_SUSPENDED"] = 9;
            values[valuesById[10] = "NOTICE_WEBSITE_CANCELLED"] = 10;
            values[valuesById[11] = "NOTICE_WEBSITE_EXPIRATION_EXPECTED"] = 11;
            values[valuesById[12] = "NOTICE_WEBSITE_EXPIRED"] = 12;
            return values;
        })();

        /**
         * TeamNewsEntry enum.
         * @name wm5.protobuf.TeamNewsEntry
         * @enum {number}
         * @property {number} NEWS_JOINED=1 NEWS_JOINED value
         * @property {number} NEWS_LEADER_CHANGED=2 NEWS_LEADER_CHANGED value
         * @property {number} NEWS_STICKER_CHANGED=3 NEWS_STICKER_CHANGED value
         */
        protobuf.TeamNewsEntry = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "NEWS_JOINED"] = 1;
            values[valuesById[2] = "NEWS_LEADER_CHANGED"] = 2;
            values[valuesById[3] = "NEWS_STICKER_CHANGED"] = 3;
            return values;
        })();

        /**
         * MaxiGoldIncomeType enum.
         * @name wm5.protobuf.MaxiGoldIncomeType
         * @enum {number}
         * @property {number} INCOME_HP600_SENT=1 INCOME_HP600_SENT value
         * @property {number} INCOME_HP600_RECEIVED=2 INCOME_HP600_RECEIVED value
         * @property {number} INCOME_GHOST_BATTLE=3 INCOME_GHOST_BATTLE value
         * @property {number} INCOME_REPAYING_CAMPAIGN=4 INCOME_REPAYING_CAMPAIGN value
         * @property {number} INCOME_WEBSITE=5 INCOME_WEBSITE value
         * @property {number} INCOME_TRANSFERRED=6 INCOME_TRANSFERRED value
         */
        protobuf.MaxiGoldIncomeType = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "INCOME_HP600_SENT"] = 1;
            values[valuesById[2] = "INCOME_HP600_RECEIVED"] = 2;
            values[valuesById[3] = "INCOME_GHOST_BATTLE"] = 3;
            values[valuesById[4] = "INCOME_REPAYING_CAMPAIGN"] = 4;
            values[valuesById[5] = "INCOME_WEBSITE"] = 5;
            values[valuesById[6] = "INCOME_TRANSFERRED"] = 6;
            return values;
        })();

        /**
         * MaxiGoldBoostType enum.
         * @name wm5.protobuf.MaxiGoldBoostType
         * @enum {number}
         * @property {number} BOOST_PREMIUM=1 BOOST_PREMIUM value
         * @property {number} BOOST_MEMBER=2 BOOST_MEMBER value
         * @property {number} BOOST_ALL=3 BOOST_ALL value
         */
        protobuf.MaxiGoldBoostType = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "BOOST_PREMIUM"] = 1;
            values[valuesById[2] = "BOOST_MEMBER"] = 2;
            values[valuesById[3] = "BOOST_ALL"] = 3;
            return values;
        })();

        /**
         * FileType enum.
         * @name wm5.protobuf.FileType
         * @enum {number}
         * @property {number} FILE_PROMOTION_ANNOUNCEMENT=1 FILE_PROMOTION_ANNOUNCEMENT value
         * @property {number} FILE_SHOP_ANNOUNCEMENT=2 FILE_SHOP_ANNOUNCEMENT value
         * @property {number} FILE_WEBSITE_ANNOUNCEMENT=3 FILE_WEBSITE_ANNOUNCEMENT value
         * @property {number} FILE_FEATURE_ANNOUNCEMENT=4 FILE_FEATURE_ANNOUNCEMENT value
         * @property {number} FILE_SCRATCH_DIRECTIONS=5 FILE_SCRATCH_DIRECTIONS value
         */
        protobuf.FileType = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "FILE_PROMOTION_ANNOUNCEMENT"] = 1;
            values[valuesById[2] = "FILE_SHOP_ANNOUNCEMENT"] = 2;
            values[valuesById[3] = "FILE_WEBSITE_ANNOUNCEMENT"] = 3;
            values[valuesById[4] = "FILE_FEATURE_ANNOUNCEMENT"] = 4;
            values[valuesById[5] = "FILE_SCRATCH_DIRECTIONS"] = 5;
            return values;
        })();

        /**
         * CarCampaignUserState enum.
         * @name wm5.protobuf.CarCampaignUserState
         * @enum {number}
         * @property {number} CAR_CAMPAIGN_NOT_ACCEPTED=1 CAR_CAMPAIGN_NOT_ACCEPTED value
         * @property {number} CAR_CAMPAIGN_ACCEPTED=2 CAR_CAMPAIGN_ACCEPTED value
         * @property {number} CAR_CAMPAIGN_FINISHED=3 CAR_CAMPAIGN_FINISHED value
         */
        protobuf.CarCampaignUserState = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "CAR_CAMPAIGN_NOT_ACCEPTED"] = 1;
            values[valuesById[2] = "CAR_CAMPAIGN_ACCEPTED"] = 2;
            values[valuesById[3] = "CAR_CAMPAIGN_FINISHED"] = 3;
            return values;
        })();

        /**
         * GhostCompetitionParticipantState enum.
         * @name wm5.protobuf.GhostCompetitionParticipantState
         * @enum {number}
         * @property {number} COMPETITION_NOT_PARTICIPATED=1 COMPETITION_NOT_PARTICIPATED value
         * @property {number} COMPETITION_QUALIFIED=2 COMPETITION_QUALIFIED value
         * @property {number} COMPETITION_PARTICIPATED=3 COMPETITION_PARTICIPATED value
         * @property {number} COMPETITION_WON=4 COMPETITION_WON value
         */
        protobuf.GhostCompetitionParticipantState = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "COMPETITION_NOT_PARTICIPATED"] = 1;
            values[valuesById[2] = "COMPETITION_QUALIFIED"] = 2;
            values[valuesById[3] = "COMPETITION_PARTICIPATED"] = 3;
            values[valuesById[4] = "COMPETITION_WON"] = 4;
            return values;
        })();

        /**
         * GhostExpeditionParticipantState enum.
         * @name wm5.protobuf.GhostExpeditionParticipantState
         * @enum {number}
         * @property {number} EXPEDITION_NOT_PARTICIPATED=1 EXPEDITION_NOT_PARTICIPATED value
         * @property {number} EXPEDITION_PARTICIPATED=2 EXPEDITION_PARTICIPATED value
         * @property {number} EXPEDITION_RESULT_CONFIRMED=3 EXPEDITION_RESULT_CONFIRMED value
         */
        protobuf.GhostExpeditionParticipantState = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "EXPEDITION_NOT_PARTICIPATED"] = 1;
            values[valuesById[2] = "EXPEDITION_PARTICIPATED"] = 2;
            values[valuesById[3] = "EXPEDITION_RESULT_CONFIRMED"] = 3;
            return values;
        })();

        /**
         * ShopState enum.
         * @name wm5.protobuf.ShopState
         * @enum {number}
         * @property {number} SHOP_DISCOUNT_SALE=1 SHOP_DISCOUNT_SALE value
         * @property {number} SHOP_DISCOUNT_SALE_FINISHED=2 SHOP_DISCOUNT_SALE_FINISHED value
         * @property {number} SHOP_REPAYING_CAMPAIGN=3 SHOP_REPAYING_CAMPAIGN value
         * @property {number} SHOP_REPAYING_CAMPAIGN_FINISHED=4 SHOP_REPAYING_CAMPAIGN_FINISHED value
         * @property {number} SHOP_NEW_ARRIVALS=5 SHOP_NEW_ARRIVALS value
         */
        protobuf.ShopState = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "SHOP_DISCOUNT_SALE"] = 1;
            values[valuesById[2] = "SHOP_DISCOUNT_SALE_FINISHED"] = 2;
            values[valuesById[3] = "SHOP_REPAYING_CAMPAIGN"] = 3;
            values[valuesById[4] = "SHOP_REPAYING_CAMPAIGN_FINISHED"] = 4;
            values[valuesById[5] = "SHOP_NEW_ARRIVALS"] = 5;
            return values;
        })();

        /**
         * ScreenshotType enum.
         * @name wm5.protobuf.ScreenshotType
         * @enum {number}
         * @property {number} SS_GHOST_BATTLE=1 SS_GHOST_BATTLE value
         * @property {number} SS_VERSUS_BATTLE=2 SS_VERSUS_BATTLE value
         * @property {number} SS_TERMINAL=3 SS_TERMINAL value
         */
        protobuf.ScreenshotType = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "SS_GHOST_BATTLE"] = 1;
            values[valuesById[2] = "SS_VERSUS_BATTLE"] = 2;
            values[valuesById[3] = "SS_TERMINAL"] = 3;
            return values;
        })();

        /**
         * TransferState enum.
         * @name wm5.protobuf.TransferState
         * @enum {number}
         * @property {number} NOT_REGISTERED=0 NOT_REGISTERED value
         * @property {number} NEW_REGISTRATION=1 NEW_REGISTRATION value
         * @property {number} TRANSFER_REQUIRED=2 TRANSFER_REQUIRED value
         * @property {number} TRANSFERRING=3 TRANSFERRING value
         * @property {number} TRANSFERRED=4 TRANSFERRED value
         */
        protobuf.TransferState = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "NOT_REGISTERED"] = 0;
            values[valuesById[1] = "NEW_REGISTRATION"] = 1;
            values[valuesById[2] = "TRANSFER_REQUIRED"] = 2;
            values[valuesById[3] = "TRANSFERRING"] = 3;
            values[valuesById[4] = "TRANSFERRED"] = 4;
            return values;
        })();

        /**
         * BanacoinErrorCode enum.
         * @name wm5.protobuf.BanacoinErrorCode
         * @enum {number}
         * @property {number} BC_SUCCESS=0 BC_SUCCESS value
         * @property {number} BC_SHORTAGE=1 BC_SHORTAGE value
         * @property {number} BC_BNID_MEMBER_ERROR=2 BC_BNID_MEMBER_ERROR value
         * @property {number} BC_UNKNOWN_ERROR=3 BC_UNKNOWN_ERROR value
         * @property {number} BC_BNID_SYSTEM_ERROR=4 BC_BNID_SYSTEM_ERROR value
         * @property {number} BC_BNID_VERIFY_ERROR=5 BC_BNID_VERIFY_ERROR value
         * @property {number} BC_BNID_EXECUTE_ERROR=6 BC_BNID_EXECUTE_ERROR value
         */
        protobuf.BanacoinErrorCode = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "BC_SUCCESS"] = 0;
            values[valuesById[1] = "BC_SHORTAGE"] = 1;
            values[valuesById[2] = "BC_BNID_MEMBER_ERROR"] = 2;
            values[valuesById[3] = "BC_UNKNOWN_ERROR"] = 3;
            values[valuesById[4] = "BC_BNID_SYSTEM_ERROR"] = 4;
            values[valuesById[5] = "BC_BNID_VERIFY_ERROR"] = 5;
            values[valuesById[6] = "BC_BNID_EXECUTE_ERROR"] = 6;
            return values;
        })();

        /**
         * EventModeSerialErrorCode enum.
         * @name wm5.protobuf.EventModeSerialErrorCode
         * @enum {number}
         * @property {number} SERIAL_SUCCESS=0 SERIAL_SUCCESS value
         * @property {number} SERIAL_ATTEMPT_TO_CHANGE=1 SERIAL_ATTEMPT_TO_CHANGE value
         * @property {number} SERIAL_NO_INPUT=2 SERIAL_NO_INPUT value
         * @property {number} SERIAL_INVALID=3 SERIAL_INVALID value
         * @property {number} SERIAL_EXPIRED=4 SERIAL_EXPIRED value
         * @property {number} SERIAL_OTHER_PLACE=5 SERIAL_OTHER_PLACE value
         */
        protobuf.EventModeSerialErrorCode = (function() {
            const valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "SERIAL_SUCCESS"] = 0;
            values[valuesById[1] = "SERIAL_ATTEMPT_TO_CHANGE"] = 1;
            values[valuesById[2] = "SERIAL_NO_INPUT"] = 2;
            values[valuesById[3] = "SERIAL_INVALID"] = 3;
            values[valuesById[4] = "SERIAL_EXPIRED"] = 4;
            values[valuesById[5] = "SERIAL_OTHER_PLACE"] = 5;
            return values;
        })();

        return protobuf;
    })();

    return wm5;
})();

export { $root as default };
